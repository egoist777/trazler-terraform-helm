{"version":3,"file":"src_app_modules_home_home_module_ts.js","mappings":"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","sources":["./src/app/modules/home/components/home-mob-static-content/home-mob-static-content.component.ts","./src/app/modules/home/components/home-mob-static-content/home-mob-static-content.component.html","./src/app/modules/home/components/home-static-content/home-static-content.component.ts","./src/app/modules/home/components/home-static-content/home-static-content.component.html","./src/app/modules/home/home-routing.module.ts","./src/app/modules/home/home.component.ts","./src/app/modules/home/home.component.html","./src/app/modules/home/home.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { IDestinations } from '../../home.component';\n\n@Component({\n    selector: 'tz-home-mob-static-content',\n    templateUrl: './home-mob-static-content.component.html',\n    styleUrls: ['./home-mob-static-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeMobStaticContentComponent implements OnInit {\n    @Input() destinations: IDestinations | null = null;\n    constructor(public userService: UserService) {}\n\n    ngOnInit() {}\n\n    public subscribe(email: string): void {\n        this.userService.subscribeToTrazler(email);\n    }\n}\n","<div class=\"tz-info-container tz-container\">\n    <div class=\"head-4 b-service\">\n        {{ 'HOME.BOOK_SERVICES_TXT' | translate }}\n    </div>\n    <div class=\"head-5\">\n        {{ 'HOME.SELECT_SERVICES_TXT' | translate }}\n    </div>\n</div>\n\n<div class=\"tz-info-container tz-container\">\n    <div class=\"tz-sub-bg\">\n        <div class=\"tz-overlay-bg-color\"></div>\n        <div class=\"lets-start-txt\">\n            <div class=\"head-2\">{{ 'HOME.LETS_START' | translate }}</div>\n            <div class=\"head-1\">{{ 'HOME.TRAVEL_WITH_US' | translate }}</div>\n        </div>\n    </div>\n</div>\n\n<div class=\"tz-info-container tz-container\">\n    <div class=\"covid-txt\">\n        <p class=\"head-6\">{{ 'HOME.COVID_19_TITLE' | translate }}</p>\n        <p class=\"head-4\">{{ 'HOME.COVID_19_UPDATE' | translate }}</p>\n    </div>\n</div>\n\n<div class=\"tz-help-options tz-info-container tz-container\">\n    <div class=\"help-option\">\n        <div>\n            <tz-icon icon=\"support\" class=\"support-icon\"></tz-icon>\n        </div>\n        <div>\n            <div class=\"head-4\">{{ 'HOME.HELP_OPTION_TITLE' | translate }}</div>\n            <div class=\"body-2\">\n                {{ 'HOME.HELP_OPTION_CONTENT' | translate }}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"help-option\">\n        <div>\n            <tz-icon icon=\"system\"></tz-icon>\n        </div>\n        <div>\n            <div class=\"head-4\">{{ 'HOME.TRAVEL_OPTION_TITLE' | translate }}</div>\n            <div class=\"body-2\">\n                {{ 'HOME.TRAVEL_OPTION_DESCRIPTION' | translate }}\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"subscription-container tz-container\">\n    <div class=\"head-3\">{{ 'HOME.SIGN_UP_TEXT' | translate }}</div>\n    <tz-sign-up-form\n        [formProcessing]=\"userService.subscribeProcessing\"\n        (formSubmit)=\"subscribe($event)\"\n    ></tz-sign-up-form>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { SettingsService } from '@services/services/settings-service';\nimport { IDestination, IDestinations } from '../../home.component';\n\n@Component({\n    selector: 'tz-home-static-content',\n    templateUrl: './home-static-content.component.html',\n    styleUrls: ['./home-static-content.component.scss', './home-static-content.component.tablet.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeStaticContentComponent implements OnInit {\n    @Input() destinations: IDestinations | null = null;\n\n    constructor(\n        public userService: UserService,\n        private searchDataService: SearchDataService,\n        private searchMetadataService: SearchMetadataService,\n        private cartRoutingService: CartRoutingService,\n        private settingsService: SettingsService\n    ) {}\n\n    ngOnInit() {}\n\n    public subscribe(email: string): void {\n        this.userService.subscribeToTrazler(email);\n    }\n\n    public getDestinationHref(destination: IDestination): string {\n        return this.destinations?.domain + destination.routeLink;\n    }\n\n    public openTrip(destination: IDestination) {\n        const tripQuery = this.searchMetadataService.parseTripUrl(destination.tripLink.replace(/.*\\?/, ''));\n        this.settingsService.setDeviceId(tripQuery.deviceId, true);\n        this.searchMetadataService.openTrip(tripQuery).then(\n            () => {\n                this.cartRoutingService.changeState(ServiceId.ACC, undefined, false, undefined, {\n                    imageLink: destination.imageLink,\n                });\n            },\n            (failure) => {\n                console.log(failure);\n            }\n        );\n    }\n}\n","<div class=\"tz-info-container tz-container\">\n    <div class=\"head-4\">{{ 'HOME.BOOK_SERVICES_TXT' | translate }} {{ 'HOME.SELECT_SERVICES_TXT' | translate }}</div>\n    <div class=\"covid-txt subtitle-2\">\n        <span>{{ 'HOME.COVID_19_TITLE' | translate }}</span> - {{ 'HOME.COVID_19_UPDATE' | translate }}\n    </div>\n</div>\n<div class=\"tz-help-options d-flex tz-container\" style=\"max-width: 1080px; flex-wrap: wrap; flex-direction: row\">\n    <div *ngFor=\"let destination of destinations?.destinations\" style=\"display: flex\">\n        <div\n            class=\"help-option\"\n            (click)=\"openTrip(destination)\"\n            style=\"height: 200px; flex: 1 1 0; color: white; display: flex; flex-direction: column\"\n            [ngStyle]=\"{\n                background: 'center center url(' + destination.imageThumbnailLink + ')',\n                width:\n                    1080 /\n                        (destinations && destinations.destinations && destinations.destinations.length\n                            ? destinations.destinations.length / 2 - ((destinations.destinations.length / 2) % 1)\n                            : 1) +\n                    'px'\n            }\"\n        >\n            <div class=\"head-4\" style=\"margin-top: auto\">{{ destination.title | translate }}</div>\n            <div class=\"d-flex\">\n                <div class=\"body-2\">\n                    {{ destination.comment | translate }}\n                </div>\n            </div>\n            <a class=\"RENDERED\" href=\"{{ getDestinationHref(destination) }}\"></a>\n        </div>\n    </div>\n    <!--<div class=\"help-option\"\n         (click)=\"openTrip(destinations.destinations[1])\">\n        <div class=\"head-4\">{{ 'AMSTERDAM' | translate }}</div>\n        <div class=\"d-flex help-content\">\n            <div class=\"body-2\">\n                {{ 'HOME.TRAVEL_OPTION_DESCRIPTION' | translate }}\n            </div>\n            <tz-icon icon=\"system\"></tz-icon>\n        </div>\n        <a class=\"RENDERED\" href=\"{{getDestinationHref(destinations.destinations[1])}}\"></a>\n    </div>-->\n</div>\n\n<div class=\"tz-sub-bg\">\n    <div class=\"tz-container tz-sub-container\">\n        <div class=\"lets-start-txt\">\n            <div class=\"head-2\">{{ 'HOME.LETS_START' | translate }}</div>\n            <div class=\"head-1\">{{ 'HOME.TRAVEL_WITH_US' | translate }}</div>\n        </div>\n    </div>\n</div>\n\n<div class=\"subscription-container tz-container\">\n    <div class=\"head-3\">{{ 'HOME.SIGN_UP_TEXT' | translate }}</div>\n    <tz-sign-up-form\n        [formProcessing]=\"userService.subscribeProcessing\"\n        (formSubmit)=\"subscribe($event)\"\n    ></tz-sign-up-form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PlanMyTripComponent } from './home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PlanMyTripComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class SearchRoutingModule {}\n","import { Component, AfterViewInit, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { GeneralSettings } from '@core/constants/general-settings';\nimport { ValidatorPatterns } from '@core/constants/validation-patterns.const';\nimport { PlatformService } from '@services/platform.service';\nimport { LandingPageService } from '@services/landing-page.service';\nimport { SelectedServices } from '@schemas/modules/services/selected-services';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { CombServiceIds } from '@core/constants/comb-service-ids';\ndeclare global {\n    interface Window {\n        prerenderReady: boolean;\n    }\n}\n\nexport interface IDestinations {\n    destinations: IDestination[];\n    domain: string;\n}\n\nexport interface IDestination {\n    title: string;\n    comment: string;\n    imageLink: string;\n    imageThumbnailLink: string;\n    tripLink: string;\n    routeLink: string;\n    validity: number;\n    combId: CombinationId;\n    services: CombServiceIds;\n    deviceId: string;\n    servicesTxt: string;\n    lang: string;\n}\n\n@Component({\n    selector: 'tz-plan-my-trip',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss', 'home.component.tablet.scss'],\n    //changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlanMyTripComponent implements OnInit, OnDestroy, AfterViewInit {\n    public editing = true;\n    public availableServices = GeneralSettings.availableServices;\n    public selectedServices: { [key: string]: boolean } = GeneralSettings.defaultSelectedServices;\n    public formGroup = new FormGroup({\n        email: new FormControl('', [Validators.pattern(ValidatorPatterns.EMAIL)]),\n    });\n    public destinations: IDestinations | null = null;\n\n    private serviceListenerId = -1;\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private searchDataService: SearchDataService,\n        private listenersService: ListenersService,\n        public platformService: PlatformService,\n        private landingPageService: LandingPageService,\n        private apiAccessService: ApiAccessService\n    ) {}\n\n    get isLastService(): boolean {\n        const s = this.selectedServices;\n        const selectedServices = Object.keys(s).filter((serviceIdx) => serviceIdx !== 'activity' && s[serviceIdx]);\n        return selectedServices.length === 1;\n    }\n\n    ngOnInit(): void {\n        this.initializeHomePage();\n\n        this.landingPageService.landingPageClosed$.pipe(takeUntil(this.destroy$)).subscribe((selectedServices) => {\n            this.setServices(selectedServices);\n        });\n        this.apiAccessService.getDestinations().then((destinations: IDestinations) => {\n            this.destinations = destinations;\n        });\n        /*if (this.platformService.isMobile) {\n            this.availableServices = GeneralSettings.availableServices.filter((el) => el.serviceKey !== 'activity');\n        }*/\n    }\n\n    ngAfterViewInit() {\n        console.log('set prerender ready');\n        window.prerenderReady = true;\n    }\n\n    ngOnDestroy(): void {\n        this.listenersService.unregisterListener(this.serviceListenerId);\n\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public selectTzService(serviceKey: string): void {\n        const s = this.selectedServices;\n        const selectedServices = Object.keys(s).filter((serviceIdx) => serviceIdx !== 'activity' && s[serviceIdx]);\n        const isLastService = selectedServices.length === 1 && selectedServices[0] === serviceKey;\n        if (isLastService || serviceKey === 'activity') {\n            return;\n        }\n\n        this.selectedServices[serviceKey] = !this.selectedServices[serviceKey];\n        // For rental and transfers we reset other service if either one is selected\n        if (this.selectedServices[serviceKey] && (serviceKey === 'rentCar' || serviceKey === 'transfer')) {\n            this.selectedServices['transfer'] = serviceKey === 'transfer';\n            this.selectedServices['rentCar'] = serviceKey === 'rentCar';\n        }\n\n        this.searchDataService.updateTzServiceSelection(this.selectedServices);\n    }\n\n    private initializeTzServices(): void {\n        this.selectedServices = {\n            ...GeneralSettings.defaultSelectedServices,\n        };\n        this.searchDataService.updateTzServiceSelection(this.selectedServices);\n    }\n\n    private initializeHomePage(): void {\n        this.initializeTzServices();\n\n        this.serviceListenerId = this.listenersService.registerListener(\n            ListenerId.LISTEN_SERVICE_REINIT,\n            this.initializeTzServices,\n            this\n        );\n        this.searchDataService.clear();\n        this.searchDataService.cleanUpSearch();\n        // tzPassengerService.ResetPax();\n        //this.listenersService.NotifyListeners(ListenerId.LISTEN_SERVICE_REINIT);\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_RENT_CAR, { resetMap: true });\n\n        //this.settingsService.clearDeviceId();\n        //this.appConfigService.initDeviceId();\n        this.searchDataService.resetSearch$.next();\n    }\n\n    private setServices(selectedServices: SelectedServices): void {\n        this.selectedServices = selectedServices;\n        this.searchDataService.updateTzServiceSelection(this.selectedServices);\n    }\n}\n","<div class=\"home-container relative\">\n    <div class=\"home-bg-img absolute full-width\">\n        <div\n            *ngIf=\"platformService.isMobileDevice$ | async\"\n            class=\"home-container__mob-info-text\"\n            [innerHTML]=\"\n                'HOME.SELECT_ONE_OR_MULTIPLE'\n                    | translate: { class1: 'ion-text-uppercase', class3: 'ion-text-uppercase' }\n            \"\n        ></div>\n    </div>\n\n    <div class=\"search-container tz-container\">\n        <div *ngIf=\"(platformService.isMobileDevice$ | async) === false\" class=\"welcome-txt head-2\">\n            {{ 'HOME.WELCOME_TRIP_PLANNER' | translate }}\n        </div>\n\n        <div class=\"form-container\">\n            <div\n                *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n                class=\"selection-info subtitle-2\"\n                [innerHTML]=\"\n                    'HOME.SELECT_ONE_OR_MULTIPLE'\n                        | translate: { class1: 'color-success', class2: 'color-success', class3: 'color-success' }\n                \"\n            ></div>\n\n            <div class=\"tz-services\">\n                <ng-template [ngIf]=\"(platformService.isMobileDevice$ | async) === false\">\n                    <div\n                        class=\"tz-service body-1 flex align-center\"\n                        *ngFor=\"let service of availableServices\"\n                        (click)=\"selectTzService(service.serviceKey)\"\n                        [ngClass]=\"{\n                            'selected-service': selectedServices[service.serviceKey],\n                            'last-service': isLastService\n                        }\"\n                        [attr.data-test]=\"'searching-page-' + service.serviceKey\"\n                    >\n                        <div class=\"tz-icon tz-icon-{{ service.cssKey }}\"></div>\n                        <div class=\"service-label small-screen-hidden\">{{ service.label | translate }}</div>\n                        <div class=\"service-label small-screen-only\">{{ service.tabletLabel | translate }}</div>\n                        <div class=\"add-remove inline-flex align-center justify-center\">\n                            <tz-svg-icon\n                                *ngIf=\"selectedServices[service.serviceKey]\"\n                                icon=\"service-btn-minus\"\n                                [styles]=\"{ 'width.px': 10, 'height.px': 2 }\"\n                            ></tz-svg-icon>\n                            <tz-svg-icon\n                                *ngIf=\"!selectedServices[service.serviceKey]\"\n                                [styles]=\"{ 'width.px': 10, 'height.px': 10 }\"\n                                icon=\"service-btn-plus\"\n                            ></tz-svg-icon>\n                        </div>\n                    </div>\n                </ng-template>\n\n                <ng-template [ngIf]=\"platformService.isMobileDevice$ | async\">\n                    <div *ngFor=\"let service of availableServices\" class=\"tz-services__item\">\n                        <tz-mob-service-tab\n                            [generalServiceTab]=\"service\"\n                            [selected]=\"selectedServices[service.serviceKey]\"\n                            (toggleServiceTab)=\"selectTzService(service.serviceKey)\"\n                        ></tz-mob-service-tab>\n                    </div>\n                </ng-template>\n            </div>\n            <tz-search [selectedServices]=\"selectedServices\" [editMode]=\"false\" [editing]=\"editing\"></tz-search>\n        </div>\n    </div>\n\n    <tz-home-mob-static-content\n        *ngIf=\"platformService.isMobileDevice\"\n        [destinations]=\"destinations\"\n    ></tz-home-mob-static-content>\n    <tz-home-static-content\n        *ngIf=\"!platformService.isMobileDevice\"\n        [destinations]=\"destinations\"\n    ></tz-home-static-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SearchRoutingModule } from './home-routing.module';\nimport { PlanMyTripComponent } from './home.component';\nimport { SearchModule } from '../search/search.module';\nimport { SharedModule } from '@shared/shared.module';\nimport { HomeMobStaticContentComponent } from './components/home-mob-static-content/home-mob-static-content.component';\nimport { HomeStaticContentComponent } from './components/home-static-content/home-static-content.component';\n\n@NgModule({\n    declarations: [PlanMyTripComponent, HomeMobStaticContentComponent, HomeStaticContentComponent],\n    imports: [CommonModule, SearchRoutingModule, FormsModule, ReactiveFormsModule, SearchModule, SharedModule],\n})\nexport class HomeModule {}\n"],"names":["Subject","takeUntil","FormControl","FormGroup","Validators","ListenerId","GeneralSettings","ValidatorPatterns","i0","ctx_r11","ctx_r15","ctx_r13","PlanMyTripComponent","constructor","searchDataService","listenersService","platformService","landingPageService","apiAccessService","availableServices","defaultSelectedServices","email","pattern","EMAIL","isLastService","s","selectedServices","Object","keys","filter","serviceIdx","length","ngOnInit","initializeHomePage","landingPageClosed$","pipe","destroy$","subscribe","setServices","getDestinations","then","destinations","ngAfterViewInit","console","log","window","prerenderReady","ngOnDestroy","unregisterListener","serviceListenerId","next","complete","selectTzService","serviceKey","updateTzServiceSelection","initializeTzServices","registerListener","LISTEN_SERVICE_REINIT","clear","cleanUpSearch","NotifyListeners","LISTEN_EDIT_RENT_CAR","resetMap","resetSearch$","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}