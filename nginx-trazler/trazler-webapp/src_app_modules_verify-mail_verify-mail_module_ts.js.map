{"version":3,"file":"src_app_modules_verify-mail_verify-mail_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACO;;;AAE9D,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uEAAmB,EAAE,CAAC,CAAC;AAM/D,MAAM,uBAAuB;;8FAAvB,uBAAuB;oHAAvB,uBAAuB;wHAHvB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEb,uBAAuB,oFAFtB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACInB,MAAM,mBAAmB;IAI5B,YACY,WAA2B,EAC3B,aAA4B,EAC5B,UAA4B,EAC5B,aAA4B,EAC5B,gBAAkC,EAClC,MAAc,EACd,WAAwB;QANxB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,kBAAa,GAAb,aAAa,CAAe;QAC5B,eAAU,GAAV,UAAU,CAAkB;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAEhC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAC1E,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,qBAAqB;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACxC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,cAAc;QAClB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC,CAAC;QAC5G,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACnD,GAAG,EAAE;YACD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CACjD,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAClC,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE,CACrC,CAAC;QACN,CAAC,EACD,GAAG,EAAE;YACD,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC;YACrG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC,CACJ,CAAC;IACN,CAAC;;sFAzCQ,mBAAmB;iHAAnB,mBAAmB;;;;;;;;;;;;;;;;;;;ACXe;AAEwB;AACT;;AAMvD,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAFhB,CAAC,yDAAY,EAAE,gFAAuB,CAAC;mIAEvC,gBAAgB,mBAHV,uEAAmB,aACxB,yDAAY,EAAE,gFAAuB","sources":["./src/app/modules/verify-mail/verify-mail-routing.module.ts","./src/app/modules/verify-mail/verify-mail.component.ts","./src/app/modules/verify-mail/verify-mail.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VerifyMailComponent } from './verify-mail.component';\n\nconst routes: Routes = [{ path: '', component: VerifyMailComponent }];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class VerifyMailRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DialogService } from '@services/dialog.service';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\n\n@Component({\n    selector: 'tz-verify-mail',\n    template: '',\n})\nexport class VerifyMailComponent implements OnInit {\n    private mailToken;\n    private verifyMail;\n\n    constructor(\n        private activeRoute: ActivatedRoute,\n        private loaderService: LoaderService,\n        private trazlerAPI: ApiAccessService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private router: Router,\n        private userService: UserService\n    ) {\n        this.mailToken = this.activeRoute.snapshot.params['token'];\n        this.verifyMail = this.activeRoute.snapshot.queryParams['verifyMail'];\n    }\n\n    ngOnInit() {\n        this.verifyUserMail();\n    }\n\n    private verificationProcessed(): void {\n        this.router.navigate(['/search']).then(() => {\n            this.loaderService.triggerLoading.emit({ loading: false });\n        });\n    }\n\n    private verifyUserMail(): void {\n        this.loaderService.triggerLoading.emit({ loading: true, textKey: 'ACCOUNT.WE_ARE_VERIFYING_YOUR_ACCOUNT' });\n        this.trazlerAPI.verifyEmailID(this.mailToken).subscribe(\n            () => {\n                this.userService.openLoginModel(this.verifyMail).then(\n                    () => this.verificationProcessed(),\n                    () => this.verificationProcessed()\n                );\n            },\n            () => {\n                this.dialogService.openSnackBarDialog(this.translateService.instant('NOTIFS.MAIL_ALREADY_VERIFIED'));\n                this.verificationProcessed();\n            }\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VerifyMailRoutingModule } from './verify-mail-routing.module';\nimport { VerifyMailComponent } from './verify-mail.component';\n\n@NgModule({\n    declarations: [VerifyMailComponent],\n    imports: [CommonModule, VerifyMailRoutingModule],\n})\nexport class VerifyMailModule {}\n"],"names":[],"sourceRoot":"webpack:///"}