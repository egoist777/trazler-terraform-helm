{"version":3,"file":"src_app_modules_my-trips_bookings_bookings_module_ts.js","mappings":"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","sources":["./src/app/modules/my-trips/bookings/bookings-routing.module.ts","./src/app/modules/my-trips/bookings/bookings.component.ts","./src/app/modules/my-trips/bookings/bookings.component.html","./src/app/modules/my-trips/bookings/bookings.module.ts","./src/app/modules/my-trips/bookings/components/booking-list/booking-list.component.ts","./src/app/modules/my-trips/bookings/components/booking-list/booking-list.component.html","./src/app/modules/my-trips/bookings/components/mob-booking-list-item/mob-booking-list-item.component.ts","./src/app/modules/my-trips/bookings/components/mob-booking-list-item/mob-booking-list-item.component.html","./src/app/modules/my-trips/bookings/components/mob-booking-list/mob-booking-list.component.ts","./src/app/modules/my-trips/bookings/components/mob-booking-list/mob-booking-list.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BookingsComponent } from './bookings.component';\n\nconst routes: Routes = [{ path: '', component: BookingsComponent }];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class BookingsListRoutingModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BookingsList } from '@schemas/modules/bookings/booking-list';\nimport { BookingDataService } from '@services/modules/bookings/dataservices/booking.data.service';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { SettingsService } from '@services/services/settings-service';\nimport { Subject } from 'rxjs';\nimport { skip, takeUntil } from 'rxjs/operators';\nimport { DateRangePipe } from '@shared/pipes/date-range.pipe';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-bookings-list',\n    templateUrl: './bookings.component.html',\n    styleUrls: ['./bookings.component.scss'],\n})\nexport class BookingsComponent implements OnInit, OnDestroy {\n    public bookings: BookingsList[] = [];\n    public noBookingsFound = false;\n    public sortedOptions = {\n        tripStartDate: true,\n        bookingNumber: false,\n        createdDate: false,\n    };\n\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private userService: UserService,\n        private bookingDataService: BookingDataService,\n        private translateService: TranslateService,\n        private router: Router,\n        private settingsService: SettingsService,\n        private dateRange: DateRangePipe,\n        public platformService: PlatformService\n    ) {}\n\n    private static formStatusClass(status: string): string {\n        switch (status) {\n            case 'BOOKINGS.UPCOMING':\n                return 'Upcoming';\n            case 'BOOKINGS.STARTED':\n                return 'Started';\n            case 'BOOKINGS.COMPLETED':\n                return 'Completed';\n            case 'BOOKINGS.STATUS.5':\n                return 'Cancelled';\n            case 'BOOKINGS.FAILED':\n                return 'Failed';\n            case 'BOOKINGS.ACTION_NEEDED':\n                return 'update-required';\n            default:\n                return '';\n        }\n    }\n\n    ngOnInit() {\n        this.initializeBookingListComponent();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public onSortBookings(sortType: string): void {\n        switch (sortType) {\n            case 'tripStartDate':\n                this.sortedOptions.tripStartDate = !this.sortedOptions.tripStartDate;\n                this.bookings.sort((a, b) =>\n                    this.sortedOptions.tripStartDate\n                        ? +new Date(b.startDate) - +new Date(a.startDate)\n                        : +new Date(a.startDate) - +new Date(b.startDate)\n                );\n                break;\n            case 'bookingNumber':\n                this.sortedOptions.bookingNumber = !this.sortedOptions.bookingNumber;\n                this.bookings.sort((a, b) => {\n                    const nameA = a.bookingNumber.toUpperCase();\n                    const nameB = b.bookingNumber.toUpperCase();\n\n                    if (nameA < nameB) {\n                        return this.sortedOptions.bookingNumber ? 1 : -1;\n                    }\n\n                    if (nameA > nameB) {\n                        return this.sortedOptions.bookingNumber ? -1 : 1;\n                    }\n\n                    return 0; // names must be equal\n                });\n                break;\n            case 'createdDate':\n                this.sortedOptions.createdDate = !this.sortedOptions.createdDate;\n                this.bookings.sort((a, b) =>\n                    this.sortedOptions.createdDate\n                        ? +new Date(b.createdDate) - +new Date(a.createdDate)\n                        : +new Date(a.createdDate) - +new Date(b.createdDate)\n                );\n                break;\n        }\n    }\n\n    public gotoRoute(routeData: { routePath: string; id?: string }): void {\n        this.bookingDataService.setBookings(routeData.routePath === '/bookings/booking-summary' ? this.bookings : []);\n        this.router.navigate([routeData.routePath, routeData.id ? routeData.id : '']);\n    }\n\n    private formBookingInfos(): void {\n        for (const [i, booking] of this.bookings.entries()) {\n            this.bookings[i].bookingStatusClass = BookingsComponent.formStatusClass(booking.bookingStatusStr);\n            if (booking.startDate !== '' && booking.endDate !== '') {\n                this.bookings[i].tripDate = this.dateRange.transform(booking.startDate, booking.endDate, true);\n            }\n\n            const travellersData = CartUtils.getTravellersData(booking.cartItems);\n            if (travellersData) {\n                this.bookings[i].personsStr =\n                    travellersData.txt +\n                    ' ' +\n                    this.translateService\n                        .instant('TRAVELLER.' + (travellersData.total > 1 ? 'PERSONS' : 'PERSON'))\n                        .toLowerCase();\n            }\n        }\n    }\n\n    private fetchBookings(): void {\n        const bookingsList = this.bookingDataService.getBookingsList();\n        if (bookingsList.length !== 0) {\n            this.bookings = bookingsList;\n            this.formBookingInfos();\n            return;\n        }\n\n        this.bookingDataService.getBookings(this.userService.getCustomerInformation().id).subscribe(\n            (bookings) => {\n                this.noBookingsFound = bookings.length === 0;\n                this.bookings = bookings;\n                this.formBookingInfos();\n            },\n            (failure: any) => {\n                this.noBookingsFound = true;\n                console.log('Get booking failure: ', failure);\n            }\n        );\n    }\n\n    private initializeBookingListComponent(): void {\n        this.fetchBookings();\n\n        this.settingsService.selectedLanguageSubject.pipe(skip(1), takeUntil(this.destroy$)).subscribe(() => {\n            this.formBookingInfos();\n        });\n    }\n}\n","<tz-booking-list\n    *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n    [bookings]=\"bookings\"\n    [noBookingsFound]=\"noBookingsFound\"\n    [sortedOptions]=\"sortedOptions\"\n    (sortBookings)=\"onSortBookings($event)\"\n    (goto)=\"gotoRoute($event)\"\n></tz-booking-list>\n<tz-mob-booking-list\n    *ngIf=\"platformService.isMobileDevice$ | async\"\n    [bookings]=\"bookings\"\n    [noBookingsFound]=\"noBookingsFound\"\n    [sortedOptions]=\"sortedOptions\"\n    (sortBookings)=\"onSortBookings($event)\"\n    (goto)=\"gotoRoute($event)\"\n></tz-mob-booking-list>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BookingsListRoutingModule } from './bookings-routing.module';\nimport { BookingsComponent } from './bookings.component';\nimport { SharedModule } from '@shared/shared.module';\nimport { DateRangePipe } from '@shared/pipes/date-range.pipe';\nimport { BookingListComponent } from './components/booking-list/booking-list.component';\nimport { MobBookingListComponent } from './components/mob-booking-list/mob-booking-list.component';\nimport { MobBookingListItemComponent } from './components/mob-booking-list-item/mob-booking-list-item.component';\n\n@NgModule({\n    declarations: [BookingsComponent, BookingListComponent, MobBookingListComponent, MobBookingListItemComponent],\n    imports: [CommonModule, BookingsListRoutingModule, SharedModule],\n    providers: [DateRangePipe],\n})\nexport class BookingsListModule {}\n","import { Component, EventEmitter, Input, Output, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingsList } from '@schemas/modules/bookings/booking-list';\n\n@Component({\n    selector: 'tz-booking-list',\n    templateUrl: './booking-list.component.html',\n    styleUrls: ['./booking-list.component.scss'],\n})\nexport class BookingListComponent {\n    @Input() bookings: BookingsList[] = [];\n    @Input() noBookingsFound = false;\n    @Input() sortedOptions = {\n        tripStartDate: true,\n        bookingNumber: false,\n        createdDate: false,\n    };\n\n    @Output() sortBookings = new EventEmitter<string>();\n    @Output() goto = new EventEmitter<{ routePath: string; id?: string }>();\n\n    constructor(private router: Router) {}\n\n    public bookingTrackId(index: number, booking: BookingsList) {\n        return booking.id;\n    }\n\n    public gotoContacts(): void {\n        const targetUrl = this.router.serializeUrl(this.router.createUrlTree(['/about/contacts']));\n        window.open(targetUrl, '_blank');\n    }\n\n    public gotoRoute(routePath: string, id?: string): void {\n        this.goto.emit({ routePath, id });\n    }\n}\n","<ng-container *ngIf=\"noBookingsFound; else bookingsList\">\n    <div class=\"no-booking-found\">\n        <div class=\"tz-container\">\n            <div class=\"no-trips-header\" translate=\"BOOKINGS.SUMMARY.NOBOOKING_TITLE\"></div>\n            <div class=\"mt-3 no-trips-content\">\n                {{ 'BOOKINGS.SUMMARY.NOBOOKING_CONTENT' | translate }}\n                <a (click)=\"gotoContacts()\"> {{ 'BOOKINGS.SUMMARY.CONTACT_PAGE' | translate }} </a>.\n            </div>\n            <button\n                type=\"button\"\n                class=\"mt-4 tz-btn tz-btn-primary\"\n                (click)=\"gotoRoute('/search')\"\n                translate=\"GENERAL.GO_TO_HOMEPAGE\"\n            ></button>\n        </div>\n    </div>\n</ng-container>\n<ng-template #bookingsList>\n    <div class=\"back-btn-container mb-0\">\n        <div class=\"tz-container\">\n            <div class=\"booking-header\">\n                {{ 'BOOKINGS.SUMMARY.MY_BOOKINGS' | translate }}\n            </div>\n        </div>\n    </div>\n    <div class=\"tz-container\">\n        <table class=\"bookings-list-table\" *ngIf=\"bookings.length\">\n            <tr class=\"bookings-list-table__headers\">\n                <th\n                    class=\"with-sorting width-15\"\n                    [ngClass]=\"{ 'des-order': sortedOptions.tripStartDate }\"\n                    (click)=\"sortBookings.emit('tripStartDate')\"\n                >\n                    <div>{{ 'SEARCH.TRIP_DATES' | translate }} <span class=\"tz-icon-filled-arrow arrow\"></span></div>\n                </th>\n                <th\n                    class=\"with-sorting width-17\"\n                    [ngClass]=\"{ 'des-order': sortedOptions.bookingNumber }\"\n                    (click)=\"sortBookings.emit('bookingNumber')\"\n                >\n                    <div>\n                        {{ 'BOOKINGS.SUMMARY.BOOKING_NUMBER' | translate }}\n                        <span class=\"tz-icon-filled-arrow arrow\"></span>\n                    </div>\n                </th>\n                <th class=\"width-30\">\n                    {{ 'GENERAL.SERVICES' | translate }} &bull; {{ 'BOOKINGS.ITINERARY' | translate }}\n                </th>\n                <th translate=\"BOOKINGS.AMOUNT\"></th>\n                <th\n                    class=\"with-sorting width-15\"\n                    [ngClass]=\"{ 'des-order': sortedOptions.createdDate }\"\n                    (click)=\"sortBookings.emit('createdDate')\"\n                >\n                    <div>{{ 'BOOKINGS.DATE' | translate }} <span class=\"tz-icon-filled-arrow arrow\"></span></div>\n                </th>\n                <th translate=\"BOOKINGS.STATUS_\"></th>\n            </tr>\n            <tr\n                class=\"bookings-list-table__data\"\n                (click)=\"gotoRoute('/bookings/booking-summary', booking.id)\"\n                *ngFor=\"let booking of bookings; trackBy: bookingTrackId\"\n                [ngClass]=\"{ corrupted: booking.corrupted, 'failed-booking': booking.bookingStatusClass === 'Failed' }\"\n            >\n                <td>{{ booking.startDate | dateRange: booking.endDate }}</td>\n                <td>{{ booking.bookingNumber }}</td>\n                <td class=\"my-trips-summary\">\n                    <ng-container *ngFor=\"let service of booking.services; let first = first\">\n                        <span class=\"service-and\" *ngIf=\"!first\">&nbsp;&&nbsp;</span>\n                        {{ 'SERVICES.' + service.toUpperCase() | translate }}\n                    </ng-container>\n                    <div class=\"bullet-split\">\n                        <ng-container *ngFor=\"let location of booking.locationStr; let i = index\">\n                            <span *ngIf=\"i !== 0\" class=\"bullet-split\"></span> {{ location }}\n                        </ng-container>\n                    </div>\n                    <div class=\"bullet-split\">\n                        {{ booking.personsStr }}\n                    </div>\n                </td>\n                <td>{{ booking.itemPrice.listPrice | tzCurrency: booking.itemPrice.listPriceCur }}</td>\n                <td>{{ booking.createdDate | tzDate: 'mediumDate' }}</td>\n                <td [ngClass]=\"booking.bookingStatusClass ? booking.bookingStatusClass.toLocaleLowerCase() : ''\">\n                    {{ booking.bookingStatusStr | translate }}\n                </td>\n            </tr>\n        </table>\n    </div>\n</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BookingsList } from '@schemas/modules/bookings/booking-list';\n\n@Component({\n    selector: 'tz-mob-booking-list-item',\n    templateUrl: './mob-booking-list-item.component.html',\n    styleUrls: ['./mob-booking-list-item.component.scss'],\n})\nexport class MobBookingListItemComponent implements OnInit {\n    @Input() booking: BookingsList | undefined;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"booking-list-item\">\n    <div class=\"booking-item-header\">\n        <span *ngIf=\"booking?.services\">\n            <ng-container *ngFor=\"let service of booking!.services; let first = first\">\n                <span class=\"service-and\" *ngIf=\"!first\">&nbsp;|&nbsp;</span>\n                {{ 'SERVICES.' + service.toUpperCase() | translate }}\n            </ng-container>\n        </span>\n        <span\n            class=\"status\"\n            [ngClass]=\"booking?.bookingStatusClass ? booking!.bookingStatusClass!.toLocaleLowerCase() : ''\"\n        >\n            {{ booking?.bookingStatusStr ? (booking!.bookingStatusStr | translate) : '' }}\n        </span>\n    </div>\n    <div class=\"booking-item-block\">\n        <div class=\"d-flex\" *ngIf=\"booking?.locationStr\">\n            <ng-container *ngFor=\"let location of booking?.locationStr; let i = index\">\n                <div class=\"booking-location\"><span *ngIf=\"i !== 0\" class=\"bullet-split\"></span> {{ location }}</div>\n            </ng-container>\n        </div>\n        <div class=\"booking-price-date\">\n            {{ booking?.tripDate }} | {{ booking?.personsStr }} |\n            {{\n                booking?.itemPrice?.listPrice\n                    ? (booking!.itemPrice!.listPrice! | tzCurrency: booking?.itemPrice?.listPriceCur)\n                    : ''\n            }}\n        </div>\n        <div class=\"booking-info-item\">\n            <div class=\"booking-text\">\n                {{ 'BOOKINGS.SUMMARY.BOOKING_NUMBER' | translate }} | {{ booking?.bookingNumber }}\n            </div>\n            <div class=\"booking-text\">\n                {{ 'BOOKINGS.DATE' | translate }} | {{ booking?.createdDate | tzDate: 'shortDate' }}\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BookingsList } from '@schemas/modules/bookings/booking-list';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { Location } from '@angular/common';\n\n@Component({\n    selector: 'tz-mob-booking-list',\n    templateUrl: './mob-booking-list.component.html',\n    styleUrls: ['./mob-booking-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobBookingListComponent {\n    @Input() bookings: BookingsList[] = [];\n    @Input() noBookingsFound = false;\n    @Input() sortedOptions = {\n        tripStartDate: true,\n        bookingNumber: false,\n        createdDate: false,\n    };\n\n    @Output() sortBookings = new EventEmitter<string>();\n    @Output() goto = new EventEmitter<{ routePath: string; id?: string }>();\n\n    public userName = '';\n    public readonly bookingSort = [\n        { label: 'SEARCH.TRIP_DATES', sortBy: 'tripStartDate' },\n        { label: 'BOOKINGS.SUMMARY.BOOKING_NUMBER', sortBy: 'bookingNumber' },\n        { label: 'BOOKINGS.DATE', sortBy: 'createdDate' },\n    ];\n\n    constructor(private userService: UserService, private location: Location) {\n        this.userName = this.userService.formProfileName;\n    }\n\n    public gotoRoute(routePath: string, id?: string): void {\n        this.goto.emit({ routePath, id });\n    }\n\n    public gotoBack(): void {\n        this.location.back();\n    }\n\n    public bookingTrackId(index: number, booking: BookingsList) {\n        return booking.id;\n    }\n}\n","<div\n    class=\"mob-booking-list\"\n    [ngClass]=\"{\n        'bg-white': bookings.length === 0\n    }\"\n>\n    <div class=\"header\">\n        <div class=\"back-button\" (click)=\"gotoBack()\" data-test=\"mob-booking-list-search\">\n            <tz-icon icon=\"arrow_back_ios\" data-test=\"back-to-basket\"></tz-icon>\n        </div>\n        {{ 'PAGES.MY_TRIPS' | translate }}\n    </div>\n    <ng-container *ngIf=\"noBookingsFound; else bookingsList\">\n        <div>\n            <div class=\"trips-icon-container\">\n                <tz-icon class=\"your-trips\" icon=\"calendar-icon\"></tz-icon>\n            </div>\n            <tz-icon class=\"background-line\" icon=\"background-line\"></tz-icon>\n        </div>\n        <div class=\"bottom-container\">\n            <p class=\"subtitle\">\n                {{ 'BOOKINGS.NO_TRIPS_LISTED' | translate: { name: userName } }}\n            </p>\n\n            <button\n                translate=\"BOOKINGS.START_EXPLORING\"\n                class=\"tz-btn auth-btn\"\n                (click)=\"gotoRoute('/search')\"\n            ></button>\n        </div>\n    </ng-container>\n    <ng-template #bookingsList>\n        <ng-container *ngIf=\"bookings.length > 0\">\n            <div class=\"sort-container d-flex align-center\">\n                <tz-icon icon=\"sort\" style=\"height: 1rem\"></tz-icon>\n                <div\n                    class=\"sort-option\"\n                    (click)=\"sortBookings.emit('tripStartDate')\"\n                    data-test=\"mob-booking-list-sort\"\n                    [ngClass]=\"{ 'des-order': sortedOptions.tripStartDate }\"\n                >\n                    {{ 'SEARCH.TRIP_DATES' | translate }} <tz-icon class=\"arrow\" icon=\"arrow-up\"></tz-icon>\n                </div>\n            </div>\n            <!-- Enable below for sort by booking number or booked date -->\n            <!-- <div\n            class=\"sort-option\"\n            (click)=\"sortBookings.emit('bookingNumber')\"\n            [ngClass]=\"{ 'des-order': sortedOptions.bookingNumber }\"\n        >\n            {{ 'BOOKINGS.SUMMARY.BOOKING_NUMBER' | translate }}\n            <span class=\"tz-icon-filled-arrow arrow\"></span>\n        </div>\n        <div\n            class=\"sort-option\"\n            (click)=\"sortBookings.emit('createdDate')\"\n            [ngClass]=\"{ 'des-order': sortedOptions.createdDate }\"\n        >\n            {{ 'BOOKINGS.DATE' | translate }}\n            <span class=\"tz-icon-filled-arrow arrow\"></span>\n        </div> -->\n        </ng-container>\n\n        <div\n            data-test=\"mob-booking-list-summary\"\n            (click)=\"gotoRoute('/bookings/booking-summary', booking.id)\"\n            *ngFor=\"let booking of bookings; trackBy: bookingTrackId\"\n            [ngClass]=\"{ corrupted: booking.corrupted, 'failed-booking': booking.bookingStatusClass === 'Failed' }\"\n        >\n            <tz-mob-booking-list-item [booking]=\"booking\"></tz-mob-booking-list-item>\n        </div>\n    </ng-template>\n</div>\n"],"names":["CartUtils","Subject","skip","takeUntil","i0","ctx_r2","ctx_r4","ctx_r0","ctx_r5","ctx_r7","ctx_r1","BookingsComponent","constructor","userService","bookingDataService","translateService","router","settingsService","dateRange","platformService","tripStartDate","bookingNumber","createdDate","formStatusClass","status","ngOnInit","initializeBookingListComponent","ngOnDestroy","destroy$","next","complete","onSortBookings","sortType","sortedOptions","bookings","sort","a","b","Date","startDate","nameA","toUpperCase","nameB","gotoRoute","routeData","setBookings","routePath","navigate","id","formBookingInfos","i","booking","entries","bookingStatusClass","bookingStatusStr","endDate","tripDate","transform","travellersData","getTravellersData","cartItems","personsStr","txt","instant","total","toLowerCase","fetchBookings","bookingsList","getBookingsList","length","getBookings","getCustomerInformation","subscribe","noBookingsFound","failure","console","log","selectedLanguageSubject","pipe","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///"}