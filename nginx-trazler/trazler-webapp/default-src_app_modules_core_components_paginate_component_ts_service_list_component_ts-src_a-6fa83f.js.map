{"version":3,"file":"default-src_app_modules_core_components_paginate_component_ts_service_list_component_ts-src_a-6fa83f.js","mappings":";;;;;;;;;;;;;;AAA6C;AAEtC,MAAe,oBAAoB;IAA1C;QACW,yBAAoB,GAAG;YAC1B,YAAY,EAAE,KAAK;YACnB,sBAAsB,EAAE,CAAC;YACzB,sBAAsB,EAAE,GAAG;YAC3B,QAAQ,EAAE,IAAI;YACd,uBAAuB,EAAE,UAAU;SACtC,CAAC;QAEK,uBAAkB,GAAyB,uDAAM,CAAC;IAC7D,CAAC;CAAA;;;;;;;;;;;;;;;ACLM,MAAM,mBAAmB;IAC5B,gBAAe,CAAC;IAET,MAAM,CAAC,sBAAsB,CAAC,OAA4B;QAC7D,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,aAAa,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,cAAc,EAAE;YAC7E,OAAO,IAAI,CAAC,iCAAiC,CAAC,OAAO,CAAC,CAAC;SAC1D;QAED,OAAO,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;IAEO,MAAM,CAAC,iCAAiC,CAAC,OAA4B;QACzE,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,MAAM,eAAe,GAAiD,EAAE,CAAC;QAEzE,OAAO,CAAC,OAAO,CAAC,CAAC,UAAsB,EAAE,EAAE;;YACvC,IAAI,UAAU,CAAC,MAAM,KAAK,sBAAsB,IAAI,UAAU,CAAC,MAAM,KAAK,qBAAqB,EAAE;gBAC7F,gBAAU,CAAC,QAAQ,0CAAE,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CACrC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAkB,EAAE,EAAE;oBACnC,IAAI,MAAM,CAAC,UAAU,EAAE;wBACnB,eAAe,CAAC,IAAI,CAChB,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAA4B,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CACpF,CAAC;qBACL;yBAAM,IAAI,MAAM,CAAC,MAAM,EAAE;wBACtB,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;qBACvC;gBACL,CAAC,CAAC,CACL,CAAC;gBACF,oBAAoB,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;aACrG;iBAAM;gBACH,IAAI,UAAU,CAAC,UAAU,EAAE;oBACvB,oBAAoB,IAAI,UAAU,CAAC,UAAU;yBACxC,MAAM,CAAC,CAAC,QAA4B,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;yBAC5D,MAAM,CAAC,CAAC,GAAW,EAAE,QAA4B,EAAE,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;iBAClG;qBAAM,IAAI,UAAU,CAAC,MAAM,EAAE;oBAC1B,oBAAoB,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAC9D;aACJ;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,oBAAoB,CAAC;IAChC,CAAC;IAEO,MAAM,CAAC,6BAA6B,CAAC,OAA4B;QACrE,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,OAAO,CAAC,OAAO,CAAC,CAAC,UAAsB,EAAE,EAAE;YACvC,IAAI,UAAU,CAAC,UAAU,EAAE;gBACvB,oBAAoB,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAChD,CAAC,GAAW,EAAE,QAA4B,EAAE,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAC9E,CAAC,CACJ,CAAC;aACL;iBAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBAC1B,oBAAoB,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aAC9D;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,oBAAoB,CAAC;IAChC,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;ACjED;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLAE,IAAAA,4DAAAA,cAAiE,CAAjE,EAAiE,yBAAjE,EAAiE,CAAjE;AAC6BA,IAAAA,wDAAAA;AAAAA,MAAAA,2DAAAA;AAAA;AAAA,aAAUC,mCAAV;AAAsC,KAAtC;AACrBD,IAAAA,4DAAAA;AACIA,IAAAA,uDAAAA;;AAQAA,IAAAA,4DAAAA;AAAiDA,IAAAA,oDAAAA;;AAAkCA,IAAAA,0DAAAA;AAGvFA,IAAAA,4DAAAA,4BAAoE,CAApE,EAAoE,KAApE,EAAoE,CAApE;AAEQA,IAAAA,uDAAAA;;AAQAA,IAAAA,4DAAAA;AAAgDA,IAAAA,oDAAAA;;AAA+BA,IAAAA,0DAAAA;;;;;AAvB1BA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA;AAIrDA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,mBAAiB,QAAjB,EAAiBA,yDAAAA,iDAAAA,6DAAAA,YAAAA,6DAAAA,SAAjB;AAM6CA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA,CAAAA,yDAAAA;AAOzCA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,mBAAiB,QAAjB,EAAiBA,yDAAAA,mDAAAA,6DAAAA,YAAAA,6DAAAA,SAAjB;AAM4CA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA,CAAAA,yDAAAA;;;;;;;;;;;;;AAQxDA,IAAAA,uDAAAA;;;;AAGIA,IAAAA,wDAAAA,UAAAA,6DAAAA;;;;;;;;;;;;;AAEJA,IAAAA,uDAAAA;;;;AAGIA,IAAAA,wDAAAA,UAAAA,6DAAAA;;;;;;AAVZA,IAAAA,qEAAAA;AACIA,IAAAA,4DAAAA;AACIA,IAAAA,wDAAAA;;AAKAA,IAAAA,wDAAAA;;AAKJA,IAAAA,0DAAAA;AACJA,IAAAA,mEAAAA;;;;;AAVaA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,SAAAA,yDAAAA;AAKAA,IAAAA,uDAAAA;AAAAA,IAAAA,wDAAAA,SAAAA,yDAAAA;;;;AD1BP,MAAOE,gCAAP,CAAuC;AAKzCC,cACYC,MADZ,EAEWC,eAFX,EAGYC,iBAHZ,EAGgD;AAFpC;AACD;AACC;AAPH,0BAAuC,SAAvC;AACA,2BAAkB,IAAlB;AACC,wBAAqC,IAAIR,uDAAJ,EAArC;AAMN;;AAEGS,sBAAoB,CAACC,MAAD,EAA8B;AACrD,SAAKC,YAAL,CAAkBC,IAAlB,CAAuBF,MAAM,CAACG,KAA9B;AACA,SAAKP,MAAL,CAAYQ,QAAZ,CACI,CACI,WAAWJ,MAAM,CAACG,KAAK,IAAI,KAAKL,iBAAL,CAAuBO,eAAvB,CACvBL,MAAM,CAACG,KAAP,KAAiB,SAAjB,GAA6BZ,8EAA7B,GAAgDA,6EADzB,EAEvBiB,SAFuB,CAG1B,EAJL,CADJ,EAOI;AACIC,WAAK,EAAE;AACHC,aAAK,EAAE;AACHC,2BAAiB,EAAE;AADhB,SADJ;AAIHC,eAAO,EAAE;AAJN;AADX,KAPJ;AAgBH;;AA7BwC;;;mBAAhClB,kCAAgCF,+DAAAA,CAAAA,mDAAAA,GAAAA,+DAAAA,CAAAA,uEAAAA,GAAAA,+DAAAA,CAAAA,kGAAAA;AAAA;;;QAAhCE;AAAgCmB;AAAAC;AAAAC;AAAAC;AAAA;AAAAC;AAAAhB;AAAA;AAAAiB;AAAAC;AAAAC;AAAAC;AAAA;ACZ7C7B,MAAAA,wDAAAA;AA8BAA,MAAAA,wDAAAA;;;;AA9BMA,MAAAA,wDAAAA;AA8BSA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;;;;;;;;;;;;;;;;;;;;;;;;AC7BsC;AAEgE;AACtE;;AAOxC,MAAM,qBAAqB;;0FAArB,qBAAqB;kHAArB,qBAAqB;sHAHrB,CAAC,+DAAY,EAAE,yDAAY,CAAC;mIAG5B,qBAAqB,mBAJf,8HAAgC,aACrC,+DAAY,EAAE,yDAAY,aAC1B,8HAAgC","sources":["./src/app/modules/core/components/paginate.component.ts/service.list.component.ts","./src/app/modules/results/results-filters/results-filters.utils.service.ts","./src/app/modules/results/transport/common/flight-train-button-toggle/flight-train-button-toggle.component.ts","./src/app/modules/results/transport/common/flight-train-button-toggle/flight-train-button-toggle.component.html","./src/app/modules/results/transport/common/transport.common.module.ts"],"sourcesContent":["import { window } from 'ngx-bootstrap/utils';\n\nexport abstract class ServiceListComponent {\n    public infiniteScrollConfig = {\n        scrollWindow: false,\n        infiniteScrollDistance: 5,\n        infiniteScrollThrottle: 150,\n        fromRoot: true,\n        infiniteScrollContainer: '.wrapper',\n    };\n\n    public scrollingContainer: HTMLElement | Window = window;\n}\n","import {\n    FilterItem,\n    FilterItemCheckbox,\n    FilterReferenceItem,\n    FilterSlider,\n} from '@schemas/modules/core/filters/service-filter';\n\nexport class ResultsFiltersUtils {\n    constructor() {}\n\n    public static selectedFiltersCounter(filters: FilterReferenceItem): number {\n        if (filters[0].ref_id === 'TRAIN_STOPS' || filters[0].ref_id === 'FLIGHT_STOPS') {\n            return this.selectedFiltersCounterFlightTrain(filters);\n        }\n\n        return this.selectedFiltersCounterDefault(filters);\n    }\n\n    private static selectedFiltersCounterFlightTrain(filters: FilterReferenceItem): number {\n        let selectedFiltersCount = 0;\n        const stationsFilters: Partial<FilterItemCheckbox | FilterSlider>[] = [];\n\n        filters.forEach((filterItem: FilterItem) => {\n            if (filterItem.ref_id === 'FLIGHT_TIME_AIRPORTS' || filterItem.ref_id === 'TRAIN_TIME_STATIONS') {\n                filterItem.sections?.forEach((section) =>\n                    section.ogs.map((filter: FilterItem) => {\n                        if (filter.checkboxes) {\n                            stationsFilters.push(\n                                ...filter.checkboxes.filter((checkbox: FilterItemCheckbox) => !checkbox.disabled)\n                            );\n                        } else if (filter.slider) {\n                            stationsFilters.push(filter.slider);\n                        }\n                    })\n                );\n                selectedFiltersCount += stationsFilters.reduce((acc, filter) => acc + Number(filter.selected), 0);\n            } else {\n                if (filterItem.checkboxes) {\n                    selectedFiltersCount += filterItem.checkboxes\n                        .filter((checkbox: FilterItemCheckbox) => !checkbox.disabled)\n                        .reduce((acc: number, checkbox: FilterItemCheckbox) => acc + Number(checkbox.selected), 0);\n                } else if (filterItem.slider) {\n                    selectedFiltersCount += Number(filterItem.slider.selected);\n                }\n            }\n        });\n\n        return selectedFiltersCount;\n    }\n\n    private static selectedFiltersCounterDefault(filters: FilterReferenceItem): number {\n        let selectedFiltersCount = 0;\n        filters.forEach((filterItem: FilterItem) => {\n            if (filterItem.checkboxes) {\n                selectedFiltersCount += filterItem.checkboxes.reduce(\n                    (acc: number, checkbox: FilterItemCheckbox) => acc + Number(checkbox.selected),\n                    0\n                );\n            } else if (filterItem.slider) {\n                selectedFiltersCount += Number(filterItem.slider.selected);\n            }\n        });\n\n        return selectedFiltersCount;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { Router } from '@angular/router';\nimport { PlatformService } from '@services/platform.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Component({\n    selector: 'tz-flight-train-button-toggle',\n    templateUrl: './flight-train-button-toggle.component.html',\n    styleUrls: ['./flight-train-button-toggle.component.scss'],\n})\nexport class FlightTrainButtonToggleComponent {\n    @Input() selectedButton: 'flights' | 'trains' = 'flights';\n    @Input() skeletonLoading = true;\n    @Output() buttonChange: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor(\n        private router: Router,\n        public platformService: PlatformService,\n        private searchDataService: SearchDataService\n    ) {}\n\n    public onButtonToggleChange(option: MatButtonToggleChange): void {\n        this.buttonChange.emit(option.value);\n        this.router.navigate(\n            [\n                `/travel/${option.value}/${this.searchDataService.getRoutingParam(\n                    option.value === 'flights' ? ServiceId.FLIGHT : ServiceId.TRAIN,\n                    undefined\n                )}`,\n            ],\n            {\n                state: {\n                    extra: {\n                        preserveSelection: true,\n                    },\n                    sort_by: 'bestValue',\n                },\n            }\n        );\n    }\n}\n","<div *ngIf=\"!skeletonLoading\" class=\"flight-train-button-toggle\">\n    <mat-button-toggle-group (change)=\"onButtonToggleChange($event)\" [value]=\"selectedButton\">\n        <mat-button-toggle value=\"flights\" data-test=\"result-page-flights-btn\">\n            <tz-svg-icon\n                class=\"service__flight-icon\"\n                [stretch]=\"false\"\n                icon=\"flight-icon\"\n                className=\"flights-filter-icon\"\n                [styles]=\"(platformService.isMobileDevice$ | async) ? { 'height.px': 13.33 } : { 'height.px': 20 }\"\n            ></tz-svg-icon>\n\n            <span class=\"service__flight-text service-label\">{{ 'FLIGHT.FLIGHTS' | translate }}</span>\n        </mat-button-toggle>\n\n        <mat-button-toggle value=\"trains\" data-test=\"result-page-train-btn\">\n            <div class=\"flex align-center\">\n                <tz-svg-icon\n                    class=\"service__train-icon\"\n                    [stretch]=\"false\"\n                    icon=\"train-filter-icon\"\n                    className=\"flights-filter-icon\"\n                    [styles]=\"(platformService.isMobileDevice$ | async) ? { 'height.px': 13.33 } : { 'height.px': 20 }\"\n                ></tz-svg-icon>\n\n                <span class=\"service__train-text service-label\">{{ 'TRAIN.TRAIN' | translate }}</span>\n            </div>\n        </mat-button-toggle>\n    </mat-button-toggle-group>\n</div>\n\n<ng-container *ngIf=\"skeletonLoading\">\n    <div class=\"tz-skeleton-loader skeleton-loader-btn-block\">\n        <ngx-skeleton-loader\n            *ngIf=\"platformService.isMobileDevice$ | async\"\n            count=\"1\"\n            [theme]=\"{ width: '100%', height: '100%' }\"\n        ></ngx-skeleton-loader>\n        <ngx-skeleton-loader\n            *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n            count=\"1\"\n            [theme]=\"{ height: '1.25rem', width: '11.0625rem' }\"\n        ></ngx-skeleton-loader>\n    </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\n\nimport { FlightTrainButtonToggleComponent } from './flight-train-button-toggle/flight-train-button-toggle.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [FlightTrainButtonToggleComponent],\n    imports: [SharedModule, CommonModule],\n    exports: [FlightTrainButtonToggleComponent],\n})\nexport class TransportCommonModule {}\n"],"names":["EventEmitter","ServiceId","i0","ctx_r2","FlightTrainButtonToggleComponent","constructor","router","platformService","searchDataService","onButtonToggleChange","option","buttonChange","emit","value","navigate","getRoutingParam","FLIGHT","TRAIN","undefined","state","extra","preserveSelection","sort_by","selectors","inputs","selectedButton","skeletonLoading","outputs","decls","vars","consts","template"],"sourceRoot":"webpack:///"}