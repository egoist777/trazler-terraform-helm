{"version":3,"file":"default-src_app_services_modules_checkout_services_tz-checkout_service_ts.js","mappings":"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","sources":["./src/app/services/modules/checkout/services/tz-checkout.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    AbstractControl,\n    FormArray,\n    FormControl,\n    FormGroup,\n    ValidationErrors,\n    ValidatorFn,\n    Validators,\n} from '@angular/forms';\n\nimport { ICart } from '@schemas/modules/cart/cart';\nimport {\n    ACCInfoCartInfo,\n    ACCRoomTypeInfo,\n    CartTravellerInfo,\n    CheckoutTraveller,\n    FlightTrainCartInfo,\n    RentalCartInfo,\n} from '@schemas/modules/checkout/cart-traveller';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { ValidatorPatterns } from '@core/constants/validation-patterns.const';\nimport { CheckoutBilling, CheckoutPayment, CheckoutProfile } from '@schemas/modules/checkout/payment-forms';\nimport { PassengerReq } from '@shared/schemas/tz-service-search-data';\nimport {\n    FlightLuggage,\n    FlightLuggageOption,\n    FlightLuggageOptionTypes,\n} from '@schemas/modules/flights/flight-luggage.model';\nimport {\n    BaggageData,\n    CheckoutFlightBaggage,\n    CheckoutLuggages,\n    CheckoutTrainBaggage,\n    FlightBaggage,\n    IncludedBag,\n    SelectedLuggageAmount,\n    TrainTripLuggage,\n    TrainValueMapping,\n    TravellerBagOptions,\n} from '@schemas/modules/checkout/transport-luggage';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport * as moment from 'moment';\nimport { BillingInfo, BookingReq } from '@schemas/modules/checkout/booking-request';\nimport { BillingAddress } from '@shared/schemas/tz-customer-info';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TzPassengerUtil } from '@core/utils/tz-passenger.util';\nimport { Trip } from '@core/constants/trip';\nimport { AccCartSummary, CheckoutCartServiceSummary, CheckoutHelper } from '@schemas/modules/checkout/cart-summary';\nimport { TzCurrencyPipe } from '@shared/pipes/tz-currency.pipe';\nimport { Insurance } from '@schemas/modules/checkout/travel-insurance';\nimport { DatesUtils } from '@core/utils/dates-utils';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TzCheckoutService {\n    constructor(\n        private translateService: TranslateService,\n        private tzCurrencyPipe: TzCurrencyPipe,\n        private userService: UserService,\n        private searchDataService: SearchDataService\n    ) {}\n\n    public getHelpers(\n        cartData: ICart,\n        luggageAmount: SelectedLuggageAmount,\n        insurance: Insurance,\n        paymentCaptureMode = -1\n    ): CheckoutHelper {\n        const cur = cartData.itemPrice.listPriceCur;\n        const extraAmt =\n            -cartData.itemPrice.additionalChargeNow +\n            (luggageAmount && luggageAmount.listPrice ? luggageAmount.listPrice : 0) +\n            +(insurance && insurance.net && insurance.net.listPrice ? insurance.net.listPrice : 0);\n        const total = cartData.itemPrice.listPrice + extraAmt;\n        const totalImprintAmt = this.getPriceString(cartData.totalImprintAmt, cur);\n\n        let payNow =\n            cartData.payNow +\n            (!cartData.itemPrice.additionalChargeNow && luggageAmount && luggageAmount.listPrice\n                ? luggageAmount.listPrice\n                : 0);\n        let unleashAmt = cartData.unleashAmt;\n        let payableAmt = cartData.itemPrice.payableAmt;\n        if (paymentCaptureMode === -1) {\n            // when payment is not done\n            if (payNow > 0) {\n                // if payNow amt is greater than zero after adding luggage, remove the unleash amount\n                payNow -= cartData.unleashAmt;\n            }\n            unleashAmt -= extraAmt; // if not paid remove luggage amt after calculated\n            payableAmt += extraAmt;\n        }\n\n        return {\n            total,\n            totalImprintAmt,\n            imprintText: this.getImprintText(cartData.totalImprintAmt, payableAmt, payNow, unleashAmt, cur),\n            unleashAmt: unleashAmt > 0 ? this.getPriceString(unleashAmt, cur) : '',\n            payNow: this.getPriceString(payNow, cur),\n            payNowInt: payNow,\n            paid: paymentCaptureMode !== -1,\n            paidInt: cartData.totalImprintAmt,\n            paidAmt: this.getPriceString(cartData.totalImprintAmt - unleashAmt, cur),\n            currency: cur,\n        } as CheckoutHelper;\n    }\n\n    public formCheckoutCartSummary(cartItems: ICartItem[]): CheckoutCartServiceSummary[] {\n        const summaries: CheckoutCartServiceSummary[] = [];\n\n        cartItems.forEach((cartItem) => {\n            const itemSummary = {\n                serviceId: cartItem.serviceId,\n                totalPrice:\n                    cartItem.itemPrice.payableAmt +\n                    cartItem.itemPrice.payLaterAmt -\n                    cartItem.itemPrice.additionalChargeNow,\n                currency: cartItem.itemPrice.listPriceCur,\n                additionalCharge: cartItem.itemPrice.additionalCharge,\n                dueOnArrival: cartItem.itemPrice.dueOnArrival,\n                refundAmt: cartItem.refundAmt,\n                bookingOptions: cartItem.selectedItem.bookingOptions,\n            };\n\n            switch (cartItem.serviceId) {\n                case ServiceId.ACC:\n                    summaries.push({\n                        ...itemSummary,\n                        ...this.formAccCartSummary(cartItem),\n                    } as CheckoutCartServiceSummary);\n                    break;\n                case ServiceId.FLIGHT:\n                    const flight = cartItem.selectedItem.data;\n                    summaries.push({\n                        ...itemSummary,\n                        originCity: flight.departureSummary.originCity,\n                        originCode: flight.departureSummary.originCode,\n                        destinationCity: flight.departureSummary.destinationCity,\n                        destinationCode: flight.departureSummary.destinationCode,\n                        departureTzFormat: flight.departureSummary.departureTzFormat,\n                        arrivalTzFormat: flight.returnSummary.arrivalTzFormat,\n                        paxInfo: TzPassengerUtil.formPaxDisplayStr(\n                            {},\n                            cartItem.searchReq.passengers,\n                            this.translateService,\n                            true\n                        ),\n                        flyType: flight.isRoundTrip ? Trip.ROUND_TRIP : Trip.ONE_WAY,\n                        ordinal: 1,\n                    } as CheckoutCartServiceSummary);\n                    break;\n                case ServiceId.TRAIN:\n                    const train = cartItem.selectedItem.data;\n                    summaries.push({\n                        ...itemSummary,\n                        originCity: train.onward.departure.location.city,\n                        originName: train.onward.departure.location.name,\n                        originCode: train.onward.departure.location.code,\n                        destinationCity: train.onward.arrival.location.city,\n                        destinationName: train.onward.arrival.location.name,\n                        destinationCode: train.onward.arrival.location.code,\n                        departureTzFormat: train.onward.departure.dateTzFormat,\n                        arrivalTzFormat: train.onward.arrival.dateTzFormat,\n                        paxInfo: TzPassengerUtil.formPaxDisplayStr(\n                            {},\n                            cartItem.searchReq.passengers,\n                            this.translateService,\n                            true\n                        ),\n                        flyType:\n                            cartItems.filter((item) => item.serviceId === ServiceId.TRAIN).length > 1\n                                ? Trip.ROUND_TRIP\n                                : Trip.ONE_WAY, //cartItem.searchReq.flyType,\n                        ordinal: 1,\n                    } as CheckoutCartServiceSummary);\n                    break;\n                case ServiceId.TRANSFER:\n                    const transfer = cartItem.selectedItem.data;\n                    summaries.push({\n                        ...itemSummary,\n                        pickup: transfer.onwardDetails.pickup,\n                        drop: transfer.onwardDetails.drop,\n                        pickupTzDate: transfer.onwardDetails.pickupTzDate,\n                        description: this.translateService.instant(`TRANSFER.CLASS.${transfer.vehicle.class}`),\n                        ordinal: 3,\n                    } as CheckoutCartServiceSummary);\n                    break;\n                case ServiceId.CAR_RENTAL:\n                    const rental = cartItem.selectedItem.data;\n                    summaries.push({\n                        ...itemSummary,\n                        class: rental.vehicle.class,\n                        name: rental.vehicle.name,\n                        pickupTzDate: rental.pickupTzDate,\n                        dropOffTzDate: rental.dropOffTzDate,\n                        mandatoryCharges: rental.mandatoryCharges,\n                        extraPrice: rental.extraPrice,\n                        ordinal: 4,\n                    } as CheckoutCartServiceSummary);\n                    break;\n            }\n        });\n        summaries.sort((a, b) => a.ordinal - b.ordinal);\n\n        return summaries;\n    }\n\n    public formCartTravellersData(cartData: ICart): CartTravellerInfo {\n        const cartTravellerInfo = {} as CartTravellerInfo;\n        const trainTravelDates: Date[] = [];\n        Object.entries(cartData.items).forEach(([key, item]) => {\n            const cartItem = item as ICartItem;\n            switch (cartItem.serviceId) {\n                case ServiceId.FLIGHT: {\n                    const flight = cartItem.selectedItem.data;\n                    cartTravellerInfo.FLIGHT_TRAIN = {\n                        passengers: cartItem.searchReq.passengers,\n                        travelCondition: cartItem.selectedItem.bookingOptions[0].travellerConditions,\n                        isFlight: true,\n                        travelDate: {\n                            startDate: new Date(flight.departureSummary.departureTzFormat),\n                            endDate: new Date(\n                                flight.isRoundTrip\n                                    ? flight.returnSummary.departureTzFormat\n                                    : flight.departureSummary.departureTzFormat\n                            ),\n                        },\n                    } as FlightTrainCartInfo;\n\n                    break;\n                }\n                case ServiceId.TRAIN: {\n                    trainTravelDates.push(new Date(cartItem.selectedItem.data.onward.departure.dateTzFormat));\n                    trainTravelDates.sort((a, b) => +a - +b);\n\n                    cartTravellerInfo.FLIGHT_TRAIN = {\n                        passengers: cartItem.searchReq.passengers,\n                        travelCondition: cartItem.selectedItem.bookingOptions[0].travellerConditions,\n                        isFlight: false,\n                        travelDate: {\n                            startDate: trainTravelDates[0],\n                            endDate: trainTravelDates.length > 1 ? trainTravelDates[1] : trainTravelDates[0],\n                        },\n                    } as FlightTrainCartInfo;\n\n                    break;\n                }\n                case ServiceId.ACC: {\n                    const accRoomTypeInfo: ACCRoomTypeInfo[] = [];\n                    cartItem.selectedItem.bookingOptions.forEach((option: any) => {\n                        accRoomTypeInfo.push({\n                            optionId: option.optionId,\n                            roomOfferId: option.selectedRoom.roomOfferId,\n                            roomType: this.getRoomDisplayName(\n                                option.selectedRoom.roomId,\n                                cartItem.selectedItem.data.rooms\n                            ),\n                        });\n                    });\n\n                    cartTravellerInfo.ACC = {\n                        roomTypes: accRoomTypeInfo,\n                        travelDate: {\n                            startDate: new Date(cartItem.selectedItem.data.checkIn),\n                            endDate: new Date(cartItem.selectedItem.data.checkOut),\n                        },\n                    } as ACCInfoCartInfo;\n\n                    break;\n                }\n                case ServiceId.TRANSFER: {\n                    cartTravellerInfo.TRANSFER = true;\n                    break;\n                }\n                case ServiceId.CAR_RENTAL: {\n                    cartTravellerInfo.RENTAL = {\n                        driversAge: cartItem.searchReq.passengers.driversAge,\n                        travelDate: {\n                            startDate: new Date(cartItem.selectedItem.data.pickupTzDate),\n                            endDate: new Date(cartItem.selectedItem.data.pickupTzDate),\n                        },\n                        driverAgeLimit: {\n                            min: 21,\n                            max: 80,\n                        },\n                    } as RentalCartInfo;\n                    break;\n                }\n            }\n        });\n\n        return cartTravellerInfo;\n    }\n\n    public getProfileGroup(): CheckoutProfile {\n        const group = {\n            firstName: new FormControl('', [\n                Validators.required,\n                Validators.pattern(ValidatorPatterns.NAME),\n                Validators.maxLength(100),\n            ]),\n            lastName: new FormControl('', [\n                Validators.required,\n                Validators.pattern(ValidatorPatterns.NAME),\n                Validators.maxLength(100),\n            ]),\n            phone: new FormControl('', [Validators.required]),\n            emailID: new FormControl('', [Validators.required, Validators.pattern(ValidatorPatterns.EMAIL)]),\n        } as CheckoutProfile;\n\n        if (this.userService.IsLogged()) {\n            const customer = this.userService.getCustomerInformation();\n            group.firstName.setValue(customer.firstName);\n            group.lastName.setValue(customer.lastName);\n            group.emailID.setValue(customer.emailID);\n            group.phone.setValue(customer.phone ? customer.phone.number : '');\n        } else {\n            group.emailID.addValidators([this.updateRepeatEmail()]);\n            group.repeatEmailID = new FormControl('', [\n                Validators.required,\n                Validators.pattern(ValidatorPatterns.EMAIL),\n                this.repeatMailValidator(),\n            ]);\n        }\n\n        return group;\n    }\n\n    public getPaymentGroup(): CheckoutPayment {\n        return {\n            holder: new FormControl('', [\n                Validators.required,\n                Validators.pattern(ValidatorPatterns.NAME),\n                Validators.maxLength(100),\n            ]),\n            address: new FormControl('', [Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(100)]),\n            zipCode: new FormControl('', [Validators.pattern(ValidatorPatterns.ZIPCODE), Validators.maxLength(10)]),\n            city: new FormControl('', Validators.pattern(ValidatorPatterns.STRING)),\n            country: new FormControl(''),\n        } as CheckoutPayment;\n    }\n\n    public getBillingGroup(): CheckoutBilling {\n        return {\n            companyName: new FormControl('', [Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(100)]),\n            vatNo: new FormControl('', [Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(20)]),\n            address: new FormControl('', [Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(100)]),\n            zipCode: new FormControl('', [Validators.pattern(ValidatorPatterns.ZIPCODE), Validators.maxLength(10)]),\n            city: new FormControl('', [Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(100)]),\n            country: new FormControl(''),\n        } as CheckoutBilling;\n    }\n\n    public setBillingValidators(billing: FormGroup, required: boolean): void {\n        const setFormValidity = (controlName: string) => {\n            const control = billing.get(controlName);\n            control?.setValidators([Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(100)]);\n            if (required) {\n                control?.addValidators(Validators.required);\n            }\n\n            control?.updateValueAndValidity();\n        };\n\n        setFormValidity('companyName');\n        setFormValidity('address');\n        setFormValidity('city');\n        setFormValidity('country');\n    }\n\n    public setBillingValue(billing: FormGroup): void {\n        if (!this.userService.IsLogged()) {\n            return;\n        }\n\n        const billingAddress = this.userService.getCustomerInformation().billingAddress;\n        const setFormValue = (controlName: string, value: any) => {\n            const control = billing.get(controlName);\n\n            if (!control?.value || control?.value === '') {\n                control?.setValue(value);\n            }\n        };\n\n        setFormValue('companyName', billingAddress.companyName);\n        setFormValue('vatNo', billingAddress.vatNo);\n        setFormValue('address', billingAddress.address);\n        setFormValue('zipCode', billingAddress.zipCode);\n        setFormValue('city', billingAddress.city);\n        setFormValue('country', {\n            name: billingAddress.country,\n            code: billingAddress.countryCode,\n        });\n    }\n\n    public formTransportLuggage(cartData: ICart): CheckoutLuggages {\n        let luggages!: CheckoutLuggages;\n\n        let trainLuggageOnward!: TrainValueMapping;\n        let trainLuggageReturn!: TrainValueMapping;\n        Object.entries(cartData.items).forEach(([key, item]) => {\n            const cartItem = item as ICartItem;\n            switch (cartItem.serviceId) {\n                case ServiceId.FLIGHT: {\n                    const flightLuggage = {\n                        flightLuggage: this.mapByPassengerType(\n                            cartItem.selectedItem.data.journeyLuggage,\n                            cartItem.searchReq.passengers\n                        ),\n                    } as CheckoutFlightBaggage;\n\n                    if (flightLuggage.flightLuggage) {\n                        flightLuggage.isRoundTrip = cartItem.selectedItem.data.isRoundTrip;\n                    }\n                    luggages = {\n                        flight: flightLuggage,\n                    } as CheckoutLuggages;\n                    break;\n                }\n                case ServiceId.TRAIN: {\n                    const trainLuggage = this.getTrainLuggages(cartItem.selectedItem.data.onward.trainClass.tzBaggage);\n                    if (trainLuggage) {\n                        if (cartItem.selectedItem.type === 'onwardJourney') {\n                            trainLuggageOnward = trainLuggage;\n                        } else {\n                            trainLuggageReturn = trainLuggage;\n                        }\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        if (trainLuggageOnward && trainLuggageReturn) {\n            luggages = {\n                train: this.verifyTrainTripLuggages(trainLuggageOnward, trainLuggageReturn),\n            } as CheckoutLuggages;\n        }\n\n        return luggages;\n    }\n\n    public makeBookingReq(cartItems: ICartItem[], checkout: any, paymentForm: FormGroup): BookingReq {\n        let customerPhone = this.userService.getCustomerInformation().phone;\n        if (typeof paymentForm.value.profile.phone === 'object') {\n            customerPhone = paymentForm.value.profile.phone;\n        }\n\n        const bookingReq = {\n            combId: this.searchDataService.getCombId(),\n            customer: {\n                ...paymentForm.value.profile,\n                phone: customerPhone,\n                id: this.userService.IsLogged() ? this.userService.getCustomerInformation().id : '', // if customer is logged-in\n            },\n            billingInfo: {\n                billingAddress: {\n                    personal: {\n                        ...paymentForm.value.payment,\n                        country: paymentForm.value.payment ? paymentForm.value.payment.country.name : '',\n                        countryCode: paymentForm.value.payment ? paymentForm.value.payment.country.code : '',\n                    },\n                },\n            } as BillingInfo,\n            billingAddress: {\n                ...paymentForm.value.billing,\n                country: paymentForm.value.billing.country.name,\n                countryCode: paymentForm.value.billing.country.code,\n            } as BillingAddress,\n            invoiceRequired: checkout.invoiceRequired,\n            noPCI: true,\n            travellers: [] as CheckoutTraveller[], // for flight,train\n            accTravellers: [] as CheckoutTraveller[], // for accommodation\n            transferTraveller: {}, // for transfer\n            driverInfo: {}, // for rental\n            baggageSelected: checkout.baggageSelected, //for flight/train\n            additionalLuggagePrice: checkout.additionalLuggagePrice as SelectedLuggageAmount,\n            insuranceBooking:\n                checkout.insurance && checkout.insurance.selectedIdx !== null && checkout.insurance.selectedIdx !== -1\n                    ? checkout.insurance.selected\n                    : null,\n            note: checkout.customNote,\n        } as BookingReq;\n\n        const formTzBookingDate = (date: string | Date): string => {\n            if (date === '') {\n                return '';\n            }\n\n            return moment(date, DatesUtils.updateTzTravelerFormat).format('yyyy-MM-DD');\n        };\n\n        cartItems.forEach((cartItem: ICartItem) => {\n            switch (cartItem.serviceId) {\n                case ServiceId.ACC: {\n                    checkout.hotelPassengers.forEach((traveller: CheckoutTraveller) => {\n                        bookingReq.accTravellers.push({\n                            firstName: traveller.firstName,\n                            middleName: traveller.middleName,\n                            lastName: traveller.lastName,\n                            optionId: traveller.optionId,\n                        } as CheckoutTraveller);\n                    });\n                    break;\n                }\n                case ServiceId.FLIGHT:\n                case ServiceId.TRAIN: {\n                    bookingReq.travellers = [];\n                    checkout.passengerDetails.forEach((traveller: CheckoutTraveller) => {\n                        bookingReq.travellers.push({\n                            ...traveller,\n                            dateOfBirth: formTzBookingDate(traveller.dateOfBirth),\n                            dateOfIssue: formTzBookingDate(traveller.dateOfIssue),\n                            idCardValidity: formTzBookingDate(traveller.idCardValidity),\n                        } as CheckoutTraveller);\n                    });\n                    break;\n                }\n                case ServiceId.TRANSFER: {\n                    const traveller = checkout.transferPassenger;\n                    if (traveller) {\n                        bookingReq.transferTraveller = {\n                            firstName: traveller.firstName,\n                            middleName: traveller.middleName,\n                            lastName: traveller.lastName,\n                            phone: traveller.phone,\n                        } as CheckoutTraveller;\n                    }\n                    break;\n                }\n                case ServiceId.CAR_RENTAL: {\n                    const traveller = checkout.rentalPassenger;\n                    if (traveller) {\n                        bookingReq.driverInfo = {\n                            firstName: traveller.firstName,\n                            middleName: traveller.middleName,\n                            lastName: traveller.lastName,\n                            dateOfBirth: formTzBookingDate(traveller.dateOfBirth),\n                            gender: traveller.gender,\n                        } as CheckoutTraveller;\n                    }\n                    break;\n                }\n            }\n        });\n\n        return bookingReq;\n    }\n\n    public formCheckoutDraftValues(\n        checkoutDataStr: string,\n        cartInfo: CartTravellerInfo,\n        checkout: {\n            passengerDetails: CheckoutTraveller[];\n            hotelPassengers: CheckoutTraveller[];\n            transferPassenger: CheckoutTraveller;\n            rentalPassenger: CheckoutTraveller;\n            transportID: string;\n        },\n        travellersFormArray: {\n            transport: FormArray;\n            hotel: FormArray;\n        }\n    ): string {\n        const checkoutData = JSON.parse(checkoutDataStr);\n\n        if (cartInfo.FLIGHT_TRAIN) {\n            const transportPassengers = checkoutData.checkoutData.passengerDetails;\n            const currentFormCount = checkout.passengerDetails.length;\n            const draftTransportFormArray = checkoutData.travellersFormValue.transport;\n            const transportAdded = !transportPassengers || transportPassengers.length === 0;\n\n            if (transportAdded) {\n                checkoutData.checkoutData.passengerDetails = checkout.passengerDetails;\n                delete checkoutData.travellersFormValue.transport;\n            } else if (transportPassengers.length > currentFormCount) {\n                checkoutData.checkoutData.passengerDetails = transportPassengers.slice(0, currentFormCount);\n                checkoutData.travellersFormValue.transport = draftTransportFormArray.slice(0, currentFormCount);\n\n                if (checkoutData.checkoutData.transportID === checkout.transportID) {\n                    let total = 0;\n                    for (const passenger of checkoutData.checkoutData.passengerDetails) {\n                        total += passenger.additionalLuggage.totalPrice;\n                    }\n\n                    checkoutData.checkoutData.additionalLuggagePrice = {\n                        listPrice: total,\n                        listPriceCur: checkoutData.checkoutData.additionalLuggagePrice.listPriceCurrency,\n                    };\n                }\n            } else if (transportPassengers.length < currentFormCount) {\n                checkoutData.checkoutData.passengerDetails = [\n                    ...transportPassengers,\n                    ...checkout.passengerDetails.slice(transportPassengers.length),\n                ];\n                checkoutData.travellersFormValue.transport = [\n                    ...draftTransportFormArray,\n                    ...travellersFormArray.transport.value.slice(transportPassengers.length),\n                ];\n            }\n\n            if (checkoutData.checkoutData.transportID !== checkout.transportID) {\n                checkoutData.checkoutData.additionalLuggagePrice = { listPrice: 0, listPriceCur: '' };\n                checkoutData.baggageSelected = false;\n\n                for (const [i, passenger] of checkoutData.checkoutData.passengerDetails.entries()) {\n                    checkoutData.checkoutData.passengerDetails[i] = { ...passenger, ...checkout.passengerDetails[i] };\n                }\n            }\n        } else {\n            delete checkoutData.travellersFormValue.transport;\n            delete checkoutData.checkoutData.passengerDetails;\n        }\n\n        if (cartInfo.ACC) {\n            const hotelPassengers = checkoutData.checkoutData.hotelPassengers;\n            const hotelAdded = !hotelPassengers || hotelPassengers === 0;\n            const roomCount = travellersFormArray.hotel.controls.length;\n            const draftHotelFormArray = checkoutData.travellersFormValue.hotel;\n\n            if (hotelAdded) {\n                checkoutData.checkoutData.hotelPassengers = checkout.hotelPassengers;\n                delete checkoutData.travellersFormValue.hotel;\n            } else if (hotelPassengers.length > roomCount) {\n                checkoutData.checkoutData.hotelPassengers = hotelPassengers.slice(0, roomCount);\n                checkoutData.travellersFormValue.hotel = draftHotelFormArray.slice(0, roomCount);\n            } else if (hotelPassengers.length < roomCount) {\n                checkoutData.checkoutData.hotelPassengers = [\n                    ...hotelPassengers,\n                    ...checkout.hotelPassengers.slice(hotelPassengers.length),\n                ];\n                checkoutData.travellersFormValue.hotel = [\n                    ...draftHotelFormArray,\n                    ...travellersFormArray.hotel.value.slice(hotelPassengers.length),\n                ];\n            }\n\n            if (checkoutData.checkoutData.hotelPassengers.length !== 0) {\n                for (const [i, passenger] of checkoutData.checkoutData.hotelPassengers.entries()) {\n                    checkoutData.checkoutData.hotelPassengers[i] = { ...passenger, ...checkout.hotelPassengers[i] };\n                }\n            }\n        } else {\n            delete checkoutData.travellersFormValue.hotel;\n            delete checkoutData.checkoutData.hotelPassengers;\n        }\n\n        if (cartInfo.TRANSFER) {\n            const transferAdded =\n                !checkoutData.checkoutData.transferPassenger ||\n                Object.keys(checkoutData.checkoutData.transferPassenger).length === 0;\n            if (transferAdded) {\n                checkoutData.checkoutData.transferPassenger = checkout.transferPassenger;\n            } else {\n                checkoutData.checkoutData.transferPassenger = {\n                    ...checkoutData.checkoutData.transferPassenger,\n                    ...checkout.transferPassenger,\n                };\n            }\n        } else {\n            delete checkoutData.travellersFormValue.transfer;\n            delete checkoutData.checkoutData.transferPassenger;\n        }\n\n        if (cartInfo.RENTAL) {\n            const rentalAdded =\n                !checkoutData.checkoutData.rentalPassenger ||\n                Object.keys(checkoutData.checkoutData.rentalPassenger).length === 0;\n            if (rentalAdded) {\n                checkoutData.checkoutData.rentalPassenger = checkout.rentalPassenger;\n            } else {\n                checkoutData.checkoutData.rentalPassenger = {\n                    ...checkoutData.checkoutData.rentalPassenger,\n                    ...checkout.rentalPassenger,\n                };\n            }\n        } else {\n            delete checkoutData.travellersFormValue.rental;\n            delete checkoutData.checkoutData.rentalPassenger;\n        }\n\n        const profile = checkoutData.paymentFormValue.profile;\n        if (this.userService.IsLogged()) {\n            delete checkoutData.paymentFormValue.profile.repeatEmailID;\n\n            if (profile.emailID === '') {\n                delete checkoutData.paymentFormValue.profile;\n            }\n        } else if (!profile.repeatEmailID) {\n            checkoutData.paymentFormValue.profile.repeatEmailID = '';\n        }\n\n        return JSON.stringify(checkoutData);\n    }\n\n    private getImprintText(\n        totalImprintAmt: number,\n        totalPayableAmt: number,\n        payNow: number,\n        unleashAmt: number,\n        cur: string\n    ): string {\n        const totalImprintAmtFmt = this.getPriceString(totalImprintAmt, cur);\n        const totalFmt = this.getPriceString(totalPayableAmt, cur);\n\n        switch (true) {\n            case totalImprintAmt > totalPayableAmt:\n                return this.translateService.instant('PROFILE.IMPRINT_AMT_HIGHER', {\n                    imprintAmt: totalImprintAmtFmt,\n                    newTotal: totalFmt,\n                    amtToBeRefund: this.getPriceString(unleashAmt, cur),\n                });\n            case totalImprintAmt < totalPayableAmt:\n                return this.translateService.instant('PROFILE.IMPRINT_AMT_LOWER', {\n                    imprintAmt: totalImprintAmtFmt,\n                    newTotal: totalFmt,\n                    amtToBePaid: this.getPriceString(payNow, cur),\n                });\n            case totalImprintAmt === totalPayableAmt:\n                return this.translateService.instant('PROFILE.IMPRINT_AMT_EQUAL', {\n                    imprintAmt: totalImprintAmtFmt,\n                });\n            case totalImprintAmt === 0:\n            default:\n                return '';\n        }\n    }\n\n    private getPriceString(amount: number, currency: string): string {\n        return this.tzCurrencyPipe.transform(amount, currency) || '';\n    }\n\n    private formatSelectedRooms(roomNames: string[]) {\n        const roomsCountMap = roomNames.reduce(\n            (pre, cur) => ((pre[cur] = pre[cur] + 1 || 1), pre),\n            {} as { [key: string]: number }\n        );\n\n        let roomsStr = '';\n        for (const room of Object.keys(roomsCountMap)) {\n            if (roomsStr !== '') {\n                roomsStr += ', ';\n            }\n\n            if (roomsCountMap[room] > 1) {\n                roomsStr += `${roomsCountMap[room]} ${room}`;\n            } else {\n                roomsStr += ' ' + room;\n            }\n        }\n\n        return roomsStr;\n    }\n\n    private formAccCartSummary(cartItem: ICartItem): AccCartSummary {\n        const roomNames: string[] = [];\n        let isPayLater = true;\n        let totalPersons = 0; // traveller persons based on offer selected\n        let extraBedCharge = 0;\n        cartItem.selectedItem.bookingOptions.forEach((option) => {\n            const selectedRoom = option.selectedRoom;\n            if (selectedRoom) {\n                const roomType = this.getRoomDisplayName(selectedRoom.roomId, cartItem.selectedItem.data.rooms);\n                roomNames.push(roomType);\n\n                if (!selectedRoom.isPayLater) {\n                    isPayLater = false;\n                }\n                totalPersons += selectedRoom.selectedOffer.capacity;\n                extraBedCharge += selectedRoom.selectedOffer.extraBedInfo.price.value;\n            }\n        });\n\n        const checkIn = new Date(cartItem.selectedItem.data.checkIn).getTime();\n        const checkOut = new Date(cartItem.selectedItem.data.checkOut).getTime();\n\n        return {\n            ordinal: 2,\n            hotelName: cartItem.selectedItem.data.name,\n            payLater: isPayLater,\n            selectedRoomNames: this.formatSelectedRooms(roomNames),\n            paxInfo: `${totalPersons} ${this.translateService.instant(\n                totalPersons > 1 ? 'TRAVELLER.PERSONS' : 'TRAVELLER.PERSON'\n            )}`,\n            numberOfNights: Math.ceil((checkOut - checkIn) / (1000 * 3600 * 24)),\n            checkIn: cartItem.selectedItem.data.checkIn,\n            checkOut: cartItem.selectedItem.data.checkOut,\n            broker: cartItem.selectedItem.broker,\n            additionalCharge: cartItem.itemPrice.additionalCharge - extraBedCharge,\n            extraBedCharge,\n        } as AccCartSummary;\n    }\n\n    private mapByPassengerType(luggage: FlightLuggage, passengers: PassengerReq): FlightBaggage {\n        const mappedLuggage = {} as FlightBaggage;\n\n        if (!luggage) {\n            return mappedLuggage;\n        }\n\n        if (luggage.checkIn && luggage.checkIn.options) {\n            const res = this.mapLuggagePerPassenger(\n                'Checked bag',\n                luggage.checkIn.options,\n                luggage.checkIn.combinable,\n                passengers\n            );\n            if (res) {\n                mappedLuggage.checkIn = {\n                    ...res,\n                    combinable: luggage.checkIn.combinable,\n                    replaceIncluded: luggage.checkIn.replaceIncluded,\n                };\n                mappedLuggage.includedOptions = res.includedOptions;\n                if (luggage.checkIn.options.length === 1) {\n                    mappedLuggage.checkIn.combinable = true;\n                }\n            }\n        }\n\n        if (luggage.cabin && luggage.cabin.options) {\n            const res = this.mapLuggagePerPassenger(\n                'Cabin bag',\n                luggage.cabin.options,\n                luggage.cabin.combinable,\n                passengers\n            );\n            if (res) {\n                mappedLuggage.cabin = {\n                    ...res,\n                    combinable: luggage.cabin.combinable,\n                    replaceIncluded: luggage.cabin.replaceIncluded,\n                };\n\n                if (mappedLuggage.includedOptions.bag2 === null) {\n                    mappedLuggage.includedOptions = res.includedOptions;\n                } else {\n                    if (res.includedOptions.bag2 !== null) {\n                        mappedLuggage.includedOptions.bag1 = res.includedOptions.bag2;\n                    } else {\n                        mappedLuggage.includedOptions.bag1 = res.includedOptions.bag1;\n                    }\n                }\n\n                if (luggage.cabin.options.length === 1) {\n                    mappedLuggage.cabin.combinable = true;\n                }\n            }\n        }\n\n        return mappedLuggage;\n    }\n\n    private setTravelerBag(\n        travelerType: string,\n        bugType: string,\n        bag: IncludedBag | null,\n        title: string,\n        luggageOption: FlightLuggageOption\n    ): IncludedBag {\n        if (bag === null) {\n            bag = {\n                type: bugType,\n            } as IncludedBag;\n        }\n\n        const bagData = {\n            dimensions: luggageOption.dimensions,\n            title,\n            weightTexts: luggageOption.weightTexts,\n        };\n\n        switch (travelerType) {\n            case 'Adult': {\n                bag.Adult = bagData;\n                break;\n            }\n            case 'Young': {\n                bag.Young = bagData;\n                break;\n            }\n            case 'Child': {\n                bag.Child = bagData;\n                break;\n            }\n            case 'Infant': {\n                bag.Infant = bagData;\n                break;\n            }\n        }\n\n        return bag;\n    }\n\n    private mapLuggagePerPassenger(\n        bagType: string,\n        options: FlightLuggageOption[],\n        combinable: boolean,\n        passengers: PassengerReq\n    ): BaggageData | null {\n        if (!options) {\n            return null;\n        }\n\n        const result = {\n            maxAllowed: 0,\n            hasPayedOptions: false,\n            hasFreeOptions: false,\n            includedOptions: {\n                bag1: null,\n                bag2: null,\n            },\n        } as BaggageData;\n\n        for (const lug of options) {\n            if (!lug.travelerTypes) {\n                continue;\n            }\n\n            if (lug.prices.listPrice === 0) {\n                if (!result.includedOptions) {\n                    result.hasFreeOptions = true;\n                }\n\n                for (const travelerType of lug.travelerTypes) {\n                    if (travelerType === 'Child' && passengers.childrenAges.length === 0) {\n                        continue;\n                    }\n                    if (travelerType === 'Infant' && passengers.infantAges.length === 0) {\n                        continue;\n                    }\n\n                    if (bagType === 'Cabin bag') {\n                        if (lug.type === FlightLuggageOptionTypes.PERSONALITEM) {\n                            result.includedOptions.bag1 = this.setTravelerBag(\n                                travelerType,\n                                FlightLuggageOptionTypes.PERSONALITEM,\n                                result.includedOptions.bag1,\n                                this.formTitle(lug, bagType),\n                                lug\n                            );\n                        } else {\n                            result.includedOptions.bag2 = this.setTravelerBag(\n                                travelerType,\n                                FlightLuggageOptionTypes.CABIN,\n                                result.includedOptions.bag2,\n                                this.formTitle(lug, bagType),\n                                lug\n                            );\n                        }\n                    } else {\n                        result.includedOptions.bag2 = this.setTravelerBag(\n                            travelerType,\n                            FlightLuggageOptionTypes.CHECKIN,\n                            result.includedOptions.bag2,\n                            this.formTitle(lug, bagType),\n                            lug\n                        );\n                    }\n                }\n\n                continue;\n            }\n\n            if (lug.maxQuantity > result.maxAllowed) {\n                result.maxAllowed = lug.maxQuantity;\n            }\n\n            for (const type of lug.travelerTypes) {\n                if (!combinable) {\n                    lug.combinationText = this.formBagSelectionText(lug);\n                }\n\n                const opt = {\n                    options: [lug],\n                } as TravellerBagOptions;\n\n                switch (type) {\n                    case 'Adult': {\n                        if (!result.Adult) {\n                            result.Adult = opt;\n                        } else {\n                            result.Adult.options.push(lug);\n                        }\n                        break;\n                    }\n                    case 'Young': {\n                        if (!result.Young) {\n                            result.Young = opt;\n                        } else {\n                            result.Young.options.push(lug);\n                        }\n                        break;\n                    }\n                    case 'Child': {\n                        if (!result.Child) {\n                            result.Child = opt;\n                        } else {\n                            result.Child.options.push(lug);\n                        }\n                        break;\n                    }\n                    case 'Infant': {\n                        if (!result.Infant) {\n                            result.Infant = opt;\n                        } else {\n                            result.Infant.options.push(lug);\n                        }\n                        break;\n                    }\n                }\n\n                result.hasPayedOptions = true;\n            }\n        }\n\n        return result;\n    }\n\n    private formTitle(lug: FlightLuggageOption, type: string): string {\n        const bagType = lug.type ? 'FLIGHT.LUGGAGE.' + lug.type : type;\n\n        return this.translateService.instant(bagType);\n    }\n\n    private formBagSelectionText(lug: FlightLuggageOption): string {\n        /*let luggageTypeTxt = '';\n        if (lug.quantity > 1) {\n            luggageTypeTxt = this.translateService.instant(\n                lug.type === FlightLuggageOptionTypes.CABIN ? 'Cabin bag' : 'Checked bags'\n            );\n        } else {\n            luggageTypeTxt = this.translateService.instant(\n                lug.type === FlightLuggageOptionTypes.CABIN ? 'Cabin bag' : 'Checked bag'\n            );\n        }*/\n\n        return (\n            lug.quantity + ' ' + this.translateService.instant(lug.quantity > 1 ? 'bags' : 'bag') + ' ' + lug.weightText\n        );\n    }\n\n    private getTrainLuggages(luggageInfo: any): TrainValueMapping | null {\n        if (!luggageInfo || luggageInfo.length === 0) {\n            return null;\n        }\n\n        const info: { [key: string]: TrainTripLuggage } = {};\n        const baggageKeys: string[] = [];\n        luggageInfo.forEach((lInfo: any) => {\n            lInfo.luggage.forEach((lug: any) => {\n                const key = lug.type;\n                if (key === 'luggage') {\n                    // filtering only the luggages in JSON\n                    if (!info[key]) {\n                        baggageKeys.push(key);\n\n                        info[key] = {\n                            type: lug.type,\n                        } as TrainTripLuggage;\n                    }\n\n                    switch (lInfo.travellerType) {\n                        case 'Adult': {\n                            info[key].Adult = lug.quantity;\n                            break;\n                        }\n                        case 'Child': {\n                            info[key].Child = lug.quantity;\n                            break;\n                        }\n                        case 'Infant': {\n                            info[key].Infant = lug.quantity;\n                            break;\n                        }\n                    }\n                }\n            });\n        });\n\n        return { info, baggageKeys } as TrainValueMapping;\n    }\n\n    // verifyTrainTripLuggages checks if luggages of onward and return trip in trains are equal\n    private verifyTrainTripLuggages(\n        onwardTripLuggage: TrainValueMapping,\n        returnTripLuggage: TrainValueMapping\n    ): CheckoutTrainBaggage {\n        const trainLuggage = {\n            onwardLuggage: [],\n            returnLuggage: [],\n            isRoundTripLuggage: false, // if true, both onward and return luggages are similar\n        } as CheckoutTrainBaggage;\n\n        const checkIfEqual = (\n            onwardInfo: { [key: string]: TrainTripLuggage },\n            returnInfo: { [key: string]: TrainTripLuggage },\n            key: string\n        ) => {\n            let info = false;\n            if (onwardInfo[key] && returnInfo[key]) {\n                info = onwardInfo[key].Adult === returnInfo[key].Adult;\n                if (onwardInfo[key].Child > 0 && returnInfo[key].Child > 0) {\n                    info = onwardInfo[key].Child === returnInfo[key].Child;\n                }\n            }\n            return info;\n        };\n\n        onwardTripLuggage.baggageKeys.forEach((key: string) => {\n            trainLuggage.isRoundTripLuggage = checkIfEqual(onwardTripLuggage.info, returnTripLuggage.info, key);\n            if (onwardTripLuggage.info[key]) {\n                const bagInfo = onwardTripLuggage.info[key];\n                bagInfo.isQuantityDiff = bagInfo.Adult !== bagInfo.Child;\n                trainLuggage.onwardLuggage.push(bagInfo);\n            }\n            if (returnTripLuggage.info[key]) {\n                const bagInfo = returnTripLuggage.info[key];\n                bagInfo.isQuantityDiff = bagInfo.Adult !== bagInfo.Child;\n                trainLuggage.returnLuggage.push(bagInfo);\n            }\n        });\n\n        return trainLuggage;\n    }\n\n    private updateRepeatEmail(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            control.parent?.get('repeatEmailID')?.updateValueAndValidity();\n            return null;\n        };\n    }\n\n    private repeatMailValidator(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const emailID = control.parent?.get('emailID')?.value;\n\n            if (control.valid && emailID && emailID !== '' && control.value !== emailID) {\n                return { EMAIL_DID_NOT_MATCH: true };\n            }\n\n            return null;\n        };\n    }\n\n    private getRoomDisplayName(roomId: string, rooms: Room[]): string {\n        for (const room of rooms) {\n            if (room.id === roomId) {\n                return room.displayName;\n            }\n        }\n        return '';\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}