{"version":3,"file":"default-src_app_modules_results_accommodation_accommodation_module_ts.js","mappings":"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","sources":["./src/app/modules/results/accommodation/accommodation-routing.module.ts","./src/app/modules/results/accommodation/accommodation.component.ts","./src/app/modules/results/accommodation/accommodation.component.html","./src/app/modules/results/accommodation/accommodation.module.ts","./src/app/modules/results/accommodation/components/accommodation-amenities/accommodation-amenities.component.ts","./src/app/modules/results/accommodation/components/accommodation-amenities/accommodation-amenities.component.html","./src/app/modules/results/accommodation/components/accommodation-details/accommodation-details.component.ts","./src/app/modules/results/accommodation/components/accommodation-details/accommodation-details.component.html","./src/app/modules/results/accommodation/components/accommodation-map/accommodation-map.component.ts","./src/app/modules/results/accommodation/components/accommodation-map/accommodation-map.component.html","./src/app/modules/results/accommodation/components/accommodation-nearby-places/accommodation-nearby-places.component.ts","./src/app/modules/results/accommodation/components/accommodation-nearby-places/accommodation-nearby-places.component.html","./src/app/modules/results/accommodation/components/accommodation-recommended/accommodation-recommended.component.ts","./src/app/modules/results/accommodation/components/accommodation-recommended/accommodation-recommended.component.html","./src/app/modules/results/accommodation/components/accommodation-review-list/accommodation-review-list.component.ts","./src/app/modules/results/accommodation/components/accommodation-review-list/accommodation-review-list.component.html","./src/app/modules/results/accommodation/components/accommodation-reviews-popup/accommodation-reviews-popup.component.ts","./src/app/modules/results/accommodation/components/accommodation-reviews-popup/accommodation-reviews-popup.component.html","./src/app/modules/results/accommodation/components/accommodation-rules/accommodation-rules.component.ts","./src/app/modules/results/accommodation/components/accommodation-rules/accommodation-rules.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-additional-info/mob-accommodation-additional-info.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-additional-info/mob-accommodation-additional-info.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-room-details/mob-accommodation-room-details.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-room-details/mob-accommodation-room-details.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-room-offer-cancelation/mob-accommodation-room-offer-cancelation.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-room-offer-cancelation/mob-accommodation-room-offer-cancelation.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-rules/mob-accommodation-rules.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-rules/mob-accommodation-rules.component.html","./src/app/modules/results/accommodation/components/skeletons/acc-detail-review-skeleton-loader/acc-detail-review-skeleton-loader.component.ts","./src/app/modules/results/accommodation/components/skeletons/acc-detail-review-skeleton-loader/acc-detail-review-skeleton-loader.component.html","./src/app/modules/results/accommodation/components/skeletons/accommodation-detail-skeleton-loader/accommodation-detail-skeleton-loader.component.ts","./src/app/modules/results/accommodation/components/skeletons/accommodation-detail-skeleton-loader/accommodation-detail-skeleton-loader.component.html","./src/app/modules/results/accommodation/components/skeletons/accommodation-image-skeleton-loader/accommodation-image-skeleton-loader.component.ts","./src/app/modules/results/accommodation/components/skeletons/accommodation-image-skeleton-loader/accommodation-image-skeleton-loader.component.html","./src/app/modules/results/accommodation/components/skeletons/mob-accommodation-detail-skeleton/mob-accommodation-detail-skeleton.component.ts","./src/app/modules/results/accommodation/components/skeletons/mob-accommodation-detail-skeleton/mob-accommodation-detail-skeleton.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccommodationComponent } from './accommodation.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AccommodationComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AccommodationRoutingModule {}\n","import { Component, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { IAccommodationsCartData } from '@schemas/modules/accommodations/accommodations-cart-data';\nimport { skip, switchMap, takeUntil } from 'rxjs/operators';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\nimport { AccommodationReviewsPopupComponent } from './components/accommodation-reviews-popup/accommodation-reviews-popup.component';\nimport { AccommodationsDataService } from '@services/modules/accommodations/dataservices/accommodations.data.service';\nimport { AccommodationsService } from '@services/modules/accommodations/services/accommodations.service';\nimport { BaseServiceComponent } from '../components/base-service-component/base-service.component';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { Room } from '@schemas/modules/accommodations/room';\n\n@Component({\n    selector: 'tz-accommodation',\n    templateUrl: './accommodation.component.html',\n    styleUrls: ['./accommodation.component.scss'],\n})\nexport class AccommodationComponent extends BaseServiceComponent implements OnInit, OnDestroy {\n    public accommodation: Accommodation | null = null;\n    public accommodationReviews: AccommodationReviews | null | undefined;\n    public cartData: IAccommodationsCartData | undefined;\n    public id: string;\n    public isUserLogged!: boolean;\n    public isHotelInCart = false;\n    public bookingOptions: any = [];\n\n    private curChange!: Subscription;\n\n    constructor(\n        private accommodationsDataService: AccommodationsDataService,\n        private accommodationsService: AccommodationsService,\n        private activeRoute: ActivatedRoute,\n        private userService: UserService,\n        private injector: Injector\n    ) {\n        super(injector);\n        this.isMobile$ = this.screenSizeDetectorService.isMobile;\n        this.id = this.activeRoute.snapshot.params['id'];\n    }\n\n    ngOnInit(): void {\n        this.loadAccommodationData();\n        this.settingsService.selectedLanguageSubject.pipe(skip(1), takeUntil(this.destroy$)).subscribe(() => {\n            this.loadAccommodationData();\n        });\n        this.curChange = this.currencyService.selectedCurrencySubject\n            .pipe(skip(1), takeUntil(this.destroy$))\n            .subscribe(() => {\n                this.loadAccommodationData();\n            });\n        this.isUserLogged = this.userService.IsLogged();\n        this.getCartData();\n    }\n\n    ngOnDestroy(): void {\n        this.curChange?.unsubscribe();\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public onCancelSelection(): void {\n        this.loadAccommodationData();\n    }\n\n    public openReviewsPopup(): void {\n        this.dialogService.openAccommodationReviewsDialog(\n            AccommodationReviewsPopupComponent,\n            this.accommodationReviews\n        );\n    }\n\n    private assignRoomDetails(result: Accommodation): Accommodation {\n        if (!result) {\n            return result;\n        }\n        if (!result.rooms) {\n            result.rooms = [];\n        }\n        const loggedInCustomer = this.userService.getCustomerInformation();\n        const loggedIn = loggedInCustomer && loggedInCustomer.id;\n        const cartData = this.cartService.getSelected(ServiceId.ACC);\n        const hotelSelected =\n            cartData.selectedHotel &&\n            cartData.selectedHotel.id === result.giataID &&\n            cartData.bookingOptions.length > 0;\n        result.rooms.forEach((room: Room) => {\n            room.roomOffers = room.roomOffers.filter((offer) => {\n                const valid = offer.level === 0 || (loggedIn && offer.level === 1) || (!loggedIn && offer.level === 2);\n                if (!valid && hotelSelected) {\n                    // check cart has selected room offer\n                    return cartData.bookingOptions.some(\n                        (option: ICartSelectedItemBookingOption) => offer.id === option.selectedRoom?.roomOfferId\n                    );\n                }\n                return valid;\n            });\n        });\n\n        if (hotelSelected) {\n            let roomsLeft = 0;\n            for (const room of result.rooms) {\n                for (const offer of room.roomOffers) {\n                    roomsLeft += offer.roomsLeft;\n                }\n            }\n            const bookedRooms = cartData.bookingOptions.reduce(\n                (accumulator: number, option: ICartSelectedItemBookingOption) => {\n                    if (CartUtils.isBooked(option.status)) {\n                        accumulator++;\n                    }\n\n                    return accumulator;\n                },\n                0\n            );\n\n            if (bookedRooms > 0 && roomsLeft <= bookedRooms) {\n                this.dialogService.openConfirmationDialog({\n                    title: this.translateService.instant('POPUPS.CONTACT_SUPPORT.TITLE'),\n                    multipleContent: [this.translateService.instant('POPUPS.CONTACT_SUPPORT.MESSAGE')],\n                    confirmBtnTitle: this.translateService.instant('POPUPS.OK'),\n                });\n            }\n        }\n\n        return result;\n    }\n\n    private loadAccommodationData(): void {\n        this.loading = true;\n        const accommodation$ = this.accommodationsService.getAccommodation(this.id);\n\n        const accommodationReviews$ = accommodation$.pipe(\n            switchMap((accommodation: Accommodation) => {\n                this.accommodation = this.assignRoomDetails(accommodation);\n                return this.accommodationsDataService.getAccommodationReviews(accommodation);\n            })\n        );\n\n        accommodationReviews$.pipe(takeUntil(this.destroy$)).subscribe(\n            (accommodationReviews: AccommodationReviews) => {\n                this.accommodationReviews = accommodationReviews;\n                this.loading = false;\n                setTimeout(() => {\n                    this.scrollToServiceContainer();\n                }, 1);\n            },\n            (error) => {\n                const cartData = this.cartService.getCartData(ServiceId.ACC);\n                if (cartData.items.length && CartUtils.hasBooked(cartData.items[0].selectedItem.bookingOptions)) {\n                    //Avoid infinite loop with acc details redirecting to acc list\n                    // and acc list returning to acc details when acc details are in error for whatever reason\n                    this.cartRouterService.goToState(ServiceId.SUMMARY, undefined, false, StateFrom.ACC_DETAILS);\n                } else {\n                    this.cartRouterService.goToState(ServiceId.ACC, undefined, false, StateFrom.ACC_DETAILS);\n                }\n            }\n        );\n    }\n\n    private getCartData(): void {\n        this.cartData = this.accommodationsDataService.getSelectedAccommodationsData();\n        if (this.cartData?.items?.length) {\n            this.bookingOptions = this.cartData.items[0].selectedItem.bookingOptions;\n            this.isHotelInCart = this.id === this.cartData.items[0].selectedItem.hotelCode;\n        }\n    }\n}\n","<div class=\"accommodation-container flex\">\n    <div class=\"accommodations-reviews-container flex\" *ngIf=\"(isMobile$ | async) === false\">\n        <div>\n            <tz-accommodation-review-list\n                [skeletonLoading]=\"loading\"\n                [accommodationReviews]=\"accommodationReviews?.recentReviews\"\n            ></tz-accommodation-review-list>\n        </div>\n    </div>\n\n    <div class=\"accommodation-details-container flex\" *ngIf=\"!loading\">\n        <tz-accommodation-details\n            *ngIf=\"accommodation\"\n            [accommodation]=\"accommodation\"\n            [cartData]=\"isHotelInCart ? cartData : undefined\"\n            [isUserLogged]=\"isUserLogged\"\n            [bookingOptions]=\"bookingOptions\"\n            [accommodationReviews]=\"accommodationReviews\"\n            (openReviewsPopup)=\"openReviewsPopup()\"\n            class=\"flex\"\n        ></tz-accommodation-details>\n    </div>\n    <div class=\"accommodation-details-container flex\" *ngIf=\"loading\">\n        <tz-mob-accommodation-detail-skeleton\n            *ngIf=\"platformService.isMobileDevice$ | async\"\n        ></tz-mob-accommodation-detail-skeleton>\n        <tz-accommodation-detail-skeleton-loader\n            *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n        ></tz-accommodation-detail-skeleton-loader>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { AccommodationComponent } from './accommodation.component';\nimport { AccommodationRoutingModule } from './accommodation-routing.module';\nimport { AccommodationDetailsComponent } from './components/accommodation-details/accommodation-details.component';\nimport { AccommodationReviewListComponent } from './components/accommodation-review-list/accommodation-review-list.component';\nimport { AccommodationReviewsPopupComponent } from './components/accommodation-reviews-popup/accommodation-reviews-popup.component';\nimport { AccommodationImageComponent } from './components/accommodation-image/accommodation-image.component';\nimport { AccommodationGalleryComponent } from './components/accommodation-gallery/accommodation-gallery.component';\nimport { AccommodationMapComponent } from './components/accommodation-map/accommodation-map.component';\nimport { AccommodationRecommendedComponent } from './components/accommodation-recommended/accommodation-recommended.component';\nimport { ResultsCartItemSelectionModule } from '../results-cart-item-selection.module';\nimport { AccommodationAmenitiesComponent } from './components/accommodation-amenities/accommodation-amenities.component';\n// eslint-disable-next-line max-len\nimport { MobAccommodationAdditionalInfoComponent } from './components/mob-accommodation-additional-info/mob-accommodation-additional-info.component';\n// eslint-disable-next-line max-len\nimport { MobAccommodationAmenitiesComponent } from './components/mob-accommodation-amenities/mob-accommodation-amenities.component';\nimport { AccommodationNearbyPlacesComponent } from './components/accommodation-nearby-places/accommodation-nearby-places.component';\n// eslint-disable-next-line max-len\nimport { AccommodationDetailSkeletonLoaderComponent } from './components/skeletons/accommodation-detail-skeleton-loader/accommodation-detail-skeleton-loader.component';\n// eslint-disable-next-line max-len\nimport { AccommodationImageSkeletonLoaderComponent } from './components/skeletons/accommodation-image-skeleton-loader/accommodation-image-skeleton-loader.component';\n// eslint-disable-next-line max-len\nimport { AccDetailReviewSkeletonLoaderComponent } from './components/skeletons/acc-detail-review-skeleton-loader/acc-detail-review-skeleton-loader.component';\n\nimport { MobAccommodationReviewsComponent } from './components/mob-accommodation-reviews/mob-accommodation-reviews.component';\nimport { MobAccommodationRulesComponent } from './components/mob-accommodation-rules/mob-accommodation-rules.component';\nimport { AccommodationRulesComponent } from './components/accommodation-rules/accommodation-rules.component';\n// eslint-disable-next-line max-len\nimport { MobAccommodationNearbyComponent } from './components/mob-accommodation-nearby/mob-accommodation-nearby.component';\nimport { MobAccommodationRoomsComponent } from './components/mob-accommodation-rooms/mob-accommodation-rooms.component';\nimport { MobAccommodationRoomOfferComponent } from './components/mob-accommodation-room-offer/mob-accommodation-room-offer.component';\nimport { MobAccommodationDetailsComponent } from './components/mob-accomodation-details/mob-accommodation-details.component';\nimport { MobAccommodationGuestInfoComponent } from './components/mob-accommodation-guest-info/mob-accommodation-guest-info.component';\n// eslint-disable-next-line max-len\nimport { MobAccommodationPopularFacilitiesComponent } from './components/mob-accomodation-popular-facilities/mob-accommodation-popular-facilities.component';\n// eslint-disable-next-line max-len\nimport { MobAccommodationWhoStaysHereComponent } from './components/mob-accommodation-who-stays-here/mob-accommodation-who-stays-here.component';\nimport { MobAccommodationRatingComponent } from './components/mob-accommodation-rating/mob-accommodation-rating.component';\nimport { MobAccommodationDescriptionComponent } from './components/mob-accommodation-description/mob-accommodation-description.component';\nimport { MobAccommodationGalleryComponent } from './components/mob-accommodation-gallery/mob-accommodation-gallery.component';\n// eslint-disable-next-line max-len\nimport { MobAccommodationImagesCaroselComponent } from './components/mob-accommodation-images-carosel/mob-accommodation-images-carosel.component';\n// eslint-disable-next-line max-len\nimport { MobModalPageLinkBlockComponent } from './components/mob-modal-page-link-block/mob-modal-page-link-block.component';\nimport { MobAccommodationMapComponent } from './components/mob-accommodation-map/mob-accommodation-map.component';\n// eslint-disable-next-line max-len\nimport { MobAccommodationDetailSkeletonComponent } from './components/skeletons/mob-accommodation-detail-skeleton/mob-accommodation-detail-skeleton.component';\nimport { MobAccommodationRoomDetailsComponent } from './components/mob-accommodation-room-details/mob-accommodation-room-details.component';\nimport { MobAccommodationRecommendedComponent } from './components/mob-accommodation-recommended/mob-accommodation-recommended.component';\n// eslint-disable-next-line max-len\nimport { MobAccommodationRoomOfferCancelationComponent } from './components/mob-accommodation-room-offer-cancelation/mob-accommodation-room-offer-cancelation.component';\n@NgModule({\n    declarations: [\n        AccommodationComponent,\n        AccommodationDetailsComponent,\n        AccommodationReviewListComponent,\n        AccommodationReviewsPopupComponent,\n        AccommodationImageComponent,\n        AccommodationGalleryComponent,\n        AccommodationMapComponent,\n        MobAccommodationRoomDetailsComponent,\n        AccommodationRecommendedComponent,\n        AccommodationAmenitiesComponent,\n        MobAccommodationAdditionalInfoComponent,\n        MobAccommodationAmenitiesComponent,\n        AccommodationNearbyPlacesComponent,\n        AccommodationDetailSkeletonLoaderComponent,\n        AccommodationImageSkeletonLoaderComponent,\n        AccDetailReviewSkeletonLoaderComponent,\n        MobAccommodationReviewsComponent,\n        AccommodationRulesComponent,\n        MobAccommodationRecommendedComponent,\n        MobAccommodationRulesComponent,\n        MobAccommodationNearbyComponent,\n        MobAccommodationRoomsComponent,\n        MobAccommodationDetailsComponent,\n        MobAccommodationGuestInfoComponent,\n        MobAccommodationPopularFacilitiesComponent,\n        MobAccommodationWhoStaysHereComponent,\n        MobAccommodationRatingComponent,\n        MobAccommodationDescriptionComponent,\n        MobAccommodationRoomOfferComponent,\n        MobAccommodationRoomOfferCancelationComponent,\n        MobAccommodationGalleryComponent,\n        MobAccommodationImagesCaroselComponent,\n        MobModalPageLinkBlockComponent,\n        MobAccommodationMapComponent,\n        MobAccommodationDetailSkeletonComponent,\n    ],\n    imports: [CommonModule, SharedModule, AccommodationRoutingModule, ResultsCartItemSelectionModule],\n    exports: [\n        AccommodationDetailsComponent,\n        AccommodationReviewListComponent,\n        MobAccommodationDetailsComponent,\n        MobAccommodationGuestInfoComponent,\n        MobAccommodationPopularFacilitiesComponent,\n        MobAccommodationWhoStaysHereComponent,\n        MobModalPageLinkBlockComponent,\n        MobAccommodationRatingComponent,\n        MobAccommodationDescriptionComponent,\n        MobAccommodationRoomOfferComponent,\n        MobAccommodationRoomOfferCancelationComponent,\n        MobAccommodationMapComponent,\n        MobAccommodationNearbyComponent,\n        AccommodationDetailSkeletonLoaderComponent,\n        MobAccommodationDetailSkeletonComponent,\n    ],\n})\nexport class AccommodationModule {}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { AmenityGroups } from '@schemas/modules/accommodations/accommodation-amenity-groups';\n\n@Component({\n    selector: 'tz-accommodation-amenities',\n    templateUrl: './accommodation-amenities.component.html',\n    styleUrls: ['./accommodation-amenities.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccommodationAmenitiesComponent implements OnInit {\n    @Input() amenityGroups: AmenityGroups[] = [];\n\n    public showAllAmenities = false;\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"amenities-groups__title\">\n    {{ 'HOTELS.AMENITIES' | translate }}\n    <span class=\"map-show-more\" (click)=\"showAllAmenities = !showAllAmenities\">\n        {{ 'GENERAL.' + (showAllAmenities ? 'SHOW_LESS' : 'SHOW_ALL') | translate }}\n    </span>\n</div>\n\n<div class=\"amenities-groups__content\" [ngClass]=\"{ 'map-show-all': showAllAmenities }\">\n    <ng-template ngFor let-amenityGroup [ngForOf]=\"amenityGroups\">\n        <div class=\"amenities-groups__amenities-item-title\">{{ amenityGroup.name }}</div>\n\n        <div\n            *ngFor=\"let amenity of amenityGroup.amenities | sortArray: 'description'; let last = last\"\n            class=\"amenities-groups__amenities-item-list-item\"\n            [class.amenities-groups--amenities-item-list-item-last]=\"last\"\n        >\n            • {{ amenity.description }}\n        </div>\n    </ng-template>\n</div>\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Injector,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { AccommodationsDataService } from '@services/modules/accommodations/dataservices/accommodations.data.service';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\nimport { BaseServiceComponent } from '../../../components/base-service-component/base-service.component';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { AccommodationTermsPopupComponent } from '../accommodation-terms-popup/accommodation-terms-popup.component';\nimport { AccommodationsService } from '@services/modules/accommodations/services/accommodations.service';\nimport { DateRangePipe } from '@shared/pipes/date-range.pipe';\nimport { TzDatePipe } from '@shared/pipes/tz-date.pipe';\nimport { MainDialogSize } from '@shared/schemas/dialog.model';\nimport { MobAccommodationAdditionalInfoComponent } from '../mob-accommodation-additional-info/mob-accommodation-additional-info.component';\nimport { MobAccommodationAmenitiesComponent } from '../mob-accommodation-amenities/mob-accommodation-amenities.component';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { MobAccommodationReviewsComponent } from '../mob-accommodation-reviews/mob-accommodation-reviews.component';\nimport { MobAccommodationRulesComponent } from '../mob-accommodation-rules/mob-accommodation-rules.component';\nimport { IAccommodationsCartData } from '@schemas/modules/accommodations/accommodations-cart-data';\nimport { MobAccommodationRoomsComponent } from '../mob-accommodation-rooms/mob-accommodation-rooms.component';\nimport { AccommodationsUtilsService } from '@services/modules/accommodations/utils/accommodations.utils';\nimport { AccommodationDetailsUtilService } from '../../../accommodation-details-util.service';\n// eslint-disable-next-line max-len\nimport { MobAccommodationRoomOfferCancelationComponent } from '../mob-accommodation-room-offer-cancelation/mob-accommodation-room-offer-cancelation.component';\n\n@Component({\n    selector: 'tz-accommodation-details',\n    templateUrl: './accommodation-details.component.html',\n    styleUrls: [\n        './accommodation-details.component.scss',\n        './accommodation-details-map.component.scss',\n        './accommodation-details-booking.component.scss',\n    ],\n    providers: [DateRangePipe, TzDatePipe],\n})\nexport class AccommodationDetailsComponent extends BaseServiceComponent implements OnInit, OnDestroy, AfterViewInit {\n    @ViewChild('serviceBookingConfirmationComponentOfRooms') serviceBookingConfirmationComponentOfRooms?: ElementRef;\n    @Input() accommodation!: Accommodation;\n    @Input() cartData: IAccommodationsCartData | undefined;\n    @Input() accommodationReviews: AccommodationReviews | null | undefined;\n    @Input() bookingOptions: ICartSelectedItemBookingOption[] = [];\n    @Input() isUserLogged!: boolean;\n    @Input() fromTzMap = false;\n    @Input() fromMyTrips = false;\n    @Input() myTripCartData: { cartData: IAccommodationsCartData; paymentCaptureMode: number } | undefined;\n\n    @Output() selectedRoom: EventEmitter<string> = new EventEmitter<string>();\n    @Output() cancelSelection: EventEmitter<void> = new EventEmitter<void>();\n    @Output() openReviewsPopup: EventEmitter<void> = new EventEmitter<void>();\n    @Output() cancel: EventEmitter<string[]> = new EventEmitter<string[]>();\n\n    public readonly maxRoomQuantity = 4;\n    public cartRooms: any = [];\n    public selectedRooms: { [key: number]: any } = {};\n    public confirmableRoom: number | null = null;\n    public descriptionMinLength = 620;\n    public descriptionMaxLimit = 700;\n    public showFullDescription = false;\n    public roomsLeftForSelection = this.maxRoomQuantity;\n    public recommendedSelected = false;\n    public fromHotelsMap = false;\n    public hasBooked = false;\n\n    private cartRoomCount = 0;\n\n    constructor(\n        injector: Injector,\n        private accommodationsDataService: AccommodationsDataService,\n        private accommodationsService: AccommodationsService,\n        private userService: UserService,\n        private accommodationDetailsUtilService: AccommodationDetailsUtilService\n    ) {\n        super(injector);\n        this.isNextSummary = this.nextIsSummary();\n    }\n\n    ngOnInit(): void {\n        this.isMobile$ = this.screenSizeDetectorService.isMobile;\n        this.getCartRooms();\n\n        this.accommodationsService.updateAccInfoToList(this.accommodation);\n        const mapHotel = this.accommodationsService.getMapHotel();\n        this.fromHotelsMap = mapHotel !== undefined;\n        this.checkRoomsSold();\n        this.hasBooked = CartUtils.hasBooked(this.bookingOptions);\n\n        this.handleExtraParams();\n\n        const descLen = this.accommodation.description.length;\n        this.showFullDescription = descLen <= this.descriptionMaxLimit;\n        console.log('Hotel description length: ', descLen);\n    }\n\n    ngAfterViewInit() {\n        this.scrollToConfirmationBlock();\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public onBackToResultsPage(backToMap?: boolean): void {\n        if (!backToMap) {\n            this.accommodationsService.setMapHotel(undefined);\n        }\n\n        this.cartRouterService.goToState(ServiceId.ACC, undefined, false, StateFrom.ACC_DETAILS);\n    }\n\n    public gotoSummary(): void {\n        this.cartRouterService.moveToSummary();\n    }\n\n    public onToggleDescriptionText() {\n        this.showFullDescription = !this.showFullDescription;\n    }\n\n    public onCancelSelection(): void {\n        /// temporary solution\n        this.accommodation.rooms = JSON.parse(JSON.stringify([...this.accommodation.rooms]));\n        this.confirmableRoom = null;\n        this.clearSelectedRooms();\n        this.getCartRooms();\n        this.cancelSelection.emit();\n    }\n\n    public onOpenReviewsPopup(): void {\n        this.openReviewsPopup.emit();\n    }\n\n    public onRoomCountChanged($event: number, index: number) {\n        this.selectedRooms[index] = $event;\n        this.recommendedSelected = false;\n        const roomsQuantity = AccommodationsUtilsService.getSelectedRoomQuantity(this.accommodation.rooms);\n        this.roomsLeftForSelection = this.maxRoomQuantity - roomsQuantity;\n        this.confirmableRoom = null;\n\n        if ($event !== 0) {\n            this.confirmableRoom = index;\n        } else if (roomsQuantity > 0) {\n            for (const pair in this.selectedRooms) {\n                if (this.selectedRooms[pair] !== 0) {\n                    this.confirmableRoom = +pair;\n                }\n            }\n        }\n\n        if (roomsQuantity === 0 && this.cartRoomCount > 0) {\n            this.confirmableRoom = index;\n        }\n        this.scrollToConfirmationBlock();\n    }\n\n    public onAccommodationAddItemToCart(): void {\n        if (this.cartRoomCount > 0 && this.roomsLeftForSelection === this.maxRoomQuantity) {\n            this.removeService(ServiceId.ACC).then(\n                (isRemoved: boolean) => {\n                    console.log('remove success');\n                },\n                (error) => {\n                    console.error(error);\n                }\n            );\n\n            return;\n        }\n\n        if (this.accommodation.broker === 'Hotelbeds') {\n            const rateComments: { comment: string; roomName: string }[] = [];\n            this.accommodation.rooms.forEach((room: Room) => {\n                if (room.roomOffers) {\n                    room.roomOffers.forEach((offer: RoomOption) => {\n                        if (offer.personCount > 0 && offer.rateComments !== '') {\n                            const rateComment = {\n                                roomName: `${room.displayName.toUpperCase()} ${\n                                    offer.personCount > 1 ? 'x ' + offer.personCount : ''\n                                } (${offer.meal.toUpperCase()})`,\n                                comment: offer.rateComments,\n                            };\n                            let avail = false;\n                            rateComments.forEach((rc) => {\n                                if (rc.comment === rateComment.comment) {\n                                    rc.roomName = rc.roomName + ', ' + rateComment.roomName;\n                                    avail = true;\n                                }\n                            });\n\n                            if (!avail) {\n                                rateComments.push(rateComment);\n                            }\n                        }\n                    });\n                }\n            });\n            if (rateComments.length) {\n                this.dialogService\n                    .openConfirmationDialog(\n                        {\n                            confirmBtnTitle: this.translateService.instant('POPUPS.CONTINUE'),\n                            cancelBtnTitle: this.translateService.instant('POPUPS.CANCEL'),\n                            title: this.translateService.instant('POPUPS.RATE_COMMENTS.TITLE'),\n                            multipleContent: [\n                                /*Dummy anchor tag needed avoid the popup content scrolling to the first anchor in the rate comment*/\n                                `<b>${rateComments[0].roomName}</b><a href=''></a>`,\n                                rateComments[0].comment,\n                            ],\n                            containerClass: 'tz-hb-rate-comment',\n                        },\n                        { mainDialogSize: MainDialogSize.LARGE, dialogPanelClasses: ['tz-rate-comment-dialog'] }\n                    )\n                    .afterClosed()\n                    .subscribe((dialogReturn: TzDialogReturn) => {\n                        if (dialogReturn === CONFIRM) {\n                            this.addItem();\n                        }\n                    });\n            }\n        } else {\n            this.addItem();\n        }\n    }\n\n    public addItemToCart(): void {}\n\n    public onRoomMaximumAllowedQuantityReached(): void {\n        this.dialogService.openSnackBar({\n            message: this.translateService.instant('NOTIFS.SELECTION_COUNT_RESTRICTION', {\n                count: this.maxRoomQuantity,\n            }),\n        });\n    }\n\n    public onRecommendedSelected(selected: boolean): void {\n        this.recommendedSelected = selected;\n\n        if (selected) {\n            this.onCancelSelection();\n        }\n    }\n\n    public onSelectRecommendedOffers() {\n        const recommendedRooms: { [key: string]: number } = {};\n        let roomLeftToFind = this.accommodation.numberOfRooms;\n\n        let recOffers = this.accommodation.recommendedRooms;\n        if (this.userService.IsLogged() && this.accommodation.recOffersLoggedIn) {\n            recOffers = this.accommodation.recRoomsLoggedIn;\n        }\n\n        recOffers.forEach((r) => {\n            recommendedRooms[r.offerId] = r.allotment;\n        });\n\n        this.accommodation.rooms.some((room) => {\n            room.roomOffers.some((offer) => {\n                if (recommendedRooms.hasOwnProperty(offer.id)) {\n                    const allotment = recommendedRooms[offer.id];\n                    offer.personCount = allotment;\n                    roomLeftToFind--;\n                }\n\n                return roomLeftToFind === 0;\n            });\n            return roomLeftToFind === 0;\n        });\n\n        this.onAccommodationAddItemToCart();\n    }\n\n    public openTermsModal(roomOption: RoomOption) {\n        const data = {\n            roomCancellation: roomOption.roomCancellation,\n            hasPromotions: roomOption.hasPromotions,\n            discounts: roomOption.discounts,\n            remarks: roomOption.remarks,\n            isPayOnArrival: roomOption.payAt === 'Pay on arrival',\n            checkInDateTime: this.accommodation.checkIn,\n        };\n\n        if (this.platformService.isMobile) {\n            this.modalService.createMainModal(MobAccommodationRoomOfferCancelationComponent, {\n                title: 'HOTELS.TERMS_CONDITIONS',\n                cssClass: 'mob-terms-modal',\n                data: { ...data },\n            });\n        } else {\n            this.dialogService.openMainDialog({\n                component: AccommodationTermsPopupComponent,\n                showCloseBtn: true,\n                title: 'HOTELS.TERMS_CONDITIONS',\n                data: { ...data },\n            });\n        }\n    }\n\n    public showRulesMob(): void {\n        this.modalService.createDetailsPage(MobAccommodationRulesComponent, {\n            data: {\n                accommodation: {\n                    hotelRules: this.accommodation.hotelRules,\n                    name: this.accommodation.name,\n                    checkIn: this.accommodation.checkIn,\n                    checkOut: this.accommodation.checkOut,\n                },\n            },\n            title: 'HOTELS.RULES.TITLE',\n        });\n    }\n\n    public showRoomsMob(): void {\n        this.accommodationDetailsUtilService.selectRecommended = false;\n\n        const openTermsModal$: Subject<RoomOption> = new Subject<RoomOption>();\n        openTermsModal$.pipe(takeUntil(this.destroy$)).subscribe((roomOption: RoomOption) => {\n            this.openTermsModal(roomOption);\n        });\n\n        this.modalService\n            .createDetailsPage(MobAccommodationRoomsComponent, {\n                data: {\n                    accommodation: this.accommodation,\n                    roomsLeftForSelection: this.roomsLeftForSelection,\n                    isUserLogged: this.isUserLogged,\n                    ratings: this.accommodation.ratings,\n                    numberOfNights: this.accommodation.numberOfNights,\n                    openTermsModal$,\n                },\n                title: 'HOTELS.ROOMS',\n            })\n            .then((modal: { data: any }) => {\n                if (modal.data) {\n                    setTimeout(() => {\n                        this.onAccommodationAddItemToCart();\n                    }, 0);\n                }\n            });\n    }\n\n    public showAdditionalInfo(): void {\n        this.modalService.createDetailsPage(MobAccommodationAdditionalInfoComponent, {\n            data: { accommodationAdditionalInfo: this.accommodation.facilities },\n            title: 'HOTELS.ADDITIONAL_INFO',\n        });\n    }\n\n    public showAmenities(): void {\n        this.modalService.createDetailsPage(MobAccommodationAmenitiesComponent, {\n            data: this.accommodation.amenityGroups,\n            title: 'HOTELS.AMENITIES',\n        });\n    }\n\n    private getCartRooms(): void {\n        this.cartRooms = {};\n        const selectedRooms: { [key: string]: number } = {};\n        let cartRoomCount = 0;\n\n        for (const option of this.bookingOptions) {\n            if (!option.selectedRoom || CartUtils.isFailed(option.status)) {\n                continue;\n            }\n\n            const roomId = option.selectedRoom.roomId;\n            if (!this.cartRooms[roomId]) {\n                this.cartRooms[roomId] = [];\n            }\n\n            this.cartRooms[roomId].push(option);\n\n            selectedRooms[roomId] = selectedRooms[roomId] ? selectedRooms[roomId] + 1 : 1;\n            cartRoomCount++;\n            // this.confirmableRoom = this.accommodation.rooms.findIndex((room: Room) => roomId === room.id);\n        }\n\n        if (cartRoomCount > 0) {\n            let offersPresent = 0;\n            for (const [i, room] of this.accommodation.rooms.entries()) {\n                if (selectedRooms[room.id]) {\n                    this.selectedRooms[i] = selectedRooms[room.id];\n                    offersPresent += selectedRooms[room.id];\n                }\n            }\n\n            if (offersPresent > 0) {\n                this.roomsLeftForSelection = this.maxRoomQuantity - offersPresent;\n                this.cartRoomCount = offersPresent;\n            }\n        }\n    }\n\n    private addItem(): void {\n        this.accommodationsDataService.addAccommodationToCart(this.accommodation).subscribe(\n            (response: ICart) => {\n                this.confirmableRoom = null;\n                this.accommodationsService.setMapHotel(undefined);\n                this.userSearchService.searchCheckDep(ServiceId.ACC, this.isNextSummary, false, false, true);\n            },\n            (error: any) => {\n                /* if (failure.status === 406) { // Rate recheck\nalertBox.prompt(\"Room price has been changed. Please select rooms again!\");\n$scope.roomDetails = {};\n} else if (failure.status === 304) {\n// user cancel action\nreturn\n} else if (failure.status !== 410) {\nif (failure.data) {\nalertBox.prompt(failure.data.message)\n} else {\nalertBox.prompt(failure.error)\n}\n}\ntrazlerAPI.HdlHTTPError(failure, $scope.updateAccommodationScreen);*/\n            }\n        );\n    }\n\n    private nextIsSummary(): boolean {\n        const state = this.router.getCurrentNavigation()?.extras?.state;\n        const from = state ? state['from'] : '';\n        return from === StateFrom.SUMMARY || from === StateFrom.TAB;\n    }\n\n    private clearSelectedRooms(): void {\n        for (const room of this.accommodation.rooms) {\n            room.roomOffers = room.roomOffers.map((roomOffer: RoomOption) => ({\n                ...roomOffer,\n                count: 0,\n            }));\n        }\n        this.roomsLeftForSelection = this.maxRoomQuantity;\n    }\n\n    private scrollToConfirmationBlock() {\n        requestAnimationFrame(() => {\n            this.scrollToElement(this.serviceBookingConfirmationComponentOfRooms, { block: 'end' });\n        });\n    }\n\n    private checkRoomsSold(): void {\n        if (!this.accommodation.noRoom || this.fromTzMap) {\n            return;\n        }\n\n        if (this.fromHotelsMap) {\n            this.dialogService\n                .openConfirmationDialog({\n                    title: this.translateService.instant('POPUPS.HOTEL_SOLD_OUT.TITLE'),\n                    multipleContent: [this.translateService.instant('POPUPS.HOTEL_SOLD_OUT.MESSAGE')],\n                    confirmBtnTitle: this.translateService.instant('POPUPS.HOTEL_SOLD_OUT.CONTINUE'),\n                    cancelBtnTitle: this.translateService.instant('POPUPS.HOTEL_SOLD_OUT.BACK'),\n                    icon: { name: 'no-hotel-dialog', iconStyle: { 'width.px': 105.89, 'height.px': 96.4 } },\n                })\n                .afterClosed()\n                .subscribe((confirm) => {\n                    if (confirm) {\n                        return;\n                    }\n\n                    this.onBackToResultsPage();\n                    return;\n                });\n        } else {\n            this.dialogService.openSnackBar({\n                message: this.translateService.instant('NOTIFS.ACC_NOT_AVAILABLE'),\n            });\n        }\n    }\n\n    private handleExtraParams() {\n        if (this.platformService.isMobileDevice) {\n            const state = history.state;\n            console.log('state');\n            console.log(state);\n\n            if (state && state.extra) {\n                for (const extraAction in state.extra) {\n                    if (state.extra.hasOwnProperty(extraAction)) {\n                        switch (extraAction) {\n                            case 'changeTickets':\n                            case 'changeRoom':\n                                this.showRoomsMob();\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","<div class=\"accommodation-details\" [ngClass]=\"{ 'from-tz-map': fromTzMap, 'tz-booking-hotel': fromMyTrips }\">\n    <div\n        *ngIf=\"\n            (platformService.isMobileDevice$ | async) === false && (!fromMyTrips || (fromMyTrips && isMobile$ | async))\n        \"\n        class=\"accommodation-details__actions-block map-hidden\"\n    >\n        <div class=\"accommodation-details__btns-container\">\n            <button\n                *ngIf=\"hasBooked\"\n                (click)=\"gotoSummary()\"\n                class=\"accommodation-details__back-to-results-btn\"\n                data-test=\"hotels-room-back-to-basket-btn\"\n            >\n                {{ 'HOTELS.BACK_TO_BASKET' | translate }}\n            </button>\n            <button\n                *ngIf=\"!hasBooked\"\n                (click)=\"onBackToResultsPage()\"\n                class=\"accommodation-details__back-to-results-btn\"\n                data-test=\"hotels-room-back-to-result-btn\"\n            >\n                {{ 'HOTELS.BACK_TO_RESULTS' | translate }}\n            </button>\n            <button\n                *ngIf=\"fromHotelsMap && !hasBooked\"\n                (click)=\"onBackToResultsPage(true)\"\n                class=\"accommodation-details__back-to-results-btn\"\n                data-test=\"hotels-room-back-to-result-btn\"\n            >\n                {{ 'HOTELS.BACK_TO_MAP' | translate }}\n            </button>\n        </div>\n\n        <div class=\"accommodation-details__btns-container\">\n            <button\n                *ngIf=\"isMobile$ | async\"\n                (click)=\"onOpenReviewsPopup()\"\n                class=\"accommodation-details__guest-review-btn\"\n            >\n                {{ 'HOTELS.REVIEWS.GUEST_REVIEW' | translate }}\n            </button>\n            <button\n                class=\"accommodation-details__view-rooms-btn\"\n                data-test=\"hotel-room-view-rooms-btn\"\n                (click)=\"scrollTo('ACC_DETAILS_ROOMS')\"\n            >\n                {{ 'HOTELS.View_rooms' | translate }}\n            </button>\n        </div>\n    </div>\n\n    <div\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n        class=\"tz-block-with-border\"\n        data-test=\"accommodation-details-block\"\n    >\n        <div class=\"flex align-center accommodation-details__title-block\">\n            <div>\n                <div class=\"flex align-center map-inline\">\n                    <h3 class=\"accommodation-details__main-title\">{{ accommodation.name }}</h3>\n\n                    <div class=\"accommodation-details__stars\">\n                        <tz-stars [starWidth]=\"12\" [starHeight]=\"12\" [starCount]=\"accommodation.star\"></tz-stars>\n                    </div>\n                </div>\n\n                <div\n                    *ngIf=\"accommodation.address !== ''\"\n                    class=\"accommodation-details__address-title\"\n                    (click)=\"scrollTo('ACC_DETAILS_MAP', fromMyTrips ? 20 : 78)\"\n                >\n                    {{ accommodation.address }}\n                    <span class=\"map-hidden\" data-test=\"show-on-map-button\"\n                        >&nbsp;&mdash;&nbsp;{{ 'GENERAL.SHOW_ON_MAP' | translate }}</span\n                    >\n                </div>\n            </div>\n\n            <div class=\"flex align-center ml-a mb-a\">\n                <div class=\"accommodation-details__rate-text map-hidden\">\n                    {{ accommodation.ratings.overAllRatingsFloat | ratingToText | translate }}\n                </div>\n\n                <div\n                    class=\"tz-rate-btn tz-rate-btn--hover\"\n                    data-test=\"accommodation-ratings\"\n                    (click)=\"scrollTo('ACC_DETAILS_RATINGS', fromMyTrips ? 31 : 78)\"\n                >\n                    {{ accommodation.ratings.overAllRatingsFloat | number: '1.1-1' }}\n                </div>\n            </div>\n        </div>\n\n        <tz-accommodation-image\n            class=\"map-hidden\"\n            [code]=\"accommodation.code\"\n            [giataId]=\"accommodation.giataID\"\n            [imageProvider]=\"accommodation.imageProvider\"\n            [hotelName]=\"accommodation.name\"\n        ></tz-accommodation-image>\n        <img\n            class=\"hotel-main-image map-only\"\n            [tzHotelImage]=\"accommodation.imageUrl\"\n            [provider]=\"accommodation.imageProvider\"\n        />\n\n        <div class=\"room-amenities\">\n            <div *ngFor=\"let amenity of accommodation.amenities | sortArray: 'ordinal'\" class=\"room-amenities-item\">\n                <div class=\"inline-flex\">\n                    <tz-icon [icon]=\"amenity.icon\"></tz-icon>\n                </div>\n\n                <span [attr.data-test]=\"'hotel-room-convenience-' + amenity.description | translate\">\n                    {{ 'HOTELS.ICONS.' + amenity.description | translate }}\n                </span>\n            </div>\n        </div>\n    </div>\n\n    <div\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n        class=\"accommodation-details__description-block tz-block-with-border\"\n        data-test=\"hotel-accommodation-details\"\n    >\n        <div class=\"accommodation-details__description-info-block\">\n            <div class=\"accommodation-details__description-title\">Description</div>\n\n            <div class=\"accommodation-details__description-text\">\n                <span\n                    [innerHTML]=\"\n                        accommodation.description.substring(\n                            0,\n                            showFullDescription ? accommodation.description.length : descriptionMinLength\n                        )\n                    \"\n                ></span>\n                <span *ngIf=\"!showFullDescription && accommodation.description.length > descriptionMinLength\">...</span>\n                <span\n                    *ngIf=\"accommodation.description.length > descriptionMinLength\"\n                    (click)=\"onToggleDescriptionText()\"\n                    class=\"accommodation-details__description-text-btn\"\n                    data-test=\"hotel-accommodation-details-read-more-less-btn\"\n                >\n                    {{ 'HOTELS.' + (showFullDescription ? 'READ_LESS' : 'READ_MORE') | translate }}\n                </span>\n            </div>\n\n            <div class=\"accommodation-details__description-room-details-block map-hidden\">\n                <div\n                    *ngFor=\"\n                        let roomDetail of accommodation.roomDetails.summary | filterArray: { sentiment: 'positive' }\n                    \"\n                    class=\"accommodation-details__description-room-detail room-detail\"\n                >\n                    {{ 'HOTELS.OLERY.' + roomDetail.name.toLowerCase() | translate }}\n                </div>\n\n                <div\n                    *ngFor=\"\n                        let roomDetail of accommodation.roomDetails.summary | filterArray: { sentiment: 'negative' }\n                    \"\n                    class=\"accommodation-details__description-room-detail room-detail room-detail-negative\"\n                >\n                    {{ 'HOTELS.OLERY.' + roomDetail.name.toLowerCase() | translate }}\n                </div>\n            </div>\n        </div>\n\n        <div class=\"accommodation-details__guests-like-block\" *ngIf=\"accommodation.hotelFacilities\">\n            <div class=\"accommodation-details__guests-like-title\">{{ 'HOTELS.REVIEWS.GUESTS_LIKED' | translate }}</div>\n            <ul class=\"accommodation-details__guests-like-list\">\n                <li\n                    *ngFor=\"let hotelFacilitie of accommodation.hotelFacilities | slice: 0:6\"\n                    class=\"accommodation-details__guests-like-list-item\"\n                >\n                    • {{ 'HOTELS.OLERY.' + hotelFacilitie.title.toLowerCase() | translate }}\n                </li>\n            </ul>\n        </div>\n\n        <div class=\"accommodation-details__description-room-details-block map-only\">\n            <div\n                *ngFor=\"let roomDetail of accommodation.roomDetails.summary | filterArray: { sentiment: 'positive' }\"\n                class=\"accommodation-details__description-room-detail room-detail\"\n            >\n                {{ 'HOTELS.OLERY.' + roomDetail.name.toLowerCase() | translate }}\n            </div>\n\n            <div\n                *ngFor=\"let roomDetail of accommodation.roomDetails.summary | filterArray: { sentiment: 'negative' }\"\n                class=\"accommodation-details__description-room-detail room-detail room-detail-negative\"\n            >\n                {{ 'HOTELS.OLERY.' + roomDetail.name.toLowerCase() | translate }}\n            </div>\n        </div>\n    </div>\n\n    <span id=\"ACC_DETAILS_ROOMS\"></span>\n    <div *ngIf=\"!accommodation.noRoom && (platformService.isMobileDevice$ | async) === false\" class=\"map-hidden\">\n        <div\n            *ngIf=\"accommodation.numberOfRooms > 1 && !hasBooked && !cartData\"\n            class=\"accommodation-details__recommended-block tz-block-with-border\"\n        >\n            <tz-accommodation-recommended\n                [accommodation]=\"accommodation\"\n                [selectRecommended]=\"recommendedSelected\"\n                (recommendedSelected)=\"onRecommendedSelected($event)\"\n                (openTermsModal)=\"openTermsModal($event)\"\n                (scrollTo)=\"scrollTo($event, 76)\"\n            ></tz-accommodation-recommended>\n        </div>\n        <div class=\"service-submission-container recommended-block\" *ngIf=\"recommendedSelected\">\n            <tz-service-booking-confirmation\n                (cancelSelection)=\"onRecommendedSelected(false)\"\n                (submitBooking)=\"onSelectRecommendedOffers()\"\n            ></tz-service-booking-confirmation>\n        </div>\n    </div>\n\n    <div\n        *ngIf=\"!accommodation.noRoom && (platformService.isMobileDevice$ | async) === false\"\n        class=\"block-separator map-hidden\"\n    >\n        <tz-block-separator>{{ 'HOTELS.ROOMS' | translate }}</tz-block-separator>\n    </div>\n\n    <div *ngIf=\"!accommodation.noRoom && !platformService.isMobileDevice\" class=\"map-hidden\">\n        <tz-selected-accommodations\n            *ngIf=\"fromMyTrips && myTripCartData\"\n            [accommodationCartData]=\"myTripCartData.cartData\"\n            [paymentCaptureMode]=\"myTripCartData.paymentCaptureMode\"\n            [fromBookings]=\"true\"\n            [detailPage]=\"true\"\n            (cancel)=\"cancel.emit($event)\"\n        >\n        </tz-selected-accommodations>\n        <div\n            *ngFor=\"let room of accommodation.rooms; let i = index\"\n            [id]=\"room.id\"\n            class=\"accommodation-details__rooms-block\"\n        >\n            <tz-accommodation-room\n                [roomsLeftForSelection]=\"roomsLeftForSelection\"\n                [room]=\"room\"\n                [isUserLogged]=\"isUserLogged\"\n                [ratings]=\"accommodation.ratings\"\n                [numberOfNights]=\"accommodation.numberOfNights\"\n                (roomCountChanged)=\"onRoomCountChanged($event, i)\"\n                (roomMaxSelectedCountReached)=\"onRoomMaximumAllowedQuantityReached()\"\n                [roomBookings]=\"cartRooms[room.id] ? cartRooms[room.id] : []\"\n                (openTermsModal)=\"openTermsModal($event)\"\n            ></tz-accommodation-room>\n\n            <div\n                class=\"service-submission-container\"\n                *ngIf=\"this.confirmableRoom === i\"\n                #serviceBookingConfirmationComponentOfRooms\n            >\n                <tz-service-booking-confirmation\n                    (cancelSelection)=\"onCancelSelection()\"\n                    (submitBooking)=\"onAccommodationAddItemToCart()\"\n                ></tz-service-booking-confirmation>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"ACC_DETAILS_RATINGS\" class=\"block-separator\" *ngIf=\"(platformService.isMobileDevice$ | async) === false\">\n        <tz-block-separator>{{ 'HOTELS.ABOUT' | translate }}</tz-block-separator>\n    </div>\n\n    <div\n        class=\"tz-block-with-border accommodation-reviews-block\"\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n        data-test=\"hotel-room-rating-block\"\n    >\n        <div class=\"accommodation-reviews-block__rating map-only\">\n            <div class=\"rating-detail\">\n                {{ 'HOTELS.POPULAR_WITH_GUESTS_FROM' | translate }} {{ accommodation.city }} <br />\n                <span *ngIf=\"accommodation.ratings.overAllReviewCount > 0\">\n                    {{\n                        'HOTELS.REVIEWS.REVIEW_BASED_ON'\n                            | translate: { reviewsCount: accommodation.ratings.overAllReviewCount }\n                    }}\n                </span>\n            </div>\n            <div class=\"tz-rate-btn\">\n                {{ accommodation.ratings.overAllRatingsFloat | number: '1.1-1' }}\n            </div>\n        </div>\n\n        <div\n            *ngIf=\"(platformService.isMobileDevice$ | async) === false && accommodationReviews\"\n            class=\"visitors-per-country\"\n        >\n            <div class=\"accommodation-reviews-block__title\">\n                {{ 'HOTELS.STAYS_HERE' | translate }}\n            </div>\n\n            <div\n                *ngFor=\"let review of accommodationReviews.visitorsPerCountry?.slice(0, 5)\"\n                class=\"flex align-center visitors-per-country__item\"\n            >\n                <div [class]=\"'visitors-per-country__flag fflag ff-sm fflag-' + review.countryCode\"></div>\n                <div class=\"visitors-per-country__country\">&#160;•&#160;{{ review.countryName }}</div>\n                <div class=\"visitors-per-country__percentage\">&#160;•&#160;{{ review.percentage | number }}%</div>\n            </div>\n\n            <div\n                *ngIf=\"accommodationReviews.visitorsPerCountry?.length === 0\"\n                class=\"visitors-per-country__no-guest-review flex align-center\"\n            >\n                <tz-svg-icon icon=\"warning\" [styles]=\"{ 'width.px': 15 }\"></tz-svg-icon>\n                {{ 'HOTELS.NO_GUEST_REVIEW' | translate }}\n            </div>\n        </div>\n\n        <div class=\"category-ratings\" *ngIf=\"(platformService.isMobileDevice$ | async) === false\">\n            <div class=\"accommodation-reviews-block__title\">\n                {{ 'HOTELS.REVIEWS.RATING' | translate }}\n\n                {{\n                    accommodation.ratings.overAllRatingsFloat !== 0\n                        ? (accommodation.ratings.overAllRatingsFloat | number: '1.1-1')\n                        : ''\n                }}\n                {{ accommodation.ratings.overAllRatingsFloat | ratingToText | translate }}\n            </div>\n\n            <div\n                *ngFor=\"let categoryRating of accommodation.ratings.categoryRatings\"\n                class=\"category-ratings__item\"\n                [style.width]=\"categoryRating.rating * 10 + '%'\"\n            >\n                <span class=\"category-ratings__rating-text\">{{ categoryRating.ratingStr | number: '1.1-1' }}</span>\n                <span>{{ 'HOTELS.OLERY.RATING.' + categoryRating.category | translate }}</span>\n            </div>\n        </div>\n    </div>\n\n    <div\n        *ngIf=\"\n            (platformService.isMobileDevice$ | async) === false &&\n            accommodation.amenityGroups &&\n            accommodation.amenityGroups.length > 0\n        \"\n        class=\"accommodation-details__amenities-block tz-block-with-border\"\n        data-test=\"hotel-room-amenities-block\"\n    >\n        <tz-accommodation-amenities [amenityGroups]=\"accommodation.amenityGroups\"></tz-accommodation-amenities>\n    </div>\n\n    <div\n        id=\"ACC_DETAILS_MAP\"\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n        class=\"accommodation-details__mapboxgl-map-block tz-block-with-border map-hidden\"\n        data-test=\"hotel-map-block\"\n    >\n        <tz-accommodation-map\n            [accommodation]=\"accommodation\"\n            [searchInfo]=\"\n                fromMyTrips && myTripCartData ? myTripCartData.cartData.items[0].searchReq.searchData : undefined\n            \"\n        ></tz-accommodation-map>\n\n        <tz-accommodation-nearby-places\n            *ngIf=\"accommodationReviews\"\n            [accommodationReviews]=\"accommodationReviews\"\n        ></tz-accommodation-nearby-places>\n    </div>\n\n    <div\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n        class=\"accommodation-details__hotel-rules-block tz-block-with-border map-hidden\"\n        data-test=\"hotel-rules-block\"\n    >\n        <div class=\"accommodation-details__hotel-rules-title\">{{ 'HOTELS.RULES.TITLE' | translate }}</div>\n\n        <tz-accommodation-rules\n            [hotelName]=\"accommodation.name\"\n            [checkIn]=\"accommodation.checkIn\"\n            [checkOut]=\"accommodation.checkOut\"\n            [hotelRules]=\"accommodation.hotelRules\"\n        ></tz-accommodation-rules>\n    </div>\n\n    <div\n        *ngIf=\"\n            (platformService.isMobileDevice$ | async) === false &&\n            accommodation.facilities &&\n            accommodation.facilities.length > 0\n        \"\n        class=\"accommodation-details__additional-information-block tz-block-with-border map-hidden\"\n        data-test=\"hotel-additional-information-block\"\n    >\n        <div class=\"accommodation-details__additional-information-title\">\n            {{ 'HOTELS.ADDITIONAL_INFO' | translate }}\n        </div>\n\n        <ng-container *ngFor=\"let facilities of accommodation.facilities\">\n            <p *ngIf=\"facilities.code !== '105'\">\n                {{ facilities.description }}\n            </p>\n        </ng-container>\n    </div>\n\n    <ng-container *ngIf=\"platformService.isMobileDevice$ | async\">\n        <div class=\"mob-accommodation-main-container\">\n            <tz-mob-accommodation-details\n                [accommodation]=\"accommodation\"\n                [accommodationReviews]=\"accommodationReviews!\"\n                (showRooms)=\"showRoomsMob()\"\n            ></tz-mob-accommodation-details>\n\n            <tz-mob-accommodation-guest-info [accommodation]=\"accommodation\"></tz-mob-accommodation-guest-info>\n            <tz-mob-accommodation-room-details\n                [roomDetails]=\"accommodation.roomDetails.summary\"\n            ></tz-mob-accommodation-room-details>\n            <tz-mob-accommodation-popular-facilities\n                [accommodation]=\"accommodation\"\n            ></tz-mob-accommodation-popular-facilities>\n\n            <tz-mob-accommodation-who-stays-here\n                [accommodationReviews]=\"accommodationReviews\"\n            ></tz-mob-accommodation-who-stays-here>\n\n            <tz-mob-modal-page-link-block\n                [accommodation]=\"accommodation\"\n                [accommodationReviews]=\"accommodationReviews\"\n            ></tz-mob-modal-page-link-block>\n\n            <tz-mob-accommodation-rating [accommodation]=\"accommodation\"></tz-mob-accommodation-rating>\n\n            <tz-mob-accommodation-description [accommodation]=\"accommodation\"></tz-mob-accommodation-description>\n\n            <div class=\"mob-modal-page-link-block emenities-btn\">\n                <tz-mob-modal-page-link (clicked)=\"showAmenities()\">{{\n                    'HOTELS.AMENITIES' | translate\n                }}</tz-mob-modal-page-link>\n            </div>\n\n            <tz-mob-accommodation-nearby\n                *ngIf=\"accommodationReviews\"\n                [accommodationReviews]=\"accommodationReviews\"\n            ></tz-mob-accommodation-nearby>\n\n            <div class=\"mob-modal-page-link-block\">\n                <tz-mob-modal-page-link (clicked)=\"showRulesMob()\">\n                    {{ 'HOTELS.RULES.TITLE' | translate }}\n                </tz-mob-modal-page-link>\n            </div>\n\n            <div *ngIf=\"accommodation.facilities && accommodation.facilities.length > 0\">\n                <tz-mob-modal-page-link (clicked)=\"showAdditionalInfo()\">\n                    {{ 'HOTELS.ADDITIONAL_INFO' | translate }}\n                </tz-mob-modal-page-link>\n            </div>\n\n            <div class=\"rooms-btn__wrapper tz-fixed-bottom\" *ngIf=\"!fromMyTrips\">\n                <div class=\"tz-btn tz-btn-primary\" data-mob=\"accommodation-show-rooms-btn\" (click)=\"showRoomsMob()\">\n                    {{ 'HOTELS.View_rooms' | translate }}\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ViewChild, ElementRef, HostListener } from '@angular/core';\nimport { GeneralSettings } from '@core/constants/general-settings';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { LngLat, Map, FitBoundsOptions, LngLatBoundsLike, LngLatBounds, ScaleControl } from 'mapbox-gl';\nimport { MapMarkers } from '@core/constants/mapbox-gl-const';\nimport { ISearchData } from '@schemas/modules/search/search';\n\n@Component({\n    selector: 'tz-accommodation-map',\n    templateUrl: './accommodation-map.component.html',\n    styleUrls: ['./accommodation-map.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccommodationMapComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n    @Input() searchInfo!: ISearchData | void;\n\n    @ViewChild('mapBoxContainer') mapBoxContainer?: ElementRef;\n\n    public mapStyle = GeneralSettings.mapbox.mapStyle;\n    public mapboxRef!: Map;\n    public mapExpanded = false;\n    public locationInfo = {\n        hotelName: '',\n        searchType: '',\n        distance: 0.0,\n    };\n    public markers: {\n        lngLat: LngLat;\n        marker: string;\n    }[] = [];\n    public fitBounds!: LngLatBoundsLike;\n    public fitBoundsOptions: FitBoundsOptions = {\n        padding: { top: 30, bottom: 30, left: 350, right: 250 },\n    };\n\n    constructor(private searchDataService: SearchDataService) {}\n\n    @HostListener('document:click', ['$event'])\n    onClick(event: MouseEvent) {\n        let targetElement = event.target as HTMLElement;\n        let outsideClick = true;\n\n        do {\n            if (targetElement.tagName === 'TZ-ACCOMMODATION-MAP') {\n                outsideClick = false;\n                break;\n            }\n\n            targetElement = targetElement.parentNode as HTMLElement;\n        } while (targetElement);\n\n        if (outsideClick) {\n            this.disableMapInteractions();\n        } else {\n            this.enableMapInteractions();\n        }\n    }\n\n    ngOnInit() {\n        this.setHotelMarkers();\n    }\n\n    public onMapLoad(map: Map): void {\n        this.mapboxRef = map;\n\n        const scale = new ScaleControl({\n            maxWidth: 80,\n            unit: 'metric',\n        });\n        this.mapboxRef.addControl(scale);\n        this.disableMapInteractions();\n    }\n\n    public toggleMapSize(): void {\n        if (this.mapBoxContainer) {\n            this.mapExpanded = !this.mapExpanded;\n            this.mapBoxContainer.nativeElement.style.height = (this.mapExpanded ? 370 : 210) + 'px'; // set height\n            this.mapboxRef.resize();\n        }\n    }\n\n    public zoomMap(zoomin = false): void {\n        this.mapboxRef.setZoom(this.mapboxRef.getZoom() + (zoomin ? 0.5 : -0.5));\n    }\n\n    private setHotelMarkers(): void {\n        this.markers.push({\n            lngLat: new LngLat(\n                Number(this.accommodation.location.longitude),\n                Number(this.accommodation.location.latitude)\n            ),\n            marker: MapMarkers.PURPLE,\n        });\n\n        if (this.accommodation.aerialDistance && this.accommodation.aerialDistance > 0) {\n            if (!this.searchInfo) {\n                this.searchInfo = this.searchDataService.getSearchData(ServiceId.ACC);\n            }\n\n            if (this.searchInfo && this.searchInfo.address) {\n                this.markers.push({\n                    lngLat: new LngLat(\n                        Number(this.searchInfo.address.longitude),\n                        Number(this.searchInfo.address.latitude)\n                    ),\n                    marker: MapMarkers.ORANGE,\n                });\n\n                this.locationInfo = {\n                    hotelName: this.accommodation.name,\n                    searchType: this.searchInfo.address.cityName === '' ? 'SEARCH_POINT' : 'CITY_CENTER',\n                    distance: this.accommodation.aerialDistance,\n                };\n            }\n        }\n\n        if (this.markers.length === 1) {\n            this.fitBoundsOptions.maxZoom = 15;\n        }\n\n        const latLngBounds = new LngLatBounds();\n        for (const marker of this.markers) {\n            latLngBounds.extend([marker.lngLat.lng, marker.lngLat.lat]);\n        }\n        this.fitBounds = latLngBounds;\n    }\n\n    private disableMapInteractions(): void {\n        if (this.mapboxRef) {\n            this.mapboxRef.scrollZoom.disable();\n            this.mapboxRef.boxZoom.disable();\n            this.mapboxRef.dragRotate.disable();\n            this.mapboxRef.dragPan.disable();\n            this.mapboxRef.keyboard.disable();\n            this.mapboxRef.doubleClickZoom.disable();\n            this.mapboxRef.touchZoomRotate.disable();\n        }\n    }\n\n    private enableMapInteractions(): void {\n        if (this.mapboxRef) {\n            this.mapboxRef.scrollZoom.enable();\n            this.mapboxRef.boxZoom.enable();\n            this.mapboxRef.dragRotate.enable();\n            this.mapboxRef.dragPan.enable();\n            this.mapboxRef.keyboard.enable();\n            this.mapboxRef.doubleClickZoom.enable();\n            this.mapboxRef.touchZoomRotate.enable();\n        }\n    }\n}\n","<div class=\"accommodation-map-container\" #mapBoxContainer [ngClass]=\"{ expanded: mapExpanded }\">\n    <mgl-map\n        [style]=\"mapStyle\"\n        [zoom]=\"[12]\"\n        [fitBounds]=\"fitBounds\"\n        [fitBoundsOptions]=\"fitBoundsOptions\"\n        (mapLoad)=\"onMapLoad($event)\"\n    >\n        <mgl-marker *ngFor=\"let marker of markers\" [lngLat]=\"marker.lngLat\">\n            <tz-icon class=\"marker-icon\" [icon]=\"marker.marker\"></tz-icon>\n        </mgl-marker>\n    </mgl-map>\n    <div class=\"hotel-loc-panel\" *ngIf=\"locationInfo.distance !== 0\">\n        <div class=\"loc-label hotel\">\n            <span>{{ locationInfo.hotelName }}</span>\n        </div>\n        <div class=\"loc-label distance-line\">{{ locationInfo.distance | tzDistance }}</div>\n        <div class=\"loc-label search-point\">\n            <span>{{ 'HOTELS.' + locationInfo.searchType | translate }}</span>\n        </div>\n    </div>\n    <ng-container *ngIf=\"mapboxRef\">\n        <div class=\"map-action-btn expand-shrink-btn\" (click)=\"toggleMapSize()\"></div>\n        <div class=\"zoom-in-out\">\n            <div class=\"map-action-btn zoom-out\" (click)=\"zoomMap()\"></div>\n            <div class=\"map-action-btn zoom-in\" (click)=\"zoomMap(true)\"></div>\n        </div>\n    </ng-container>\n</div>\n","import { Component, Input, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-accommodation-nearby-places',\n    templateUrl: './accommodation-nearby-places.component.html',\n    styleUrls: ['./accommodation-nearby-places.component.scss'],\n})\nexport class AccommodationNearbyPlacesComponent implements AfterViewInit {\n    @ViewChild('pointOfInterest', { read: ElementRef, static: false }) pointOfInterest!: ElementRef;\n    @ViewChild('placeToEat', { read: ElementRef, static: false }) placeToEat!: ElementRef;\n    @Input() accommodationReviews!: AccommodationReviews;\n\n    public showAll = true;\n    public totalLines = 0;\n\n    constructor(public platformService: PlatformService) {}\n\n    ngAfterViewInit(): void {\n        const lines = (el: HTMLDivElement): number => {\n            if (!el) {\n                return 0;\n            }\n\n            const lineHeight = 24;\n            return el.offsetHeight / lineHeight;\n        };\n\n        this.totalLines = Math.max(lines(this.pointOfInterest?.nativeElement), lines(this.placeToEat?.nativeElement));\n        this.showAll = false;\n    }\n}\n","<div class=\"acc-nearby-container\">\n    <div class=\"acc-nearby\" *ngIf=\"accommodationReviews.nearbyAirports.length > 0\">\n        <div class=\"body-2-semibold acc-nearby__title\" translate=\"HOTELS.AIRPORTS\"></div>\n        <div class=\"body-2-semibold acc-nearby__text\">\n            <ng-container *ngFor=\"let airport of accommodationReviews.nearbyAirports; let first = first\">\n                <span *ngIf=\"!first\">, </span>{{ airport.name }} •\n                <span class=\"distance\">{{ airport.distance | tzDistance }}</span>\n            </ng-container>\n        </div>\n    </div>\n    <ng-container\n        *ngIf=\"\n            accommodationReviews.nearbyAttractions &&\n            (accommodationReviews.nearbyAttractions.length > 0 || accommodationReviews.nearbyRestaurants.length > 0)\n        \"\n    >\n        <div\n            *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n            class=\"nearby-title\"\n            translate=\"HOTELS.NEARBY\"\n        ></div>\n\n        <div class=\"nearby-options\" [ngClass]=\"{ 'limit-nearby-options': !showAll }\">\n            <div class=\"acc-nearby\" *ngIf=\"accommodationReviews.nearbyAttractions.length > 0\">\n                <div class=\"body-2-semibold acc-nearby__title\" translate=\"HOTELS.POINTS_OF_INTEREST\"></div>\n                <div class=\"body-2-semibold acc-nearby__text\" #pointOfInterest>\n                    <ng-container *ngFor=\"let place of accommodationReviews.nearbyAttractions; let first = first\">\n                        <span *ngIf=\"!first\">, </span>{{ place.name }} •\n                        <span class=\"distance\">{{ place.distance | tzDistance }}</span>\n                    </ng-container>\n                </div>\n            </div>\n            <div class=\"acc-nearby\" *ngIf=\"accommodationReviews.nearbyRestaurants.length > 0\">\n                <div class=\"body-2-semibold acc-nearby__title\" translate=\"HOTELS.PLACES_TO_EAT\"></div>\n                <div class=\"body-2-semibold acc-nearby__text\" #placeToEat>\n                    <ng-container *ngFor=\"let place of accommodationReviews.nearbyRestaurants; let first = first\">\n                        <span *ngIf=\"!first\">, </span>{{ place.name }} •\n                        <span class=\"distance\">{{ place.distance | tzDistance }}</span>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"(platformService.isMobileDevice$ | async) === false\">\n            <a class=\"show-more-btn\" (click)=\"showAll = !showAll\" *ngIf=\"totalLines > 2\">\n                {{ 'GENERAL.' + (showAll ? 'SHOW_LESS' : 'SHOW_MORE') | translate }}\n            </a>\n        </div>\n    </ng-container>\n</div>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Accommodation, RecommendedTzRooms } from '@schemas/modules/accommodations/accommodation';\nimport { AccommodationCheapestPrice } from '@schemas/modules/accommodations/accommodation-cheapest-price.model';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-accommodation-recommended',\n    templateUrl: './accommodation-recommended.component.html',\n    styleUrls: ['./accommodation-recommended.component.scss'],\n})\nexport class AccommodationRecommendedComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n    @Input() selectRecommended = false;\n\n    @Output() recommendedSelected = new EventEmitter<boolean>();\n    @Output() openTermsModal: EventEmitter<RoomOption> = new EventEmitter<RoomOption>();\n    @Output() scrollTo: EventEmitter<string> = new EventEmitter<string>();\n\n    public recommendedRooms: RecommendedTzRooms[] = [];\n    public cheapestPrice!: AccommodationCheapestPrice;\n    public taxInfo = '';\n    public recommendedTitle = '';\n\n    constructor(\n        private translateService: TranslateService,\n        public userService: UserService,\n        public platformService: PlatformService\n    ) {}\n\n    ngOnInit() {\n        this.initializeRecommendedComponent();\n    }\n\n    public toggleSelection(): void {\n        this.selectRecommended = !this.selectRecommended;\n        this.recommendedSelected.emit(this.selectRecommended);\n    }\n\n    public roomCapacity(capacity: number) {\n        return new Array(capacity);\n    }\n\n    public onOpenTermsModal(roomOption: RoomOption) {\n        this.openTermsModal.emit(roomOption);\n    }\n\n    public scrollToRoom(roomId: string): void {\n        this.scrollTo.emit(roomId);\n    }\n\n    private checkShowTerms(roomOption: RoomOption): boolean {\n        return (\n            roomOption.roomCancellation.otherPolicies.length > 0 ||\n            roomOption.roomCancellation.cancellationPolicy === 'Non-refundable' ||\n            (roomOption.roomCancellation.isFree && roomOption.roomCancellation.endDateTime !== '') ||\n            roomOption.payAt === 'Pay on arrival' ||\n            (roomOption.discounts.length > 0 &&\n                (roomOption.packaging ? this.userService.IsLogged() : !roomOption.packaging))\n        );\n    }\n\n    private newRoomInfo(room: Room, offer: RoomOption, allotment: number): RecommendedTzRooms {\n        return {\n            roomId: room.id,\n            name: room.displayName,\n            image: room.images ? room.images[0] : '',\n            allotment,\n            offer,\n            capacity: offer.capacity * allotment,\n            showTerms: this.checkShowTerms(offer),\n        } as RecommendedTzRooms;\n    }\n\n    private initializeRecommendedComponent(): void {\n        this.cheapestPrice = this.accommodation.cheapestPrice;\n        this.taxInfo = this.accommodation.taxInfo;\n\n        const numberOfGuests = this.accommodation.numberOfGuests;\n        const txt = this.translateService.instant('HOTELS.RECOMMENDED_FOR');\n        const personTxt = this.translateService.instant(numberOfGuests > 1 ? 'TRAVELLER.PERSONS' : 'TRAVELLER.PERSON');\n        this.recommendedTitle = `${txt} ${numberOfGuests} ${personTxt}`;\n\n        const recommendedRooms: { [key: string]: number } = {};\n        let roomLeftToFind = this.accommodation.numberOfRooms;\n\n        let recOffers = this.accommodation.recommendedRooms;\n        if (this.userService.IsLogged() && this.accommodation.recOffersLoggedIn) {\n            recOffers = this.accommodation.recRoomsLoggedIn;\n            this.cheapestPrice = this.accommodation.recOffersLoggedIn.cheapestPrice;\n            this.taxInfo = this.accommodation.recOffersLoggedIn.taxInfo;\n        }\n\n        recOffers.forEach((r) => {\n            recommendedRooms[r.offerId] = r.allotment;\n        });\n\n        this.accommodation.rooms.some((room) => {\n            room.roomOffers.some((offer) => {\n                if (recommendedRooms.hasOwnProperty(offer.id)) {\n                    const allotment = recommendedRooms[offer.id];\n                    this.recommendedRooms.push(this.newRoomInfo(room, offer, allotment));\n\n                    roomLeftToFind--;\n                }\n\n                return roomLeftToFind === 0;\n            });\n            return roomLeftToFind === 0;\n        });\n    }\n}\n","<div *ngIf=\"(platformService.isMobileDevice$ | async) === false; else recommendedRoomsMobile\" class=\"recommended-rooms\">\n    <div class=\"recommended-rooms__content\">\n        <div class=\"title\">{{ recommendedTitle }}</div>\n        <div class=\"room-offer\" *ngFor=\"let room of recommendedRooms\">\n            <div class=\"room-offer__img-conatiner pointer\" (click)=\"scrollToRoom(room.roomId)\">\n                <img [tzHotelImage]=\"room.image\" [provider]=\"accommodation.imageProvider\" />\n            </div>\n            <div class=\"room-offer__infos\">\n                <div class=\"offer-name pointer\" (click)=\"scrollToRoom(room.roomId)\">\n                    {{ room.name }} <span *ngIf=\"room.allotment > 1\">x {{ room.allotment }}</span>\n                </div>\n                <div class=\"offer-info green-color\" *ngIf=\"room.offer.hasPromotions\">\n                    {{ 'HOTELS.' + (userService.IsLogged() ? 'TZ_EXCLUSIVE_OFFER' : 'TZ_SPECIAL_OFFER') | translate }}\n                </div>\n                <div\n                    class=\"offer-info\"\n                    *ngIf=\"room.offer.meal\"\n                    [ngClass]=\"{\n                        'green-color': room.offer.mealTypeCode !== 'nomeal' && room.offer.mealTypeCode !== 'RO'\n                    }\"\n                >\n                    {{ room.offer.meal }}\n                </div>\n                <div\n                    class=\"offer-info\"\n                    [ngClass]=\"{\n                        'green-color': room.offer.roomCancellation.cancellationPolicy === 'Refundable'\n                    }\"\n                >\n                    {{\n                        room.offer.roomCancellation.messageKey\n                            | translate: { date: room.offer.roomCancellation.endDateTime | tzDate: 'mediumDate' }\n                    }}\n                </div>\n                <div *ngIf=\"room.showTerms\" (click)=\"onOpenTermsModal(room.offer)\" class=\"offer-info tz-purple-link\">\n                    {{ 'HOTELS.TERMS_CONDITIONS' | translate }}\n                </div>\n            </div>\n            <div class=\"room-offer__capacity-container\">\n                <ng-container *ngIf=\"room.capacity <= 4\">\n                    <ng-container *ngFor=\"let room of roomCapacity(room.offer.capacity)\">\n                        <tz-icon class=\"capacity-icon\" icon=\"guest-16\"></tz-icon>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"room.capacity > 4\">\n                    <tz-icon class=\"capacity-icon\" icon=\"guest-16\"></tz-icon>\n                    <tz-icon class=\"multiplayer-icon\" icon=\"Guest-Multiple\"></tz-icon>\n                    <a>{{ room.capacity }}</a>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <div class=\"recommended-price-block\">\n        <div class=\"price-block-options\" data-test=\"hotel-price-block-info\">\n            <div>\n                {{ accommodation.numberOfNights }}\n                {{ 'GENERAL.' + (accommodation.numberOfNights > 1 ? 'nights' : 'night') | translate }}\n            </div>\n            <div>\n                {{ accommodation.numberOfRooms }}\n                {{ (accommodation.numberOfRooms > 1 ? 'HOTELS.ROOMS' : 'HOTELS.ROOM') | translate }},\n                {{ accommodation.numberOfGuests }}\n                {{ 'TRAVELLER.' + (accommodation.numberOfGuests > 1 ? 'PERSONS' : 'PERSON') | translate }}\n            </div>\n            <div>{{ accommodation.taxInfo | translate }}</div>\n        </div>\n        <div class=\"recommended-price\" data-test=\"hotel-room-recommended-price\">\n            {{ cheapestPrice.listPrice | tzCurrency: cheapestPrice.listPriceCur }}\n        </div>\n        <button\n            class=\"select-btn recommended-select\"\n            data-test=\"hotel-recommended-room-select-btn\"\n            [ngClass]=\"{ selected: selectRecommended }\"\n            (click)=\"toggleSelection()\"\n        >\n            {{ 'GENERAL.' + (selectRecommended ? 'SELECTED' : 'SELECT') | translate }}\n        </button>\n    </div>\n</div>\n\n<ng-template #recommendedRoomsMobile>\n    <div class=\"recommended-rooms\">\n        <div class=\"title\">{{ recommendedTitle }}</div>\n        <div class=\"recommended-rooms__content\">\n            <div class=\"room-offer\" *ngFor=\"let room of recommendedRooms\">\n                <div class=\"room-offer__infos\">\n                    <div class=\"offer-name pointer\" (click)=\"scrollToRoom(room.roomId)\">\n                        {{ room.name }} <span *ngIf=\"room.allotment > 1\">x {{ room.allotment }}</span>\n                    </div>\n                    <div class=\"offer-info green-color\" *ngIf=\"room.offer.hasPromotions\">\n                        {{\n                            'HOTELS.' + (userService.IsLogged() ? 'TZ_EXCLUSIVE_OFFER' : 'TZ_SPECIAL_OFFER') | translate\n                        }}\n                    </div>\n                    <div class=\"room-offer__capacity-wrapper\">\n                        <div class=\"room-offer__capacity-container\">\n                            <ng-container *ngIf=\"room.capacity <= 4\">\n                                <ng-container *ngFor=\"let room of roomCapacity(room.offer.capacity)\">\n                                    <tz-icon class=\"capacity-icon\" icon=\"guest-16\"></tz-icon>\n                                </ng-container>\n                            </ng-container>\n                            <ng-container *ngIf=\"room.capacity > 4\">\n                                <tz-icon class=\"capacity-icon\" icon=\"guest-16\"></tz-icon>\n                                <tz-icon class=\"multiplayer-icon\" icon=\"Guest-Multiple\"></tz-icon>\n                                <a>{{ room.capacity }}</a>\n                            </ng-container>\n                        </div>\n                        <div\n                            class=\"offer-info\"\n                            *ngIf=\"room.offer.meal\"\n                            [ngClass]=\"{\n                                'green-color': room.offer.mealTypeCode !== 'nomeal' && room.offer.mealTypeCode !== 'RO'\n                            }\"\n                        >\n                            {{ room.offer.meal }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"offer-info\"\n                        [ngClass]=\"{\n                            'green-color': room.offer.roomCancellation.cancellationPolicy === 'Refundable'\n                        }\"\n                    >\n                        {{\n                            room.offer.roomCancellation.messageKey\n                                | translate: { date: room.offer.roomCancellation.endDateTime | tzDate: 'mediumDate' }\n                        }}\n                    </div>\n                    <div\n                        *ngIf=\"room.showTerms\"\n                        class=\"offer-info__wrapper__T-C\"\n                        data-mob=\"room-offer-wrapper-cancelation-policy\"\n                        (click)=\"onOpenTermsModal(room.offer)\"\n                    >\n                        {{ 'HOTELS.TERMS_CONDITIONS' | translate }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"price-container\">\n            <div class=\"price-container__block\">\n                <span class=\"price-container__price\">\n                    {{ cheapestPrice.listPrice | tzCurrency: cheapestPrice.listPriceCur }}\n                </span>\n                <div class=\"price-container__per-room-info\">\n                    <span>\n                        {{ accommodation.numberOfNights }}\n                        {{ 'GENERAL.' + (accommodation.numberOfNights > 1 ? 'nights' : 'night') | translate }}\n                    </span>\n                    <span>\n                        {{ accommodation.numberOfRooms }}\n                        {{ (accommodation.numberOfRooms > 1 ? 'HOTELS.ROOMS' : 'HOTELS.ROOM') | translate }},\n                        {{ accommodation.numberOfGuests }}\n                        {{ 'TRAVELLER.' + (accommodation.numberOfGuests > 1 ? 'PERSONS' : 'PERSON') | translate }}\n                    </span>\n                    <span>{{ accommodation.taxInfo | translate }}</span>\n                </div>\n            </div>\n        </div>\n        <button\n            class=\"room-offer-select-btn\"\n            data-mob=\"room-option-on-select-room\"\n            (click)=\"toggleSelection()\"\n            [ngClass]=\"{ 'room-selected': selectRecommended }\"\n        >\n            {{ 'GENERAL.' + (selectRecommended ? 'SELECTED' : 'SELECT') | translate }}\n        </button>\n        <div class=\"mob-main-modal-header-bottom-divider\"></div>\n    </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { AccommodationRecentReview } from '@schemas/modules/accommodations/accommodation-reviews.model';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-accommodation-review-list',\n    templateUrl: './accommodation-review-list.component.html',\n    styleUrls: ['./accommodation-review-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccommodationReviewListComponent implements OnInit {\n    @Input() skeletonLoading = false;\n    @Input() accommodationReviews: AccommodationRecentReview[] | null | undefined;\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit() {}\n}\n","<div class=\"accommodation-reviews\">\n    <div *ngIf=\"!platformService.isMobileDevice\" class=\"accommodation-reviews__title\">\n        {{ 'HOTELS.REVIEWS.RECENT' | translate }}\n    </div>\n\n    <div *ngIf=\"!platformService.isMobileDevice\" class=\"accommodation-reviews__text\">\n        {{ 'HOTELS.REVIEWS.FROM_WEB' | translate }}\n    </div>\n\n    <ng-container *ngIf=\"!skeletonLoading && !platformService.isMobileDevice\">\n        <div *ngFor=\"let review of accommodationReviews\" class=\"accommodation-review\">\n            <div class=\"flex accommodation-review__date-block\">\n                <div class=\"accommodation-review__date\">{{ review.reviewDate | tzDate: 'mediumDate' }}</div>\n                <div class=\"accommodation-review__rating\">{{ review.rating | number: '1.1-1' }}</div>\n            </div>\n\n            <div *ngIf=\"review.countryName && review.countryCode\">\n                <div [class]=\"'accommodation-review__flag fflag ff-sm fflag-' + review.countryCode\"></div>\n                <span class=\"accommodation-review__county-name\">{{ review.countryName }}</span>\n            </div>\n\n            <div\n                class=\"accommodation-review__text\"\n                [class.accommodation-review--text-mt]=\"!(review.countryName && review.countryCode)\"\n            >\n                {{ review.reviewText }}\n            </div>\n        </div>\n    </ng-container>\n    <div *ngIf=\"skeletonLoading\">\n        <tz-acc-detail-review-skeleton-loader> </tz-acc-detail-review-skeleton-loader>\n    </div>\n</div>\n","import { Component, Inject, Input } from '@angular/core';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'tz-accommodation-reviews-popup',\n    templateUrl: './accommodation-reviews-popup.component.html',\n    styleUrls: ['./accommodation-reviews-popup.component.scss'],\n})\nexport class AccommodationReviewsPopupComponent {\n    public accommodationReviews: AccommodationReviews | null | undefined;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private mdDialogRef: MatDialogRef<AccommodationReviewsPopupComponent>\n    ) {\n        this.accommodationReviews = data.accommodationReviews;\n    }\n\n    public onClose(): void {\n        this.mdDialogRef.close();\n    }\n}\n","<div class=\"accommodation-reviews-popup-block flex\">\n    <div class=\"close-btn\" (click)=\"onClose()\">\n        <tz-svg-icon icon=\"close-button\" [styles]=\"{ 'width.px': 14, 'height.px': 14 }\"></tz-svg-icon>\n    </div>\n\n    <div *ngIf=\"accommodationReviews\" class=\"accommodation-reviews-block\">\n        <tz-accommodation-review-list\n            [accommodationReviews]=\"accommodationReviews.recentReviews\"\n        ></tz-accommodation-review-list>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { HotelRules } from '@schemas/modules/accommodations/accommodation';\n\n@Component({\n    selector: 'tz-accommodation-rules',\n    templateUrl: './accommodation-rules.component.html',\n    styleUrls: ['./accommodation-rules.component.scss'],\n})\nexport class AccommodationRulesComponent implements OnInit {\n    @Input() hotelName!: string;\n    @Input() checkIn!: string;\n    @Input() checkOut!: string;\n    @Input() hotelRules!: HotelRules;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"accommodation-details__hotel-rules-description-block\">\n    <div class=\"accommodation-details__hotel-rules-description-icon\">\n        <tz-icon className=\"accommodation-details__hotel-rules-icon\" [icon]=\"'check-in'\"></tz-icon>\n    </div>\n    <div class=\"accommodation-details__hotel-rules-description-text\">\n        {{ 'HOTELS.RULES.CHECK_IN_FROM' | translate }} {{ checkIn | tzDate: 'shortTime' }}\n    </div>\n</div>\n\n<div class=\"accommodation-details__hotel-rules-description-block\">\n    <div class=\"accommodation-details__hotel-rules-description-icon\">\n        <tz-icon className=\"accommodation-details__hotel-rules-icon\" [icon]=\"'check-out'\"></tz-icon>\n    </div>\n    <div class=\"accommodation-details__hotel-rules-description-text\">\n        {{ 'HOTELS.RULES.CHECK_OUT_UNTIL' | translate }} {{ checkOut | tzDate: 'shortTime' }}\n    </div>\n</div>\n\n<div class=\"accommodation-details__hotel-rules-policy-desc-block\">\n    <div\n        *ngFor=\"let policyDescription of hotelRules.policyDescriptions\"\n        class=\"accommodation-details__hotel-rules-policy-desc-item\"\n    >\n        <div class=\"accommodation-details__hotel-rules-policy-desc-title\">{{ policyDescription.title }}</div>\n        <div\n            *ngFor=\"let description of policyDescription.descriptions\"\n            class=\"accommodation-details__hotel-rules-policy-desc-content\"\n            [innerHTML]=\"description\"\n        ></div>\n    </div>\n</div>\n\n<div class=\"accommodation-details__hotel-rules-description-block-desc\">\n    <div class=\"accommodation-details__hotel-rules-description-icon\">\n        <tz-icon className=\"accommodation-details__hotel-rules-icon\" [icon]=\"'cards-accepted'\"></tz-icon>\n    </div>\n    <div class=\"accommodation-details__hotel-rules-description-text-content\">\n        <div class=\"accommodation-details__hotel-rules-description-title\">\n            {{ 'HOTELS.RULES.CANCEL_PRE_PAY_TITLE' | translate }}\n        </div>\n\n        <div class=\"accommodation-details__hotel-rules-description-block-text\">\n            {{ 'HOTELS.RULES.CANCEL_PRE_PAY_BODY' | translate }}\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"hotelRules.cardsAcceptAtHotel\" class=\"accommodation-details__hotel-rules-description-block-desc\">\n    <div class=\"accommodation-details__hotel-rules-description-icon\">\n        <tz-icon className=\"accommodation-details__hotel-rules-icon\" [icon]=\"'cancellation-prepayment'\"></tz-icon>\n    </div>\n\n    <div class=\"accommodation-details__hotel-rules-description-text-content\">\n        <div class=\"accommodation-details__hotel-rules-description-title\">\n            {{ 'HOTELS.RULES.CARD_ACCEPTED' | translate }}\n        </div>\n        <div class=\"accommodation-details__hotel-rules-description-block-text\">\n            {{ hotelName }} {{ 'HOTELS.RULES.CARD_ACCEPTED_BODY1' | translate }} {{ hotelRules.cardsAcceptAtHotel }}.\n            {{ hotelName }}\n            {{ 'HOTELS.RULES.CARD_ACCEPTED_BODY2' | translate }}\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccommodationFacilities } from '@schemas/modules/accommodations/accommodation-facilities';\n\n@Component({\n    selector: 'tz-mob-accommodation-additional-info',\n    templateUrl: './mob-accommodation-additional-info.component.html',\n    styleUrls: ['./mob-accommodation-additional-info.component.scss'],\n})\nexport class MobAccommodationAdditionalInfoComponent implements OnInit {\n    public accommodationAdditionalInfo!: AccommodationFacilities[];\n    private data!: { accommodationAdditionalInfo: AccommodationFacilities[] };\n\n    constructor() {}\n\n    ngOnInit() {\n        this.accommodationAdditionalInfo = this.data.accommodationAdditionalInfo;\n    }\n}\n","<div class=\"accommodation-additional-container\">\n    <div class=\"accommodation-additional-info\">\n        <ng-container *ngFor=\"let facilities of accommodationAdditionalInfo\">\n            <p *ngIf=\"facilities.code !== '105'\">\n                {{ facilities.description }}\n            </p>\n        </ng-container>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AccommodationRoomDetailsSummary } from '@schemas/modules/accommodations/accommodation-room-details.model';\n\n@Component({\n    selector: 'tz-mob-accommodation-room-details',\n    templateUrl: './mob-accommodation-room-details.component.html',\n    styleUrls: ['./mob-accommodation-room-details.component.scss'],\n})\nexport class MobAccommodationRoomDetailsComponent implements OnInit {\n    @Input() roomDetails!: AccommodationRoomDetailsSummary[];\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"accommodation-room-details\" *ngIf=\"roomDetails.length\">\n    <div class=\"accommodation-room-details__title\">{{ 'HOTELS.SUMMARY' | translate }}</div>\n\n    <div class=\"accommodation-room-details__description-room-details-block map-hidden\">\n        <div\n            *ngFor=\"let roomDetail of roomDetails | filterArray: { sentiment: 'positive' }\"\n            class=\"accommodation-room-details__description-room-detail room-detail room-detail-positive\"\n        >\n            <span class=\"text\">\n                {{ 'HOTELS.OLERY.' + roomDetail.name | translate }}\n            </span>\n        </div>\n\n        <div\n            *ngFor=\"let roomDetail of roomDetails | filterArray: { sentiment: 'negative' }\"\n            class=\"accommodation-room-details__description-room-detail room-detail room-detail-negative\"\n        >\n            <span class=\"text\">\n                {{ 'HOTELS.OLERY.' + roomDetail.name | translate }}\n            </span>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { RoomOptionDiscounts, RoomOptionRemarks } from '@schemas/modules/accommodations/room-option';\nimport { Cancellation } from '@schemas/modules/core/cancelation';\nimport { TzCurrencyPipe } from '@shared/pipes/tz-currency.pipe';\nimport { TzDatePipe } from '@shared/pipes/tz-date.pipe';\n\n@Component({\n    selector: 'tz-mob-accommodation-room-offer-cancelation',\n    templateUrl: './mob-accommodation-room-offer-cancelation.component.html',\n    styleUrls: ['./mob-accommodation-room-offer-cancelation.component.scss'],\n})\nexport class MobAccommodationRoomOfferCancelationComponent implements OnInit {\n    @Input() data!: {\n        roomCancellation: Cancellation;\n        hasPromotions: boolean;\n        discounts: RoomOptionDiscounts[];\n        remarks: RoomOptionRemarks[];\n        isPayOnArrival: boolean;\n        checkInDateTime: string;\n    };\n    public otherPolicies: { msg: string }[] = [];\n    public policyMsg = '';\n\n    constructor(\n        private translateService: TranslateService,\n        private datePipe: TzDatePipe,\n        private tzCurrencyPipe: TzCurrencyPipe\n    ) {}\n\n    ngOnInit() {\n        this.otherPolicies = this.getOtherPolicies();\n        this.policyMsg = this.getPoliceMsg();\n    }\n\n    getPoliceMsg(): string {\n        const policy = this.data.roomCancellation;\n        let policyMsg = '';\n        if (!policy) {\n            return policyMsg;\n        }\n        const isRefundable = policy.cancellationPolicy === 'Refundable';\n        const info: { date?: string; time?: string } = this.formatDate(policy.endDateTime);\n\n        if (!isRefundable || policy.isFree) {\n            policyMsg = this.translateService.instant(`${policy.messageKey}_Msg`, info);\n        }\n\n        return policyMsg;\n    }\n\n    getOtherPolicies(): { msg: string }[] {\n        const policies = this.data.roomCancellation.otherPolicies;\n        const checkInDateTime = this.data.checkInDateTime;\n\n        const otherPoliciesArr: { msg: string }[] = [];\n        if (!Array.isArray(policies)) {\n            return otherPoliciesArr;\n        }\n\n        policies.forEach((policy, i) => {\n            let date = policy.startDateTime;\n            let msg = 'CANCELLATION.PolicyMsg';\n            if (i === 0 && !this.data.roomCancellation.isFree) {\n                date = policy.endDateTime && policy.endDateTime !== '' ? policy.endDateTime : checkInDateTime;\n                msg = 'CANCELLATION.RefundablePolicyMsg';\n            }\n\n            const price = this.tzCurrencyPipe.transform(policy.price.listPrice, policy.price.listPriceCur);\n            const info = {\n                price,\n                ...this.formatDate(date),\n            };\n            otherPoliciesArr.push({\n                msg: this.translateService.instant(msg, info),\n            });\n        });\n\n        return otherPoliciesArr;\n    }\n\n    formatDate(dateTime: string): { date: string; time: string } {\n        const dateTimeRes: { date: string; time: string } = { date: '', time: '' };\n\n        if (dateTime) {\n            const date = this.datePipe.transform(dateTime, 'medium');\n            dateTimeRes.date = date\n                ? `${this.datePipe.transform(dateTime, 'mediumDate')} ${this.datePipe.transform(dateTime, 'shortTime')}`\n                : '';\n        }\n\n        return dateTimeRes;\n    }\n}\n","<div class=\"mob-accommodation-room-offer-cancelation\">\n    <div *ngIf=\"data.hasPromotions\">\n        <div *ngFor=\"let discount of data.discounts\">\n            <p>{{ discount.name }}</p>\n        </div>\n\n        <div *ngFor=\"let remark of data.remarks\">\n            <p>\n                {{ remark.Name }}\n            </p>\n\n            <p *ngIf=\"remark.content !== ''\">\n                {{ remark.content }}\n            </p>\n        </div>\n    </div>\n\n    <p *ngIf=\"policyMsg\" [innerHTML]=\"policyMsg | safeHtml\"></p>\n\n    <div *ngFor=\"let otherPolice of otherPolicies\">\n        <p [innerHTML]=\"otherPolice.msg | safeHtml\"></p>\n    </div>\n\n    <p *ngIf=\"data.isPayOnArrival\">\n        {{ 'HOTELS.PayOnArrivalMsg' | translate }}\n    </p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HotelRules } from '@schemas/modules/accommodations/accommodation';\n\n@Component({\n    selector: 'tz-mob-accommodation-rules',\n    templateUrl: './mob-accommodation-rules.component.html',\n    styleUrls: ['./mob-accommodation-rules.component.scss'],\n})\nexport class MobAccommodationRulesComponent implements OnInit {\n    public data!: { accommodation: { name: string; hotelRules: HotelRules; checkIn: string; checkOut: string } };\n    public accommodation!: { name: string; hotelRules: HotelRules; checkIn: string; checkOut: string };\n\n    constructor() {}\n\n    ngOnInit() {\n        this.accommodation = this.data.accommodation;\n    }\n}\n","<div class=\"mob-accommodation-details\">\n    <div class=\"mob-accommodation-details__wrapper\">\n        <div class=\"mob-accommodation-details__wrapper_info\">\n            <div class=\"mob-accommodation-details__hotel-rules-info-block flex\">\n                <div class=\"mob-accommodation-details__hotel-rules-description-icon flex align-center\">\n                    <tz-icon className=\"mob-accommodation-details__hotel-rules-icon\" [icon]=\"'check-in'\"></tz-icon>\n                    <div class=\"mob-accommodation-details__hotel-rules-description-text\">\n                        {{ 'HOTELS.RULES.CHECK_IN_FROM' | translate }} {{ accommodation.checkIn | tzDate: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"mob-accommodation-details__hotel-rules-info-block mb-125 flex\">\n                <div class=\"mob-accommodation-details__hotel-rules-description-icon flex flex-center\">\n                    <tz-icon className=\"mob-accommodation-details__hotel-rules-icon\" [icon]=\"'check-out'\"></tz-icon>\n                    <div class=\"mob-accommodation-details__hotel-rules-description-text\">\n                        {{ 'HOTELS.RULES.CHECK_OUT_UNTIL' | translate }}\n                        {{ accommodation.checkOut | tzDate: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"mob-accommodation-details__hotel-rules-policy-desc-block\">\n                <div\n                    *ngFor=\"let policyDescription of accommodation.hotelRules.policyDescriptions\"\n                    class=\"mob-accommodation-details__hotel-rules-policy-desc-item\"\n                >\n                    <div class=\"mob-accommodation-details__title\">{{ policyDescription.title }}</div>\n                    <div\n                        *ngFor=\"let description of policyDescription.descriptions\"\n                        class=\"mob-accommodation-details__hotel-rules-policy-desc-content\"\n                        [innerHTML]=\"description\"\n                    ></div>\n                </div>\n            </div>\n\n            <div class=\"mob-accommodation-details__hotel-rules-description-block-desc\">\n                <div class=\"mob-accommodation-details__hotel-rules-description-icon flex\">\n                    <tz-icon className=\"accommodation-details__hotel-rules-icon\" [icon]=\"'cards-accepted'\"></tz-icon>\n                    <div class=\"mob-accommodation-details__rules\">\n                        {{ 'HOTELS.RULES.CANCEL_PRE_PAY_TITLE' | translate }}\n                    </div>\n                </div>\n                <div class=\"mob-accommodation-details__hotel-rules-description-text-content\">\n                    <div class=\"mob-accommodation-details__hotel-rules-description-block-text\">\n                        {{ 'HOTELS.RULES.CANCEL_PRE_PAY_BODY' | translate }}\n                    </div>\n                </div>\n            </div>\n\n            <div\n                *ngIf=\"accommodation.hotelRules.cardsAcceptAtHotel\"\n                class=\"mob-accommodation-details__hotel-rules-description-block-desc\"\n            >\n                <div class=\"mob-accommodation-details__hotel-rules-description-icon flex\">\n                    <tz-icon\n                        className=\"mob-accommodation-details__hotel-rules-icon\"\n                        [icon]=\"'cancellation-prepayment'\"\n                    ></tz-icon>\n                    <div class=\"mob-accommodation-details__rules\">\n                        {{ 'HOTELS.RULES.CARD_ACCEPTED' | translate }}\n                    </div>\n                </div>\n\n                <div class=\"mob-accommodation-details__hotel-rules-description-text-content\">\n                    <div class=\"mob-accommodation-details__hotel-rules-description-block-text\">\n                        {{ accommodation.name }} {{ 'HOTELS.RULES.CARD_ACCEPTED_BODY1' | translate }}\n                        {{ accommodation.hotelRules.cardsAcceptAtHotel }}.\n                        {{ accommodation.name }}\n                        {{ 'HOTELS.RULES.CARD_ACCEPTED_BODY2' | translate }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-acc-detail-review-skeleton-loader',\n    templateUrl: './acc-detail-review-skeleton-loader.component.html',\n    styleUrls: ['./acc-detail-review-skeleton-loader.component.scss'],\n})\nexport class AccDetailReviewSkeletonLoaderComponent implements OnInit {\n    public reviews: any[] = Array(18);\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"reviews\">\n    <div class=\"review tz-skeleton-loader flex flex-row ion-justify-content-between\" *ngFor=\"let review of reviews\">\n        <ngx-skeleton-loader\n            count=\"1\"\n            [theme]=\"{\n                width: '11.0625rem',\n                height: '1.875rem'\n            }\"\n        >\n        </ngx-skeleton-loader>\n        <ngx-skeleton-loader\n            class=\"review-value-text\"\n            [theme]=\"{\n                width: '1.375rem',\n                height: '1.375rem'\n            }\"\n        >\n        </ngx-skeleton-loader>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-accommodation-detail-skeleton-loader',\n    templateUrl: './accommodation-detail-skeleton-loader.component.html',\n    styleUrls: ['./accommodation-detail-skeleton-loader.component.scss'],\n})\nexport class AccommodationDetailSkeletonLoaderComponent implements OnInit {\n    public rooms: any[] = Array(2);\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"accommodation-details\">\n    <div class=\"actions-block flex flex-row ion-justify-content-between\">\n        <ngx-skeleton-loader\n            count=\"1\"\n            [theme]=\"{\n                height: '1.25rem',\n                width: '7.5rem'\n            }\"\n        ></ngx-skeleton-loader>\n        <ngx-skeleton-loader\n            count=\"1\"\n            [theme]=\"{\n                height: '1.25rem',\n                width: '7.5rem'\n            }\"\n        ></ngx-skeleton-loader>\n    </div>\n    <div class=\"flex flex-column\">\n        <div class=\"tz-block-with-border\">\n            <div class=\"flex align-center title-block\">\n                <div>\n                    <div class=\"flex align-center map-inline tz-skeleton-loader\">\n                        <ngx-skeleton-loader\n                            count=\"1\"\n                            [theme]=\"{\n                                height: '1.25rem',\n                                width: '20.5rem'\n                            }\"\n                        >\n                        </ngx-skeleton-loader>\n                    </div>\n\n                    <div class=\"address-title tz-skeleton-loader\">\n                        <ngx-skeleton-loader\n                            count=\"1\"\n                            [theme]=\"{\n                                height: '0.75rem',\n                                width: '16rem'\n                            }\"\n                        >\n                        </ngx-skeleton-loader>\n                    </div>\n                </div>\n\n                <div class=\"flex align-center ml-a mb-a tz-skeleton-loader\">\n                    <ngx-skeleton-loader\n                        count=\"1\"\n                        [theme]=\"{\n                            height: '1.25rem',\n                            width: '7.5rem'\n                        }\"\n                    >\n                    </ngx-skeleton-loader>\n                </div>\n            </div>\n            <div class=\"images\">\n                <tz-accommodation-image-skeleton-loader></tz-accommodation-image-skeleton-loader>\n            </div>\n            <div class=\"room-amenities tz-skeleton-loader\">\n                <ngx-skeleton-loader\n                    count=\"4\"\n                    [theme]=\"{\n                        height: '1.25rem',\n                        width: '7.5rem',\n                        'margin-right': '1.5rem'\n                    }\"\n                >\n                </ngx-skeleton-loader>\n            </div>\n        </div>\n        <div class=\"tz-block-with-border\">\n            <div class=\"flex flex-column description-block\">\n                <div class=\"flex flex-column\">\n                    <div class=\"flex align-center map-inline tz-skeleton-loader\">\n                        <ngx-skeleton-loader\n                            count=\"1\"\n                            [theme]=\"{\n                                height: '1.25rem',\n                                width: '20.5rem'\n                            }\"\n                        >\n                        </ngx-skeleton-loader>\n                    </div>\n\n                    <div class=\"address-title tz-skeleton-loader\">\n                        <ngx-skeleton-loader\n                            count=\"1\"\n                            [theme]=\"{\n                                height: '0.75rem',\n                                width: '40rem'\n                            }\"\n                        >\n                        </ngx-skeleton-loader>\n                    </div>\n                    <div class=\"address-title tz-skeleton-loader\">\n                        <ngx-skeleton-loader\n                            count=\"1\"\n                            [theme]=\"{\n                                height: '0.75rem',\n                                width: '40rem'\n                            }\"\n                        >\n                        </ngx-skeleton-loader>\n                    </div>\n                </div>\n                <div class=\"room-amenities tz-skeleton-loader\">\n                    <ngx-skeleton-loader\n                        count=\"4\"\n                        [theme]=\"{\n                            height: '1.25rem',\n                            width: '6.25rem',\n                            'margin-right': '1rem'\n                        }\"\n                    >\n                    </ngx-skeleton-loader>\n                </div>\n            </div>\n        </div>\n        <div class=\"block-separator map-hidden\"></div>\n        <div class=\"tz-block-with-border rooms-block\" *ngFor=\"let room of rooms\">\n            <div class=\"room flex flex-row\">\n                <div class=\"flex image tz-skeleton-loader\">\n                    <ngx-skeleton-loader\n                        [theme]=\"{\n                            height: '16.25rem',\n                            width: '16.25rem',\n                            'border-radius': '0 !important'\n                        }\"\n                    >\n                    </ngx-skeleton-loader>\n                </div>\n                <div class=\"flex flex-column description tz-skeleton-loader\">\n                    <div class=\"room-description-item\">\n                        <ngx-skeleton-loader\n                            count=\"1\"\n                            [theme]=\"{\n                                height: '1.25rem',\n                                width: '20.5rem'\n                            }\"\n                        >\n                        </ngx-skeleton-loader>\n                    </div>\n                    <div class=\"room-description-item\">\n                        <ngx-skeleton-loader\n                            count=\"1\"\n                            [theme]=\"{\n                                height: '0.75rem',\n                                width: '16rem'\n                            }\"\n                        >\n                        </ngx-skeleton-loader>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { PlatformService } from '@services/platform.service';\n\nconst TOPIMGCOUNT = 4;\nconst MOBTOPIMGCOUNT = 5;\n\n@Component({\n    selector: 'tz-accommodation-image-skeleton-loader',\n    templateUrl: './accommodation-image-skeleton-loader.component.html',\n    styleUrls: ['./accommodation-image-skeleton-loader.component.scss'],\n})\nexport class AccommodationImageSkeletonLoaderComponent {\n    public hotelTopImages!: any[];\n\n    constructor(private platformService: PlatformService) {\n        this.hotelTopImages = Array(this.platformService.isMobileDevice ? MOBTOPIMGCOUNT : TOPIMGCOUNT);\n    }\n}\n","<div class=\"gallery-grid\">\n    <div class=\"gallery-slot tz-skeleton-loader\" *ngFor=\"let image of hotelTopImages; let i = index\">\n        <ngx-skeleton-loader style=\"display: inline\" [theme]=\"{ width: '100%', height: '100%' }\"></ngx-skeleton-loader>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-accommodation-detail-skeleton',\n    templateUrl: './mob-accommodation-detail-skeleton.component.html',\n    styleUrls: ['./mob-accommodation-detail-skeleton.component.scss'],\n})\nexport class MobAccommodationDetailSkeletonComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"mob-accommodation-details tz-skeleton-loader\">\n    <div class=\"tz-skeleton-block\">\n        <tz-accommodation-image-skeleton-loader></tz-accommodation-image-skeleton-loader>\n    </div>\n    <div class=\"tz-skeleton-block hotel-name\">\n        <ngx-skeleton-loader count=\"1\" [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n    </div>\n    <div class=\"tz-skeleton-block flex flex-column hotel-info\" *ngFor=\"let item of [1, 2, 3, 4, 5]\">\n        <ngx-skeleton-loader count=\"1\" [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n        <ngx-skeleton-loader count=\"1\" [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n        <ngx-skeleton-loader count=\"1\" [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n    </div>\n</div>\n"],"names":["skip","switchMap","takeUntil","AccommodationReviewsPopupComponent","BaseServiceComponent","ServiceId","StateFrom","CartUtils","i0","ctx_r0","ctx_r4","ctx_r3","AccommodationComponent","constructor","accommodationsDataService","accommodationsService","activeRoute","userService","injector","isMobile$","screenSizeDetectorService","isMobile","id","snapshot","params","ngOnInit","loadAccommodationData","settingsService","selectedLanguageSubject","pipe","destroy$","subscribe","curChange","currencyService","selectedCurrencySubject","isUserLogged","IsLogged","getCartData","ngOnDestroy","_a","unsubscribe","next","complete","onCancelSelection","openReviewsPopup","dialogService","openAccommodationReviewsDialog","accommodationReviews","assignRoomDetails","result","rooms","loggedInCustomer","getCustomerInformation","loggedIn","cartData","cartService","getSelected","ACC","hotelSelected","selectedHotel","giataID","bookingOptions","length","forEach","room","roomOffers","filter","offer","valid","level","some","option","selectedRoom","roomOfferId","roomsLeft","bookedRooms","reduce","accumulator","isBooked","status","openConfirmationDialog","title","translateService","instant","multipleContent","confirmBtnTitle","loading","accommodation$","getAccommodation","accommodationReviews$","accommodation","getAccommodationReviews","setTimeout","scrollToServiceContainer","error","items","hasBooked","selectedItem","cartRouterService","goToState","SUMMARY","undefined","ACC_DETAILS","getSelectedAccommodationsData","_b","isHotelInCart","hotelCode","selectors","features","decls","vars","consts","template","EventEmitter","Subject","CONFIRM","AccommodationTermsPopupComponent","DateRangePipe","TzDatePipe","MainDialogSize","MobAccommodationAdditionalInfoComponent","MobAccommodationAmenitiesComponent","MobAccommodationRulesComponent","MobAccommodationRoomsComponent","AccommodationsUtilsService","MobAccommodationRoomOfferCancelationComponent","ctx_r17","ctx_r19","ctx_r21","ctx_r23","ctx_r25","ctx_r29","ctx_r32","ctx_r1","ctx_r41","ctx_r51","ctx_r53","ctx_r54","ctx_r49","ctx_r55","ctx_r57","ctx_r60","ctx_r58","ctx_r66","ctx_r68","ctx_r69","ctx_r71","ctx_r72","room_r62","ctx_r59","ctx_r9","ctx_r10","ctx_r89","ctx_r91","ctx_r93","ctx_r95","ctx_r96","ctx_r12","AccommodationDetailsComponent","accommodationDetailsUtilService","maxRoomQuantity","isNextSummary","nextIsSummary","getCartRooms","updateAccInfoToList","mapHotel","getMapHotel","fromHotelsMap","checkRoomsSold","handleExtraParams","descLen","description","showFullDescription","descriptionMaxLimit","console","log","ngAfterViewInit","scrollToConfirmationBlock","onBackToResultsPage","backToMap","setMapHotel","gotoSummary","moveToSummary","onToggleDescriptionText","JSON","parse","stringify","confirmableRoom","clearSelectedRooms","cancelSelection","emit","onOpenReviewsPopup","onRoomCountChanged","$event","index","selectedRooms","recommendedSelected","roomsQuantity","getSelectedRoomQuantity","roomsLeftForSelection","pair","cartRoomCount","onAccommodationAddItemToCart","removeService","then","isRemoved","broker","rateComments","personCount","rateComment","roomName","displayName","toUpperCase","meal","comment","avail","rc","push","cancelBtnTitle","containerClass","mainDialogSize","LARGE","dialogPanelClasses","afterClosed","dialogReturn","addItem","addItemToCart","onRoomMaximumAllowedQuantityReached","openSnackBar","message","count","onRecommendedSelected","selected","onSelectRecommendedOffers","recommendedRooms","roomLeftToFind","numberOfRooms","recOffers","recOffersLoggedIn","recRoomsLoggedIn","r","offerId","allotment","hasOwnProperty","openTermsModal","roomOption","data","roomCancellation","hasPromotions","discounts","remarks","isPayOnArrival","payAt","checkInDateTime","checkIn","platformService","modalService","createMainModal","cssClass","openMainDialog","component","showCloseBtn","showRulesMob","createDetailsPage","hotelRules","name","checkOut","showRoomsMob","selectRecommended","openTermsModal$","ratings","numberOfNights","modal","showAdditionalInfo","accommodationAdditionalInfo","facilities","showAmenities","amenityGroups","cartRooms","isFailed","roomId","offersPresent","i","entries","addAccommodationToCart","response","userSearchService","searchCheckDep","state","router","getCurrentNavigation","extras","from","TAB","map","roomOffer","Object","requestAnimationFrame","scrollToElement","serviceBookingConfirmationComponentOfRooms","block","noRoom","fromTzMap","icon","iconStyle","confirm","isMobileDevice","history","extra","extraAction","viewQuery","ElementRef","AccommodationNearbyPlacesComponent","lines","el","lineHeight","offsetHeight","totalLines","Math","max","pointOfInterest","nativeElement","placeToEat","showAll","ctx_r13","ctx_r20","ctx_r22","ctx_r39","ctx_r42","ctx_r44","AccommodationRecommendedComponent","initializeRecommendedComponent","toggleSelection","roomCapacity","capacity","Array","onOpenTermsModal","scrollToRoom","scrollTo","checkShowTerms","otherPolicies","cancellationPolicy","isFree","endDateTime","packaging","newRoomInfo","image","images","showTerms","cheapestPrice","taxInfo","numberOfGuests","txt","personTxt","recommendedTitle","inputs","outputs","_r1"],"sourceRoot":"webpack:///"}