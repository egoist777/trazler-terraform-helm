{"version":3,"file":"src_app_modules_results_transport_trains_trains_module_ts.js","mappings":"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","sources":["./src/app/modules/results/transport/trains/components/trains-list-item/trains-list-item.component.ts","./src/app/modules/results/transport/trains/components/trains-list-item/trains-list-item.component.html","./src/app/modules/results/transport/trains/components/trains-list/trains-list.component.ts","./src/app/modules/results/transport/trains/components/trains-list/trains-list.component.html","./src/app/modules/results/transport/trains/components/trains-section-title/trains-section-title.component.ts","./src/app/modules/results/transport/trains/components/trains-section-title/trains-section-title.component.html","./src/app/modules/results/transport/trains/train.sort.ts","./src/app/modules/results/transport/trains/trains-routing.module.ts","./src/app/modules/results/transport/trains/trains.component.ts","./src/app/modules/results/transport/trains/trains.component.html","./src/app/modules/results/transport/trains/trains.module.ts","./src/app/services/modules/transport/trains/train.utils.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { SupplierClass, TrainClass } from '@schemas/modules/trains/train-class';\nimport {\n    SelectedOption,\n    ShowTrainDetail,\n    SupplierClassMinPrice,\n    TrainSelection,\n} from '@schemas/modules/trains/train-search-query-params';\nimport { TrainService } from '@services/modules/transport/trains/trains.service';\nimport { BestValType } from '@schemas/modules/search/search';\nimport { ResultsTools } from '@services/modules/results/services/tools.shared.services';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Component({\n    selector: 'tz-trains-list-item',\n    templateUrl: './trains-list-item.component.html',\n    styleUrls: ['./trains-list-item.component.scss'],\n})\nexport class TrainsListItemComponent implements OnInit, OnChanges {\n    @Input() train!: TRAIN;\n    @Input() bestValueId = '';\n    @Input() selectedOption!: SelectedOption;\n    @Input() showTrainDetail!: ShowTrainDetail;\n    @Input() isRoundTrip!: boolean;\n    @Input() isChangeOptions = false;\n\n    @Output() selectedTrainChange: EventEmitter<TrainSelection> = new EventEmitter<TrainSelection>();\n    @Output() selectedClassChange: EventEmitter<TrainSelection> = new EventEmitter<TrainSelection>();\n    @Output() trainDetailClosed: EventEmitter<string> = new EventEmitter<string>();\n    @Output() trainClassToggle: EventEmitter<void> = new EventEmitter<void>();\n\n    public selectedTrain!: TrainSelection;\n    public selectable = true;\n    public showDetails = false;\n    public classToShow: SupplierClass | undefined;\n    public active = false;\n    public trainClasses: TrainClass[] = [];\n    public supplierClassMinPrice: SupplierClassMinPrice = {};\n\n    public bestValType: BestValType | undefined;\n\n    private trainCartData?: any;\n\n    constructor(private trainService: TrainService) {}\n\n    ngOnInit() {\n        // Todo: path needs to be done from server\n        const oldPath = '/web/assets/img/trainSupplierLogos/';\n        const newPath = '/assets/icons/web/img/trainSupplierLogos/';\n        this.train.operatorImage = this.train.operatorImage.replace(oldPath, newPath);\n        if (this.train && this.train.bestValType) {\n            this.bestValType = ResultsTools.getBestValType(this.train.bestValType, ServiceId.TRAIN);\n        }\n        this.init();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['selectedOption']) {\n            this.updateSelectedTrain();\n        }\n    }\n\n    public onToggleDetails(): void {\n        this.showDetails = !this.showDetails;\n        this.updateTrainDetailToggle();\n    }\n\n    public toggleSelectedClass(supplierClass?: SupplierClass) {\n        let toggle = !this.showDetails;\n        this.trainClasses = [];\n\n        if (!supplierClass) {\n            // this.selectedTrain = this.formTrainSelectionInfo(this.findDefaultTrainClass());\n            supplierClass = this.getSelectedSupplierClass(this.selectedTrain.tzClass);\n            const sc = this.train.supplierClasses[0];\n            if (!supplierClass) {\n                for (const cls of this.train.supplierClasses) {\n                    if (cls.count > 0) {\n                        supplierClass = cls;\n                        break;\n                    }\n                }\n            }\n\n            supplierClass = supplierClass || sc;\n        } else if (this.classToShow && this.classToShow.class !== supplierClass.class) {\n            toggle = true;\n        }\n\n        this.classToShow = toggle ? supplierClass : undefined;\n        if (this.classToShow) {\n            this.loadTrainSubClasses(this.classToShow.class);\n        }\n\n        this.showDetails = toggle;\n        this.updateTrainDetailToggle();\n\n        const selectedTrainClass = this.trainService.getSelectedClass(\n            this.train,\n            supplierClass.class,\n            this.selectedTrain\n        );\n        const differentClassSelected = selectedTrainClass && this.selectedTrain.classId !== selectedTrainClass.id;\n        if (differentClassSelected) {\n            this.selectedClassChange.emit(this.formTrainSelectionInfo(selectedTrainClass));\n        }\n    }\n\n    public isValidTicket(supplierClass: SupplierClass, subClass?: TrainClass): boolean {\n        return this.trainService.isValidTicket(this.train, supplierClass, subClass);\n    }\n\n    public selectTicket(active: boolean): void {\n        this.showDetails = false;\n        this.selectedTrain.selected = active;\n        if (active) {\n            if (!this.selectedTrain.classId) {\n                this.selectedTrain = this.formTrainSelectionInfo(this.findDefaultTrainClass());\n            }\n            this.selectedTrainChange.emit(this.selectedTrain);\n        } else {\n            this.selectedTrainChange.emit({\n                id: '',\n                classId: '',\n                tzClass: '',\n                groupId: '',\n                journeyType: this.train.journeyType,\n                selected: false,\n            } as TrainSelection);\n        }\n    }\n\n    public onTrainClassSelected(trainClass: TrainClass): void {\n        this.selectedClassChange.emit(this.formTrainSelectionInfo(trainClass));\n    }\n\n    private init(): void {\n        this.fetchServicePrices();\n        if (this.isChangeOptions) {\n            //this.showDetails = true;\n            //this.trainCartData = this.trainService.getSelectedTrainFromCart();\n            //this.classToShow = this.selectedOption.onward;\n            //this.toggleSelectedClass(this.trainCartData.items[0].selectedItem.data.onward.trainClass);\n            if (this.train.journeyType === 'returnJourney' && this.selectedOption.return) {\n                this.selectedTrain = this.selectedOption.return;\n            }\n            if (this.train.journeyType === 'onwardJourney' && this.selectedOption.onward) {\n                this.selectedTrain = this.selectedOption.onward;\n            }\n            this.toggleSelectedClass(this.getSelectedSupplierClass(this.selectedTrain.tzClass));\n        }\n    }\n\n    private fetchServicePrices(): void {\n        this.supplierClassMinPrice = this.trainService.getServicePrices(this.train, this.selectedTrain);\n    }\n\n    private updateTrainDetailToggle(): void {\n        if (!this.showDetails) {\n            this.trainDetailClosed.emit(this.train.journeyType);\n        }\n    }\n\n    private findDefaultTrainClass(): TrainClass {\n        const selectedTrainClass = this.train.trainClasses.filter((tc) => tc.id === this.selectedTrain.classId);\n        if (this.selectedTrain.classId && selectedTrainClass.length > 0) {\n            return selectedTrainClass[0];\n        }\n\n        const selectedOnward = this.selectedOption.onward;\n        if (!selectedOnward || !selectedOnward.selected) {\n            return this.train.trainClasses[0];\n        }\n\n        const tzSubClass = selectedOnward.tzSubClass;\n        const hasSubClass = tzSubClass && tzSubClass !== '';\n\n        let defaultTrainClass!: TrainClass;\n        let minPrice: number;\n        this.train.trainClasses.some((tc: TrainClass) => {\n            if (tc.groupId !== selectedOnward.groupId) {\n                return false;\n            }\n\n            const exactClassMatch =\n                tc.trainClass.tzClass === selectedOnward.tzClass &&\n                (hasSubClass ? tzSubClass === tc.trainClass.tzSubClass : true);\n\n            if (exactClassMatch) {\n                defaultTrainClass = tc;\n            } else if (!defaultTrainClass || minPrice > tc.prices.listPrice) {\n                defaultTrainClass = tc;\n                minPrice = tc.prices.listPrice;\n            }\n\n            return exactClassMatch;\n        });\n\n        return defaultTrainClass;\n    }\n\n    private updateSelectedTrain(): void {\n        let selectedOption: TrainSelection | undefined;\n        let openTrainDetail = false;\n\n        if (this.train.journeyType === 'onwardJourney') {\n            selectedOption = this.selectedOption.onward;\n            openTrainDetail = this.showTrainDetail.onwardJourney;\n        } else {\n            selectedOption = this.selectedOption.return;\n            openTrainDetail = this.showTrainDetail.returnJourney;\n        }\n\n        if (!selectedOption || selectedOption.id !== this.train.id) {\n            this.showDetails = false;\n            this.selectedTrain = {} as TrainSelection;\n            return;\n        }\n\n        this.selectedTrain = { ...selectedOption };\n        this.active = this.selectedTrain.selected || false;\n        this.fetchServicePrices();\n\n        openTrainDetail = openTrainDetail && selectedOption.tzClass !== '';\n        if (openTrainDetail) {\n            this.loadTrainSubClasses(selectedOption.tzClass);\n            this.showDetails = selectedOption.showDetails || false;\n            this.classToShow = this.getSelectedSupplierClass(selectedOption.tzClass);\n        }\n    }\n\n    private loadTrainSubClasses(trainClass: string): void {\n        this.trainClasses = this.train.trainClasses.filter((tc) => tc.trainClass.tzClass === trainClass);\n    }\n\n    private getSelectedSupplierClass(trainClass: string): SupplierClass | undefined {\n        return this.train.supplierClasses.find((sc) => sc.class === trainClass);\n    }\n\n    private formTrainSelectionInfo(trainClass: TrainClass): TrainSelection {\n        return this.trainService.formTrainSelectionInfo(\n            this.train,\n            trainClass,\n            this.selectedTrain.selected,\n            this.showDetails\n        );\n    }\n}\n","<div class=\"train-results-list\">\n    <div *ngIf=\"bestValType\" class=\"recommended-block\">\n        <div class=\"recommended-block__content\">\n            <tz-recommended-list-tem-description [bestValType]=\"bestValType\"></tz-recommended-list-tem-description>\n        </div>\n    </div>\n\n    <div\n        class=\"train-block-item tz-block-with-border\"\n        data-test=\"result-page-train-block-item\"\n        [class]=\"{ 'mb-0': bestValueId === train.id }\"\n    >\n        <div class=\"ticket-item-group\" (click)=\"toggleSelectedClass()\">\n            <div class=\"train-block-item-info\">\n                <div class=\"ticket-info d-flex justify-content-between align-items-center train-ticket\">\n                    <div class=\"check-item\" *ngIf=\"!isChangeOptions\">\n                        <tz-checkbox\n                            *ngIf=\"selectable\"\n                            className=\"checkbox--primary\"\n                            [stopPropagation]=\"true\"\n                            (selectedChange)=\"selectTicket($event)\"\n                            [selected]=\"active\"\n                        ></tz-checkbox>\n                    </div>\n                    <div class=\"ticket-company-logo\">\n                        <img [src]=\"train.operatorImage\" />\n                    </div>\n\n                    <tz-trains-list-item-info\n                        [departureDate]=\"train.departure.dateTzFormat\"\n                        [arrivalDate]=\"train.arrival.dateTzFormat\"\n                        [duration]=\"train.durationFormatted\"\n                        [departureLocation]=\"train.departure\"\n                        [arrivalLocation]=\"train.arrival\"\n                        [stops]=\"train.trainClasses[0].route\"\n                        [layoverName]=\"\n                            train.trainClasses.length > 0 && train.trainClasses[0]?.layoverName\n                                ? train.trainClasses[0].layoverName\n                                : ''\n                        \"\n                    >\n                    </tz-trains-list-item-info>\n                </div>\n            </div>\n\n            <div class=\"train-block-item-price\">\n                <div\n                    class=\"ticket-options relative\"\n                    *ngFor=\"let supplierClass of train.supplierClasses; index as i\"\n                    [attr.disabled]=\"isValidTicket(supplierClass) ? null : true\"\n                    [class]=\"{ selected: selectedTrain.tzClass === supplierClass.class }\"\n                    (click)=\"toggleSelectedClass(supplierClass); $event.stopPropagation()\"\n                >\n                    <div class=\"ticket-type\">{{ supplierClass.class }}</div>\n                    <div class=\"ticket-price\" data-test=\"train-ticket-price\">\n                        {{\n                            supplierClass.count === 0\n                                ? '-'\n                                : (supplierClassMinPrice[supplierClass.class].listPrice\n                                  | tzCurrency: supplierClassMinPrice[supplierClass.class].listPriceCur)\n                        }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"showDetails\" class=\"train-content-wrapper\">\n            <tz-trains-class\n                [toggle]=\"showDetails\"\n                (toggleChange)=\"onToggleDetails()\"\n                [departure]=\"train.departure\"\n                [arrival]=\"train.arrival\"\n                [trainClasses]=\"trainClasses\"\n                [selectedTrain]=\"selectedTrain\"\n                (trainClassSelected)=\"onTrainClassSelected($event)\"\n                (trainClassToggle)=\"trainClassToggle.emit()\"\n            >\n            </tz-trains-class>\n        </div>\n    </div>\n</div>\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TrainsResponseSection } from '@schemas/modules/trains/train.response';\nimport { SelectedOption, ShowTrainDetail, TrainSelection } from '@schemas/modules/trains/train-search-query-params';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { PlatformService } from '@services/platform.service';\nimport { ServiceListComponent } from '@core/components/paginate.component.ts/service.list.component';\nimport { IInfiniteScrollEvent } from 'ngx-infinite-scroll';\nimport { ScrollService } from '@services/modules/core/scroll-service';\n\n@Component({\n    selector: 'tz-trains-list',\n    templateUrl: './trains-list.component.html',\n    styleUrls: ['./trains-list.component.scss'],\n})\nexport class TrainsListComponent extends ServiceListComponent implements OnInit {\n    @Input() section!: TrainsResponseSection;\n    @Input() selectedOption!: SelectedOption;\n    @Input() showTrainDetail!: ShowTrainDetail;\n    @Input() isListCompleted = false;\n    @Input() isRoundTrip = false;\n    @Input() isChangeOptions = false;\n    @Input() hideTitle = false;\n    @Input() totalPassengers = 0;\n    @Input() confirmable = false;\n    @Output() mobShowTrainDetails: EventEmitter<TRAIN> = new EventEmitter<TRAIN>();\n    @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\n    @Output() selectedTrainChange: EventEmitter<TrainSelection> = new EventEmitter<TrainSelection>();\n    @Output() selectedClassChange: EventEmitter<TrainSelection> = new EventEmitter<TrainSelection>();\n    @Output() trainDetailClosed: EventEmitter<string> = new EventEmitter<string>();\n\n    public fromLocation: string | undefined;\n    public toLocation: string | undefined;\n    public sectionSelected = false;\n    public trainType: 'depart' | 'return' = 'depart';\n    constructor(public platformService: PlatformService, private scrollService: ScrollService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.setSectionInfo();\n    }\n\n    public identify(index: number, item: TRAIN): string {\n        return item.id;\n    }\n\n    public onShowTrainDetails(train: TRAIN): void {\n        this.mobShowTrainDetails.emit(train);\n    }\n\n    public onScroll($event: IInfiniteScrollEvent) {\n        if (!this.isListCompleted) {\n            if (this.section.limiter !== 1) {\n                this.nextPage.emit();\n            }\n        }\n    }\n\n    public onTrainListItemClicked(trainListItem: any): void {\n        if (!this.confirmable) {\n            requestAnimationFrame(() => {\n                this.scrollService.scrollToElement(trainListItem);\n            });\n        }\n    }\n\n    private setSectionInfo(): void {\n        const option =\n            this.section.section === 'onwardJourney' ? this.selectedOption.onward : this.selectedOption.return;\n        if (option) {\n            this.sectionSelected = option.selected;\n            this.fromLocation = option.fromLocation;\n            this.toLocation = option.toLocation;\n            this.trainType = 'return';\n        }\n    }\n}\n","<div class=\"result-block-list ticket-trains\">\n    <div *ngIf=\"!hideTitle\">\n        <tz-trains-section-title\n            [flyType]=\"section.section\"\n            [count]=\"section.count\"\n            [fromLocation]=\"fromLocation\"\n            [toLocation]=\"toLocation\"\n            [selected]=\"sectionSelected\"\n            [isRoundTrip]=\"isRoundTrip\"\n        ></tz-trains-section-title>\n    </div>\n\n    <div\n        class=\"trains-list\"\n        infiniteScroll\n        [scrollWindow]=\"infiniteScrollConfig.scrollWindow\"\n        [infiniteScrollDistance]=\"infiniteScrollConfig.infiniteScrollDistance\"\n        [infiniteScrollThrottle]=\"infiniteScrollConfig.infiniteScrollThrottle\"\n        (scrolled)=\"onScroll($event)\"\n        [fromRoot]=\"this.infiniteScrollConfig.fromRoot\"\n        [infiniteScrollContainer]=\"this.infiniteScrollConfig.infiniteScrollContainer\"\n    >\n        <ng-container *ngFor=\"let train of section.data; trackBy: identify\">\n            <div\n                [ngClass]=\"{ 'tz-mob-selected-inner-border': sectionSelected }\"\n                class=\"train-list-item\"\n                #trainListItem\n                (click)=\"onTrainListItemClicked(trainListItem)\"\n            >\n                <tz-trains-list-item\n                    *ngIf=\"!platformService.isMobileDevice\"\n                    [train]=\"train\"\n                    [bestValueId]=\"section.bestValueId\"\n                    [selectedOption]=\"selectedOption\"\n                    [showTrainDetail]=\"showTrainDetail\"\n                    [isRoundTrip]=\"isRoundTrip\"\n                    [isChangeOptions]=\"isChangeOptions\"\n                    (trainClassToggle)=\"onTrainListItemClicked(trainListItem)\"\n                    (selectedClassChange)=\"onTrainListItemClicked(trainListItem); selectedClassChange.emit($event)\"\n                    (selectedTrainChange)=\"onTrainListItemClicked(trainListItem); selectedTrainChange.emit($event)\"\n                    (trainDetailClosed)=\"trainDetailClosed.emit($event)\"\n                ></tz-trains-list-item>\n\n                <div (click)=\"onShowTrainDetails(train)\">\n                    <tz-mob-trains-list-item\n                        [totalPassengers]=\"totalPassengers\"\n                        *ngIf=\"platformService.isMobileDevice\"\n                        [train]=\"train\"\n                        [isRoundTrip]=\"isRoundTrip\"\n                        [selectedOption]=\"selectedOption\"\n                        [trainType]=\"trainType\"\n                    ></tz-mob-trains-list-item>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TrainUtilsService } from '@services/modules/transport/trains/train.utils';\n\n@Component({\n    selector: 'tz-trains-section-title',\n    templateUrl: './trains-section-title.component.html',\n    styleUrls: ['./trains-section-title.component.scss'],\n})\nexport class TrainsSectionTitleComponent implements OnInit {\n    @Input() flyType!: string;\n    @Input() fromLocation: string | undefined;\n    @Input() toLocation: string | undefined;\n    @Input() count = 0;\n    @Input() selected = false;\n    @Input() isRoundTrip = false;\n\n    public title = '';\n\n    constructor(private trainUtilsService: TrainUtilsService) {}\n\n    ngOnInit() {\n        this.title = this.trainUtilsService.formSectionTitle(\n            this.isRoundTrip,\n            this.selected,\n            this.flyType,\n            this.count,\n            this.fromLocation,\n            this.toLocation\n        );\n    }\n}\n","<div class=\"tz-block-separator-title\">\n    <tz-block-separator>{{ title }}</tz-block-separator>\n</div>\n","import { SortByValueOption } from '@schemas/modules/core/sort-by-value.option';\n\nexport const TrainSort: SortByValueOption[] = [\n    {\n        sort: 'bestValue',\n        label: 'GENERAL.SORT.BEST_VALUE',\n    },\n    {\n        sort: 'quickest',\n        label: 'GENERAL.SORT.QUICKEST',\n    },\n    {\n        sort: 'cheapest',\n        label: 'GENERAL.SORT.CHEAPEST',\n    },\n];\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TrainsComponent } from './trains.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: TrainsComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class TrainsRoutingModule {}\n","import { Component, ElementRef, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { BaseServiceComponent } from '../../components/base-service-component/base-service.component';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { FilterReferenceItem } from '@schemas/modules/core/filters/service-filter';\nimport {\n    SelectedOption,\n    ShowTrainDetail,\n    TrainSearchQueryParams,\n    TrainSelection,\n} from '@schemas/modules/trains/train-search-query-params';\nimport { ITrainsCartData } from '@schemas/modules/trains/train-cart-data';\nimport { TrainListMetadata } from '@schemas/modules/trains/train-list-metadata';\nimport { FlightTrainSearchService, IHasTransport } from '@services/services/flight-train-search.service';\nimport { TrainsResponse, TrainsResponseSection } from '@schemas/modules/trains/train.response';\nimport { SortByValueOption } from '@schemas/modules/core/sort-by-value.option';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { Trip } from '@core/constants/trip';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { TrainService } from '@services/modules/transport/trains/trains.service';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { finalize, skip, takeUntil, tap } from 'rxjs/operators';\nimport { TrainClass } from '@schemas/modules/trains/train-class';\nimport { TrainSort } from './train.sort';\nimport { TrainUtilsService } from '@services/modules/transport/trains/train.utils';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { MobTrainDetailsComponent } from './components/mob-train-details/mob-train-details.component';\nimport { FilterService } from '@services/modules/inactivity/filter.service';\nimport { SearchUtilsService } from '@services/modules/search/utils/search.utils';\nimport { ResultsFiltersUtils } from '../../results-filters/results-filters.utils.service';\n\n@Component({\n    selector: 'tz-trains',\n    templateUrl: './trains.component.html',\n    styleUrls: ['./trains.component.scss'],\n})\nexport class TrainsComponent extends BaseServiceComponent implements OnInit, OnDestroy {\n    @ViewChild('confirmationComponent') confirmationComponent?: ElementRef;\n    @ViewChild('trainList') trainListElementReference?: ElementRef;\n    @ViewChild('trainListSkeletonLoader') trainListSkeletonLoaderElementReference?: ElementRef;\n    public readonly serviceId = ServiceId.TRAIN;\n    public trainListMetadata: TrainListMetadata = {};\n    public trainSections: TrainsResponseSection[] = [];\n    public trainCartData: ITrainsCartData | undefined;\n    public trainsFilter: FilterReferenceItem = [];\n    public journeyType: Trip;\n    public twoWayFlight = false;\n    public twoTransports: IHasTransport = { has: null };\n    public selectedOption: SelectedOption = {};\n    public showDetails: ShowTrainDetail = {\n        onwardJourney: false,\n        returnJourney: false,\n    };\n    public showSidebar = false;\n    public sortByOptions: SortByValueOption[] = TrainSort;\n    public filterQueryParams: TrainSearchQueryParams = {};\n    public isRoundTrip = false;\n    public isChangeOptions = false;\n    public serviceTitle = '';\n    public totalPassengers = 0;\n    public selectedFiltersCount = 0;\n\n    private editListener = -1;\n    private repriceListenerId = -1;\n    private resultsCount$ = new Subject<number>();\n    private returnTrainChange$ = new Subject<TRAIN>();\n\n    constructor(\n        private trainService: TrainService,\n        private flightTrainSearchService: FlightTrainSearchService,\n        private injector: Injector,\n        private trainUtilsService: TrainUtilsService\n    ) {\n        super(injector);\n        this.journeyType = this.searchDataService.travelType;\n        this.isMobile$ = this.screenSizeDetectorService.isMobile;\n        this.isNextSummary = this.nextIsSummary();\n        this.flightTrainSearchService.twoTransports.pipe(takeUntil(this.destroy$)).subscribe((twoTransports) => {\n            console.log('got:', twoTransports);\n            this.twoTransports = twoTransports;\n        });\n    }\n\n    get isEnableClearFilter(): boolean {\n        return FilterService.enableClearAll(this.trainsFilter);\n    }\n\n    ngOnInit(): void {\n        this.scrollToTop();\n        this.initializeTrainComponent(true);\n        if (this.searchRunning()) {\n            this.showSkeletonLoader(true);\n        } else {\n            this.loadTrainsData(true);\n        }\n\n        this.trainService.updateTrainSelection.subscribe((trainSelection) => {\n            this.mobUpdateTrainSelection(trainSelection);\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.trainService.setTrainSelections(this.selectedOption);\n        this.listenersService.unregisterListener(this.editListener);\n        this.listenersService.unregisterListener(this.repriceListenerId);\n        this.destroy$.next(false);\n        this.destroy$.complete();\n    }\n\n    public onFilterChanged($event: FilterReferenceItem): void {\n        this.scrollToServiceContainer();\n        this.resetPaginationParameters();\n        this.trainsFilter = $event;\n        this.filterTrains().subscribe(() => {});\n    }\n\n    public onOpenFilterPopup() {\n        const filter: BehaviorSubject<FilterReferenceItem> = new BehaviorSubject(this.trainsFilter);\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        filter.pipe(takeUntil(this.destroy$)).subscribe((filter: FilterReferenceItem) => {\n            this.trainsFilter = filter;\n            this.filterTrains().subscribe(() => {});\n        });\n        this.openFilterDialog(filter, this.resultsCount$);\n        this.showSidebarMobile();\n    }\n\n    public sortTrains(sortValue: string): void {\n        this.resetPaginationParameters();\n        SearchUtilsService.saveSortingValue(ServiceId.TRAIN, sortValue);\n        this.filterQueryParams.sort_by = sortValue;\n        this.loadTrainsData();\n    }\n\n    public onSubmitBooking(): void {\n        this.trainService.addTrainToCart(this.selectedOption).subscribe(\n            (response: ICart) => {\n                this.selectedOption = {};\n                this.userSearchService.searchCheckDep(ServiceId.TRAIN, this.nextIsSummary(), false, false, true);\n            },\n            (error) => {\n                //this.reInit();\n                console.log(error);\n            }\n        );\n    }\n\n    public onCancelSelection(): void {\n        this.scrollToServiceContainer();\n        this.trainService.clearTrainsSelection();\n        this.selectedOption = {};\n        this.reInit();\n    }\n\n    public onTrainSelection(selectedTrain: TrainSelection): void {\n        this.scrollToServiceContainer();\n        this.handleClassChangeOfSelectedTrain(selectedTrain);\n    }\n\n    public onClassSelection(selectedTrain: TrainSelection): void {\n        if (selectedTrain.selected) {\n            this.handleClassChangeOfSelectedTrain(selectedTrain);\n            return;\n        }\n\n        if (selectedTrain.journeyType === 'onwardJourney') {\n            this.onOnwardChange(selectedTrain);\n        } else {\n            this.onReturnChange(selectedTrain);\n        }\n    }\n\n    public onTrainDetailClosed(journeyType: string) {\n        if (journeyType === 'onwardJourney') {\n            this.showDetails.onwardJourney = false;\n        } else {\n            this.showDetails.returnJourney = false;\n        }\n    }\n\n    public onRemovedSelectedTrain(optionId: string | undefined): void {\n        this.removeService(this.serviceId, optionId).then(\n            (isRemoved: boolean) => {\n                console.log('remove success');\n            },\n            (error) => {\n                console.error(error);\n            }\n        );\n    }\n\n    public getTrainTitle(): string {\n        return this.trainUtilsService.getSelectedTitle(this.trainCartData);\n    }\n\n    public onChangeOptions(): void {\n        if (this.trainCartData && this.trainCartData.items) {\n            this.filterQueryParams.journey_id = this.trainCartData.items[0].selectedItem.data.onward.groupId;\n            this.filterQueryParams.onwardId = this.trainCartData.items[0].selectedItem.id;\n            if (this.isRoundTrip && this.trainCartData.items.length > 1) {\n                this.filterQueryParams.returnId = this.trainCartData.items[1].selectedItem.id;\n            }\n            this.isChangeOptions = true;\n\n            this.filterTrains(true).subscribe(() => {\n                if (this.platformService.isMobileDevice) {\n                    this.mobChangeOptions();\n                }\n            });\n        }\n    }\n\n    public onChangeTickets() {\n        this.scrollToTrainsList();\n    }\n\n    public onOpenFilterModal(): void {\n        const filters: BehaviorSubject<FilterReferenceItem> = new BehaviorSubject(this.trainsFilter);\n        filters.pipe(takeUntil(this.destroy$)).subscribe((filter: FilterReferenceItem) => {\n            this.trainsFilter = filter;\n            this.filterTrains().subscribe(() => {});\n        });\n        this.openFilterModal(filters, this.resultsCount$);\n    }\n\n    public onResetFilter(): void {\n        const filters$: Subject<FilterReferenceItem> = new Subject();\n        filters$.pipe(takeUntil(this.destroy$)).subscribe((filter: FilterReferenceItem) => {\n            this.trainsFilter = filter;\n            this.filterTrains().subscribe(() => {});\n        });\n        BaseServiceComponent.resetFilter(this.trainsFilter, filters$);\n    }\n\n    public mobOpenSort(): void {\n        const sort$: Subject<string> = new Subject<string>();\n        sort$.pipe(takeUntil(this.destroy$)).subscribe((sortKey: string) => {\n            this.sortTrains(sortKey);\n        });\n\n        this.openSortMob(this.sortByOptions, this.filterQueryParams.sort_by, sort$);\n    }\n\n    public async mobShowTrainDetails(train: TRAIN): Promise<void> {\n        const onwardTrain =\n            this.selectedOption.onward && train.id !== this.selectedOption.onward.id\n                ? this.trainSections[0].data[0]\n                : null;\n\n        const modal = await this.modalService.createDetailsPage(MobTrainDetailsComponent, {\n            data: { train, selectedOption: this.selectedOption, onwardTrain, passengersNumber: this.totalPassengers },\n            title: 'FLIGHT_TRAIN.CHOOSE_DEPART',\n            isHeaderBottomDivider: false,\n        });\n\n        if (modal.data) {\n            this.onTrainSelection(modal.data.selectedTrain);\n\n            if (modal.data.isConfirmable || !this.twoWayFlight) {\n                this.onSubmitBooking();\n            }\n        }\n    }\n\n    public nextPage(section: TrainsResponseSection): void {\n        if (!this.loading) {\n            this.loading = true;\n            const { onwardId, returnId } = this.filterQueryParams;\n            const params = {\n                onwardId,\n                returnId,\n                limit: section.increment,\n                start: onwardId !== '' ? section.data.length + 1 : section.data.length,\n                sortBy: this.filterQueryParams.sort_by,\n            };\n            this.trainService\n                .paginate(this.serviceId, params)\n                .pipe(\n                    finalize(() => {\n                        this.loading = false;\n                    })\n                )\n                .subscribe((trains: TRAIN[]) => {\n                    section.data = section.data.concat(trains);\n                    if (trains.length < section.increment) {\n                        this.isListCompleted = true;\n                    } else {\n                        this.start += section.limiter;\n                    }\n                });\n        }\n    }\n\n    private mobChangeOptions(): void {\n        const data: any = {\n            train: this.trainSections[0].data[0],\n            selectedOption: null,\n            isCartItems: true,\n            passengersNumber: this.totalPassengers,\n            returnTrainChange$: this.returnTrainChange$,\n        };\n\n        if (this.isRoundTrip && this.trainCartData && this.trainCartData.items.length > 1) {\n            data.onwardTrain = this.trainSections[1].data[0];\n        }\n\n        this.modalService\n            .createDetailsPage(MobTrainDetailsComponent, {\n                data,\n            })\n            .then((modal: { data: any }) => {\n                if (modal.data) {\n                    if (!(this.isRoundTrip && this.trainCartData && this.trainCartData.items.length > 1)) {\n                        this.onTrainSelection(modal.data.selectedTrain);\n                    }\n\n                    if (modal.data.selectedOption) {\n                        this.onTrainSelection(modal.data.selectedOption.return);\n                    }\n\n                    if (modal.data.isConfirmable || !this.twoWayFlight) {\n                        this.onSubmitBooking();\n                    }\n                }\n\n                this.onCancelSelection();\n            });\n    }\n\n    private mobUpdateTrainSelection(selectedTrain: TrainSelection): void {\n        this.onTrainSelection(selectedTrain);\n\n        if (this.isRoundTrip && this.trainCartData && this.trainCartData.items.length > 1) {\n            this.returnTrainChange$.next(this.trainSections[1].data[0]);\n        }\n    }\n\n    private handleExtraParams() {\n        const state = history.state;\n        if (state && state.extra) {\n            for (const extraAction in state.extra) {\n                if (state.extra.hasOwnProperty(extraAction)) {\n                    switch (extraAction) {\n                        case 'changeOptions':\n                            this.onChangeOptions();\n                            break;\n                        case 'changeTickets':\n                            this.reInit();\n                            this.scrollToTrainsList();\n                            break;\n                    }\n                }\n            }\n        }\n    }\n\n    private initializeTrainComponent(isInit: boolean): void {\n        this.twoWayFlight = this.journeyType === Trip.ROUND_TRIP;\n        this.initSearchParams();\n        this.getCartServiceData();\n        if (this.shouldPreserveSelection()) {\n            if (!this.trainCartData?.items.length) {\n                this.loadSelection();\n            }\n        }\n        this.setSortingValue();\n\n        if (isInit) {\n            this.editListener = this.listenersService.registerListener(\n                ListenerId.LISTEN_EDIT_TRAIN,\n                this.loadTrainsData.bind(this, false),\n                this\n            );\n            this.settingsService.selectedLanguageSubject.pipe(skip(1), takeUntil(this.destroy$)).subscribe(() => {\n                this.initializeTrainComponent(false);\n            });\n            this.currencyService.selectedCurrencySubject.pipe(skip(1), takeUntil(this.destroy$)).subscribe(() => {\n                this.loadTrainsData(false);\n            });\n\n            this.settingsService.selectedLanguageSubject.pipe(skip(1), takeUntil(this.destroy$)).subscribe(() => {\n                this.serviceTitle = this.formServiceTitle(ServiceId.FLIGHT_TRAIN, this.twoWayFlight, this.serviceId);\n                this.loadTrainsData(false);\n            });\n\n            this.repriceListenerId = this.listenersService.registerListener(\n                ListenerId.LISTEN_REPRICED,\n                this.getCartServiceData,\n                this\n            );\n        }\n    }\n\n    private reInit() {\n        this.isChangeOptions = false;\n        this.trainService.setTrainSelections({});\n        if (this.shouldPreserveSelection()) {\n            this.loadSelection();\n        }\n        /* this.filterQueryParams.journey_id = '';\n        this.filterQueryParams.onwardId = '';\n        this.filterQueryParams.returnId = '';*/\n        this.initSearchParams();\n        this.filterQueryParams.refreshFilter = true;\n        this.filterTrains().subscribe(() => {});\n    }\n\n    private trainSelection(selectedTrain: TrainSelection): void {\n        if (selectedTrain.selected) {\n            this.filterQueryParams.journey_id = selectedTrain.groupId;\n        }\n\n        this.filterQueryParams.refreshFilter = true;\n        if (selectedTrain.journeyType === 'onwardJourney') {\n            this.onOnwardChange(selectedTrain);\n        } else {\n            this.onReturnChange(selectedTrain);\n        }\n        this.trainService.setTrainSelections(this.selectedOption);\n        this.filterTrains(\n            !!(this.isRoundTrip && this.filterQueryParams.onwardId && this.filterQueryParams.returnId) ||\n                !!(!this.isRoundTrip && this.filterQueryParams.onwardId)\n        ).subscribe(() => {});\n    }\n\n    private onOnwardChange(selectedTrain: TrainSelection): void {\n        this.selectedOption = {\n            ...this.selectedOption,\n            onward: selectedTrain,\n        };\n\n        this.filterQueryParams.onwardId = selectedTrain.selected ? selectedTrain.id : '';\n        this.showDetails.onwardJourney = selectedTrain.showDetails || false;\n    }\n\n    private onReturnChange(selectedTrain: TrainSelection): void {\n        this.selectedOption = {\n            ...this.selectedOption,\n            return: selectedTrain,\n        };\n\n        this.filterQueryParams.returnId = selectedTrain.selected ? selectedTrain.id : '';\n        this.showDetails.returnJourney = selectedTrain.showDetails || false;\n    }\n\n    private initSearchParams(): void {\n        this.filterQueryParams = {\n            sort_by: 'bestValue',\n            journey_id: '',\n            onwardId: '',\n            returnId: '',\n        };\n    }\n\n    private handleTrainsDataResponse(trainsResponse: TrainsResponse, keepSelected?: boolean): void {\n        this.filterQueryParams.refreshFilter = false;\n\n        this.trainsFilter = trainsResponse.ogs;\n        this.filterService.filterChange$.next(trainsResponse.ogs);\n        this.selectedFiltersCount = ResultsFiltersUtils.selectedFiltersCounter(this.trainsFilter);\n        if (keepSelected) {\n            if (trainsResponse?.data[1] && trainsResponse.data[1]?.data[0]) {\n                this.returnTrainChange$.next(trainsResponse.data[1].data[0]);\n            }\n\n            this.trainSections = trainsResponse.data;\n            if (!this.trainService.getTrainSelections().onward) {\n                if (this.isRoundTrip) {\n                    this.trainService.setTrainSelections({\n                        onward: TrainUtilsService.buildTrainSelection(this.trainCartData?.items[0].selectedItem),\n                        return: TrainUtilsService.buildTrainSelection(this.trainCartData?.items[1].selectedItem),\n                        dataId: this.trainCartData?.items[0]?.dataId,\n                    } as SelectedOption);\n                } else {\n                    this.trainService.setTrainSelections({\n                        onward: TrainUtilsService.buildTrainSelection(this.trainCartData?.items[0].selectedItem),\n                        dataId: this.trainCartData?.items[0]?.dataId,\n                    } as SelectedOption);\n                }\n            }\n            if (this.shouldPreserveSelection() || keepSelected) {\n                this.loadSelection();\n            }\n        } else {\n            this.trainSections = this.filterTrainsRemoveCartItem(trainsResponse.data);\n        }\n        this.checkConfirmable();\n\n        const { count, selectedID, increment, limiter } = trainsResponse;\n        this.trainListMetadata = {\n            count,\n            selectedID,\n            increment,\n        };\n        this.start = limiter;\n        this.resultsCount$.next(count);\n    }\n\n    private filterTrainsRemoveCartItem(trains: TrainsResponseSection[]): TrainsResponseSection[] {\n        if (this.trainCartData?.items && this.trainCartData?.items.length > 0) {\n            const cartIds: string[] = [this.trainCartData.items[0].selectedItem.id];\n\n            if (this.trainCartData?.items.length > 1) {\n                cartIds.push(this.trainCartData.items[1].selectedItem.id);\n            }\n\n            return this.trainService.filterTrainsRemoveCartItem(trains, cartIds);\n        }\n\n        return trains;\n    }\n\n    private loadTrainsData(checkConsistency: boolean = false): void {\n        const search = this.searchDataService.getSearch(ServiceId.FLIGHT_TRAIN);\n        this.totalPassengers = search.passengers.total;\n        this.serviceTitle = this.formServiceTitle(ServiceId.FLIGHT_TRAIN, this.twoWayFlight, this.serviceId);\n        this.checkResultsAvailable(this.serviceId);\n        this.loaderService.skeletonLoading = true;\n        this.trainService.searchServiceData(this.serviceId, this.filterQueryParams, checkConsistency).subscribe(\n            (trainsResponse: TrainsResponse) => {\n                this.trainService.minTrainPrice = trainsResponse.minimalPrice;\n                this.isListCompleted = false;\n                this.handleTrainsDataResponse(trainsResponse);\n                this.loaderService.skeletonLoading = false;\n                const searchData = this.searchDataService.getSearchData(this.serviceId);\n                if (searchData?.tripCal) {\n                    this.isRoundTrip = searchData.tripCal?.twoDates;\n                } else {\n                    this.isRoundTrip = false;\n                }\n                this.handleExtraParams();\n                if (!trainsResponse.count && !this.filterCount(trainsResponse.ogs)) {\n                    this.trainService.checkServiceFailedAndNotify(this.serviceId);\n                }\n                setTimeout(() => {\n                    console.log('set prerender ready');\n                    window.prerenderReady = true;\n                }, 1500);\n            },\n            (error: any) => {\n                this.loaderService.skeletonLoading = false;\n            }\n        );\n    }\n\n    private filterTrains(keepSelected?: boolean): Observable<TrainsResponse> {\n        this.loaderService.skeletonLoading = true;\n        return this.trainService.filterServiceData(this.serviceId, this.filterQueryParams, this.trainsFilter).pipe(\n            tap((trainsResponse: TrainsResponse) => {\n                this.handleTrainsDataResponse(trainsResponse, keepSelected);\n                this.loaderService.skeletonLoading = false;\n            })\n        );\n    }\n\n    private getCartServiceData() {\n        this.trainCartData = this.trainService.getSelectedTrainsFromCart();\n    }\n\n    private nextIsSummary(): boolean {\n        const state = this.router.getCurrentNavigation()?.extras?.state;\n        const from = state ? state['from'] : '';\n        return from === StateFrom.SUMMARY || from === StateFrom.TAB;\n    }\n\n    private showSidebarMobile(): void {\n        this.showSidebar = true;\n    }\n\n    private checkConfirmable(): void {\n        if (this.twoWayFlight) {\n            this.confirmable = !!this.selectedOption.onward?.id && !!this.selectedOption.return?.id;\n        } else {\n            this.confirmable = !!this.selectedOption.onward?.id;\n        }\n        if (this.confirmable) {\n            this.scrollToConfirmationBlock();\n        }\n    }\n\n    private changeTrainClass(selectedTrain: TrainSelection): void {\n        let selectedTrainClass!: TrainClass;\n\n        const selectedTripTrain =\n            selectedTrain.journeyType === 'onwardJourney' ? this.selectedOption.return : this.selectedOption.onward;\n        if (!selectedTripTrain) {\n            return;\n        }\n\n        const selectTrainClass = (trainClasses: TrainClass[]) => {\n            for (const trainClasse of trainClasses) {\n                if (trainClasse.groupId === selectedTrain.groupId) {\n                    if (trainClasse.trainClass.tzClass === selectedTrain.tzClass) {\n                        if (trainClasse.trainClass.tzSubClass === '') {\n                            selectedTrainClass = trainClasse;\n                            return;\n                        }\n\n                        if (trainClasse.trainClass.tzSubClass === selectedTrain.tzSubClass) {\n                            selectedTrainClass = trainClasse; // check for same class available\n                            return;\n                        }\n\n                        selectedTrainClass = trainClasse; // incase not found matching subClass, choose from available class\n                    }\n\n                    if (!selectedTrainClass || selectedTrainClass === null) {\n                        selectedTrainClass = trainClasse; //otherwise pick the first available class\n                    }\n                }\n            }\n        };\n\n        for (const trainSection of this.trainSections) {\n            if (trainSection.section === selectedTrain.journeyType) {\n                continue;\n            }\n\n            for (const train of trainSection.data) {\n                for (const trainClasse of train.trainClasses) {\n                    if (trainClasse.id === selectedTripTrain?.classId) {\n                        selectTrainClass(train.trainClasses);\n                    }\n                }\n            }\n        }\n\n        if (selectedTripTrain && selectedTrainClass) {\n            const changedTrainSelection = {\n                ...selectedTripTrain,\n                classId: selectedTrainClass.id,\n                groupId: selectedTrainClass.groupId,\n                tripId: selectedTrainClass.tripID,\n                tzClass: selectedTrainClass.trainClass.tzClass,\n                tzSubClass: selectedTrainClass.trainClass.tzSubClass,\n            };\n\n            if (selectedTripTrain.journeyType === 'onwardJourney') {\n                this.onOnwardChange(changedTrainSelection);\n            } else {\n                this.onReturnChange(changedTrainSelection);\n            }\n\n            this.trainSelection(selectedTrain);\n        }\n    }\n\n    private openClassChangeAlert(selectedTrain: TrainSelection): void {\n        const journeyType = this.translateService.instant(\n            'TRAIN.' + (selectedTrain.journeyType === 'onwardJourney' ? 'RETURN' : 'ONWARD')\n        );\n\n        this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant('POPUPS.CLASS_SELECTION.TITLE'),\n                multipleContent: [\n                    this.translateService.instant('POPUPS.CLASS_SELECTION.MESSAGE', {\n                        journeyType: journeyType.toLowerCase(),\n                        tzClass: selectedTrain.tzClass,\n                    }),\n                ],\n                cancelBtnTitle: this.translateService.instant('POPUPS.CANCEL'),\n                confirmBtnTitle: this.translateService.instant('POPUPS.CONTINUE'),\n            })\n            .afterClosed()\n            .subscribe((changeClass: boolean) => {\n                if (!changeClass) {\n                    return;\n                }\n\n                this.changeTrainClass(selectedTrain);\n            });\n    }\n\n    private isClassChangeAllowed(selectedTrain: TrainSelection): boolean {\n        const enable = true;\n        const selected = this.selectedOption;\n\n        if (!selected.onward || selected.onward.id === '' || !selected.return || selected.return.id === '') {\n            return enable;\n        }\n\n        if (this.filterQueryParams.journey_id === selectedTrain.groupId) {\n            return enable;\n        }\n\n        return !enable;\n    }\n\n    private handleClassChangeOfSelectedTrain(selectedTrain: TrainSelection): void {\n        if (\n            selectedTrain.journeyType === 'onwardJourney' &&\n            (!this.isRoundTrip || !this.selectedOption.return?.selected)\n        ) {\n            this.selectedOption.return = {} as TrainSelection;\n            this.trainSelection(selectedTrain);\n            return;\n        }\n\n        const allowClassChange = this.isClassChangeAllowed(selectedTrain);\n        if (allowClassChange || !selectedTrain.selected) {\n            this.trainSelection(selectedTrain);\n        } else {\n            this.openClassChangeAlert(selectedTrain);\n        }\n    }\n\n    private loadSelection(): void {\n        this.selectedOption = this.trainService.getTrainSelections();\n        if (this.selectedOption.onward && this.selectedOption.onward.selected) {\n            this.onOnwardChange(this.selectedOption.onward);\n            this.filterQueryParams.journey_id = this.selectedOption.onward.groupId;\n        }\n\n        if (this.selectedOption.return && this.selectedOption.return.selected) {\n            this.onReturnChange(this.selectedOption.return);\n            this.filterQueryParams.journey_id = this.selectedOption.return.groupId;\n        }\n    }\n\n    private setSortingValue(): void {\n        const sort = SearchUtilsService.getSortingValue(ServiceId.TRAIN);\n\n        if (sort) {\n            this.filterQueryParams.sort_by = sort;\n        }\n    }\n\n    private scrollToConfirmationBlock(): void {\n        setTimeout(() => {\n            requestAnimationFrame(() => {\n                requestAnimationFrame(() => {\n                    this.scrollToElement(this.confirmationComponent, { block: 'end' });\n                });\n            });\n        }, 500);\n    }\n\n    private scrollToTrainsList(): void {\n        if (this.trainListSkeletonLoaderElementReference) {\n            this.scrollToElement(this.trainListSkeletonLoaderElementReference);\n        } else {\n            this.scrollToElement(this.trainListElementReference);\n        }\n    }\n\n    private shouldPreserveSelection(): boolean {\n        const state = history.state;\n        if (state && state.extra) {\n            if (state.extra && state.extra.hasOwnProperty('preserveSelection')) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private isChangeOptionsFromBasket() {\n        const state = history.state;\n        if (state && state.extra) {\n            if (state.extra && state.extra.hasOwnProperty('changeOptions')) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"tz-container trains-container flex\" [hidden]=\"noResultAvailable\">\n    <div *ngIf=\"(isMobile$ | async) === false\" class=\"tz-filter-container\">\n        <tz-results-filters\n            [filter]=\"trainsFilter\"\n            [loading]=\"loaderService.skeletonLoading\"\n            [disabled]=\"confirmable\"\n            (filterChanged)=\"onFilterChanged($event)\"\n        ></tz-results-filters>\n    </div>\n\n    <div class=\"trains-results-container\">\n        <div *ngIf=\"platformService.isMobileDevice$ | async\">\n            <tz-flight-train-button-toggle\n                [selectedButton]=\"'trains'\"\n                [skeletonLoading]=\"loaderService.skeletonLoading || twoTransports.has === null\"\n                *ngIf=\"twoTransports.has || twoTransports.has === null\"\n            ></tz-flight-train-button-toggle>\n            <tz-mob-filter-navbar\n                [sortKey]=\"filterQueryParams.sort_by\"\n                [sortByOptions]=\"sortByOptions\"\n                [isEnableClearFilter]=\"isEnableClearFilter\"\n                [filtersCount]=\"selectedFiltersCount\"\n                [skeletonLoading]=\"loaderService.skeletonLoading || notComplete\"\n                (openFilter)=\"onOpenFilterModal()\"\n                (resetFilter)=\"onResetFilter()\"\n                (openSort)=\"mobOpenSort()\"\n            ></tz-mob-filter-navbar>\n        </div>\n\n        <div *ngIf=\"!platformService.isMobileDevice\" class=\"result-top-info-block-item\">\n            <tz-results-top-info-block blockType=\"blue\">\n                <div [innerHTML]=\"serviceTitle | safeHtml\"></div>\n            </tz-results-top-info-block>\n        </div>\n\n        <div class=\"trains-list-container\">\n            <div *ngIf=\"!platformService.isMobileDevice\" class=\"trains-top-navbar flex\">\n                <div class=\"trains-filter-btn inline-flex\" *ngIf=\"isMobile$ | async\">\n                    <tz-filter-btn\n                        [filterCount]=\"filterCount(trainsFilter)\"\n                        (clickFilter)=\"onOpenFilterPopup()\"\n                        (clearFilter)=\"onResetFilter()\"\n                    ></tz-filter-btn>\n                </div>\n\n                <tz-price-range-filter\n                    [sort]=\"filterQueryParams.sort_by\"\n                    [options]=\"sortByOptions\"\n                    [disabled]=\"confirmable\"\n                    [skeletonLoading]=\"loaderService.skeletonLoading\"\n                    (sortChange)=\"sortTrains($event)\"\n                ></tz-price-range-filter>\n\n                <tz-flight-train-button-toggle\n                    [selectedButton]=\"'trains'\"\n                    [skeletonLoading]=\"loaderService.skeletonLoading || twoTransports.has === null\"\n                    *ngIf=\"twoTransports.has || twoTransports.has === null\"\n                ></tz-flight-train-button-toggle>\n            </div>\n\n            <ng-container *ngIf=\"loaderService.skeletonLoading\">\n                <div\n                    #trainListSkeletonLoader\n                    *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n                    class=\"train-results-skeleton-loader flex\"\n                >\n                    <tz-flight-train-skeleton-loader></tz-flight-train-skeleton-loader>\n                </div>\n                <div #trainListSkeletonLoader *ngIf=\"platformService.isMobileDevice$ | async\">\n                    <tz-mob-flight-train-skeleton-loader></tz-mob-flight-train-skeleton-loader>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"!loaderService.skeletonLoading\">\n                <ng-container *ngIf=\"trainCartData && trainCartData.items && trainCartData.items.length\">\n                    <div class=\"tz-block-separator-title\">\n                        <tz-block-separator>{{ getTrainTitle() }}</tz-block-separator>\n                    </div>\n                    <div *ngIf=\"!isChangeOptions\">\n                        <ng-container>\n                            <tz-selected-trains\n                                [trainItems]=\"trainCartData.items\"\n                                [serviceList]=\"true\"\n                                (removedItem)=\"onRemovedSelectedTrain($event)\"\n                                (changeOptions)=\"onChangeOptions()\"\n                                (changeTickets)=\"onChangeTickets()\"\n                            ></tz-selected-trains>\n                        </ng-container>\n                    </div>\n                </ng-container>\n\n                <div class=\"train-results flex flex-column\" #trainList>\n                    <ng-container *ngFor=\"let section of trainSections\">\n                        <tz-trains-list\n                            [totalPassengers]=\"totalPassengers\"\n                            [section]=\"section\"\n                            [selectedOption]=\"selectedOption\"\n                            [showTrainDetail]=\"showDetails\"\n                            [isRoundTrip]=\"isRoundTrip\"\n                            [isChangeOptions]=\"isChangeOptions\"\n                            [hideTitle]=\"isChangeOptions\"\n                            (trainDetailClosed)=\"onTrainDetailClosed($event)\"\n                            (selectedClassChange)=\"onClassSelection($event)\"\n                            (selectedTrainChange)=\"onTrainSelection($event)\"\n                            (mobShowTrainDetails)=\"mobShowTrainDetails($event)\"\n                            (nextPage)=\"nextPage(section)\"\n                            [confirmable]=\"confirmable\"\n                        ></tz-trains-list>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n\n        <div\n            *ngIf=\"confirmable && !platformService.isMobileDevice\"\n            #confirmationComponent\n            class=\"confirm-and-continue-block\"\n        >\n            <tz-service-booking-confirmation\n                (cancelSelection)=\"onCancelSelection()\"\n                (submitBooking)=\"onSubmitBooking()\"\n            ></tz-service-booking-confirmation>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { TrainsRoutingModule } from './trains-routing.module';\nimport { TrainsComponent } from './trains.component';\nimport { TransportCommonModule } from '../common/transport.common.module';\nimport { TrainsListComponent } from './components/trains-list/trains-list.component';\nimport { TrainsSectionTitleComponent } from './components/trains-section-title/trains-section-title.component';\nimport { TrainsListItemComponent } from './components/trains-list-item/trains-list-item.component';\nimport { TrainTermsComponent } from './components/terms/terms.component';\nimport { ResultsCartItemSelectionModule } from '../../results-cart-item-selection.module';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ResultsFiltersModule } from '../../results-filters/results-filters.module';\n\n@NgModule({\n    declarations: [\n        TrainsComponent,\n        TrainsListComponent,\n        TrainsSectionTitleComponent,\n        TrainsListItemComponent,\n        TrainTermsComponent,\n    ],\n    imports: [\n        CommonModule,\n        SharedModule,\n        TrainsRoutingModule,\n        InfiniteScrollModule,\n        TransportCommonModule,\n        ResultsCartItemSelectionModule,\n        ResultsFiltersModule,\n    ],\n})\nexport class TrainsModule {}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ICartSelectedItem } from '@schemas/modules/cart/cart-selected-item';\nimport { TrainSelection } from '@schemas/modules/trains/train-search-query-params';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TrainUtilsService {\n    constructor(private translateService: TranslateService) {}\n\n    public static buildTrainSelection(selectedItem: ICartSelectedItem | undefined): TrainSelection {\n        if (!selectedItem) {\n            return {} as TrainSelection;\n        }\n        return {\n            id: selectedItem.id,\n            tzClass: selectedItem.data.onward.trainClass.tzClass,\n            groupId: selectedItem.data.onward.groupId,\n            tripId: selectedItem.data.onward.tripID,\n            selected: true,\n            fromLocation: selectedItem.data.onward.departure.location.city,\n            toLocation: selectedItem.data.onward.arrival.location.city,\n            tzSubClass: selectedItem.data.onward.trainClass.tzSubClass,\n            classId: selectedItem.data.onward.id,\n            journeyType: selectedItem.type,\n            showDetails: false,\n        };\n    }\n\n    public formSectionTitle(\n        isRoundTrip: boolean,\n        selected: boolean,\n        flyType: string,\n        count: number,\n        from: string | undefined,\n        to: string | undefined\n    ): string {\n        if (selected) {\n            return this.buildSelectedTitle(false, from, to);\n        } else {\n            const sectionType = isRoundTrip\n                ? flyType === 'onwardJourney'\n                    ? 'TRAIN.OUTBOUND'\n                    : 'TRAIN.RETURN_TRAIN'\n                : flyType === 'onwardJourney'\n                ? 'TRAIN.OUTBOUND_ONE_WAY'\n                : 'TRAIN.RETURN_TRAIN';\n            const tripType = this.translateService.instant(sectionType);\n\n            return this.translateService.instant('GENERAL.' + (count > 1 ? 'OPTIONS_FOUND' : 'OPTION_FOUND'), {\n                tripType,\n                resultsCount: count,\n            });\n        }\n    }\n\n    public getSelectedTitle(trainCartData: any | undefined): string {\n        if (trainCartData && trainCartData.items && trainCartData.items.length) {\n            const from = trainCartData.items[0].selectedItem.data.onward.departure.location.city;\n            const to = trainCartData.items[0].selectedItem.data.onward.arrival.location.city;\n\n            return this.buildSelectedTitle(\n                trainCartData.items.length > 1 && !trainCartData.items[0].isVirtual.j,\n                from,\n                to\n            );\n        }\n        return '';\n    }\n\n    private buildSelectedTitle(isRoundTrip: boolean, from: string | undefined, to: string | undefined) {\n        return this.translateService.instant(isRoundTrip ? 'TRAIN.SELECTED' : 'TRAIN.SELECTED_ONE_WAY', {\n            transportRoute: `${from} – ${to}` + (isRoundTrip ? ` – ${from}` : ''),\n        });\n    }\n}\n"],"names":["BehaviorSubject","Subject","BaseServiceComponent","ServiceId","ListenerId","Trip","StateFrom","finalize","skip","takeUntil","tap","TrainSort","TrainUtilsService","MobTrainDetailsComponent","FilterService","SearchUtilsService","ResultsFiltersUtils","i0","ctx_r7","ctx_r0","ctx_r9","ctx_r10","ctx_r12","ctx_r13","ctx_r1","ctx_r16","ctx_r18","ctx_r15","ctx_r19","ctx_r3","ctx_r29","ctx_r31","ctx_r32","ctx_r34","ctx_r36","ctx_r37","ctx_r38","ctx_r39","section_r33","ctx_r27","ctx_r41","ctx_r43","TrainsComponent","constructor","trainService","flightTrainSearchService","injector","trainUtilsService","TRAIN","has","onwardJourney","returnJourney","journeyType","searchDataService","travelType","isMobile$","screenSizeDetectorService","isMobile","isNextSummary","nextIsSummary","twoTransports","pipe","destroy$","subscribe","console","log","isEnableClearFilter","enableClearAll","trainsFilter","ngOnInit","scrollToTop","initializeTrainComponent","searchRunning","showSkeletonLoader","loadTrainsData","updateTrainSelection","trainSelection","mobUpdateTrainSelection","ngOnDestroy","setTrainSelections","selectedOption","listenersService","unregisterListener","editListener","repriceListenerId","next","complete","onFilterChanged","$event","scrollToServiceContainer","resetPaginationParameters","filterTrains","onOpenFilterPopup","filter","openFilterDialog","resultsCount$","showSidebarMobile","sortTrains","sortValue","saveSortingValue","filterQueryParams","sort_by","onSubmitBooking","addTrainToCart","response","userSearchService","searchCheckDep","error","onCancelSelection","clearTrainsSelection","reInit","onTrainSelection","selectedTrain","handleClassChangeOfSelectedTrain","onClassSelection","selected","onOnwardChange","onReturnChange","onTrainDetailClosed","showDetails","onRemovedSelectedTrain","optionId","removeService","serviceId","then","isRemoved","getTrainTitle","getSelectedTitle","trainCartData","onChangeOptions","items","journey_id","selectedItem","data","onward","groupId","onwardId","id","isRoundTrip","length","returnId","isChangeOptions","platformService","isMobileDevice","mobChangeOptions","onChangeTickets","scrollToTrainsList","onOpenFilterModal","filters","openFilterModal","onResetFilter","filters$","resetFilter","mobOpenSort","sort$","sortKey","openSortMob","sortByOptions","mobShowTrainDetails","train","onwardTrain","trainSections","modal","modalService","createDetailsPage","passengersNumber","totalPassengers","title","isHeaderBottomDivider","isConfirmable","twoWayFlight","nextPage","section","loading","params","limit","increment","start","sortBy","paginate","trains","concat","isListCompleted","limiter","isCartItems","returnTrainChange$","return","handleExtraParams","state","history","extra","extraAction","hasOwnProperty","isInit","ROUND_TRIP","initSearchParams","getCartServiceData","shouldPreserveSelection","_a","loadSelection","setSortingValue","registerListener","LISTEN_EDIT_TRAIN","bind","settingsService","selectedLanguageSubject","currencyService","selectedCurrencySubject","serviceTitle","formServiceTitle","FLIGHT_TRAIN","LISTEN_REPRICED","refreshFilter","Object","handleTrainsDataResponse","trainsResponse","keepSelected","ogs","filterService","filterChange$","selectedFiltersCount","selectedFiltersCounter","getTrainSelections","buildTrainSelection","_b","_c","dataId","_d","_e","_f","_g","_h","filterTrainsRemoveCartItem","checkConfirmable","count","selectedID","trainListMetadata","cartIds","push","checkConsistency","search","getSearch","passengers","total","checkResultsAvailable","loaderService","skeletonLoading","searchServiceData","minTrainPrice","minimalPrice","searchData","getSearchData","tripCal","twoDates","filterCount","checkServiceFailedAndNotify","setTimeout","window","prerenderReady","filterServiceData","getSelectedTrainsFromCart","router","getCurrentNavigation","extras","from","SUMMARY","TAB","showSidebar","confirmable","scrollToConfirmationBlock","changeTrainClass","selectedTrainClass","selectedTripTrain","selectTrainClass","trainClasses","trainClasse","trainClass","tzClass","tzSubClass","trainSection","classId","changedTrainSelection","tripId","tripID","openClassChangeAlert","translateService","instant","dialogService","openConfirmationDialog","multipleContent","toLowerCase","cancelBtnTitle","confirmBtnTitle","afterClosed","changeClass","isClassChangeAllowed","enable","allowClassChange","sort","getSortingValue","requestAnimationFrame","scrollToElement","confirmationComponent","block","trainListSkeletonLoaderElementReference","trainListElementReference","isChangeOptionsFromBasket","selectors","viewQuery"],"sourceRoot":"webpack:///"}