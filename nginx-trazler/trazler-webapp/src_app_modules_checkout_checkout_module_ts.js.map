{"version":3,"file":"src_app_modules_checkout_checkout_module_ts.js","mappings":"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","sources":["./src/app/modules/checkout/checkout-routing.module.ts","./src/app/modules/checkout/checkout.component.ts","./src/app/modules/checkout/checkout.component.html","./src/app/modules/checkout/checkout.module.ts","./src/app/modules/checkout/components/checkout-profile/checkout-profile.component.ts","./src/app/modules/checkout/components/checkout-profile/checkout-profile.component.html","./src/app/modules/checkout/components/mob-additional-luggages/mob-additional-luggages.component.ts","./src/app/modules/checkout/components/mob-additional-luggages/mob-additional-luggages.component.html","./src/app/modules/checkout/components/mob-transport-luggages/mob-transport-luggages.component.ts","./src/app/modules/checkout/components/mob-transport-luggages/mob-transport-luggages.component.html","./src/app/modules/checkout/components/mob-travel-insurance/mob-travel-insurance.component.ts","./src/app/modules/checkout/components/mob-travel-insurance/mob-travel-insurance.component.html","./src/app/modules/checkout/components/process-payment/process-payment.component.ts","./src/app/modules/checkout/components/process-payment/process-payment.component.html","./src/app/modules/checkout/components/profile-travellers/profile-travellers.component.ts","./src/app/modules/checkout/components/profile-travellers/profile-travellers.component.html","./src/app/modules/checkout/components/stripe/stripe.component.ts","./src/app/modules/checkout/components/stripe/stripe.component.html","./src/app/modules/checkout/components/transport-luggages/transport-luggages.component.ts","./src/app/modules/checkout/components/transport-luggages/transport-luggages.component.html","./src/app/modules/checkout/components/travel-insurance/travel-insurance.component.ts","./src/app/modules/checkout/components/travel-insurance/travel-insurance.component.html","./src/app/modules/checkout/components/travellers/travellers.component.ts","./src/app/modules/checkout/components/travellers/travellers.component.html","./src/app/modules/results/tabsUtils/tz-tabs-service.ts","./src/app/services/modules/checkout/dataservices/checkout.data.service.ts","./src/app/services/modules/checkout/services/checkout-error.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CheckoutComponent } from './checkout.component';\n\nconst routes: Routes = [{ path: '', component: CheckoutComponent }];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class CheckoutRoutingModule {}\n","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { TzCheckoutService } from '@services/modules/checkout/services/tz-checkout.service';\nimport { CartTravellerInfo, CheckoutTraveller } from '@schemas/modules/checkout/cart-traveller';\nimport { TzTravellerService } from '@services/services/tzTraveller.service';\nimport { TravellerType } from '@core/constants/traveller-type';\nimport { CheckoutLuggages, SelectedLuggageAmount } from '@schemas/modules/checkout/transport-luggage';\nimport { CheckoutCartServiceSummary } from '@schemas/modules/checkout/cart-summary';\nimport { SettingsService } from '@services/services/settings-service';\nimport { skip, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { CheckoutDataService } from '@services/modules/checkout/dataservices/checkout.data.service';\nimport { Insurance, SelectedInsurance, TzTravelInsurance } from '@schemas/modules/checkout/travel-insurance';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { ScrollService } from '@services/modules/core/scroll-service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PlatformService } from '@services/platform.service';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Component({\n    selector: 'tz-checkout',\n    templateUrl: './checkout.component.html',\n    styleUrls: ['./checkout.component.scss', './checkout.component.mobile.scss'],\n})\nexport class CheckoutComponent implements OnInit, OnDestroy {\n    public checkout: any = {\n        isStripeValid: false,\n        invoiceRequired: false,\n        agreeToTerms: false,\n        healthDeclarationChecked: false,\n        baggageSelected: false,\n        insurance: { selected: {} as Insurance, selectedIdx: null, validatedTC: false } as SelectedInsurance,\n        additionalLuggagePrice: { listPrice: 0, listPriceCur: '' } as SelectedLuggageAmount,\n        transportID: '',\n    };\n\n    public travellersForm = new FormGroup({});\n    public paymentForm = new FormGroup({});\n    public cartInfo!: CartTravellerInfo;\n    public checkoutLuggages!: CheckoutLuggages;\n    public cartSummary: CheckoutCartServiceSummary[] = [];\n    public cartData!: ICart;\n    public tzTravelInsurances!: TzTravelInsurance;\n    public activeTab: 0 | 1 = 0; // 0: travellers tab, 1: payment tab\n    public summaryExpanded = false;\n    public insuranceTouched = false;\n\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private cartService: CartService,\n        private fb: FormBuilder,\n        private tzTravellerService: TzTravellerService,\n        private tzCheckoutService: TzCheckoutService,\n        private cartRoutingService: CartRoutingService,\n        private settingsService: SettingsService,\n        private searchDataService: SearchDataService,\n        private checkoutDataService: CheckoutDataService,\n        private userService: UserService,\n        private scrollService: ScrollService,\n        private loaderService: LoaderService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        public platformService: PlatformService\n    ) {}\n\n    get profileFormGroup(): FormGroup {\n        return this.paymentForm?.get('profile') as FormGroup;\n    }\n\n    get paymentFormGroup(): FormGroup {\n        return this.paymentForm?.get('payment') as FormGroup;\n    }\n\n    get transportFormArray(): FormArray {\n        return this.travellersForm.controls['transport'] as FormArray;\n    }\n\n    get insuranceSelected(): boolean {\n        return (\n            !this.tzTravelInsurances ||\n            this.tzTravelInsurances?.insurances.length === 0 ||\n            (this.tzTravelInsurances?.insurances.length > 0 && this.checkout.insurance.selectedIdx !== null)\n        );\n    }\n\n    private get hotelFormArray(): FormArray {\n        return this.travellersForm.controls['hotel'] as FormArray;\n    }\n\n    @HostListener('window:beforeunload')\n    beforeUnload() {\n        this.draftTravellerInfo();\n    }\n\n    ngOnInit() {\n        this.scrollService.scrollToTop();\n        this.initializeCheckoutComponent();\n    }\n\n    ngOnDestroy(): void {\n        this.draftTravellerInfo();\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public updateHelper() {\n        this.cartData = {\n            ...this.cartData,\n            helpers: this.tzCheckoutService.getHelpers(\n                this.cartData,\n                this.checkout.additionalLuggagePrice,\n                this.checkout.insurance.selected\n            ),\n        };\n    }\n\n    public switchTab(tabId: 0 | 1): void {\n        if (tabId === 1) {\n            if (this.travellersForm.invalid || !this.insuranceSelected) {\n                this.scrollService.scrollTo(this.onMarkFormAsVisited(), 70, true);\n                return;\n            } else if (this.cartInfo.FLIGHT_TRAIN && this.userService.IsLogged()) {\n                for (const traveller of this.checkout.passengerDetails as CheckoutTraveller[]) {\n                    if (\n                        traveller.id !== undefined &&\n                        traveller.id !== '' &&\n                        traveller.updateTraveller &&\n                        traveller.travellerUpdated\n                    ) {\n                        const updateInfo = traveller.docNotRequired\n                            ? this.tzTravellerService.formProfileTraveller(traveller)\n                            : traveller;\n                        this.tzTravellerService.updateTraveller(updateInfo);\n                        traveller.travellerUpdated = false;\n                    } else if ((traveller.id === undefined || traveller.id === '') && traveller.saveTraveller) {\n                        this.tzTravellerService.saveTraveller(traveller);\n                    }\n                }\n            }\n\n            if (this.cartInfo.FLIGHT_TRAIN) {\n                const selctedInsurance = this.checkout.insurance;\n                const hasSelectedOption = selctedInsurance.selectedIdx !== null && selctedInsurance.selectedIdx !== -1;\n                if (hasSelectedOption) {\n                    this.getTravelInsurance(true);\n                    return;\n                }\n\n                this.getTravelInsurance();\n            }\n        }\n\n        this.goto(tabId);\n    }\n\n    public gotoSummary(): void {\n        this.cartRoutingService.moveToSummary();\n    }\n\n    public onInsuranceChange(insurance: SelectedInsurance): void {\n        this.checkout.insurance = insurance;\n        this.updateHelper();\n    }\n\n    public onEmailFieldClicked(): void {\n        this.dialogService.openSnackBarDialog(this.translateService.instant('NOTIFS.MAIL_EDIT_MSG'));\n    }\n\n    public onMarkFormAsVisited(markUntil?: string): string {\n        let invalidId = '';\n        if (this.activeTab === 1) {\n            return invalidId;\n        }\n\n        const checkFormValidity = (formGroupArr: FormGroup[], formIdPrefix: string) => {\n            for (const [idx, formGroup] of formGroupArr.entries()) {\n                if (!formGroup) {\n                    return false;\n                }\n\n                const formId = formIdPrefix + idx;\n                if (formGroup.invalid && invalidId === '') {\n                    invalidId = formId;\n                }\n\n                if (markUntil !== '' && markUntil === formId) {\n                    this.tzTravellerService.updateTravellerForm$.next(true);\n                    return true;\n                }\n\n                Object.keys(formGroup.controls).forEach((key) => {\n                    formGroup.controls[key].markAsDirty();\n                    formGroup.controls[key].markAsTouched();\n                });\n            }\n\n            this.tzTravellerService.updateTravellerForm$.next(true);\n            return false;\n        };\n\n        if (this.travellersForm.invalid) {\n            if (checkFormValidity(this.transportFormArray.controls as FormGroup[], 'TRANSPORT_TRAVELER_')) {\n                return invalidId;\n            }\n\n            if (checkFormValidity(this.hotelFormArray.controls as FormGroup[], 'ACC_TRAVELER_')) {\n                return invalidId;\n            }\n\n            if (checkFormValidity([this.travellersForm.controls['transfer']] as FormGroup[], 'TRANSFER_TRAVELER_')) {\n                return invalidId;\n            }\n\n            if (checkFormValidity([this.travellersForm.controls['rental']] as FormGroup[], 'RENTAL_TRAVELER_')) {\n                return invalidId;\n            }\n        }\n\n        if (!this.insuranceSelected) {\n            this.insuranceTouched = true;\n\n            if (invalidId === '') {\n                invalidId = 'TRAVEL_INSURANCE';\n            }\n        }\n\n        return invalidId;\n    }\n\n    private initializeCheckoutComponent(): void {\n        this.cartService.reInit().then((cartData: ICart) => {\n            this.loaderService.triggerLoading.emit({ loading: false });\n            if (!cartData || !cartData.items || Object.keys(cartData.items).length === 0) {\n                this.gotoSummary();\n                return;\n            }\n\n            this.cartData = cartData;\n            this.checkout.transportID = this.getTransportID();\n            this.formCheckoutTravellers(cartData);\n            this.updateCartInfos();\n            this.formCheckoutPayment(this.cartData.helpers.payNowInt > 0);\n            this.formDraftValues();\n            this.checkSignedIn();\n\n            this.settingsService.selectedLanguageSubject.pipe(skip(1), takeUntil(this.destroy$)).subscribe(() => {\n                this.updateCartInfos();\n                this.getTravelInsurance();\n            });\n\n            this.userService.loggedIn$.pipe(skip(1), takeUntil(this.destroy$)).subscribe((isLogged) => {\n                this.formProfileData();\n            });\n        });\n    }\n\n    private updateCartInfos(): void {\n        this.cartSummary = this.tzCheckoutService.formCheckoutCartSummary(this.cartData.items);\n        this.checkoutLuggages = this.tzCheckoutService.formTransportLuggage(this.cartData);\n        this.cartData.helpers = this.tzCheckoutService.getHelpers(\n            this.cartData,\n            this.checkout.additionalLuggagePrice,\n            this.checkout.insurance.selected\n        );\n    }\n\n    private formCheckoutTravellers(cartData: ICart): void {\n        const group: any = {\n            transport: this.fb.array([]),\n            hotel: this.fb.array([]),\n        };\n        this.cartInfo = this.tzCheckoutService.formCartTravellersData(cartData);\n\n        if (this.cartInfo.TRANSFER) {\n            this.checkout.transferPassenger = { type: TravellerType.ADULT } as CheckoutTraveller;\n            group.transfer = this.fb.group(this.tzTravellerService.createTravellerGroup('transfer'));\n        }\n\n        if (this.cartInfo.RENTAL) {\n            this.checkout.rentalPassenger = {\n                type: TravellerType.ADULT,\n                selectedAge: this.cartInfo.RENTAL.driversAge,\n            } as CheckoutTraveller;\n\n            group.rental = this.fb.group(this.tzTravellerService.createTravellerGroup('rental'));\n        }\n\n        this.travellersForm = this.fb.group(group);\n\n        if (this.cartInfo.FLIGHT_TRAIN) {\n            const travellers = this.tzTravellerService.newFlightTrainTravellers(this.cartInfo.FLIGHT_TRAIN);\n            this.checkout.passengerDetails = travellers;\n\n            for (const traveller of travellers) {\n                this.transportFormArray.push(\n                    this.fb.group(this.tzTravellerService.createTravellerGroup('transport', traveller.docNotRequired))\n                );\n            }\n        }\n\n        if (this.cartInfo.ACC) {\n            const travellers = this.tzTravellerService.newAccTravellers(this.cartInfo.ACC);\n            this.checkout.hotelPassengers = travellers;\n\n            for (const traveller of travellers) {\n                this.hotelFormArray.push(this.fb.group(this.tzTravellerService.createTravellerGroup('acc')));\n            }\n        }\n    }\n\n    private formCheckoutPayment(formStripe: boolean): void {\n        const group: any = {\n            profile: this.fb.group(this.tzCheckoutService.getProfileGroup()),\n            billing: this.fb.group(this.tzCheckoutService.getBillingGroup()),\n        };\n\n        if (formStripe) {\n            group.payment = this.fb.group(this.tzCheckoutService.getPaymentGroup());\n        }\n\n        this.paymentForm = this.fb.group(group);\n        this.tzCheckoutService.setBillingValue(this.paymentForm?.get('billing') as FormGroup);\n    }\n\n    private setDraftValues(checkoutDataStr: string): void {\n        if (!checkoutDataStr || checkoutDataStr === '') {\n            return;\n        }\n\n        const checkoutData = JSON.parse(\n            this.tzCheckoutService.formCheckoutDraftValues(checkoutDataStr, this.cartInfo, this.checkout, {\n                transport: this.transportFormArray,\n                hotel: this.hotelFormArray,\n            })\n        );\n\n        if (!this.paymentFormGroup && checkoutData.paymentFormValue.payment) {\n            delete checkoutData.paymentFormValue.payment;\n        }\n\n        this.checkout = checkoutData.checkoutData;\n        this.getTravelInsurance();\n        this.travellersForm.patchValue({ ...this.travellersForm.value, ...checkoutData.travellersFormValue });\n        this.paymentForm.patchValue({ ...this.paymentForm.value, ...checkoutData.paymentFormValue });\n        // this.switchTab(checkoutData.activeTab);\n        this.updateHelper();\n        this.draftTravellerInfo();\n\n        this.tzCheckoutService.setBillingValidators(\n            this.paymentForm?.get('billing') as FormGroup,\n            this.checkout.invoiceRequired\n        );\n\n        if (this.cartData.helpers.payNowInt > 0) {\n            this.checkout.isStripeValid = false;\n        }\n    }\n\n    private getTransportID(): string {\n        if (this.cartData.items) {\n            for (const item of this.cartData.items) {\n                if (item.serviceId === ServiceId.FLIGHT) {\n                    return item.selectedItem.data.id;\n                }\n            }\n        }\n\n        return '';\n    }\n\n    private draftTravellerInfo(): void {\n        this.checkout.transportID = this.getTransportID();\n        const checkoutDataStr = JSON.stringify({\n            travellersFormValue: this.travellersForm.value,\n            paymentFormValue: this.paymentForm.value,\n            checkoutData: this.checkout,\n            activeTab: this.activeTab,\n        });\n\n        StorageManagerUtil.set('checkoutFormData', checkoutDataStr);\n        this.checkoutDataService\n            .setDraftTravellerInfo(this.searchDataService.getCombId(), { data: checkoutDataStr })\n            .subscribe(\n                () => {},\n                (failure: any) => {\n                    console.log('Draft update failed: ', failure);\n                }\n            );\n    }\n\n    private formDraftValues(): void {\n        const checkoutDataStr = StorageManagerUtil.get('checkoutFormData');\n        if (checkoutDataStr !== null) {\n            this.setDraftValues(checkoutDataStr);\n            return;\n        }\n\n        this.checkoutDataService.getDraftTravellerInfo(this.searchDataService.getCombId()).subscribe(\n            (response: { data: string }) => {\n                this.setDraftValues(response.data);\n            },\n            (failure: any) => {\n                console.log(failure);\n                this.getTravelInsurance();\n            }\n        );\n    }\n\n    private getTravelInsurance(gotoPayment = false): void {\n        const bookingReq = this.tzCheckoutService.makeBookingReq(this.cartData.items, this.checkout, this.paymentForm);\n        this.checkoutDataService.getInsurance(bookingReq).subscribe(\n            (response: TzTravelInsurance) => {\n                if (!response) {\n                    this.onInsuranceChange({\n                        selected: {} as Insurance,\n                        selectedIdx: null,\n                        validatedTC: false,\n                    } as SelectedInsurance);\n                }\n\n                this.tzTravelInsurances = response;\n                const selctedInsurance = this.checkout.insurance;\n                const hasSelectedOption =\n                    selctedInsurance.selectedIdx !== null &&\n                    selctedInsurance.selectedIdx !== -1 &&\n                    response.insurances.length > selctedInsurance.selectedIdx;\n                if (hasSelectedOption) {\n                    const priceChanged =\n                        response.insurances[selctedInsurance.selectedIdx].net.listPrice !==\n                        selctedInsurance.selected.net.listPrice;\n                    if (priceChanged) {\n                        this.onInsuranceChange({\n                            selected: {} as Insurance,\n                            selectedIdx: null,\n                            validatedTC: false,\n                        } as SelectedInsurance);\n                    }\n\n                    if (gotoPayment) {\n                        if (priceChanged) {\n                            this.insuranceTouched = true;\n                            this.scrollService.scrollTo('TRAVEL_INSURANCE', 70, true);\n                        } else {\n                            this.goto(1);\n                        }\n                    }\n                }\n            },\n            (failure: any) => {\n                console.log(failure);\n            }\n        );\n    }\n\n    private formProfileData(): void {\n        const profileValue = this.profileFormGroup.value;\n        if (this.userService.IsLogged()) {\n            delete profileValue.repeatEmailID;\n        } else if (!profileValue.repeatEmailID) {\n            profileValue.repeatEmailID = '';\n        }\n\n        const profileFormGroup = this.fb.group(this.tzCheckoutService.getProfileGroup());\n        if (profileValue.emailID !== '') {\n            if (this.userService.IsLogged()) {\n                delete profileValue.emailID;\n            }\n            profileFormGroup.patchValue(profileValue);\n        }\n\n        this.paymentForm = this.fb.group({\n            billing: this.paymentForm?.get('billing') as FormGroup,\n            payment: this.paymentFormGroup,\n            profile: profileFormGroup,\n        });\n    }\n\n    private checkSignedIn(): void {\n        const skipSignin = StorageManagerUtil.get('skipSignIn');\n        if (skipSignin || this.userService.IsLogged()) {\n            return;\n        }\n\n        const askToLogin = () => {\n            this.userService.openLoginModel(undefined, true).then(\n                () => this.formProfileData(),\n                (reason) => console.log(reason)\n            );\n        };\n\n        if (StorageManagerUtil.get('trazler_customer_token', true)) {\n            this.userService.getCustomer(false).then(\n                () => {},\n                () => {\n                    askToLogin();\n                }\n            );\n            return;\n        }\n\n        askToLogin();\n    }\n\n    private goto(tabId: 0 | 1): void {\n        this.activeTab = tabId;\n        this.scrollService.scrollToTop();\n    }\n}\n","<div class=\"back-btn-container\" *ngIf=\"(platformService.isMobileDevice$ | async) === false\">\n    <div class=\"tz-container flex align-center\">\n        <div class=\"pointer body-2 back-btn\" data-test=\"back-to-basket\" (click)=\"gotoSummary()\">\n            <tz-icon icon=\"arrow_back_ios\"></tz-icon>\n            {{ 'CHECKOUT.BACK_TO_SUMMARY' | translate }}\n        </div>\n        <div class=\"checkout-tab\" data-test=\"checkout-tab\">\n            <a [ngClass]=\"{ 'active-link': activeTab === 0 }\" (click)=\"switchTab(0)\" data-test=\"checkout-travelers\">\n                <div class=\"valid-check\" [ngClass]=\"{ valid: travellersForm.valid && insuranceSelected }\"></div>\n                {{ 'TRAVELLER.TRAVELERS' | translate }}\n            </a>\n            <a [ngClass]=\"{ 'active-link': activeTab === 1 }\" (click)=\"switchTab(1)\" data-test=\"checkout-payment\">\n                <div class=\"valid-check\" [ngClass]=\"{ valid: paymentForm.valid && checkout.isStripeValid }\"></div>\n                {{ 'GENERAL.PAYMENT' | translate }}\n            </a>\n        </div>\n    </div>\n</div>\n<ng-container *ngIf=\"platformService.isMobileDevice$ | async\">\n    <div class=\"checkout-header\">\n        <div class=\"basket-button\">\n            <tz-icon icon=\"arrow_back_ios\" (click)=\"gotoSummary()\" data-test=\"back-to-basket\"></tz-icon>\n        </div>\n        {{ (activeTab === 0 ? 'CHECKOUT.TITLE' : 'GENERAL.PAYMENT') | translate }}\n    </div>\n    <tz-mob-cart-summary-button\n        *ngIf=\"cartData && cartData.items\"\n        (click)=\"summaryExpanded = !summaryExpanded\"\n        [cartData]=\"cartData\"\n        [summaryExpanded]=\"summaryExpanded\"\n    ></tz-mob-cart-summary-button>\n    <tz-cart-summary\n        [ngClass]=\"{ expand: summaryExpanded }\"\n        [cartSummary]=\"cartSummary\"\n        [cartData]=\"cartData\"\n        [luggageAmount]=\"checkout.additionalLuggagePrice\"\n        [selectedInsurance]=\"checkout.insurance\"\n    ></tz-cart-summary>\n</ng-container>\n<div class=\"tz-container flex justify-center\" [ngClass]=\"{ 'mob-checkout-content': platformService.isMobileDevice }\">\n    <div *ngIf=\"cartData\">\n        <div [hidden]=\"activeTab !== 0\">\n            <tz-checkout-travellers\n                [checkout]=\"checkout\"\n                [travellersForm]=\"travellersForm\"\n                [cartInfo]=\"cartInfo\"\n                [cartSummary]=\"cartSummary\"\n                (markFormAsVisited)=\"onMarkFormAsVisited($event)\"\n            >\n                <tz-transport-luggages\n                    *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n                    data-test=\"basket-baggage-information\"\n                    [checkoutLuggages]=\"checkoutLuggages\"\n                    [checkout]=\"checkout\"\n                    [passengerDetails]=\"checkout.passengerDetails\"\n                    [transportFormArray]=\"transportFormArray\"\n                    (updateHelper)=\"updateHelper()\"\n                ></tz-transport-luggages>\n                <tz-mob-transport-luggages\n                    *ngIf=\"platformService.isMobileDevice$ | async\"\n                    data-test=\"basket-baggage-information\"\n                    [checkoutLuggages]=\"checkoutLuggages\"\n                    [checkout]=\"checkout\"\n                    [passengerDetails]=\"checkout.passengerDetails\"\n                    [transportFormArray]=\"transportFormArray\"\n                    (updateHelper)=\"updateHelper()\"\n                ></tz-mob-transport-luggages>\n            </tz-checkout-travellers>\n\n            <div\n                *ngIf=\"tzTravelInsurances\"\n                [ngClass]=\"{ 'insurance-touched': !this.insuranceSelected && insuranceTouched }\"\n            >\n                <tz-travel-insurance\n                    *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n                    [tzTravelInsurances]=\"tzTravelInsurances\"\n                    [selectedInsurance]=\"checkout.insurance\"\n                    (insuranceChange)=\"onInsuranceChange($event)\"\n                ></tz-travel-insurance>\n                <tz-mob-travel-insurance\n                    *ngIf=\"platformService.isMobileDevice$ | async\"\n                    [tzTravelInsurances]=\"tzTravelInsurances\"\n                    [selectedInsurance]=\"checkout.insurance\"\n                    (insuranceChange)=\"onInsuranceChange($event)\"\n                >\n                </tz-mob-travel-insurance>\n            </div>\n            <div class=\"tz-form-container title-mb custom-note-container\">\n                <div class=\"tz-form-container__title title-bold tz-form-title\">\n                    {{ 'CHECKOUT.PAYMENT.CUSTOM_NOTE' | translate }}\n                </div>\n                <div class=\"tz-form-container__form\">\n                    <textarea\n                        class=\"payment-note\"\n                        placeholder=\"{{ 'CHECKOUT.PAYMENT.CUSTOM_NOTE_PLACEHOLDER' | translate }}\"\n                        [(ngModel)]=\"checkout.customNote\"\n                    ></textarea>\n                </div>\n            </div>\n\n            <div class=\"traveller-btn-container\" [ngClass]=\"{ 'tz-fixed-bottom': platformService.isMobileDevice }\">\n                <button\n                    class=\"tz-btn tz-btn-yellow confirm-traveller\"\n                    data-test=\"confirm-and-go-to-payment\"\n                    (click)=\"switchTab(1)\"\n                >\n                    {{ 'CHECKOUT.GO_TO_PAYMENT' | translate }}\n                </button>\n            </div>\n        </div>\n\n        <div [hidden]=\"activeTab !== 1\">\n            <tz-checkout-profile\n                (emailLocked)=\"onEmailFieldClicked()\"\n                *ngIf=\"profileFormGroup\"\n                [formGroup]=\"profileFormGroup\"\n            ></tz-checkout-profile>\n            <tz-stripe\n                *ngIf=\"paymentFormGroup\"\n                [formGroup]=\"paymentFormGroup\"\n                [checkout]=\"checkout\"\n                [cartData]=\"cartData\"\n            >\n            </tz-stripe>\n            <div class=\"tz-form-container mt-20 title-mb\" *ngIf=\"profileFormGroup && !paymentFormGroup\">\n                <div class=\"tz-form-container__title title-bold\">{{ 'CHECKOUT.PAYMENT.TITLE' | translate }}</div>\n                <div class=\"tz-form-container__form imprint-msg\" *ngIf=\"cartData && cartData.totalImprintAmt\">\n                    {{ cartData.helpers.imprintText }}\n                </div>\n            </div>\n            <tz-checkout-payment\n                [paymentForm]=\"paymentForm\"\n                [checkout]=\"checkout\"\n                [validTravellers]=\"travellersForm.valid\"\n                [cartData]=\"cartData\"\n            ></tz-checkout-payment>\n        </div>\n    </div>\n    <tz-cart-summary\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n        [cartSummary]=\"cartSummary\"\n        [cartData]=\"cartData\"\n        [luggageAmount]=\"checkout.additionalLuggagePrice\"\n        [selectedInsurance]=\"checkout.insurance\"\n    ></tz-cart-summary>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CheckoutRoutingModule } from './checkout-routing.module';\nimport { CheckoutComponent } from './checkout.component';\nimport { TravellersComponent } from './components/travellers/travellers.component';\nimport { SharedModule } from '@shared/shared.module';\nimport { ProfileTravellersComponent } from './components/profile-travellers/profile-travellers.component';\nimport { PaymentComponent } from './components/process-payment/process-payment.component';\nimport { ProfileInfoComponent } from './components/checkout-profile/checkout-profile.component';\nimport { StripeComponent } from './components/stripe/stripe.component';\nimport { TransportLuggagesComponent } from './components/transport-luggages/transport-luggages.component';\nimport { DateRangePipe } from '@shared/pipes/date-range.pipe';\nimport { DatePipe } from '@angular/common';\nimport { TravelInsuranceComponent } from './components/travel-insurance/travel-insurance.component';\nimport { MobTransportLuggagesComponent } from './components/mob-transport-luggages/mob-transport-luggages.component';\nimport { MobAdditionalLuggagesComponent } from './components/mob-additional-luggages/mob-additional-luggages.component';\nimport { MobTravelInsuranceComponent } from './components/mob-travel-insurance/mob-travel-insurance.component';\n\n@NgModule({\n    declarations: [\n        CheckoutComponent,\n        TravellersComponent,\n        ProfileTravellersComponent,\n        PaymentComponent,\n        ProfileInfoComponent,\n        StripeComponent,\n        TransportLuggagesComponent,\n        TravelInsuranceComponent,\n        MobTransportLuggagesComponent,\n        MobAdditionalLuggagesComponent,\n        MobTravelInsuranceComponent,\n    ],\n    imports: [CommonModule, CheckoutRoutingModule, FormsModule, ReactiveFormsModule, SharedModule],\n    providers: [DateRangePipe, DatePipe],\n})\nexport class CheckoutModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PlatformService } from '@services/platform.service';\nimport { TzTravellerService } from '@services/services/tzTraveller.service';\n\n@Component({\n    selector: 'tz-checkout-profile',\n    templateUrl: './checkout-profile.component.html',\n    styleUrls: ['./checkout-profile.component.scss'],\n})\nexport class ProfileInfoComponent implements OnInit {\n    @Input() formGroup = new FormGroup({});\n\n    @Output() emailLocked = new EventEmitter<void>();\n\n    public phoneFocused = false;\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit() {}\n\n    public isInValidField(controlName: string): boolean {\n        return TzTravellerService.invalidControl(this.formGroup, controlName);\n    }\n}\n","<div class=\"tz-form-container title-mb mb-0\" data-test=\"basket-personal-information\" *ngIf=\"formGroup.get('firstName')\">\n    <div class=\"tz-form-container__title title-bold tz-form-title\">\n        {{ 'ACCOUNT.PROFILE.PERSONAL_INFO' | translate }}\n    </div>\n    <span [id]=\"'PAYMENT_PROFILE'\"></span>\n    <div class=\"tz-form-container__form\">\n        <form class=\"form-group-container\" [formGroup]=\"formGroup\">\n            <div class=\"field-row customer-name\">\n                <div class=\"tz-field\" *ngIf=\"!platformService.isMobileDevice\">\n                    <input\n                        class=\"field\"\n                        data-test=\"basket-personal-input-first-name\"\n                        type=\"text\"\n                        formControlName=\"firstName\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        placeholder=\" \"\n                    />\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.FIRST_MIDDLE_NAME' | translate }}</span>\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error\n                        data-test=\"payment-first-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"firstName\"\n                        fieldType=\"PROFILE_FIRST_MIDDLE_NAME\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'firstName'\"\n                        [fieldType]=\"'PROFILE_FIRST_MIDDLE_NAME'\"\n                        [title]=\"'TRAVELLER.FIRST_MIDDLE_NAME'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"!platformService.isMobileDevice\">\n                    <input\n                        class=\"field\"\n                        data-test=\"basket-personal-input-last-name\"\n                        type=\"text\"\n                        formControlName=\"lastName\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        placeholder=\" \"\n                    />\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.LAST_NAME' | translate }}</span>\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error\n                        data-test=\"payment-last-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"lastName\"\n                        fieldType=\"PROFILE_LAST_NAME\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'lastName'\"\n                        [fieldType]=\"'PROFILE_LAST_NAME'\"\n                        [title]=\"'TRAVELLER.LAST_NAME'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n            </div>\n            <div class=\"field-row\">\n                <div\n                    class=\"tz-field\"\n                    *ngIf=\"!platformService.isMobileDevice\"\n                    (click)=\"!formGroup.get('repeatEmailID') && emailLocked.emit()\"\n                >\n                    <input\n                        class=\"field\"\n                        data-test=\"basket-personal-input-email\"\n                        type=\"text\"\n                        formControlName=\"emailID\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        [readonly]=\"!formGroup.get('repeatEmailID')\"\n                        placeholder=\" \"\n                        [ngClass]=\"{ 'email-updated': !formGroup.get('repeatEmailID') }\"\n                    />\n                    <span class=\"tz-field__name\">{{ 'GENERAL.EMAIL' | translate }}</span>\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error\n                        data-test=\"payment-email-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"emailID\"\n                        fieldType=\"EMAIL\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'emailID'\"\n                        [fieldType]=\"'emailID'\"\n                        [title]=\"'GENERAL.EMAIL'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n                <div\n                    class=\"tz-field\"\n                    *ngIf=\"!formGroup.get('repeatEmailID') && !platformService.isMobileDevice\"\n                    [ngClass]=\"{ focused: phoneFocused, invalid: isInValidField('phone') }\"\n                >\n                    <tz-phone class=\"field\" [formGroup]=\"formGroup\" (inputFocused)=\"phoneFocused = $event\"></tz-phone>\n                    <span class=\"tz-field__name\">{{ 'GENERAL.MOBILE_NUMBER' | translate }}</span>\n                    <tz-form-error\n                        *ngIf=\"!phoneFocused\"\n                        data-test=\"payment-mobile-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"phone\"\n                        fieldType=\"PHONE\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"!formGroup.get('repeatEmailID') && platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'phone'\"\n                        [fieldType]=\"'PHONE'\"\n                        [title]=\"'GENERAL.MOBILE_NUMBER'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"formGroup.get('repeatEmailID') && !platformService.isMobileDevice\">\n                    <input\n                        class=\"field\"\n                        data-test=\"basket-personal-input-repeat-email\"\n                        type=\"text\"\n                        formControlName=\"repeatEmailID\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        placeholder=\" \"\n                    />\n                    <span class=\"tz-field__name\">{{ 'PROFILE.REPEAT_EMAIL' | translate }}</span>\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error\n                        data-test=\"payment-repeat-email-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"repeatEmailID\"\n                        fieldType=\"EMAIL\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'repeatEmailID'\"\n                        [fieldType]=\"'EMAIL'\"\n                        [title]=\"'PROFILE.REPEAT_EMAIL'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n            </div>\n            <div class=\"field-row\" *ngIf=\"formGroup.get('repeatEmailID')\">\n                <div\n                    class=\"tz-field\"\n                    *ngIf=\"!platformService.isMobileDevice\"\n                    [ngClass]=\"{ focused: phoneFocused, invalid: isInValidField('phone') }\"\n                >\n                    <tz-phone\n                        class=\"field\"\n                        [formGroup]=\"formGroup\"\n                        data-test=\"basket-personal-mobile-number\"\n                        (inputFocused)=\"phoneFocused = $event\"\n                    ></tz-phone>\n                    <span class=\"tz-field__name\">{{ 'GENERAL.MOBILE_NUMBER' | translate }}</span>\n                    <tz-form-error\n                        *ngIf=\"!phoneFocused\"\n                        data-test=\"payment-mobile-number-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"phone\"\n                        fieldType=\"PHONE\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'phone'\"\n                        [fieldType]=\"'PHONE'\"\n                        [title]=\"'GENERAL.MOBILE_NUMBER'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n            </div>\n        </form>\n        <div class=\"personal-info-rule\">\n            {{ 'CHECKOUT.PERSONAL_INFO_RULE' | translate }}\n            <a href=\"https://www.bloctel.gouv.fr\" target=\"_blank\">www.bloctel.gouv.fr</a>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CheckoutTraveller } from '@schemas/modules/checkout/cart-traveller';\nimport { FlightBaggage } from '@schemas/modules/checkout/transport-luggage';\nimport { FlightLuggageOption, FlightLuggageOptionTypes } from '@schemas/modules/flights/flight-luggage.model';\nimport { ModalService } from '@services/modal.service';\nimport { TransportLuggagesUtil } from '@services/modules/checkout/utils/transport-luggages.utils';\nimport { TzCurrencyPipe } from '@shared/pipes/tz-currency.pipe';\nimport { MobPickerWheels } from '@schemas/modules/picker/mob-picker';\nimport { ToolsService } from '@core/utils/tools-service';\n\n@Component({\n    selector: 'tz-mob-additional-luggages',\n    templateUrl: './mob-additional-luggages.component.html',\n    styleUrls: ['./mob-additional-luggages.component.scss'],\n})\nexport class MobAdditionalLuggagesComponent implements OnInit {\n    public flightLuggage!: FlightBaggage;\n    public passengerDetails!: CheckoutTraveller[];\n    public transportLuggagesUtil = TransportLuggagesUtil;\n    public bagTypes!: {\n        txt: string;\n        type: FlightLuggageOptionTypes.CABIN | FlightLuggageOptionTypes.CHECKIN;\n    }[];\n    public openedOptionsStringIdx = '';\n    public selectedLuggageIndexesObj: { [key: number]: number } = {};\n\n    private data!: {\n        flightLuggages: FlightBaggage;\n        checkout: any;\n        passengerDetails: CheckoutTraveller[];\n    };\n    private listPriceCurrency!: string;\n    private defaultPassengerDetails: {\n        cabin: { bagsCount: number; listPrice: string };\n        checkIn: { bagsCount: number; listPrice: string };\n    }[] = [];\n\n    constructor(\n        public translateService: TranslateService,\n        private tzCurrencyPipe: TzCurrencyPipe,\n        private modalService: ModalService\n    ) {}\n\n    public get isPassengerDetailsChanged(): boolean {\n        const newPassengerDetails = this.setDiffPassengerDetails();\n\n        let isChanged = false;\n\n        this.defaultPassengerDetails.map((item, index) => {\n            const passengerDetailsItem = newPassengerDetails[index];\n\n            const defaultCabin = passengerDetailsItem.cabin;\n            const defaultCheckIn = passengerDetailsItem.checkIn;\n\n            if (\n                item.cabin.bagsCount !== defaultCabin.bagsCount ||\n                item.cabin.listPrice !== defaultCabin.listPrice ||\n                item.checkIn.bagsCount !== defaultCheckIn.bagsCount ||\n                item.checkIn.listPrice !== defaultCheckIn.listPrice\n            ) {\n                isChanged = true;\n            }\n        });\n\n        return isChanged;\n    }\n\n    public ngOnInit(): void {\n        this.flightLuggage = this.data.flightLuggages;\n        this.passengerDetails = this.data.passengerDetails;\n        this.bagTypes = [\n            {\n                txt:\n                    this.flightLuggage.checkIn && this.flightLuggage.checkIn.replaceIncluded\n                        ? 'ADD_PASSENGER.Checked_bag_add'\n                        : 'ADD_PASSENGER.Checked_bag',\n                type: FlightLuggageOptionTypes.CHECKIN,\n            },\n        ];\n\n        this.setDefaultPassengerDetails();\n        this.setSelectedLuggageIndexes();\n    }\n\n    public getTravellerName(idx: number): string {\n        return TransportLuggagesUtil.getTravellerName(this.data.passengerDetails[idx], idx, this.translateService);\n    }\n\n    public luggageCombinationAdd(idx: number, option: FlightLuggageOption, bagType: string): void {\n        this.passengerDetails[idx].additionalLuggage = TransportLuggagesUtil.formLuggageCombination(\n            this.passengerDetails[idx].additionalLuggage,\n            option,\n            bagType\n        );\n\n        this.listPriceCurrency = option.prices.listPriceCur;\n    }\n\n    public luggageCombinationRemove(idx: number, option: FlightLuggageOption, bagType: string): void {\n        this.passengerDetails[idx].additionalLuggage = TransportLuggagesUtil.removeLuggageCombination(\n            this.passengerDetails[idx].additionalLuggage,\n            option,\n            bagType\n        );\n\n        this.listPriceCurrency = option.prices.listPriceCur;\n    }\n\n    public confirmLuggageSelection(): void {\n        this.modalService.dismiss({\n            passengerDetails: this.passengerDetails,\n            listPriceCurrency: this.listPriceCurrency,\n        });\n    }\n\n    public openPicker(\n        index: number,\n        options: FlightLuggageOption[],\n        bagType: string,\n        passenger: CheckoutTraveller\n    ): void {\n        const wheels: MobPickerWheels[] = [\n            { display: this.translateService.instant('FLIGHT.LUGGAGE.NO_BAG'), value: -1 },\n        ];\n        let selectedIndex: number | undefined;\n\n        let i = 0;\n        options.map((bagOption) => {\n            if (this.transportLuggagesUtil.getOption(passenger.additionalLuggage, bagType, bagOption.index)?.count) {\n                selectedIndex = i;\n            }\n\n            const price = this.tzCurrencyPipe.transform(bagOption.prices.listPrice, bagOption.prices.listPriceCur);\n            wheels.push({\n                display: bagOption.weightTexts.join(', ') + ' ' + price,\n                value: i,\n            });\n            i++;\n        });\n\n        this.modalService\n            .openPickerModal({ wheels, selected: [selectedIndex] }, { title: 'FLIGHT.LUGGAGE.SELECT' })\n            .then((modal) => {\n                if (modal.data?.selected) {\n                    const modalSelectedItem = parseInt(modal.data?.selected[0], 10);\n                    if (selectedIndex || selectedIndex === 0) {\n                        this.luggageCombinationRemove(index, options[selectedIndex], bagType);\n                    }\n\n                    if (modalSelectedItem !== -1) {\n                        const selectedOptionIndex = parseInt(modal.data.selected[0], 10);\n                        this.selectedLuggageIndexesObj[index] = selectedOptionIndex;\n                        this.luggageCombinationAdd(index, options[selectedOptionIndex], bagType);\n                    }\n\n                    if (modalSelectedItem === -1 && (selectedIndex || selectedIndex === 0)) {\n                        this.luggageCombinationRemove(index, options[selectedIndex], bagType);\n                        delete this.selectedLuggageIndexesObj[index];\n                    }\n                }\n            });\n    }\n\n    public removeSelectedLuggage(\n        idx: number,\n        option: FlightLuggageOption,\n        bagType: string,\n        selectedIndex: number\n    ): void {\n        this.passengerDetails[idx].additionalLuggage = TransportLuggagesUtil.removeLuggageCombination(\n            this.passengerDetails[idx].additionalLuggage,\n            option,\n            bagType\n        );\n\n        this.listPriceCurrency = option.prices.listPriceCur;\n\n        delete this.selectedLuggageIndexesObj[selectedIndex];\n    }\n\n    public openOptionItem(index: number): void {\n        this.openedOptionsStringIdx = this.openedOptionsStringIdx + index;\n    }\n\n    private setSelectedLuggageIndexes(): void {\n        this.bagTypes.map((bagTypeInfo) => {\n            this.passengerDetails.map((passenger, index) => {\n                this.flightLuggage[bagTypeInfo.type][passenger.type].options.map((bagOption, index2) => {\n                    if (\n                        this.transportLuggagesUtil.optionPresent(\n                            passenger.additionalLuggage,\n                            bagTypeInfo.type,\n                            bagOption.index\n                        )\n                    ) {\n                        this.selectedLuggageIndexesObj[index] = index2;\n                    }\n                });\n            });\n        });\n    }\n\n    private setDefaultPassengerDetails(): void {\n        this.defaultPassengerDetails = this.setDiffPassengerDetails();\n    }\n\n    private setDiffPassengerDetails(): {\n        cabin: { bagsCount: number; listPrice: string };\n        checkIn: { bagsCount: number; listPrice: string };\n    }[] {\n        const passengerDetailsArr: {\n            cabin: { bagsCount: number; listPrice: string };\n            checkIn: { bagsCount: number; listPrice: string };\n        }[] = [];\n\n        this.passengerDetails.map((passengerDetails) => {\n            let checkInListPrice = '';\n            for (const [key, value] of Object.entries(passengerDetails.additionalLuggage.checkIn.options)) {\n                checkInListPrice = value.optionPrice.listPrice + '_';\n            }\n\n            let cabinListPrice = '';\n            for (const [key, value] of Object.entries(passengerDetails.additionalLuggage.cabin.options)) {\n                cabinListPrice = value.optionPrice.listPrice + '_';\n            }\n\n            passengerDetailsArr.push({\n                checkIn: {\n                    bagsCount: passengerDetails.additionalLuggage.checkIn.bagsCount,\n                    listPrice: checkInListPrice,\n                },\n                cabin: { bagsCount: passengerDetails.additionalLuggage.cabin.bagsCount, listPrice: cabinListPrice },\n            });\n        });\n\n        return ToolsService.deepCopy(passengerDetailsArr);\n    }\n}\n","<div class=\"additional-luggages-container\">\n    <div class=\"flight-additional-luggages__options\">\n        <div class=\"additional-luggages-container__divider\"></div>\n\n        <div\n            *ngFor=\"let bagTypeInfo of bagTypes\"\n            class=\"additional-luggages-container__form\"\n            [ngClass]=\"{ 'not-combinable': !flightLuggage[bagTypeInfo.type].combinable }\"\n        >\n            <div>\n                <ng-container *ngFor=\"let passenger of passengerDetails; let index = index\">\n                    <div class=\"flight-additional-luggage\">\n                        <ng-container>\n                            <div class=\"traveller-name\" data-mob=\"mob-checkout-traveller-name\">\n                                {{ getTravellerName(index) }}\n                            </div>\n\n                            <div class=\"item-container\" *ngIf=\"flightLuggage[bagTypeInfo.type].combinable\">\n                                <div\n                                    class=\"luggage-type-row\"\n                                    *ngFor=\"let bagOption of flightLuggage[bagTypeInfo.type][passenger.type].options\"\n                                >\n                                    <div class=\"luggage-text-box\">\n                                        <span data-mob=\"mob-checkout-bag-type-info\">\n                                            {{ bagTypeInfo.txt | translate }}\n                                        </span>\n                                        <span data-mob=\"mob-checkout-bag-option-text\"\n                                            >&nbsp;|&nbsp;\n                                            {{ transportLuggagesUtil.formatWeightText(bagOption.weightTexts, true) }}\n                                            &nbsp;\n                                        </span>\n                                        <!--                                        <span-->\n                                        <!--                                            *ngIf=\"!!bagOption.dimensions\"-->\n                                        <!--                                            data-mob=\"mob-checkout-bag-option-dimensions\"-->\n                                        <!--                                            >{{ bagOption.dimensions }}-->\n                                        <!--                                        </span>-->\n                                    </div>\n\n                                    <div class=\"luggage-selections\">\n                                        <div class=\"luggage-selections__action-box\">\n                                            <div class=\"luggage-selections__currency-box\">\n                                                <div\n                                                    *ngIf=\"\n                                                        transportLuggagesUtil.optionPresent(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ) &&\n                                                        transportLuggagesUtil.getOption(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ).totalPrice\n                                                    \"\n                                                    data-mob=\"mob-checkout-currency-type\"\n                                                >\n                                                    {{\n                                                        transportLuggagesUtil.getOption(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ).totalPrice | tzCurrency: bagOption.prices.listPriceCur\n                                                    }}\n                                                </div>\n                                                <div\n                                                    *ngIf=\"\n                                                        !transportLuggagesUtil.optionPresent(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ) ||\n                                                        !transportLuggagesUtil.getOption(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ).totalPrice\n                                                    \"\n                                                    data-mob=\"mob-checkout-currency-val\"\n                                                >\n                                                    {{\n                                                        bagOption.prices.listPrice\n                                                            | tzCurrency: bagOption.prices.listPriceCur\n                                                    }}\n                                                </div>\n                                            </div>\n\n                                            <div class=\"luggage-selections__counter-box\">\n                                                <div\n                                                    class=\"plus-minus baggage-add-remove-btn\"\n                                                    [ngClass]=\"{\n                                                        'baggage-add-remove-btn--disabled':\n                                                            !transportLuggagesUtil.optionPresent(\n                                                                passenger.additionalLuggage,\n                                                                bagTypeInfo.type,\n                                                                bagOption.index\n                                                            ) ||\n                                                            !transportLuggagesUtil.getOption(\n                                                                passenger.additionalLuggage,\n                                                                bagTypeInfo.type,\n                                                                bagOption.index\n                                                            ).count\n                                                    }\"\n                                                    (click)=\"\n                                                        luggageCombinationRemove(index, bagOption, bagTypeInfo.type)\n                                                    \"\n                                                    data-mob=\"mob-checkout-remove-luggage\"\n                                                >\n                                                    <tz-svg-icon\n                                                        icon=\"baggage-minus-btn\"\n                                                        [stretch]=\"true\"\n                                                        class=\"mob-checkout-remove-luggage-icon\"\n                                                    ></tz-svg-icon>\n                                                </div>\n                                                <div class=\"added-count\" data-mob=\"mob-checkout-luggage-quantity\">\n                                                    {{\n                                                        transportLuggagesUtil.optionPresent(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        )\n                                                            ? transportLuggagesUtil.getOption(\n                                                                  passenger.additionalLuggage,\n                                                                  bagTypeInfo.type,\n                                                                  bagOption.index\n                                                              ).count\n                                                            : 0\n                                                    }}\n                                                </div>\n                                                <div\n                                                    class=\"plus-minus baggage-add-remove-btn\"\n                                                    [ngClass]=\"{\n                                                        'baggage-add-remove-btn--disabled':\n                                                            transportLuggagesUtil.disableLuggageSelection(\n                                                                passenger.additionalLuggage,\n                                                                bagTypeInfo.type,\n                                                                bagOption,\n                                                                flightLuggage[bagTypeInfo.type].maxAllowed\n                                                            )\n                                                    }\"\n                                                    (click)=\"luggageCombinationAdd(index, bagOption, bagTypeInfo.type)\"\n                                                    data-mob=\"mob-checkout-add-luggage\"\n                                                >\n                                                    <tz-svg-icon\n                                                        icon=\"baggage-plus-btn\"\n                                                        [stretch]=\"true\"\n                                                        class=\"mob-checkout-remove-luggage-icon\"\n                                                    ></tz-svg-icon>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"!flightLuggage[bagTypeInfo.type].combinable\">\n                                <div\n                                    class=\"luggage-select-picker\"\n                                    (click)=\"\n                                        openPicker(\n                                            index,\n                                            flightLuggage[bagTypeInfo.type][passenger.type].options,\n                                            bagTypeInfo.type,\n                                            passenger\n                                        )\n                                    \"\n                                >\n                                    <div class=\"luggage-select-picker__title\">\n                                        {{ 'FLIGHT.LUGGAGE.SELECT' | translate }}\n\n                                        <div class=\"luggage-select-picker__icon\">\n                                            <tz-svg-icon icon=\"luggage-select-picker\" [stretch]=\"true\"></tz-svg-icon>\n                                        </div>\n                                    </div>\n\n                                    <div\n                                        *ngIf=\"flightLuggage[bagTypeInfo.type].replaceIncluded\"\n                                        class=\"luggage-select-picker__replace-included-baggage\"\n                                    >\n                                        {{ 'ADD_PASSENGER.REPLACE_INCLUDED_BAGGAGE' | translate }}\n                                    </div>\n                                </div>\n\n                                <div\n                                    *ngIf=\"selectedLuggageIndexesObj[index] || selectedLuggageIndexesObj[index] === 0\"\n                                    class=\"selected-luggage-item\"\n                                >\n                                    {{\n                                        flightLuggage[bagTypeInfo.type][passenger.type].options[\n                                            selectedLuggageIndexesObj[index]\n                                        ].weightTexts.join(', ')\n                                    }}\n                                    |&nbsp;\n                                    <span class=\"selected-luggage-item__price\">\n                                        {{\n                                            flightLuggage[bagTypeInfo.type][passenger.type].options[\n                                                selectedLuggageIndexesObj[index]\n                                            ].prices.listPrice\n                                                | tzCurrency\n                                                    : flightLuggage[bagTypeInfo.type][passenger.type].options[\n                                                          selectedLuggageIndexesObj[index]\n                                                      ].prices.listPriceCur\n                                        }}\n                                    </span>\n\n                                    <span\n                                        class=\"selected-luggage-item__close-btn\"\n                                        (click)=\"\n                                            removeSelectedLuggage(\n                                                index,\n                                                flightLuggage[bagTypeInfo.type][passenger.type].options[\n                                                    selectedLuggageIndexesObj[index]\n                                                ],\n                                                bagTypeInfo.type,\n                                                index\n                                            )\n                                        \"\n                                    >\n                                        <tz-svg-icon icon=\"selected-luggage-item-close\"></tz-svg-icon>\n                                    </span>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"additional-luggages-container__bottom-box bottom-box tz-fixed-bottom\">\n        <div class=\"bottom-box__confirm-button-wrapper\">\n            <div\n                class=\"tz-mob-picker-btn\"\n                (click)=\"confirmLuggageSelection()\"\n                [ngClass]=\"{ 'tz-mob-picker-disabled-btn': !isPassengerDetailsChanged }\"\n                data-mob=\"mob-checkout-confirm-luggage-selection\"\n            >\n                {{ 'GENERAL.CONFIRM' | translate }}\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnChanges, Output, SimpleChanges, EventEmitter } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CheckoutTraveller } from '@schemas/modules/checkout/cart-traveller';\nimport {\n    CheckoutLuggages,\n    FlightBaggage,\n    SelectedLuggageAmount,\n    TrainTripLuggage,\n} from '@schemas/modules/checkout/transport-luggage';\nimport { ModalService } from '@services/modal.service';\nimport { MobAdditionalLuggagesComponent } from '../mob-additional-luggages/mob-additional-luggages.component';\n\n@Component({\n    selector: 'tz-mob-transport-luggages',\n    templateUrl: './mob-transport-luggages.component.html',\n    styleUrls: ['./mob-transport-luggages.component.scss'],\n})\nexport class MobTransportLuggagesComponent implements OnChanges {\n    @Input() checkoutLuggages!: CheckoutLuggages;\n    @Input() checkout: any;\n    @Input() passengerDetails!: CheckoutTraveller[];\n    @Input() transportFormArray!: FormArray;\n\n    @Output() updateHelper: EventEmitter<void> = new EventEmitter<void>();\n\n    public flightLuggage!: FlightBaggage;\n    public trainLuggage: { tripType: string; tripLuggages: TrainTripLuggage[] }[] = [];\n    public luggagesIncluded = false;\n\n    constructor(private translateService: TranslateService, private modalService: ModalService) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['checkoutLuggages'] && this.checkoutLuggages) {\n            this.checkLuggagesIncluded();\n            if (this.checkoutLuggages.flight) {\n                this.flightLuggage = this.checkoutLuggages.flight.flightLuggage;\n            } else if (this.checkoutLuggages.train) {\n                const luggage = this.checkoutLuggages.train;\n                this.trainLuggage = luggage.isRoundTripLuggage\n                    ? [\n                          {\n                              tripType: 'onwardLuggage',\n                              tripLuggages: luggage.onwardLuggage,\n                          },\n                      ]\n                    : [\n                          {\n                              tripType: 'onwardLuggage',\n                              tripLuggages: luggage.onwardLuggage,\n                          },\n                          {\n                              tripType: 'returnLuggage',\n                              tripLuggages: luggage.returnLuggage,\n                          },\n                      ];\n            }\n        }\n    }\n\n    public getTravellerName(idx: number): string {\n        const formvalue = this.transportFormArray.controls[idx].value;\n        this.passengerDetails[idx].firstName = formvalue.firstName;\n        this.passengerDetails[idx].lastName = formvalue.lastName;\n\n        if (!formvalue.firstName || !formvalue.lastName) {\n            if (idx === 0) {\n                return this.translateService.instant('TRAVELLER.PRIMARY_TRAVELER');\n            } else {\n                return `${this.translateService.instant('TRAVELLER.TRAVELER')} ${idx + 1}`;\n            }\n        }\n        return `${formvalue.firstName} ${formvalue.middleName ? formvalue.middleName : ''} ${formvalue.lastName}`;\n    }\n\n    public addLuggages(): void {\n        this.modalService\n            .createDetailsPage(MobAdditionalLuggagesComponent, {\n                data: {\n                    flightLuggages: this.checkoutLuggages.flight.flightLuggage,\n                    checkout: this.checkout,\n                    passengerDetails: this.passengerDetails,\n                    headerModalType: 'default',\n                },\n                title: `${this.translateService.instant('FLIGHT.LUGGAGE.ADD_BAGGAGE')} (${this.translateService.instant(\n                    this.checkoutLuggages.flight.isRoundTrip ? 'GENERAL.Round_trip' : 'GENERAL.One_way'\n                )})`,\n            })\n            .then((modal) => {\n                if (!modal.data || !modal.data.passengerDetails) {\n                    return;\n                }\n\n                let total = 0;\n                const selectedData: {\n                    passengerDetails: CheckoutTraveller[];\n                    listPriceCurrency: string;\n                } = modal.data;\n                for (const passenger of selectedData.passengerDetails) {\n                    total += passenger.additionalLuggage.totalPrice;\n                }\n\n                this.checkout.baggageSelected = total > 0;\n                this.checkout.additionalLuggagePrice = {\n                    listPrice: total,\n                    listPriceCur: selectedData.listPriceCurrency,\n                } as SelectedLuggageAmount;\n                this.updateHelper.emit();\n            });\n    }\n\n    private checkLuggagesIncluded(): void {\n        this.luggagesIncluded =\n            (this.checkoutLuggages.flight &&\n                !!(\n                    this.checkoutLuggages.flight.flightLuggage.includedOptions?.bag1 ||\n                    this.checkoutLuggages.flight.flightLuggage.includedOptions?.bag2\n                )) ||\n            (this.checkoutLuggages.train &&\n                (this.checkoutLuggages.train.onwardLuggage.length > 0 ||\n                    this.checkoutLuggages.train.returnLuggage.length > 0));\n    }\n}\n","<div class=\"tz-form-container transport-laguages\" *ngIf=\"checkoutLuggages\">\n    <div class=\"tz-form-container__title mb-0\" *ngIf=\"luggagesIncluded\">\n        {{ 'FLIGHT.LUGGAGE.BAGGAGE' | translate }}\n    </div>\n    <div class=\"tz-form-container__title mb-0\" *ngIf=\"!luggagesIncluded\">\n        {{ 'FLIGHT.LUGGAGE.NO_BAGGAGE_INCLUDED' | translate }} <tz-icon icon=\"no-baggage\"></tz-icon>\n    </div>\n\n    <!-- Flight included luggage -->\n    <ng-container *ngIf=\"checkoutLuggages.flight && luggagesIncluded\">\n        <div class=\"tz-form-container__form\">\n            <div class=\"flight-included-luggages\" *ngFor=\"let passenger of passengerDetails; let i = index\">\n                <div class=\"traveller-name\">\n                    {{ getTravellerName(i) }}\n                </div>\n                <div class=\"flight-included-luggage\">\n                    <div class=\"flight-included-luggage__item\" *ngIf=\"flightLuggage.includedOptions.bag1\">\n                        <div class=\"luggage-type\">\n                            <ng-container *ngIf=\"!!flightLuggage.includedOptions.bag1[passenger.type]\">\n                                <ng-container *ngIf=\"flightLuggage.includedOptions.bag1[passenger.type].title\">\n                                    <div class=\"luggage-dimension__baggage\">\n                                        <tz-svg-icon icon=\"small-baggage\" [mobile]=\"true\"></tz-svg-icon>\n                                    </div>\n                                    <p class=\"flight-included-luggage__title\">\n                                        {{ flightLuggage.includedOptions.bag1[passenger.type].title }}\n                                    </p>\n                                </ng-container>\n                            </ng-container>\n                            <ng-container *ngIf=\"!flightLuggage.includedOptions.bag1[passenger.type]\">\n                                <ng-container\n                                    *ngIf=\"\n                                        flightLuggage.includedOptions.bag1.type === 'personalItem' ||\n                                        flightLuggage.includedOptions.bag1.type !== 'checkIn'\n                                    \"\n                                >\n                                    {{ 'FLIGHT.LUGGAGE.personalItem' | translate }}\n                                </ng-container>\n                            </ng-container>\n                        </div>\n                        <div class=\"luggage-dimension\">\n                            <ng-container *ngIf=\"!!flightLuggage.includedOptions.bag1[passenger.type]\">\n                                <ng-container *ngIf=\"flightLuggage.includedOptions.bag1[passenger.type]?.weightTexts\">\n                                    <p class=\"luggage-dimension__weight\">\n                                        {{ flightLuggage.includedOptions.bag1[passenger.type].weightTexts.join(' ') }}\n                                    </p>\n                                </ng-container>\n                                <p\n                                    class=\"luggage-dimension__dimension\"\n                                    *ngIf=\"flightLuggage.includedOptions.bag1[passenger.type].dimensions\"\n                                >\n                                    {{ flightLuggage.includedOptions.bag1[passenger.type].dimensions }}\n                                </p>\n                            </ng-container>\n                        </div>\n                    </div>\n\n                    <div\n                        class=\"flight-included-luggage__item\"\n                        *ngIf=\"\n                            flightLuggage.includedOptions.bag2 && !!flightLuggage.includedOptions.bag2[passenger.type]\n                        \"\n                    >\n                        <div class=\"luggage-type\">\n                            <ng-container *ngIf=\"flightLuggage.includedOptions.bag2[passenger.type].title\">\n                                <div class=\"luggage-dimension__baggage\">\n                                    <tz-svg-icon\n                                        icon=\"small-baggage\"\n                                        [mobile]=\"true\"\n                                        *ngIf=\"flightLuggage.includedOptions.bag2.type !== 'checkIn'\"\n                                    ></tz-svg-icon>\n                                    <tz-svg-icon\n                                        icon=\"big-baggage\"\n                                        [mobile]=\"true\"\n                                        *ngIf=\"flightLuggage.includedOptions.bag2.type === 'checkIn'\"\n                                    >\n                                    </tz-svg-icon>\n                                </div>\n                                <p class=\"flight-included-luggage__title\">\n                                    {{ flightLuggage.includedOptions.bag2[passenger.type].title }}\n                                </p>\n                            </ng-container>\n                        </div>\n                        <div class=\"luggage-dimension\">\n                            <ng-container *ngIf=\"!!flightLuggage.includedOptions.bag2[passenger.type]\">\n                                <ng-container *ngIf=\"flightLuggage.includedOptions.bag2[passenger.type]?.weightTexts\">\n                                    <p class=\"luggage-dimension__weight\">\n                                        {{ flightLuggage.includedOptions.bag2[passenger.type].weightTexts.join(', ') }}\n                                    </p>\n                                </ng-container>\n                                <p\n                                    class=\"luggage-dimension__dimension\"\n                                    *ngIf=\"flightLuggage.includedOptions.bag2[passenger.type].dimensions\"\n                                >\n                                    {{ flightLuggage.includedOptions.bag2[passenger.type].dimensions }}\n                                </p>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <!-- End flight included luggage -->\n\n    <!-- Train included luggage -->\n\n    <ng-container *ngIf=\"checkoutLuggages.train && luggagesIncluded\">\n        <div class=\"tz-form-container__form\">\n            <div *ngFor=\"let trip of trainLuggage\">\n                <div class=\"flight-included-luggages\" *ngFor=\"let passenger of passengerDetails; let i = index\">\n                    <div class=\"traveller-name\">\n                        {{ getTravellerName(i) }}\n                    </div>\n                    <div class=\"flight-included-luggage\">\n                        <div class=\"flight-included-luggage__item\" *ngFor=\"let bag of trip.tripLuggages\">\n                            <div class=\"luggage-type\">\n                                <p class=\"flight-included-luggage__title\">\n                                    {{ 'ADD_PASSENGER.' + bag.type | translate }}\n                                </p>\n                            </div>\n                            <div class=\"luggage-dimension\">\n                                <div class=\"luggage-dimension__baggage\">\n                                    <tz-svg-icon\n                                        icon=\"small-baggage\"\n                                        [mobile]=\"true\"\n                                        *ngIf=\"bag.type === 'personal_item'\"\n                                    >\n                                    </tz-svg-icon>\n                                    <tz-svg-icon icon=\"big-baggage\" [mobile]=\"true\" *ngIf=\"bag.type === 'luggage'\">\n                                    </tz-svg-icon>\n                                </div>\n                                <p class=\"luggage-dimension__dimension\">\n                                    {{\n                                        bag.isQuantityDiff\n                                            ? ' x ' + bag[passenger.type]\n                                            : bag[passenger.type] > 1 && bag.isQuantityDiff\n                                            ? ' x ' + bag[passenger.type]\n                                            : ''\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <!--\n    <ng-container *ngIf=\"checkoutLuggages.train && luggagesIncluded\">\n        <div class=\"flight-included-luggages\" *ngFor=\"let trip of trainLuggage\">\n            <div *ngIf=\"trainLuggage.length > 1\" class=\"traveller-name\">\n                {{ trip.tripType === 'onwardLuggage' ? 'Arrival' : 'Departure' }}\n            </div>\n            <div class=\"tz-form-container__form\">\n                <div class=\"flight-included-luggage__item\" *ngFor=\"let passenger of passengerDetails; let i = index\">\n                    <div class=\"traveller-name\">\n                        {{ getTravellerName(i) }}\n                    </div>\n                    <div class=\"train-included-luggage\">\n                        <tr *ngFor=\"let bag of trip.tripLuggages\">\n                            <ng-container *ngIf=\"bag[passenger.type] > 0\">\n                                <td class=\"luggage-type\">\n                                    {{ 'ADD_PASSENGER.' + bag.type | translate }}\n                                </td>\n                                <td class=\"luggage-dimension\">\n                                    <tz-icon *ngIf=\"bag.type === 'personal_item'\" [icon]=\"'case-small-blue'\"></tz-icon>\n                                    <tz-icon *ngIf=\"bag.type === 'luggage'\" [icon]=\"'case-blue'\"></tz-icon>\n                                    {{\n                                    bag.isQuantityDiff\n                                    ? ' x ' + bag[passenger.type]\n                                    : bag[passenger.type] > 1 && bag.isQuantityDiff\n                                    ? ' x ' + bag[passenger.type]\n                                    : ''\n                                    }}\n                                </td>\n                            </ng-container>\n                            <ng-container *ngIf=\"!bag[passenger.type]\">\n                                <td>-</td>\n                            </ng-container>\n                        </tr>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container> -->\n    <!-- End train included luggage -->\n    <div\n        class=\"additional-luggage-btn\"\n        *ngIf=\"checkoutLuggages.flight && luggagesIncluded && flightLuggage.checkIn?.hasPayedOptions\"\n        (click)=\"addLuggages()\"\n    >\n        <div class=\"additional-luggage-label\">\n            + {{ 'FLIGHT.LUGGAGE.ADD_BAGGAGE' | translate }} ({{\n                (checkoutLuggages.flight.isRoundTrip ? 'GENERAL.ROUND_TRIP' : 'GENERAL.ONE_WAY') | translate\n            }})\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ChangeDetectionStrategy,\n    OnInit,\n    ChangeDetectorRef,\n} from '@angular/core';\nimport { Insurance, SelectedInsurance, TzTravelInsurance } from '@schemas/modules/checkout/travel-insurance';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { DateRangePipe } from '@shared/pipes/date-range.pipe';\nimport { DatePipe } from '@angular/common';\nimport { PlatformService } from '@services/platform.service';\n\nconst defaultInsurance: SelectedInsurance = { selected: {} as Insurance, selectedIdx: -1, validatedTC: false };\n\n@Component({\n    selector: 'tz-mob-travel-insurance',\n    templateUrl: './mob-travel-insurance.component.html',\n    styleUrls: ['./mob-travel-insurance.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobTravelInsuranceComponent implements OnInit {\n    @Input() tzTravelInsurances!: TzTravelInsurance;\n    @Input() selectedInsurance = defaultInsurance;\n    @Output() insuranceChange = new EventEmitter<SelectedInsurance>();\n\n    public date!: string | null;\n\n    public insurancesMoreDetailsID: string[] = [];\n\n    constructor(private dateRange: DateRangePipe, private datePipe: DatePipe) {}\n\n    ngOnInit() {\n        this.date = this.getDateRange();\n    }\n\n    public selectInsuranceOption(option: Insurance | null, selectedIdx = -1) {\n        if (option === null) {\n            this.insuranceChange.emit(defaultInsurance);\n            return;\n        }\n\n        this.insuranceChange.emit({\n            selected: option,\n            selectedIdx,\n            validatedTC: false,\n        } as SelectedInsurance);\n    }\n\n    public getDateRange(): string | null {\n        const { start_date, endDate } = this.tzTravelInsurances.parameters;\n\n        return endDate\n            ? this.dateRange.transform(start_date, endDate)\n            : this.datePipe.transform(start_date, 'mediumDate');\n    }\n\n    public sliceInsurances(insurances: string[], formulaRef: string): string[] {\n        return this.getIncludeInsurance(formulaRef) ? insurances : insurances.slice(0, 3);\n    }\n\n    public insuranceMoreDetails(formulaRef: string): void {\n        this.insurancesMoreDetailsID = this.getIncludeInsurance(formulaRef)\n            ? this.insurancesMoreDetailsID.filter((id) => id === formulaRef)\n            : [...this.insurancesMoreDetailsID, formulaRef];\n    }\n\n    public getIncludeInsurance(formulaRef: string): boolean {\n        return this.insurancesMoreDetailsID.includes(formulaRef);\n    }\n\n    public showMoreDetails(insurance: Insurance): boolean {\n        return insurance.content.length > 3 && !this.getIncludeInsurance(insurance.formuleRef);\n    }\n}\n","<div class=\"travel-insurance\" data-test=\"basket-insurance-information\">\n    <div class=\"travel-insurance__title\">\n        <div class=\"top-text\" data-test=\"basket-insurance-container\" translate=\"INSURANCE.TRAVEL_INSURANCE\"></div>\n        <p class=\"date\" *ngIf=\"date\">{{ date }}</p>\n    </div>\n    <span [id]=\"'TRAVEL_INSURANCE'\"></span>\n    <div\n        class=\"travel-insurance__option\"\n        [ngClass]=\"{ 'selected-option': selectedInsurance && selectedInsurance.selectedIdx === idx }\"\n        *ngFor=\"let insurance of tzTravelInsurances.insurances; let idx = index\"\n    >\n        <div class=\"insurance\">\n            <div class=\"insurance__type\">\n                <div class=\"title\">{{ insurance.name }}</div>\n                <mat-radio-button\n                    data-test=\"basket-insurance-radio-button\"\n                    class=\"flex justify-center tz-radio-btn\"\n                    [checked]=\"selectedInsurance && selectedInsurance.selectedIdx === idx\"\n                    (click)=\"selectInsuranceOption(insurance, idx)\"\n                ></mat-radio-button>\n            </div>\n            <ul>\n                <li *ngFor=\"let content of sliceInsurances(insurance.content, insurance.formuleRef)\">\n                    <span class=\"tz-icon-check-nobg\"></span> {{ content }}\n                </li>\n            </ul>\n\n            <span\n                class=\"more-details\"\n                *ngIf=\"showMoreDetails(insurance)\"\n                (click)=\"insuranceMoreDetails(insurance.formuleRef)\"\n            >\n                {{ 'INSURANCE.MORE_DETAILS' | translate }}\n            </span>\n            <!-- <a class=\"insurance__detail tz-purple-link\" [href]=\"insurance.docUrlIpid\" target=\"_blank\"\n                translate=\"INSURANCE.MORE_DETAILS\" data-test=\"more-details\">\n            </a> -->\n            <p class=\"terms-text text-d text-decoration-none\" *ngIf=\"!showMoreDetails(insurance)\">\n                <a target=\"_blank\" class=\"tz-purple-link\" routerLink=\"/about/terms\">\n                    {{ 'ACCOUNT.SIGN.TERMS_AND_CONDITIONS' | translate }}</a\n                >\n                {{ 'GENERAL.AND' | translate }}\n                <a target=\"_blank\" class=\"tz-purple-link\" routerLink=\"/about/ppc\">{{\n                    'ACCOUNT.SIGN.PRIVACY_POLICY' | translate\n                }}</a>\n            </p>\n        </div>\n        <div class=\"insurance-price\">\n            <span>{{ 'INSURANCE.POLICY_COST' | translate }} |</span>\n            {{ insurance.net.listPrice | tzCurrency: insurance.net.listPriceCur }}\n        </div>\n    </div>\n    <div\n        class=\"travel-insurance__option insurance\"\n        [ngClass]=\"{ 'selected-option': selectedInsurance && selectedInsurance.selectedIdx === -1 }\"\n    >\n        <div class=\"insurance__type flex\">\n            <div class=\"title\" translate=\"INSURANCE.NO_INSURANCE\"></div>\n            <mat-radio-button\n                class=\"tz-radio-btn\"\n                [checked]=\"selectedInsurance && selectedInsurance.selectedIdx === -1\"\n                (click)=\"selectInsuranceOption(null)\"\n                data-test=\"no-insurance-radio-button\"\n            >\n            </mat-radio-button>\n        </div>\n        <div class=\"travel-note\" translate=\"INSURANCE.IMPORTANT_MSG\"></div>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CartStatus } from '@core/constants/cart-status';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { BookingReq } from '@schemas/modules/checkout/booking-request';\nimport { DialogService } from '@services/dialog.service';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { CheckoutErrorService } from '@services/modules/checkout/services/checkout-error.service';\nimport { TzCheckoutService } from '@services/modules/checkout/services/tz-checkout.service';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { ScrollService } from '@services/modules/core/scroll-service';\nimport { PlatformService } from '@services/platform.service';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { StripeService } from '@services/stripe.service';\nimport { Observable } from 'rxjs';\nimport { TzServiceTabs } from '../../../results/tabsUtils/tz-tabs-service';\n\n@Component({\n    selector: 'tz-checkout-payment',\n    templateUrl: './process-payment.component.html',\n    styleUrls: ['./process-payment.component.scss'],\n})\nexport class PaymentComponent {\n    @Input() paymentForm: FormGroup = new FormGroup({});\n    @Input() checkout!: any;\n    @Input() validTravellers = false;\n    @Input() cartData!: ICart;\n\n    constructor(\n        private tzCheckoutService: TzCheckoutService,\n        private cartService: CartService,\n        private trazlerAPI: ApiAccessService,\n        private stripeService: StripeService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private checkoutErrorService: CheckoutErrorService,\n        private router: Router,\n        private loaderService: LoaderService,\n        public platformService: PlatformService,\n        private scrollService: ScrollService,\n        private serviceTabs: TzServiceTabs\n    ) {}\n\n    get billingFormGroup(): FormGroup {\n        return this.paymentForm?.get('billing') as FormGroup;\n    }\n\n    get disableBooking(): boolean {\n        const stripeForm = this.paymentForm?.get('payment') as FormGroup;\n        return (\n            /*!this.checkout.agreeToTerms ||\n            !this.checkout.healthDeclarationChecked ||*/\n            !this.paymentForm.valid || (stripeForm && !this.checkout.isStripeValid) || !this.validTravellers\n        );\n    }\n\n    get showTripRefundInfo(): boolean {\n        if (!this.cartData || this.cartData.items.length <= 1) {\n            return false;\n        }\n\n        const cartItems = [...new Map(this.cartData.items.map((item) => [item.serviceId, item])).values()];\n        return cartItems.length > 1;\n    }\n\n    public updateValidation(): void {\n        this.tzCheckoutService.setBillingValidators(this.billingFormGroup, this.checkout.invoiceRequired);\n    }\n\n    public proceedCheckout(): void {\n        if (this.disableBooking) {\n            this.checkFormValidity();\n            return;\n        }\n\n        const bookingReq = this.tzCheckoutService.makeBookingReq(this.cartData.items, this.checkout, this.paymentForm);\n        console.log('Booking bookingReq', bookingReq);\n        // LocalStorageManager.removeItem('_prevState');\n\n        this.trazlerAPI.Booking(bookingReq).then(\n            (success: any) => {\n                // LocalStorageManager.setItem('latestBookingId', success.id);\n                this.handleBookingSuccess(success, bookingReq);\n            },\n            (failure: any) => {\n                // LocalStorageManager.removeItem('latestBookingId');\n                this.bookingFailure(failure, false, bookingReq);\n            }\n        );\n    }\n\n    private bookingSuccess(bookingReq: BookingReq, success?: any) {\n        console.log('success: ' + success);\n        this.showLoader(false);\n        if (success.infoMessage) {\n            this.showPriceChangeAlert(success.infoMessage).subscribe(() => {\n                this.dialogService.openSnackBar({\n                    message: this.translateService.instant('NOTIFS.BOOKING_SUCCESS', { bookingId: success?.id }),\n                });\n                this.router.navigate(['checkout-processed', 'success', success.id]);\n            });\n\n            return;\n        }\n\n        this.router.navigate(['checkout-processed', 'success', success.id]);\n    }\n\n    // The card action has been handled\n    // The PaymentIntent can be confirmed again on the server\n    private makeBooking(bookingReq: BookingReq) {\n        console.log(bookingReq);\n        this.trazlerAPI.Booking(bookingReq).then(\n            (res: any) => {\n                console.log('Booking res After card action handled: ', res);\n                // LocalStorageManager.setItem('latestBookingId', res.id);\n                this.bookingSuccess(bookingReq, res);\n            },\n            (err: any) => {\n                this.bookingFailure(err, false, bookingReq);\n                console.log(err);\n            }\n        );\n    }\n\n    //Handle payment for no PCI\n    private hdlNoPCIPayment(bookingReq: BookingReq, clientSecret: string) {\n        this.stripeService\n            .getStripe()\n            .confirmCardPayment(clientSecret, {\n                payment_method: {\n                    card: this.stripeService.getCartElement(),\n                },\n            })\n            .then((result: any) => {\n                if (result.error) {\n                    this.showLoader(false);\n                    this.dialogService.openSnackBar({ message: result.error.message });\n                    this.router.navigate(['checkout-processed', 'payment-failed']);\n                    return;\n                } else {\n                    bookingReq.pId = result.paymentIntent.id;\n                    this.makeBooking(bookingReq);\n                }\n            });\n    }\n\n    //Handle card payment with client secret\n    private hdlPaymentWithSecret(bookingReq: BookingReq, clientSecret: string): void {\n        this.showLoader(true, 'LOADER_MESSAGES.BOOKING_CONFIRM');\n        this.stripeService\n            .getStripe()\n            .confirmCardPayment(clientSecret)\n            .then((result: any) => {\n                if (result.error) {\n                    this.bookingFailure(result.error, true, bookingReq);\n                } else {\n                    bookingReq.pId = result.paymentIntent.id;\n                    this.makeBooking(bookingReq);\n                }\n            });\n    }\n\n    private handleBookingSuccess(successData: any, bookingReq: BookingReq): void {\n        console.log('Booking success: ', successData);\n        if (successData && successData.stripeAction === 1) {\n            this.hdlNoPCIPayment(bookingReq, successData.clientSecret);\n        } else if (successData && successData.clientSecret) {\n            this.hdlPaymentWithSecret(bookingReq, successData.clientSecret);\n        } else {\n            this.bookingSuccess(bookingReq, successData);\n        }\n    }\n\n    private bookingFailure(failure: any, isStripe: boolean, bookingReq: BookingReq): void {\n        console.log('booking failure: ', failure);\n        this.cartService.reInit().then((cartData: ICart) => {\n            console.log('cartData after failure is:', cartData);\n            if (cartData.bookingStatus === CartStatus.STATUS_PROGRESS) {\n                this.showLoader(true, 'LOADER_MESSAGES.BOOKING_IN_PROGRESS');\n                const combId = cartData.combId;\n                const deviceId = cartData.deviceId;\n                let retry = 5; // retry 5 times to get a final booking status\n                // Here in this case we wait for the booking to confirmed from provider\n                const recheckInterval = setInterval(() => {\n                    this.cartService.recheckCartItem(combId, deviceId, true).then(\n                        (cartRes: ICart) => {\n                            retry--;\n                            if (cartRes.bookingStatus === CartStatus.STATUS_PROGRESS) {\n                                if (!retry) {\n                                    clearInterval(recheckInterval);\n                                    this.showLoader(false);\n                                }\n                                return;\n                            }\n\n                            if (cartRes.bookingStatus === CartStatus.STATUS_PRICE_CHANGED) {\n                                clearInterval(recheckInterval);\n                                this.bookingSuccess(bookingReq, cartRes);\n                            }\n                            if (!retry) {\n                                clearInterval(recheckInterval);\n                                this.showLoader(false);\n                            }\n                        },\n                        (cartErr: any) => {\n                            if (cartErr.error.error === 'redis: nil') {\n                                clearInterval(recheckInterval);\n                                this.bookingSuccess(bookingReq);\n                            }\n                        }\n                    );\n                }, 10000);\n\n                return;\n            }\n\n            this.showLoader(false);\n            if (failure.error && failure.error.info) {\n                this.showPriceChangeAlert(failure.error.info).subscribe(() => {\n                    this.checkoutErrorService.handleBookingError(failure.error, isStripe);\n                });\n\n                return;\n            }\n\n            this.checkoutErrorService.handleBookingError(isStripe ? failure : failure.error, isStripe);\n        });\n    }\n\n    private showPriceChangeAlert(infoContent: { title: string; content: string }): Observable<boolean> {\n        return this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant(infoContent.title),\n                content: infoContent.content,\n                confirmBtnTitle: this.translateService.instant('CHECKOUT.PAYMENT.OK_GREAT'),\n            })\n            .afterClosed();\n    }\n\n    private showLoader(show: boolean, msg?: string, title?: string) {\n        this.loaderService.triggerLoading.emit({\n            loading: show,\n            type: 'small',\n            textKey: msg,\n            title,\n        });\n    }\n\n    private checkFormValidity(): void {\n        let invalidId = '';\n        const markFormAsDirty = (formGroup: FormGroup, formId: string) => {\n            Object.keys(formGroup.controls).forEach((key) => {\n                formGroup.controls[key].markAsDirty();\n                formGroup.controls[key].markAsTouched();\n            });\n\n            if (invalidId === '') {\n                invalidId = formId;\n            }\n        };\n\n        const profileForm = this.paymentForm?.get('profile') as FormGroup;\n        if (profileForm.invalid) {\n            markFormAsDirty(profileForm, 'PAYMENT_PROFILE');\n        }\n\n        const paymentForm = this.paymentForm?.get('payment') as FormGroup;\n        if (paymentForm?.invalid || (paymentForm && !this.checkout.isStripeValid)) {\n            markFormAsDirty(paymentForm, 'PAYMENT_STRIPE');\n            this.stripeService.updateStripe.next();\n        }\n\n        if (this.checkout.invoiceRequired && this.billingFormGroup.invalid) {\n            markFormAsDirty(this.billingFormGroup, 'PAYMENT_BILLING');\n        }\n\n        if (invalidId !== '') {\n            this.scrollService.scrollTo(invalidId, 70, true);\n        }\n    }\n}\n","<div class=\"tz-form-container mb-0\" *ngIf=\"billingFormGroup\">\n    <div\n        class=\"tz-form-container__title flex space-between\"\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n        data-test=\"basket-billing-information\"\n    >\n        <div>{{ 'BOOKINGS.BILLING.BILLING_ADDRESS' | translate }}</div>\n        <div class=\"flex align-center checkbox-item-container\">\n            {{ 'PROFILE.INVOICE_REQUIRED' | translate }}\n            <div class=\"traveller-validation checkbox-item\">\n                <label>\n                    <input type=\"checkbox\" [(ngModel)]=\"checkout.invoiceRequired\" (change)=\"updateValidation()\" />\n                    <span data-test=\"basket-invoice-required-checkbox\"></span>\n                </label>\n            </div>\n        </div>\n    </div>\n    <div\n        *ngIf=\"platformService.isMobileDevice$ | async\"\n        class=\"invoice-btn\"\n        [ngClass]=\"{ required: checkout.invoiceRequired }\"\n        data-test=\"basket-invoice-required-checkbox\"\n        (click)=\"checkout.invoiceRequired = !checkout.invoiceRequired; updateValidation()\"\n    >\n        <div class=\"invoice-label\">+ {{ 'BOOKINGS.BILLING.BILLING_ADDRESS' | translate }}</div>\n    </div>\n    <span [id]=\"'PAYMENT_BILLING'\"></span>\n    <tz-billing-info [ngClass]=\"{ opened: checkout.invoiceRequired }\" [formGroup]=\"billingFormGroup\"></tz-billing-info>\n</div>\n\n<div\n    class=\"tz-form-container title-mb booking-block mb-0\"\n    data-test=\"basket-important-information\"\n    [hidden]=\"!billingFormGroup\"\n>\n    <div class=\"tz-form-container__title title-bold tz-form-title\">\n        {{ 'CHECKOUT.PAYMENT.IMPORTANT_TEXT' | translate }}\n    </div>\n    <div class=\"tz-form-container__form booking-terms\">\n        <div class=\"booking-terms__title\" translate=\"BOOKINGS.CHECKOUT_TERMS.CONFIRM_BOOKING_TITLE\"></div>\n        <div class=\"booking-terms__list\">\n            <ul>\n                <li translate=\"BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.1\"></li>\n                <li translate=\"BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.2\"></li>\n                <li>\n                    {{ 'BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.3.1' | translate }}\n                    <a target=\"_blank\" href=\"https://www.google.com/\" class=\"tz-purple-link\">{{\n                        'BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.3.2' | translate\n                    }}</a\n                    >.\n                    {{ 'BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.3.3' | translate }}\n                </li>\n                <li translate=\"BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.4\"></li>\n                <li>\n                    {{ 'BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.5.1' | translate }}\n                    <a target=\"_blank\" href=\"https://www.google.com/\" class=\"tz-purple-link\">{{\n                        'BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.5.2' | translate\n                    }}</a\n                    >,\n                    {{ 'BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.5.3' | translate }}\n                    <a target=\"_blank\" href=\"https://www.google.com/\" class=\"tz-purple-link\">\n                        {{ 'BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.5.4' | translate }}\n                    </a>\n                    {{ 'BOOKINGS.CHECKOUT_TERMS.TERMS_LIST.5.5' | translate }}\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"booking-btn-container\">\n        <button\n            *ngIf=\"!platformService.isMobileDevice\"\n            class=\"tz-btn tz-btn-yellow complete-booking\"\n            data-test=\"basket-payment-process-to-pay-btn\"\n            (click)=\"proceedCheckout()\"\n        >\n            {{ 'CHECKOUT.PAYMENT.PROCESS_TO_PAY' | translate }}\n        </button>\n    </div>\n    <div *ngIf=\"showTripRefundInfo\" class=\"tz-form-container__form additional-regulations\">\n        {{ 'BOOKINGS.CHECKOUT_TERMS.ADDITIONAL_REGULATIONS' | translate }}\n        <a target=\"_blank\" href=\"https://www.google.com/\" class=\"tz-purple-link\">{{\n            'BOOKINGS.CHECKOUT_TERMS.ADDITIONAL_REGULATIONS_MORE_LINK' | translate\n        }}</a\n        >.\n    </div>\n\n    <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-fixed-bottom pay-my-booking-btn-box\">\n        <button\n            class=\"tz-btn tz-btn-yellow complete-booking\"\n            data-test=\"basket-payment-process-to-pay-btn\"\n            (click)=\"proceedCheckout()\"\n        >\n            {{ 'CHECKOUT.PAYMENT.PROCESS_TO_PAY' | translate }}\n        </button>\n    </div>\n    <!-- <div class=\"tz-form-container__form mt_313\">\n        <div class=\"checkbox-item pb-1_5\">\n            <label class=\"body-2\">\n                <input type=\"checkbox\" [(ngModel)]=\"checkout.agreeToTerms\" />\n                <span data-test=\"basket-agree-terms-checkbox\"></span>\n                <div>\n                    {{ 'BOOKING_TERMS' | translate }}\n                    <a target=\"_blank\"> {{ 'CHECKOUT.PAYMENT.TERMS_AND_CONDITIONS' | translate }}, </a>\n                    {{ 'BOOK_AND' | translate }}\n                    <a target=\"_blank\"> {{ 'CHECKOUT.PAYMENT.PRIVACY_POLICY' | translate }}. </a>\n                </div>\n            </label>\n        </div>\n\n        <div class=\"checkbox-item\">\n            <label class=\"body-2\">\n                <input type=\"checkbox\" [(ngModel)]=\"checkout.healthDeclarationChecked\" />\n                <span data-test=\"basket-covid-checkbox\"></span>\n                <div>{{ 'HEALTH_CARE_TERM' | translate }} {{ 'HEALTH_CARE_REQ' | translate }}</div>\n            </label>\n        </div>\n\n        <div class=\"additional-info body-2\">\n            {{ 'POPUPS.BILLING_MODAL.TEXT' | translate }}\n        </div>\n\n        <button\n            class=\"btn body-2 complete-booking\"\n            data-test=\"basket-payment-process-to-pay-btn\"\n            [ngClass]=\"{ passive: disableBooking }\"\n            (click)=\"proceedCheckout()\"\n        >\n            {{ 'GENERAL.PROCESS_TO_PAY' | translate }}\n        </button>\n    </div> -->\n</div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    OnInit,\n    OnDestroy,\n    ChangeDetectorRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport * as moment from 'moment';\n\nimport { TravellerType } from '@core/constants/traveller-type';\nimport { Passenger } from '@shared/schemas/tz-customer-info';\nimport { DatesUtils } from '@core/utils/dates-utils';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { CheckoutTraveller } from '@schemas/modules/checkout/cart-traveller';\nimport { TzDatePipe } from '@shared/pipes/tz-date.pipe';\nimport { Subject, takeUntil } from 'rxjs';\nimport { SettingsService } from '@services/services/settings-service';\n\n@Component({\n    selector: 'tz-profile-travellers',\n    templateUrl: './profile-travellers.component.html',\n    styleUrls: ['./profile-travellers.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProfileTravellersComponent implements OnInit, OnDestroy {\n    @Input() formGroup = new FormGroup({});\n    @Input() ageAt = new Date();\n    @Input() currentTraveller!: CheckoutTraveller;\n    @Input() checkoutTravllers?: CheckoutTraveller[];\n    @Input() transportTravllers: CheckoutTraveller[] = [];\n    @Input() isTransport = false;\n    @Input() prefixText = '';\n\n    @Output() resetTraveller: EventEmitter<void> = new EventEmitter<void>();\n    @Output() setTraveller = new EventEmitter<{ traveller: Passenger }>();\n\n    public dateUtils = DatesUtils;\n\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private userService: UserService,\n        private datePipe: TzDatePipe,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        private settingsService: SettingsService\n    ) {}\n\n    get travelerName(): string {\n        const traveller = this.formGroup;\n        return (\n            traveller.value.firstName +\n            ' ' +\n            (traveller.value.middleName ? traveller.value.middleName : '') +\n            ' ' +\n            traveller.value.lastName\n        );\n    }\n\n    get travelerDOB(): string {\n        const dob = moment(this.currentTraveller.dateOfBirth, DatesUtils.updateTzTravelerFormat)?.toDate();\n        return this.datePipe.transform(dob, 'mediumDate') ?? '';\n    }\n\n    get profileTravellers(): Passenger[] {\n        const travellers: Passenger[] = [];\n        const selectedAge = this.currentTraveller.selectedAge;\n\n        if (this.transportTravllers && this.transportTravllers.length > 0) {\n            let idx = 0;\n            for (const traveller of this.transportTravllers) {\n                if (traveller.id && traveller.id !== '') {\n                    continue;\n                }\n\n                const dob = moment(traveller.dateOfBirth, DatesUtils.updateTzTravelerFormat)?.toDate();\n                const age = this.getTravellerAge(dob);\n                const isValidTraveller =\n                    this.currentTraveller.type === TravellerType.ADULT &&\n                    (selectedAge && selectedAge !== -1 ? selectedAge === age : age >= 18);\n\n                if (isValidTraveller) {\n                    travellers.push({\n                        ...traveller,\n                        id: `transport${idx}`,\n                        recent: true,\n                        dateOfBirth: moment(dob).format(DatesUtils.savedTzTravelerFormat),\n                    });\n\n                    idx++;\n                }\n            }\n        }\n\n        const customer = this.userService.getCustomerInformation();\n        if (!this.userService.IsLogged() || !customer || !customer.passengers) {\n            return travellers;\n        }\n\n        for (const passenger of customer.passengers) {\n            if (this.checkoutTravllers) {\n                passenger.disable = this.checkoutTravllers.some((t: Passenger) => passenger.id === t.id);\n            }\n\n            const dob = moment(passenger.dateOfBirth, DatesUtils.savedTzTravelerFormat)?.toDate();\n            const age = this.getTravellerAge(dob);\n            if (\n                this.currentTraveller.type === TravellerType.ADULT &&\n                (selectedAge && selectedAge !== -1 ? selectedAge === age : age >= 18)\n            ) {\n                travellers.push(passenger);\n            }\n            if (\n                this.currentTraveller.type === TravellerType.CHILD &&\n                (selectedAge && selectedAge !== -1 ? selectedAge === age : age < 18 && age >= 2)\n            ) {\n                travellers.push(passenger);\n            }\n            if (this.currentTraveller.type === TravellerType.INFANT && age < 2) {\n                travellers.push(passenger);\n            }\n        }\n\n        return travellers;\n    }\n\n    ngOnInit(): void {\n        this.userService.loggedIn$.pipe(takeUntil(this.destroy$)).subscribe((isLogged) => {\n            this.changeDetectorRef.detectChanges();\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public setValue(item: Passenger): void {\n        this.setTraveller.emit({\n            traveller: item,\n        });\n    }\n\n    public reset(): void {\n        this.resetTraveller.emit();\n    }\n\n    public bannerText(): string {\n        const formGroup = this.formGroup;\n        return this.isTransport ? this.transportText(formGroup) : this.getTravellerName(formGroup);\n    }\n\n    public formatTravelerDate(dateOfBirth: Date | string): string {\n        const travelerDate = this.settingsService.locales.DATETIME_FORMATS.tzTravelerShortDate;\n        return DatesUtils.formatDate(\n            dateOfBirth,\n            DatesUtils.savedTzTravelerFormat,\n            travelerDate.replace(new RegExp('/', 'g'), '.')\n        );\n    }\n\n    private transportText(traveller: FormGroup): string {\n        return traveller.valid ? ` | ${this.travelerName} | ${this.travelerDOB}` : '';\n    }\n\n    private getTravellerName(traveller: FormGroup): string {\n        return traveller.valid ? ` | ${traveller.value.firstName} ${traveller.value.lastName}` : '';\n    }\n\n    private getTravellerAge(dateOfBirth: Date): number {\n        return DatesUtils.getAgeDiff(dateOfBirth, this.ageAt ? this.ageAt : new Date());\n    }\n}\n","<div\n    [formGroup]=\"formGroup\"\n    ngbDropdown\n    #menu=\"ngbDropdown\"\n    placement=\"bottom-start\"\n    class=\"traveller-banner\"\n    data-test=\"checkout-traveler-information-titul\"\n    [ngClass]=\"{ 'no-dropdown': profileTravellers.length === 0 }\"\n>\n    <div class=\"traveller-validation\" ngbDropdownToggle>\n        <div class=\"valid-check\"></div>\n        <span>\n            {{ prefixText }} <span class=\"traveller-name\">{{ bannerText() }}</span>\n        </span>\n        <div class=\"tz-icon-arrow\"></div>\n    </div>\n    <div class=\"travellers-list\" ngbDropdownMenu>\n        <a class=\"overflow-ellipsis flex align-center\" (click)=\"reset(); menu.close()\">\n            <div class=\"check-mark\" [ngClass]=\"{ selected: !currentTraveller.id || currentTraveller.id === '' }\"></div>\n            {{ 'PROFILE.NEW_TRAVELLER' | translate }}\n        </a>\n        <a\n            class=\"overflow-ellipsis flex align-center\"\n            [ngClass]=\"{ passive: isTransport && traveller.disable && traveller.id !== currentTraveller.id }\"\n            *ngFor=\"let traveller of profileTravellers\"\n            (click)=\"setValue(traveller); menu.close()\"\n        >\n            <div class=\"check-mark\" [ngClass]=\"{ selected: traveller.id === currentTraveller.id }\"></div>\n            {{ traveller.firstName }} {{ isTransport ? traveller.middleName : '' }} {{ traveller.lastName }}\n            &nbsp; | &nbsp;\n            {{ formatTravelerDate(traveller.dateOfBirth) }}\n            <ng-container *ngIf=\"traveller.recent\">\n                &nbsp; | &nbsp;\n                <span class=\"recent-traveller\" translate=\"PROFILE.RECENTLY_ADDED\"> </span>\n            </ng-container>\n        </a>\n    </div>\n</div>\n","import { Component, Input, ElementRef, ViewChild, OnDestroy, AfterViewInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n    StripeElements,\n    StripeElementLocale,\n    StripeCardNumberElement,\n    StripeCardExpiryElement,\n    StripeCardCvcElement,\n} from '@stripe/stripe-js';\n\nimport { StripeService } from '@services/stripe.service';\nimport { StripeElementsKeys, StripeElementContainer } from '@core/constants/stripe.const';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@services/services/settings-service';\nimport { Subject } from 'rxjs';\nimport { skip, takeUntil } from 'rxjs/operators';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-stripe',\n    templateUrl: './stripe.component.html',\n    styleUrls: ['./stripe.component.scss'],\n})\nexport class StripeComponent implements AfterViewInit, OnDestroy {\n    @Input() formGroup = new FormGroup({});\n    @Input() checkout!: any;\n    @Input() cartData!: ICart;\n    @ViewChild('stripeFormContainer', { read: ElementRef, static: true }) stripeFormContainer!: ElementRef;\n\n    public stripeForm: {\n        [key: string]: {\n            el: HTMLElement;\n            err: HTMLElement;\n            valid: boolean | null;\n        };\n    } = {};\n\n    private cardNo!: StripeCardNumberElement;\n    private cardExp!: StripeCardExpiryElement;\n    private cardCvc!: StripeCardCvcElement;\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private stripeService: StripeService,\n        private translateService: TranslateService,\n        private settingsService: SettingsService,\n        public platformService: PlatformService\n    ) {}\n\n    ngAfterViewInit(): void {\n        this.stripeService.isStripLoaded().subscribe((loaded): void => {\n            if (loaded) {\n                this.initStripe();\n\n                this.stripeService.updateStripe.pipe(takeUntil(this.destroy$)).subscribe(() => {\n                    this.eltBlur(StripeElementContainer.CARDNO);\n                    this.eltBlur(StripeElementContainer.CARDEXP);\n                    this.eltBlur(StripeElementContainer.CARDCVC);\n                });\n\n                this.settingsService.selectedLanguageSubject.pipe(skip(1), takeUntil(this.destroy$)).subscribe(() => {\n                    this.initStripe();\n                    this.checkout.isStripeValid = false;\n                });\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.cardNo.destroy();\n        this.cardExp.destroy();\n        this.cardCvc.destroy();\n\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    private setFormEle(): void {\n        const getEl = (id: string): HTMLElement => {\n            const nativeElementOfInput: HTMLElement = this.stripeFormContainer.nativeElement.querySelector('#' + id);\n            if (nativeElementOfInput) {\n                nativeElementOfInput.innerText = '';\n                nativeElementOfInput.classList.remove('blured');\n                return nativeElementOfInput;\n            }\n\n            return getEl(id);\n        };\n\n        const setEle = (id: string): void => {\n            this.stripeForm[id] = {\n                el: getEl(id),\n                err: getEl('stripeErr' + id + 'Id'),\n                valid: false,\n            };\n        };\n\n        setEle(StripeElementContainer.CARDNO);\n        setEle(StripeElementContainer.CARDEXP);\n        setEle(StripeElementContainer.CARDCVC);\n    }\n\n    private setStripeValid(): void {\n        const isValid = (id: string): boolean | null => this.stripeForm[id].valid;\n\n        this.checkout.isStripeValid =\n            isValid(StripeElementContainer.CARDNO) &&\n            isValid(StripeElementContainer.CARDEXP) &&\n            isValid(StripeElementContainer.CARDCVC);\n    }\n\n    private eltBlur(fieldType: string) {\n        if (!this.stripeForm[fieldType].valid) {\n            this.stripeForm[fieldType].el.classList.add('blured');\n            if (this.stripeForm[fieldType].valid === false) {\n                this.stripeForm[fieldType].err.textContent = this.translateService.instant('PROFILE.Required');\n            }\n        } else if (this.stripeForm[fieldType].valid) {\n            this.stripeForm[fieldType].el.classList.remove('blured');\n        }\n        this.setStripeValid();\n    }\n\n    private eltChange(fieldType: string, event: any) {\n        this.stripeForm[fieldType].err.textContent = '';\n        if (event.error) {\n            this.stripeForm[fieldType].err.textContent = event.error.message;\n            this.stripeForm[fieldType].valid = null;\n        } else if (event.complete) {\n            this.stripeForm[fieldType].el.classList.remove('blured');\n            this.stripeForm[fieldType].valid = true;\n        } else if (event.empty) {\n            this.stripeForm[fieldType].valid = false;\n        }\n        this.setStripeValid();\n    }\n\n    private eltFocus(fieldType: string) {\n        if (!this.stripeForm[fieldType].valid) {\n            this.stripeForm[fieldType].el.classList.remove('blured');\n        }\n    }\n\n    private stripeMount() {\n        try {\n            const mount = (ele: any, fieldType: string): void => {\n                ele.mount('#' + fieldType);\n\n                ele.on('change', (event: any) => this.eltChange(fieldType, event));\n                ele.on('blur', () => this.eltBlur(fieldType));\n                ele.on('focus', () => this.eltFocus(fieldType));\n            };\n\n            mount(this.cardNo, StripeElementContainer.CARDNO);\n            mount(this.cardExp, StripeElementContainer.CARDEXP);\n            mount(this.cardCvc, StripeElementContainer.CARDCVC);\n\n            console.log('stripe mount successful');\n        } catch (e) {\n            console.log('stripe mount failed with e', e, 'will retry in 1s');\n            setTimeout(() => {\n                this.stripeMount.bind(this);\n            }, 1000);\n        }\n    }\n\n    private initStripe() {\n        this.setFormEle();\n\n        // Create an instance of Elements\n        const elements = this.stripeService.getStripe().elements({\n            locale: this.settingsService.langCode as StripeElementLocale,\n        }) as StripeElements;\n\n        const stripeStyle = this.platformService.isMobileDevice\n            ? this.stripeService.stripeMobileFieldStyle\n            : this.stripeService.stripeFieldStyle;\n        // Create an instance of the card Element\n        this.cardNo = elements.create(StripeElementsKeys.CARDNO, {\n            style: stripeStyle,\n            showIcon: true,\n        });\n        this.cardExp = elements.create(StripeElementsKeys.CARDEXP, { style: stripeStyle });\n        this.cardCvc = elements.create(StripeElementsKeys.CARDCVC, { style: stripeStyle });\n        this.stripeService.setCartElement(this.cardNo);\n\n        // Add an instance of the card Element into the `card-element` <div>\n        this.stripeMount();\n    }\n}\n","<div class=\"tz-form-container title-mb\" data-test=\"basket-payment-information\">\n    <div\n        class=\"tz-form-container__title title-bold secure-payment\"\n        data-test=\"basket-payment\"\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n    >\n        <div class=\"secure-payment__title\">{{ 'CHECKOUT.PAYMENT.TITLE' | translate }}</div>\n        <span [id]=\"'PAYMENT_STRIPE'\"></span>\n        <div class=\"secure-payment__text tz-secure-text\">\n            {{ 'CHECKOUT.PAYMENT.TEXT' | translate }}\n        </div>\n    </div>\n    <ng-container *ngIf=\"platformService.isMobileDevice$ | async\">\n        <div class=\"tz-form-container__title title-bold tz-form-title mb-0\">\n            {{ 'CHECKOUT.PAYMENT.TITLE' | translate }}\n        </div>\n        <span [id]=\"'PAYMENT_STRIPE'\"></span>\n    </ng-container>\n    <div class=\"tz-form-container__form imprint-msg\" *ngIf=\"cartData && cartData.totalImprintAmt\">\n        {{ cartData.helpers.imprintText }}\n    </div>\n    <div [ngClass]=\"{ 'hide-strip-form': cartData.helpers.payNowInt <= 0 }\">\n        <div class=\"tz-form-container__form\" #stripeFormContainer>\n            <div class=\"tz-secure-text\" *ngIf=\"platformService.isMobileDevice$ | async\">\n                {{ 'CHECKOUT.PAYMENT.TEXT' | translate }}\n            </div>\n            <form class=\"form-group-container\" [formGroup]=\"formGroup\">\n                <div class=\"field-row\">\n                    <div class=\"tz-field\">\n                        <div\n                            data-test=\"basket-payment-card-number\"\n                            id=\"cardNo\"\n                            class=\"tz-stripe full-width field\"\n                            [ngClass]=\"{ 'stripe-valid': stripeForm['cardNo']?.valid }\"\n                        ></div>\n                        <span class=\"tz-field__name\">{{ 'CREDIT_CARDS.NUMBER' | translate }}</span>\n                        <span class=\"valid-check\"></span>\n                        <span class=\"error-msg\" id=\"stripeErrcardNoId\"></span>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'cardNo'\"\n                            [fieldType]=\"'stripeErrcardNoId'\"\n                            [title]=\"'CREDIT_CARDS.NUMBER'\"\n                            ngDefaultControl\n                        ></tz-mob-input>\n                    </div>\n                    <div class=\"tz-field\">\n                        <div\n                            data-test=\"basket-payment-expiration-date\"\n                            id=\"cardExp\"\n                            class=\"tz-stripe full-width field\"\n                            [ngClass]=\"{ 'stripe-valid': stripeForm['cardExp']?.valid }\"\n                        ></div>\n                        <span class=\"tz-field__name\">{{ 'CREDIT_CARDS.EXPIRATION_DATE' | translate }}</span>\n                        <span class=\"valid-check\"></span>\n                        <span class=\"error-msg\" id=\"stripeErrcardExpId\"></span>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'cardExp'\"\n                            [fieldType]=\"'stripeErrcardExpId'\"\n                            [title]=\"'CREDIT_CARDS.EXPIRATION_DATE'\"\n                            ngDefaultControl\n                        ></tz-mob-input>\n                    </div>\n                </div>\n                <div class=\"field-row stripe-row\">\n                    <div class=\"tz-field\">\n                        <input\n                            class=\"field\"\n                            data-test=\"basket-payment-card-holder-name\"\n                            type=\"text\"\n                            formControlName=\"holder\"\n                            autocomplete=\"off\"\n                            autocorrect=\"off\"\n                            autocapitalize=\"off\"\n                            placeholder=\" \"\n                        />\n                        <span class=\"tz-field__name\">{{ 'CREDIT_CARDS.HOLDERS_NAME' | translate }}</span>\n                        <span class=\"valid-check\"></span>\n                        <tz-form-error [form]=\"formGroup\" key=\"holder\" fieldType=\"HOLDERS_NAME\"></tz-form-error>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'holder'\"\n                            [fieldType]=\"'HOLDERS_NAME'\"\n                            [title]=\"'CREDIT_CARDS.HOLDERS_NAME'\"\n                            ngDefaultControl\n                        ></tz-mob-input>\n                    </div>\n                    <div class=\"tz-field\">\n                        <div\n                            data-test=\"basket-payment-cvc\"\n                            id=\"cardCvc\"\n                            class=\"tz-stripe full-width field\"\n                            [ngClass]=\"{ 'stripe-valid': stripeForm['cardCvc']?.valid }\"\n                        ></div>\n                        <span class=\"tz-field__name\">{{ 'CREDIT_CARDS.CVC_CODE' | translate }}</span>\n                        <span class=\"valid-check\"></span>\n                        <span class=\"error-msg\" id=\"stripeErrcardCvcId\"></span>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'cardCvc'\"\n                            [fieldType]=\"'stripeErrcardCvcId'\"\n                            [title]=\"'CREDIT_CARDS.CVC_CODE'\"\n                            ngDefaultControl\n                        ></tz-mob-input>\n                    </div>\n                </div>\n                <tz-payment-address\n                    *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n                    [formGroup]=\"formGroup\"\n                ></tz-payment-address>\n            </form>\n        </div>\n        <tz-payment-address\n            *ngIf=\"platformService.isMobileDevice$ | async\"\n            [formGroup]=\"formGroup\"\n        ></tz-payment-address>\n    </div>\n</div>\n","import { Component, Input, OnChanges, Output, SimpleChanges, EventEmitter } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CheckoutTraveller } from '@schemas/modules/checkout/cart-traveller';\nimport {\n    CheckoutLuggages,\n    FlightBaggage,\n    SelectedLuggageAmount,\n    TrainTripLuggage,\n} from '@schemas/modules/checkout/transport-luggage';\nimport { FlightLuggageOption, FlightLuggageOptionTypes } from '@schemas/modules/flights/flight-luggage.model';\nimport { TransportLuggagesUtil } from '@services/modules/checkout/utils/transport-luggages.utils';\nimport { TzCurrencyPipe } from '@shared/pipes/tz-currency.pipe';\n\n@Component({\n    selector: 'tz-transport-luggages',\n    templateUrl: './transport-luggages.component.html',\n    styleUrls: ['./transport-luggages.component.scss'],\n})\nexport class TransportLuggagesComponent implements OnChanges {\n    @Input() checkoutLuggages!: CheckoutLuggages;\n    @Input() checkout: any;\n    @Input() passengerDetails!: CheckoutTraveller[];\n    @Input() transportFormArray!: FormArray;\n\n    @Output() updateHelper: EventEmitter<void> = new EventEmitter<void>();\n\n    public flightLuggage!: FlightBaggage;\n    public trainLuggage: { tripType: string; tripLuggages: TrainTripLuggage[] }[] = [];\n    public showAdditionalLuggage = false;\n    public bagTypes!: {\n        txt: string;\n        type: FlightLuggageOptionTypes.CABIN | FlightLuggageOptionTypes.CHECKIN;\n    }[];\n    public transportLuggagesUtil = TransportLuggagesUtil;\n\n    private listPriceCurrency!: string;\n\n    constructor(public translateService: TranslateService, private tzCurrencyPipe: TzCurrencyPipe) {}\n\n    get luggagesIncluded(): boolean {\n        if (this.checkoutLuggages.flight) {\n            return !!(this.flightLuggage.includedOptions?.bag1 || this.flightLuggage.includedOptions?.bag2);\n        }\n\n        return (\n            this.checkoutLuggages.train.onwardLuggage.length > 0 || this.checkoutLuggages.train.returnLuggage.length > 0\n        );\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['checkoutLuggages'] && this.checkoutLuggages) {\n            if (this.checkoutLuggages.flight) {\n                this.flightLuggage = this.checkoutLuggages.flight.flightLuggage;\n\n                this.bagTypes = [\n                    {\n                        txt:\n                            this.flightLuggage.checkIn && this.flightLuggage.checkIn.replaceIncluded\n                                ? 'ADD_PASSENGER.Checked_bag_add'\n                                : 'ADD_PASSENGER.Checked_bag',\n                        type: FlightLuggageOptionTypes.CHECKIN,\n                    },\n                    /*{\n                        //buying cabin bag is disabled\n                        txt:\n                            this.flightLuggage.cabin && this.flightLuggage.cabin.replaceIncluded\n                                ? 'ADD_PASSENGER.Cabin_bag_add'\n                                : 'ADD_PASSENGER.Cabin_bag',\n                        type: FlightLuggageOptionTypes.CABIN,\n                    },*/\n                ];\n            } else if (this.checkoutLuggages.train) {\n                const luggage = this.checkoutLuggages.train;\n                this.trainLuggage = luggage.isRoundTripLuggage\n                    ? [\n                          {\n                              tripType: 'onwardLuggage',\n                              tripLuggages: luggage.onwardLuggage,\n                          },\n                      ]\n                    : [\n                          {\n                              tripType: 'onwardLuggage',\n                              tripLuggages: luggage.onwardLuggage,\n                          },\n                          {\n                              tripType: 'returnLuggage',\n                              tripLuggages: luggage.returnLuggage,\n                          },\n                      ];\n            }\n        }\n    }\n\n    public getTravellerName(idx: number): string {\n        return TransportLuggagesUtil.getTravellerName(\n            this.transportFormArray.controls[idx].value,\n            idx,\n            this.translateService\n        );\n    }\n\n    public luggageCombinationAdd(idx: number, option: FlightLuggageOption, bagType: string): void {\n        this.passengerDetails[idx].additionalLuggage = TransportLuggagesUtil.formLuggageCombination(\n            this.passengerDetails[idx].additionalLuggage,\n            option,\n            bagType\n        );\n\n        this.listPriceCurrency = option.prices.listPriceCur;\n        this.updateLuggagePrice();\n    }\n\n    public luggageCombinationRemove(idx: number, option: FlightLuggageOption, bagType: string): void {\n        this.passengerDetails[idx].additionalLuggage = TransportLuggagesUtil.removeLuggageCombination(\n            this.passengerDetails[idx].additionalLuggage,\n            option,\n            bagType\n        );\n\n        this.listPriceCurrency = option.prices.listPriceCur;\n        this.updateLuggagePrice();\n    }\n\n    public selectLuggageOption(idx: number, option: FlightLuggageOption | null, bagType: string): void {\n        this.passengerDetails[idx].additionalLuggage = TransportLuggagesUtil.selectLuggageOption(\n            this.passengerDetails[idx].additionalLuggage,\n            option,\n            bagType,\n            this.tzCurrencyPipe\n        );\n\n        this.updateLuggagePrice();\n    }\n\n    private updateLuggagePrice() {\n        let total = 0;\n        for (const passenger of this.passengerDetails) {\n            total += passenger.additionalLuggage.totalPrice;\n        }\n\n        this.checkout.baggageSelected = total > 0;\n        this.checkout.additionalLuggagePrice = {\n            listPrice: total,\n            listPriceCur: this.listPriceCurrency,\n        } as SelectedLuggageAmount;\n        this.updateHelper.emit();\n    }\n}\n","<div class=\"tz-form-container\" *ngIf=\"checkoutLuggages\">\n    <div class=\"tz-form-container__title mb-0\" *ngIf=\"luggagesIncluded\">\n        {{ 'FLIGHT.LUGGAGE.BAGGAGE' | translate }}\n    </div>\n    <div class=\"tz-form-container__title no-baggage\" *ngIf=\"!luggagesIncluded\">\n        {{ 'FLIGHT.LUGGAGE.NO_BAGGAGE_INCLUDED' | translate }} <tz-icon icon=\"no-baggage\"></tz-icon>\n    </div>\n\n    <!-- Flight included luggage -->\n    <ng-container *ngIf=\"checkoutLuggages.flight && luggagesIncluded\">\n        <div class=\"tz-form-container__form\">\n            <div class=\"flight-included-luggages\" *ngFor=\"let passenger of passengerDetails; let i = index\">\n                <div class=\"traveller-name\">\n                    {{ getTravellerName(i) }}\n                </div>\n                <table class=\"flight-included-luggage\">\n                    <tr *ngIf=\"flightLuggage.includedOptions.bag1\">\n                        <td class=\"luggage-type\">\n                            <div>\n                                <tz-icon class=\"small-case\" [icon]=\"'case-small-black'\"></tz-icon>\n                                <ng-container *ngIf=\"!!flightLuggage.includedOptions.bag1[passenger.type]\">\n                                    <ng-container *ngIf=\"flightLuggage.includedOptions.bag1[passenger.type].title\">\n                                        {{ flightLuggage.includedOptions.bag1[passenger.type].title }}\n                                    </ng-container>\n                                </ng-container>\n                                <ng-container *ngIf=\"!flightLuggage.includedOptions.bag1[passenger.type]\">\n                                    <ng-container\n                                        *ngIf=\"\n                                            flightLuggage.includedOptions.bag1.type === 'personalItem' ||\n                                            flightLuggage.includedOptions.bag1.type !== 'checkIn'\n                                        \"\n                                    >\n                                        {{ 'FLIGHT.LUGGAGE.personalItem' | translate }}\n                                    </ng-container>\n                                </ng-container>\n                            </div>\n                        </td>\n                        <td class=\"luggage-dimension\">\n                            <ng-container *ngIf=\"!!flightLuggage.includedOptions.bag1[passenger.type]\">\n                                <ng-container *ngIf=\"flightLuggage.includedOptions.bag1[passenger.type]?.weightTexts\">\n                                    {{ flightLuggage.includedOptions.bag1[passenger.type].weightTexts.join(' ') }}\n                                </ng-container>\n                                <span *ngIf=\"flightLuggage.includedOptions.bag1[passenger.type].dimensions\">\n                                    {{ flightLuggage.includedOptions.bag1[passenger.type].dimensions }}\n                                </span>\n                            </ng-container>\n                        </td>\n                    </tr>\n                    <tr\n                        *ngIf=\"\n                            flightLuggage.includedOptions.bag2 && !!flightLuggage.includedOptions.bag2[passenger.type]\n                        \"\n                    >\n                        <td class=\"luggage-type\">\n                            <div>\n                                <tz-icon\n                                    class=\"small-case\"\n                                    *ngIf=\"flightLuggage.includedOptions.bag2.type !== 'checkIn'\"\n                                    [icon]=\"'case-small-black'\"\n                                ></tz-icon>\n                                <tz-icon\n                                    *ngIf=\"flightLuggage.includedOptions.bag2.type === 'checkIn'\"\n                                    [icon]=\"'case-dark'\"\n                                ></tz-icon>\n                                <ng-container *ngIf=\"flightLuggage.includedOptions.bag2[passenger.type].title\">\n                                    {{ flightLuggage.includedOptions.bag2[passenger.type].title }}\n                                </ng-container>\n                            </div>\n                        </td>\n                        <td class=\"luggage-dimension\">\n                            <ng-container *ngIf=\"flightLuggage.includedOptions.bag2[passenger.type]?.weightTexts\">\n                                {{ flightLuggage.includedOptions.bag2[passenger.type].weightTexts.join(', ') }}\n                            </ng-container>\n                            <span *ngIf=\"flightLuggage.includedOptions.bag2[passenger.type].dimensions\">\n                                {{ flightLuggage.includedOptions.bag2[passenger.type].dimensions }}\n                            </span>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </ng-container>\n    <!-- End flight included luggage -->\n\n    <!-- Train included luggage -->\n    <ng-container *ngIf=\"checkoutLuggages.train && luggagesIncluded\">\n        <ng-container *ngFor=\"let trip of trainLuggage\">\n            <div *ngIf=\"trainLuggage.length > 1\" class=\"luggage-trip-text\">\n                {{ trip.tripType === 'onwardLuggage' ? 'Arrival' : 'Departure' }}\n            </div>\n            <div class=\"tz-form-container__form\">\n                <div class=\"train-included-luggages\" *ngFor=\"let passenger of passengerDetails; let i = index\">\n                    <div class=\"traveller-name\">\n                        {{ getTravellerName(i) }}\n                    </div>\n                    <table class=\"train-included-luggage\">\n                        <tr *ngFor=\"let bag of trip.tripLuggages\">\n                            <ng-container *ngIf=\"bag[passenger.type] > 0\">\n                                <td class=\"luggage-type\">\n                                    <div>\n                                        <tz-icon\n                                            *ngIf=\"bag.type === 'personal_item'\"\n                                            [icon]=\"'case-small-black'\"\n                                        ></tz-icon>\n                                        <tz-icon *ngIf=\"bag.type === 'luggage'\" [icon]=\"'case-dark'\"></tz-icon>\n                                        {{ 'ADD_PASSENGER.' + bag.type | translate }}\n                                    </div>\n                                </td>\n                                <td class=\"luggage-dimension\">\n                                    {{\n                                        bag.isQuantityDiff\n                                            ? ' x ' + bag[passenger.type]\n                                            : bag[passenger.type] > 1 && bag.isQuantityDiff\n                                            ? ' x ' + bag[passenger.type]\n                                            : ''\n                                    }}\n                                </td>\n                            </ng-container>\n                            <ng-container *ngIf=\"!bag[passenger.type]\">\n                                <td>-</td>\n                            </ng-container>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </ng-container>\n    </ng-container>\n    <!-- End train included luggage -->\n\n    <!-- Flight additional luggage -->\n    <!-- (flightLuggage.cabin?.hasPayedOptions || flightLuggage.checkIn?.hasPayedOptions) -->\n    <div\n        *ngIf=\"checkoutLuggages.flight && luggagesIncluded && flightLuggage.checkIn?.hasPayedOptions\"\n        class=\"flight-additional-luggages\"\n    >\n        <div class=\"traveller-banner\" [ngClass]=\"{ 'mb-0': !showAdditionalLuggage }\">\n            <div\n                class=\"additional-bag-banner traveller-validation\"\n                [ngClass]=\"{ opened: showAdditionalLuggage }\"\n                (click)=\"showAdditionalLuggage = !showAdditionalLuggage\"\n                data-test=\"add-baggage\"\n            >\n                <tz-icon [icon]=\"'case-lightgray'\"></tz-icon>\n                <div class=\"banner-txt\">\n                    {{ 'FLIGHT.LUGGAGE.ADD_BAGGAGE' | translate }}\n                    ({{ (checkoutLuggages.flight.isRoundTrip ? 'GENERAL.ROUND_TRIP' : 'GENERAL.ONE_WAY') | translate }})\n                </div>\n                <div class=\"plus-minus-cont\"></div>\n            </div>\n        </div>\n        <div class=\"flight-additional-luggages__options\" [ngClass]=\"{ opened: showAdditionalLuggage }\">\n            <div\n                class=\"tz-form-container__form\"\n                *ngFor=\"let bagTypeInfo of bagTypes\"\n                [ngClass]=\"{ 'not-combinable': !flightLuggage[bagTypeInfo.type].combinable }\"\n            >\n                <!-- <div class=\"bag-type\" *ngIf=\"!flightLuggage[bagTypeInfo.type].combinable\">\n                    {{ bagTypeInfo.txt | translate }}\n                </div> -->\n                <div>\n                    <ng-container *ngFor=\"let passenger of passengerDetails; let index = index\">\n                        <div class=\"flight-additional-luggage\" *ngIf=\"flightLuggage[bagTypeInfo.type][passenger.type]\">\n                            <!-- start make bag combinations -->\n                            <ng-container *ngIf=\"flightLuggage[bagTypeInfo.type].combinable\">\n                                <div class=\"traveller-name\">\n                                    {{ getTravellerName(index) }}\n                                </div>\n                                <table>\n                                    <tr\n                                        class=\"luggage-type-row\"\n                                        *ngFor=\"\n                                            let bagOption of flightLuggage[bagTypeInfo.type][passenger.type].options\n                                        \"\n                                    >\n                                        <td class=\"luggage-type\">\n                                            <div>\n                                                <tz-icon\n                                                    *ngIf=\"bagTypeInfo.type === 'cabin'\"\n                                                    class=\"small-case\"\n                                                    [icon]=\"'case-small-black'\"\n                                                ></tz-icon>\n                                                <tz-icon\n                                                    *ngIf=\"bagTypeInfo.type === 'checkIn'\"\n                                                    [icon]=\"'case-dark'\"\n                                                ></tz-icon>\n                                                {{ bagTypeInfo.txt | translate }}\n                                            </div>\n                                        </td>\n                                        <td class=\"luggage-dimension\">\n                                            {{ transportLuggagesUtil.formatWeightText(bagOption.weightTexts, true) }}\n                                            <!-- &nbsp;\n                                            <span *ngIf=\"!!bagOption.dimensions\">{{ bagOption.dimensions }}</span> -->\n                                        </td>\n                                        <td class=\"luggage-selections\">\n                                            <div>\n                                                <div\n                                                    *ngIf=\"\n                                                        transportLuggagesUtil.optionPresent(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ) &&\n                                                        transportLuggagesUtil.getOption(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ).totalPrice\n                                                    \"\n                                                >\n                                                    {{\n                                                        transportLuggagesUtil.getOption(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ).totalPrice | tzCurrency: bagOption.prices.listPriceCur\n                                                    }}\n                                                </div>\n                                                <div\n                                                    *ngIf=\"\n                                                        !transportLuggagesUtil.optionPresent(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ) ||\n                                                        !transportLuggagesUtil.getOption(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        ).totalPrice\n                                                    \"\n                                                >\n                                                    {{\n                                                        bagOption.prices.listPrice\n                                                            | tzCurrency: bagOption.prices.listPriceCur\n                                                    }}\n                                                </div>\n                                                <div\n                                                    class=\"tz-icon-minus plus-minus\"\n                                                    data-test=\"minus-baggage\"\n                                                    [ngClass]=\"{\n                                                        disabled:\n                                                            !transportLuggagesUtil.optionPresent(\n                                                                passenger.additionalLuggage,\n                                                                bagTypeInfo.type,\n                                                                bagOption.index\n                                                            ) ||\n                                                            !transportLuggagesUtil.getOption(\n                                                                passenger.additionalLuggage,\n                                                                bagTypeInfo.type,\n                                                                bagOption.index\n                                                            ).count\n                                                    }\"\n                                                    (click)=\"\n                                                        luggageCombinationRemove(index, bagOption, bagTypeInfo.type)\n                                                    \"\n                                                ></div>\n                                                <div class=\"added-count\">\n                                                    {{\n                                                        transportLuggagesUtil.optionPresent(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption.index\n                                                        )\n                                                            ? transportLuggagesUtil.getOption(\n                                                                  passenger.additionalLuggage,\n                                                                  bagTypeInfo.type,\n                                                                  bagOption.index\n                                                              ).count\n                                                            : 0\n                                                    }}\n                                                </div>\n                                                <div\n                                                    class=\"tz-icon-plus plus-minus\"\n                                                    data-test=\"plus-baggage\"\n                                                    [ngClass]=\"{\n                                                        disabled: transportLuggagesUtil.disableLuggageSelection(\n                                                            passenger.additionalLuggage,\n                                                            bagTypeInfo.type,\n                                                            bagOption,\n                                                            flightLuggage[bagTypeInfo.type].maxAllowed\n                                                        )\n                                                    }\"\n                                                    (click)=\"luggageCombinationAdd(index, bagOption, bagTypeInfo.type)\"\n                                                ></div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </ng-container>\n                            <!-- end make bag combinations -->\n\n                            <!--start not combinable dropdown-->\n                            <ng-container *ngIf=\"!flightLuggage[bagTypeInfo.type].combinable\">\n                                <div class=\"traveller-name\">\n                                    {{ getTravellerName(index) }}\n                                </div>\n                                <div\n                                    ngbDropdown\n                                    #menu=\"ngbDropdown\"\n                                    placement=\"bottom-start\"\n                                    class=\"traveller-banner baggage-dropdown m-0\"\n                                >\n                                    <div class=\"traveller-validation\" ngbDropdownToggle>\n                                        <ng-container\n                                            *ngIf=\"\n                                                transportLuggagesUtil.getSelectedLuggage(\n                                                    passenger.additionalLuggage,\n                                                    bagTypeInfo.type\n                                                ) as bagOption;\n                                                else selectLabel\n                                            \"\n                                        >\n                                            <div class=\"tz-luggages-info\">\n                                                {{ transportLuggagesUtil.formatWeightText(bagOption.weightTexts) }}\n                                                <ng-container *ngIf=\"bagOption.dimension\">\n                                                    &nbsp;{{ bagOption.dimension }}\n                                                </ng-container>\n                                                &nbsp;-&nbsp;{{ bagOption.price }}\n                                            </div>\n                                        </ng-container>\n                                        <ng-template #selectLabel>\n                                            <span translate=\"FLIGHT.LUGGAGE.SELECT\"></span>\n                                        </ng-template>\n                                        <div\n                                            class=\"tz-icon-arrow\"\n                                            data-test=\"basket-additional-baggage-plus-arrow\"\n                                        ></div>\n                                    </div>\n                                    <div\n                                        class=\"travellers-list\"\n                                        data-test=\"basket-baggage-dropdown-menu\"\n                                        ngbDropdownMenu\n                                    >\n                                        <a\n                                            data-test=\"basket-baggage-dropdown-menu-no-baggaeg\"\n                                            class=\"overflow-ellipsis flex align-center\"\n                                            (click)=\"selectLuggageOption(index, null, bagTypeInfo.type); menu.close()\"\n                                        >\n                                            <div\n                                                class=\"check-mark\"\n                                                [ngClass]=\"{\n                                                    selected: passenger.additionalLuggage.checkIn.selected === ''\n                                                }\"\n                                            ></div>\n                                            {{ 'FLIGHT.LUGGAGE.NO_BAG' | translate }}\n                                        </a>\n                                        <a\n                                            [attr.data-test]=\"'basket-additional-baggage-' + bagOption.weightTexts\"\n                                            class=\"overflow-ellipsis flex align-center dropdown-luggage-dimension\"\n                                            (click)=\"\n                                                selectLuggageOption(index, bagOption, bagTypeInfo.type); menu.close()\n                                            \"\n                                            *ngFor=\"\n                                                let bagOption of flightLuggage[bagTypeInfo.type][passenger.type].options\n                                            \"\n                                        >\n                                            <div\n                                                class=\"check-mark\"\n                                                [ngClass]=\"{\n                                                    selected:\n                                                        passenger.additionalLuggage.checkIn.selected === bagOption.index\n                                                }\"\n                                            ></div>\n                                            <span class=\"tz-luggages-info\">\n                                                {{ transportLuggagesUtil.formatWeightText(bagOption.weightTexts) }}\n                                                <ng-container *ngIf=\"bagOption.dimensions\">\n                                                    &nbsp;{{ bagOption.dimensions }}\n                                                </ng-container>\n                                            </span>\n                                            {{ bagOption.prices.listPrice | tzCurrency: bagOption.prices.listPriceCur }}\n                                        </a>\n                                    </div>\n                                </div>\n                            </ng-container>\n                            <!--end not combinable dropdown-->\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- End flight additional Luggage -->\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Insurance, SelectedInsurance, TzTravelInsurance } from '@schemas/modules/checkout/travel-insurance';\n\nconst defaultInsurance: SelectedInsurance = { selected: {} as Insurance, selectedIdx: -1, validatedTC: false };\n\n@Component({\n    selector: 'tz-travel-insurance',\n    templateUrl: './travel-insurance.component.html',\n    styleUrls: ['./travel-insurance.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TravelInsuranceComponent implements OnInit {\n    @Input() tzTravelInsurances!: TzTravelInsurance;\n    @Input() selectedInsurance = defaultInsurance;\n\n    @Output() insuranceChange = new EventEmitter<SelectedInsurance>();\n    constructor() {}\n\n    ngOnInit() {}\n\n    public selectInsuranceOption(option: Insurance | null, selectedIdx = -1) {\n        if (option === null) {\n            this.insuranceChange.emit(defaultInsurance);\n            return;\n        }\n\n        this.insuranceChange.emit({\n            selected: option,\n            selectedIdx,\n            validatedTC: false,\n        } as SelectedInsurance);\n    }\n}\n","<div class=\"tz-form-container mt-20 title-mb\" data-test=\"basket-insurance-information\">\n    <div\n        class=\"tz-form-container__title title-medium\"\n        data-test=\"basket-insurance-container\"\n        translate=\"INSURANCE.TRAVEL_INSURANCE\"\n    ></div>\n    <span [id]=\"'TRAVEL_INSURANCE'\"></span>\n    <div class=\"tz-form-container__form\">\n        <div class=\"tz-insurance-option\" *ngFor=\"let insurance of tzTravelInsurances.insurances; let idx = index\">\n            <div class=\"tz-insurance-option__type flex\">\n                <mat-radio-button\n                    data-test=\"basket-insurance-radio-button\"\n                    class=\"flex justify-center tz-radio-btn\"\n                    [checked]=\"selectedInsurance && selectedInsurance.selectedIdx === idx\"\n                    (click)=\"selectInsuranceOption(insurance, idx)\"\n                ></mat-radio-button>\n                <div class=\"subtitle-2\">{{ insurance.name }}</div>\n                <div class=\"cost subtitle-1\">\n                    {{ insurance.net.listPrice | tzCurrency: insurance.net.listPriceCur }}\n                </div>\n            </div>\n            <ul>\n                <li class=\"body-2\" *ngFor=\"let content of insurance.content\">\n                    <span class=\"tz-icon-check-nobg\"></span> {{ content }}\n                </li>\n            </ul>\n            <a\n                class=\"tz-insurance-option__detail body-2 tz-purple-link\"\n                [href]=\"insurance.docUrlIpid\"\n                target=\"_blank\"\n                translate=\"INSURANCE.MORE_DETAILS\"\n                data-test=\"more-details\"\n            >\n            </a>\n        </div>\n        <div class=\"tz-insurance-option no-insurance-container\">\n            <div class=\"tz-insurance-option__type flex pb-0\">\n                <mat-radio-button\n                    class=\"tz-radio-btn\"\n                    [checked]=\"selectedInsurance && selectedInsurance.selectedIdx === -1\"\n                    (click)=\"selectInsuranceOption(null)\"\n                    data-test=\"no-insurance-radio-button\"\n                >\n                </mat-radio-button>\n                <div class=\"subtitle-2\" translate=\"INSURANCE.NO_INSURANCE\"></div>\n            </div>\n            <div class=\"body-2 travel-note\" translate=\"INSURANCE.IMPORTANT_MSG\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\n\nimport { TravellerType } from '@core/constants/traveller-type';\nimport { CheckoutTraveller } from '@schemas/modules/checkout/cart-traveller';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CartTravellerInfo } from '@schemas/modules/checkout/cart-traveller';\nimport { Passenger } from '@shared/schemas/tz-customer-info';\nimport { CheckoutCartServiceSummary } from '@schemas/modules/checkout/cart-summary';\nimport { DateRangePipe } from '@shared/pipes/date-range.pipe';\nimport { DatePipe } from '@angular/common';\nimport { Trip } from '@core/constants/trip';\nimport { Phone } from '@shared/schemas/tz-customer-info';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-checkout-travellers',\n    templateUrl: './travellers.component.html',\n    styleUrls: ['./travellers.component.scss'],\n})\nexport class TravellersComponent {\n    @Input() checkout: any;\n    @Input() travellersForm = new FormGroup({});\n    @Input() cartInfo!: CartTravellerInfo;\n    @Input() cartSummary: CheckoutCartServiceSummary[] = [];\n\n    @Output() markFormAsVisited = new EventEmitter<string>();\n\n    public serviceIds = ServiceId;\n\n    constructor(\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        private userService: UserService,\n        private dateRange: DateRangePipe,\n        private datePipe: DatePipe,\n        public platformService: PlatformService\n    ) {}\n\n    get transportFormArray(): FormGroup[] {\n        const formArray = this.travellersForm?.get('transport') as FormArray;\n        return formArray.controls as FormGroup[];\n    }\n\n    get hotelFormArray(): FormGroup[] {\n        const formArray = this.travellersForm?.get('hotel') as FormArray;\n        return formArray.controls as FormGroup[];\n    }\n\n    get transferFormGroup(): FormGroup {\n        return this.travellersForm?.get('transfer') as FormGroup;\n    }\n\n    get rentalFormGroup(): FormGroup {\n        return this.travellersForm?.get('rental') as FormGroup;\n    }\n\n    get serviceTitle(): { [key: string]: string } {\n        const serviceTitleMap: { [key: string]: string } = {};\n        const transferDates: string[] = [];\n        const trainDates: string[] = [];\n        const isMobile = this.platformService.isMobileDevice;\n        const maxAddrLength = isMobile ? 45 : 60;\n\n        for (const summary of this.cartSummary) {\n            switch (summary.serviceId) {\n                case ServiceId.FLIGHT: {\n                    const travelDate =\n                        summary.flyType === Trip.ROUND_TRIP\n                            ? this.dateRange.transform(summary.departureTzFormat, summary.arrivalTzFormat)\n                            : this.datePipe.transform(summary.departureTzFormat, 'mediumDate');\n                    const addr = `${summary.originCity} (${summary.originCode}) –\n                    ${summary.destinationCity} (${summary.destinationCode})`;\n\n                    serviceTitleMap[ServiceId.FLIGHT_TRAIN] = `${\n                        addr.length > maxAddrLength ? addr.substring(0, maxAddrLength) + '...' : addr\n                    } | ${travelDate}`;\n                    break;\n                }\n                case ServiceId.TRAIN: {\n                    const addr = `${summary.originCity} – ${summary.destinationCity}`;\n                    if (!serviceTitleMap[ServiceId.FLIGHT_TRAIN] || serviceTitleMap[ServiceId.FLIGHT_TRAIN] === '') {\n                        serviceTitleMap[ServiceId.FLIGHT_TRAIN] = `${\n                            addr.length > maxAddrLength ? addr.substring(0, maxAddrLength) + '...' : addr\n                        }`;\n                    }\n\n                    trainDates.push(summary.departureTzFormat);\n                    break;\n                }\n                case ServiceId.ACC: {\n                    const date = this.dateRange.transform(summary.checkIn, summary.checkOut);\n                    const addr =\n                        summary.hotelName.length > maxAddrLength - 20\n                            ? summary.hotelName.substring(0, maxAddrLength - 20) + '...'\n                            : summary.hotelName;\n                    serviceTitleMap[ServiceId.ACC] = `${addr} | ${date}`;\n                    break;\n                }\n                case ServiceId.TRANSFER: {\n                    transferDates.push(summary.pickupTzDate);\n                    break;\n                }\n                case ServiceId.CAR_RENTAL: {\n                    const date = this.dateRange.transform(summary.pickupTzDate, summary.dropOffTzDate);\n                    serviceTitleMap[ServiceId.CAR_RENTAL] = `${summary.class} | ${date}`;\n                    break;\n                }\n            }\n        }\n\n        if (trainDates.length > 0) {\n            serviceTitleMap[ServiceId.FLIGHT_TRAIN] += ` | ${\n                trainDates.length === 2\n                    ? this.dateRange.transform(trainDates[0], trainDates[1])\n                    : this.datePipe.transform(trainDates[0], 'mediumDate')\n            }`;\n        }\n\n        if (transferDates.length > 0) {\n            serviceTitleMap[ServiceId.TRANSFER] =\n                transferDates.length === 2\n                    ? this.dateRange.transform(transferDates[0], transferDates[1])\n                    : this.datePipe.transform(transferDates[0], 'mediumDate') + '';\n        }\n\n        return serviceTitleMap;\n    }\n\n    public setTraveller(serviceId: ServiceId, traveller: Passenger, idx: number, fromSavedTravellers = false): void {\n        traveller.middleName = traveller.middleName ? traveller.middleName : '';\n        switch (serviceId) {\n            case ServiceId.FLIGHT_TRAIN: {\n                const t = this.checkout.passengerDetails[idx];\n                this.checkout.passengerDetails[idx] = {\n                    ...traveller,\n                    type: t.type,\n                    selectedAge: t.selectedAge,\n                    docNotRequired: t.docNotRequired,\n                    additionalLuggage: t.additionalLuggage,\n                    saveTraveller: t.saveTraveller,\n                    updateTraveller: t.updateTraveller,\n                    updateTravellerForm: fromSavedTravellers,\n                };\n                break;\n            }\n            case ServiceId.ACC: {\n                const t = this.checkout.hotelPassengers[idx];\n                this.checkout.hotelPassengers[idx] = {\n                    ...traveller,\n                    type: TravellerType.ADULT,\n                    roomType: t.roomType,\n                    roomOfferId: t.roomOfferId,\n                    optionId: t.optionId,\n                    updateTravellerForm: fromSavedTravellers,\n                };\n                break;\n            }\n            case ServiceId.TRANSFER: {\n                if (this.userService.IsLogged() && fromSavedTravellers) {\n                    const customer = this.userService.getCustomerInformation();\n                    traveller.phone = {} as Phone;\n\n                    if (\n                        customer.phone &&\n                        customer.phone.number !== '' &&\n                        (customer.firstName.trim() + customer.lastName.trim()).replace(/ /g, '').toLowerCase() ===\n                            (\n                                traveller.firstName.trim() +\n                                traveller.middleName.trim() +\n                                traveller.lastName.trim()\n                            ).toLowerCase()\n                    ) {\n                        traveller.phone = customer.phone;\n                    }\n                }\n\n                this.checkout.transferPassenger = {\n                    ...traveller,\n                    type: TravellerType.ADULT,\n                    updateTravellerForm: fromSavedTravellers,\n                };\n                break;\n            }\n            case ServiceId.CAR_RENTAL: {\n                this.checkout.rentalPassenger = {\n                    ...traveller,\n                    type: TravellerType.ADULT,\n                    selectedAge: this.checkout.rentalPassenger.selectedAge,\n                    updateTravellerForm: fromSavedTravellers,\n                };\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n        console.log('Traveller updated: ', this.checkout);\n    }\n\n    public resetTraveller(serviceId: ServiceId, idx: number): void {\n        switch (serviceId) {\n            case ServiceId.FLIGHT_TRAIN: {\n                const traveller = this.checkout.passengerDetails[idx];\n                this.checkout.passengerDetails[idx] = {\n                    type: traveller.type,\n                    selectedAge: traveller.selectedAge,\n                    docNotRequired: traveller.docNotRequired,\n                    additionalLuggage: traveller.additionalLuggage,\n                    saveTraveller: traveller.saveTraveller,\n                    updateTraveller: traveller.updateTraveller,\n                    updateTravellerForm: true,\n                } as CheckoutTraveller;\n                break;\n            }\n            case ServiceId.ACC: {\n                const traveller = this.checkout.hotelPassengers[idx];\n                this.checkout.hotelPassengers[idx] = {\n                    type: TravellerType.ADULT,\n                    roomType: traveller.roomType,\n                    roomOfferId: traveller.roomOfferId,\n                    optionId: traveller.optionId,\n                    updateTravellerForm: true,\n                } as CheckoutTraveller;\n                break;\n            }\n            case ServiceId.TRANSFER: {\n                this.checkout.transferPassenger = {\n                    type: TravellerType.ADULT,\n                    updateTravellerForm: true,\n                } as CheckoutTraveller;\n                break;\n            }\n            case ServiceId.CAR_RENTAL: {\n                this.checkout.rentalPassenger = {\n                    type: TravellerType.ADULT,\n                    selectedAge: this.checkout.rentalPassenger.selectedAge,\n                    updateTravellerForm: true,\n                } as CheckoutTraveller;\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n        console.log('Traveller reset: ', this.checkout);\n    }\n}\n","<div\n    class=\"tz-form-container title-mb\"\n    data-test=\"basket-flight-information\"\n    [formGroup]=\"travellersForm\"\n    *ngIf=\"cartInfo\"\n>\n    <div *ngIf=\"transportFormArray && cartInfo.FLIGHT_TRAIN\">\n        <div\n            *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n            class=\"tz-form-container__title title-bold transport-container\"\n            data-test=\"basket-flight-container\"\n        >\n            {{ 'SERVICES.' + (cartInfo.FLIGHT_TRAIN.isFlight ? 'FLIGHT' : 'TRAIN') | translate\n            }}<span>{{ serviceTitle[serviceIds.FLIGHT_TRAIN] }}</span>\n        </div>\n        <div *ngIf=\"platformService.isMobileDevice$ | async\" class=\"mob-service-title\">\n            <div class=\"name\">\n                {{ 'SERVICES.' + (cartInfo.FLIGHT_TRAIN.isFlight ? 'FLIGHT' : 'TRAIN') | translate }}\n            </div>\n            {{ serviceTitle[serviceIds.FLIGHT_TRAIN] }}\n        </div>\n        <ng-container\n            formArrayName=\"transport\"\n            data-test=\"basket-flight-traveller\"\n            *ngFor=\"let traveller of transportFormArray; let i = index\"\n        >\n            <span [id]=\"'TRANSPORT_TRAVELER_' + i\"></span>\n\n            <tz-profile-travellers\n                [ageAt]=\"cartInfo.FLIGHT_TRAIN.travelDate.endDate\"\n                [isTransport]=\"true\"\n                [currentTraveller]=\"checkout.passengerDetails[i]\"\n                [checkoutTravllers]=\"checkout.passengerDetails\"\n                (resetTraveller)=\"resetTraveller(1, i)\"\n                (setTraveller)=\"setTraveller(1, $event.traveller, i, true)\"\n                [formGroup]=\"traveller\"\n                [prefixText]=\"\n                    i === 0\n                        ? ('TRAVELLER.PRIMARY_TRAVELER' | translate)\n                        : ('TRAVELLER.TRAVELER' | translate) + ' ' + (i + 1)\n                \"\n            >\n            </tz-profile-travellers>\n            <tz-traveller\n                data-test=\"basket-flight-primary-traveller-information\"\n                [formGroup]=\"traveller\"\n                [selectedTraveller]=\"checkout.passengerDetails[i]\"\n                [selectedAge]=\"checkout.passengerDetails[i].selectedAge\"\n                (setTraveller)=\"setTraveller(1, $event.traveller, i)\"\n                [travellerType]=\"checkout.passengerDetails[i].type\"\n                [travelDate]=\"cartInfo.FLIGHT_TRAIN.travelDate\"\n                [formIdx]=\"i\"\n                (markFormAsVisited)=\"markFormAsVisited.emit('TRANSPORT_TRAVELER_' + i)\"\n            >\n            </tz-traveller>\n        </ng-container>\n        <ng-content></ng-content>\n    </div>\n    <div class=\"mb-1_25\" data-test=\"basket-hotel-information\" *ngIf=\"hotelFormArray && cartInfo.ACC\">\n        <div\n            *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n            class=\"tz-form-container__title title-bold\"\n            data-test=\"basket-hotel-container\"\n        >\n            {{ 'TRAVELLER.HOTEL' | translate }}<span>{{ serviceTitle[serviceIds.ACC] }}</span>\n        </div>\n        <div *ngIf=\"platformService.isMobileDevice$ | async\" class=\"mob-service-title\">\n            <div class=\"name\">{{ 'TRAVELLER.HOTEL' | translate }}</div>\n            {{ serviceTitle[serviceIds.ACC] }}\n        </div>\n        <ng-container formArrayName=\"hotel\" *ngFor=\"let traveller of hotelFormArray; let i = index\">\n            <span [id]=\"'ACC_TRAVELER_' + i\"></span>\n\n            <tz-profile-travellers\n                data-test=\"basket-hotel-room-type\"\n                [formGroup]=\"traveller\"\n                [ageAt]=\"cartInfo.ACC.travelDate.endDate\"\n                [currentTraveller]=\"checkout.hotelPassengers[i]\"\n                [checkoutTravllers]=\"checkout.hotelPassengers\"\n                [transportTravllers]=\"checkout.passengerDetails\"\n                (resetTraveller)=\"resetTraveller(0, i)\"\n                (setTraveller)=\"setTraveller(0, $event.traveller, i, true)\"\n                [prefixText]=\"checkout.hotelPassengers[i].roomType\"\n            >\n            </tz-profile-travellers>\n            <tz-traveller\n                data-test=\"basket-hotel-room-information\"\n                [formGroup]=\"traveller\"\n                [selectedTraveller]=\"checkout.hotelPassengers[i]\"\n                (setTraveller)=\"setTraveller(0, $event.traveller, i)\"\n                [travellerType]=\"checkout.hotelPassengers[i].type\"\n                [travelDate]=\"cartInfo.ACC.travelDate\"\n                (markFormAsVisited)=\"markFormAsVisited.emit('ACC_TRAVELER_' + i)\"\n            >\n            </tz-traveller>\n        </ng-container>\n    </div>\n    <div class=\"mb-1_25\" data-test=\"basket-transfer-information\" *ngIf=\"transferFormGroup\">\n        <div\n            *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n            class=\"tz-form-container__title title-bold\"\n            data-test=\"basket-transfer-container\"\n        >\n            {{ 'TRANSFER.TRANSFERS' | translate }}<span>{{ serviceTitle[serviceIds.TRANSFER] }}</span>\n        </div>\n        <div *ngIf=\"platformService.isMobileDevice$ | async\" class=\"mob-service-title\">\n            <div class=\"name\">{{ 'GENERAL.TRANSFERS' | translate }}</div>\n            {{ serviceTitle[serviceIds.TRANSFER] }}\n        </div>\n        <span [id]=\"'TRANSFER_TRAVELER_0'\"></span>\n\n        <tz-profile-travellers\n            data-test=\"basket-transfer-type\"\n            [formGroup]=\"transferFormGroup\"\n            [currentTraveller]=\"checkout.transferPassenger\"\n            [transportTravllers]=\"checkout.passengerDetails\"\n            (resetTraveller)=\"resetTraveller(3, -1)\"\n            (setTraveller)=\"setTraveller(3, $event.traveller, -1, true)\"\n            [prefixText]=\"'TRAVELLER.Customer_Info' | translate\"\n        >\n        </tz-profile-travellers>\n        <tz-traveller\n            [formGroup]=\"transferFormGroup\"\n            [selectedTraveller]=\"checkout.transferPassenger\"\n            [travellerType]=\"checkout.transferPassenger.type\"\n            (setTraveller)=\"setTraveller(3, $event.traveller, -1)\"\n            (markFormAsVisited)=\"markFormAsVisited.emit('TRANSFER_TRAVELER_0')\"\n        >\n        </tz-traveller>\n    </div>\n    <div class=\"mb-1_25\" data-test=\"basket-car-rental-information\" *ngIf=\"rentalFormGroup\">\n        <div *ngIf=\"(platformService.isMobileDevice$ | async) === false\" class=\"tz-form-container__title title-bold\">\n            {{ 'CAR_RENTAL.CAR_RENTAL' | translate }}<span>{{ serviceTitle[serviceIds.CAR_RENTAL] }}</span>\n        </div>\n        <div *ngIf=\"platformService.isMobileDevice$ | async\" class=\"mob-service-title\">\n            <div class=\"name\">{{ 'CAR_RENTAL.CAR_RENTAL' | translate }}</div>\n            {{ serviceTitle[serviceIds.CAR_RENTAL] }}\n        </div>\n        <span [id]=\"'RENTAL_TRAVELER_0'\"></span>\n\n        <tz-profile-travellers\n            data-test=\"basket-driver-information\"\n            [ageAt]=\"cartInfo.RENTAL.travelDate.endDate\"\n            [currentTraveller]=\"checkout.rentalPassenger\"\n            [transportTravllers]=\"checkout.passengerDetails\"\n            (resetTraveller)=\"resetTraveller(2, -1)\"\n            (setTraveller)=\"setTraveller(2, $event.traveller, -1, true)\"\n            [formGroup]=\"rentalFormGroup\"\n            [prefixText]=\"'TRAVELLER.Driver_Info' | translate\"\n        >\n        </tz-profile-travellers>\n        <tz-traveller\n            data-test=\"basket-driver-information-block\"\n            [formGroup]=\"rentalFormGroup\"\n            [selectedTraveller]=\"checkout.rentalPassenger\"\n            (setTraveller)=\"setTraveller(2, $event.traveller, -1)\"\n            [travelDate]=\"cartInfo.RENTAL.travelDate\"\n            [travellerType]=\"checkout.rentalPassenger.type\"\n            [ageLimit]=\"cartInfo.RENTAL.driverAgeLimit\"\n            (markFormAsVisited)=\"markFormAsVisited.emit('RENTAL_TRAVELER_0')\"\n        >\n        </tz-traveller>\n        <!-- [selectedAge]=\"checkout.rentalPassenger.selectedAge\" -->\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CSS_MAPPING } from '@core/constants/css-mapping';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { ServiceTab } from '@schemas/modules/service-tabs/service-tab';\nimport { TzCurrencyPipe } from '@shared/pipes/tz-currency.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TzServiceTabs {\n    private summaryActive = true;\n    private active = ServiceId.INVALID;\n\n    private tabInfo: any = {\n        enable: false,\n        active: false,\n        minPrice: '',\n        minPriceCur: '',\n        resultCount: 0,\n        inCart: false,\n        selectedItemPrice: '',\n        styles: [],\n        loader: false,\n        preSearch: false,\n        loaderIcon: 'loader/tab-spinner',\n    };\n\n    private tabs: ServiceTab[] = [\n        {\n            serviceId: ServiceId.FLIGHT_TRAIN,\n            name: 'Flights, Trains',\n            label: 'SEARCH.TAB.FLIGHT_TRAINS',\n            image: 'flight_service.svg',\n            secondImage: 'mob-train-service-tab.svg',\n            ordinal: 1,\n            // icon: CSS_MAPPING['flight']['icon'],\n            secondIconClass: CSS_MAPPING.train.iconClass,\n            iconClass: CSS_MAPPING.flight.iconClass,\n            //colorCode: CSS_MAPPING.flight.color,\n            tabletLabel: 'SEARCH.TAB.FLIGHT_TRAINS_TABLET',\n            mobLabel: 'SEARCH.TAB.FLIGHT_TRAINS_MOB',\n            mobIcon: 'mob-flight-service-tab',\n            secondMobIcon: 'mob-train-service-tab',\n            ...this.tabInfo,\n        },\n        {\n            serviceId: ServiceId.ACC,\n            name: 'Hotels, Residence',\n            label: 'SEARCH.TAB.HOTELS_RESIDENCES',\n            image: 'hotel_service.svg',\n            ordinal: 2,\n            icon: CSS_MAPPING.hotel.icon,\n            iconClass: CSS_MAPPING.hotel.iconClass,\n            //colorCode: CSS_MAPPING.hotel.color,\n            tabletLabel: 'SEARCH.TAB.HOTELS_RESIDENCES_TABLET',\n            mobLabel: 'SEARCH.TAB.HOTELS_RESIDENCES_MOB',\n            mobIcon: 'mob-hotels-service-tab',\n            ...this.tabInfo,\n        },\n        {\n            serviceId: ServiceId.TRANSFER,\n            name: 'Transfers',\n            label: 'SEARCH.TAB.TRANSFERS',\n            image: 'Transfers.svg',\n            ordinal: 3,\n            icon: CSS_MAPPING.transfer.icon,\n            iconClass: CSS_MAPPING.transfer.iconClass,\n            //colorCode: CSS_MAPPING.transfer.color,\n            tabletLabel: 'SEARCH.TAB.TRANSFERS_TABLET',\n            mobLabel: 'SEARCH.TAB.TRANSFERS_MOB',\n            mobIcon: 'mob-transfer-service-tab',\n            ...this.tabInfo,\n        },\n        {\n            serviceId: ServiceId.CAR_RENTAL,\n            name: 'Car Rentals',\n            label: 'SEARCH.TAB.CAR_RENTALS',\n            image: 'car.svg',\n            ordinal: 4,\n            icon: CSS_MAPPING.rentcar.icon,\n            iconClass: CSS_MAPPING.rentcar.iconClass,\n            //colorCode: CSS_MAPPING.rentcar.color,\n            tabletLabel: 'SEARCH.TAB.CAR_RENTALS_TABLET',\n            mobLabel: 'SEARCH.TAB.CAR_RENTALS_MOB',\n            mobIcon: 'mob-car-service-tab',\n            ...this.tabInfo,\n        },\n    ];\n\n    private summaryTab: ServiceTab = {\n        serviceId: ServiceId.SUMMARY,\n        name: 'Basket',\n        label: 'GENERAL.SUMMARY',\n        image: 'total.svg',\n        ordinal: 5,\n        color: 'purple-color',\n        icon: 'icon-total',\n        ...this.tabInfo,\n        mobLabel: 'GENERAL.SUMMARY',\n        tabletLabel: 'GENERAL.SUMMARY',\n        loaderIcon: 'loader/tab-spinner-summary',\n        styles: ['summary'],\n    };\n\n    constructor(\n        private cartService: CartService,\n        private tripPlannerService: TripPlannerService,\n        private searchDataService: SearchDataService,\n        private listenersService: ListenersService,\n        public currencyPipe: TzCurrencyPipe\n    ) {}\n\n    private static getSummaryI18nKey(activeServiceId: ServiceId, allBooked?: boolean): string {\n        if (activeServiceId === ServiceId.SUMMARY || allBooked) {\n            return 'GENERAL.BASKET';\n        } else {\n            return 'GENERAL.SUMMARY';\n        }\n    }\n\n    public reformTabFields(tab: ServiceTab, activeServiceId: ServiceId, allBooked?: boolean) {\n        let cartInfo = this.cartService.getCartInfo(tab.serviceId);\n        let serviceId = tab.serviceId;\n\n        tab.disable = this.isTabDisabled(tab, serviceId, activeServiceId, allBooked);\n        if (tab.serviceId === ServiceId.SUMMARY) {\n            tab.label = TzServiceTabs.getSummaryI18nKey(activeServiceId, allBooked);\n            tab.tabletLabel = tab.label;\n            tab.mobLabel = tab.label;\n        }\n\n        if (tab.serviceId === ServiceId.FLIGHT_TRAIN) {\n            const info = this.cartService.getCartInfo(ServiceId.TRAIN);\n            if (info.inCart) {\n                serviceId = ServiceId.TRAIN;\n                tab.image = 'train-blue.svg';\n                tab.icon = 'service-icon-train';\n                tab.iconClass = CSS_MAPPING.train.iconClass;\n                cartInfo = info;\n            } else {\n                serviceId = ServiceId.FLIGHT;\n                tab.icon = 'service-icon-flight';\n                tab.image = 'flight_service.svg';\n                tab.iconClass = CSS_MAPPING.flight.iconClass;\n            }\n            if (\n                activeServiceId === ServiceId.TRAIN ||\n                activeServiceId === ServiceId.FLIGHT ||\n                activeServiceId === ServiceId.FLIGHT_TRAIN\n            ) {\n                serviceId = activeServiceId;\n            }\n        }\n\n        const resultInfo = this.searchDataService.getSearchResult(serviceId);\n        if (resultInfo) {\n            tab.resultCount = resultInfo.resultLength;\n        }\n        tab.styles.push(tab.color);\n        tab.enable = tab.inCart = cartInfo.inCart;\n        tab.selectedItemPrice = cartInfo.price;\n        tab.active = serviceId === activeServiceId;\n        tab.isVirtual = cartInfo.isVirtual;\n        tab.selectedItemPriceCur = cartInfo.currency;\n        if (tab.enable) {\n            if (cartInfo.price === 0 && cartInfo.inError) {\n                tab.isInError = true;\n                tab.minPrice = cartInfo.inError.cheapestListPrice;\n                tab.minPriceCur = cartInfo.inError.cheapestListPriceCur;\n            } else {\n                tab.isInError = false;\n                tab.minPrice = cartInfo.price;\n                tab.minPriceCur = cartInfo.currency;\n            }\n            if (cartInfo.isVirtual) {\n                tab.preSearch = true;\n            }\n        }\n        if (!tab.enable || cartInfo.isVirtual) {\n            const preSearchInfos = this.tripPlannerService.get(tab.serviceId);\n            if (preSearchInfos.enable || preSearchInfos.complete) {\n                tab.preSearch =\n                    ((preSearchInfos.enable || preSearchInfos.complete) && !preSearchInfos.loader) ||\n                    cartInfo.isVirtual;\n                tab.loader = preSearchInfos.loader;\n                if (cartInfo.isVirtual && cartInfo.price) {\n                    tab.minPrice = cartInfo.price;\n                    tab.minPriceCur = cartInfo.currency;\n                } else {\n                    tab.minPrice = 0;\n                }\n            } else {\n                tab.minPrice = cartInfo.price;\n                tab.minPriceCur = cartInfo.currency;\n            }\n        }\n\n        if (tab.active) {\n            if (tab.serviceId === ServiceId.FLIGHT_TRAIN) {\n                tab.loader =\n                    this.tripPlannerService.get(ServiceId.FLIGHT).loader ||\n                    this.tripPlannerService.get(ServiceId.TRAIN).loader;\n            } else {\n                const preSearchInfos = this.tripPlannerService.get(tab.serviceId);\n                tab.loader = preSearchInfos.loader;\n            }\n        }\n\n        tab.loader = tab.forceLoader ? true : tab.loader;\n\n        return {\n            active: tab.active,\n            tab,\n        };\n    }\n\n    public setActive(newActive: any) {\n        this.active = newActive;\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_TAB_CHANGED, newActive);\n    }\n\n    public getActive() {\n        return this.active;\n    }\n\n    public isSummaryActive() {\n        return this.summaryActive;\n    }\n\n    public setSummaryActive(state: boolean) {\n        this.summaryActive = state;\n    }\n\n    public toggleForceLoader(serviceId: ServiceId, force: boolean): void {\n        for (const tab of this.tabs) {\n            if (tab.serviceId === serviceId) {\n                tab.forceLoader = force;\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_TAB_CHANGED);\n                break;\n            }\n        }\n    }\n\n    getTabs() {\n        return this.tabs;\n    }\n\n    public getSummaryTab() {\n        return { ...this.summaryTab, styles: ['summary'] };\n    }\n\n    public updatePriceChanging(oldPrice: number, currentPrice: number): string {\n        const priceDiff = currentPrice - oldPrice;\n        const priceDiffStrWithCur = this.currencyPipe.transform(Math.abs(priceDiff));\n        return priceDiff > 0 ? `+ ${priceDiffStrWithCur}` : `- ${priceDiffStrWithCur}`;\n    }\n\n    private isTabDisabled(tab: any, serviceId: ServiceId, activeServiceId: ServiceId, allBooked?: boolean): boolean {\n        const summaryTabAndNotAllServicesAreBooked = serviceId === ServiceId.SUMMARY && !allBooked;\n        const notSummaryTabAndServiceIsBookedAndActiveServiceIdIsNotEqualToSummary =\n            serviceId !== ServiceId.SUMMARY &&\n            this.cartService.isAllServiceOptionBooked(tab.serviceId) &&\n            (activeServiceId !== ServiceId.SUMMARY || tab.selectedService);\n        return (\n            summaryTabAndNotAllServicesAreBooked || notSummaryTabAndServiceIsBookedAndActiveServiceIdIsNotEqualToSummary\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { HttpRequestType } from '@core/constants/http-request-type';\nimport { BookingReq } from '@schemas/modules/checkout/booking-request';\nimport { Observable, throwError } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CheckoutDataService extends ApiAccessService {\n    public setDraftTravellerInfo(combId: string, req: { data: string }): Observable<any> {\n        const params = {\n            entity: 'cart',\n            id: combId,\n            action: 'setDraftTraveller',\n            deviceId: this.settingsService.getDeviceID(),\n        };\n\n        if (!params.id) {\n            return throwError('invalid device id' + params);\n        } else {\n            return this.apiCallObs(HttpRequestType.POST, params, req);\n        }\n    }\n\n    public getDraftTravellerInfo(combId: string) {\n        const params = {\n            entity: 'cart',\n            id: combId,\n            action: 'getDraftTraveller',\n            deviceId: this.settingsService.getDeviceID(),\n        };\n\n        if (!params.id) {\n            return throwError('invalid data id' + params);\n        } else {\n            return this.apiCallObs(HttpRequestType.GET, params);\n        }\n    }\n\n    public getInsurance(bookingReq: BookingReq) {\n        const params = {\n            entity: 'insurance',\n            id: this.settingsService.getDeviceID(),\n            actionId: this.settingsService.langCode,\n        };\n\n        return this.apiCallObs(HttpRequestType.POST, params, bookingReq);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartStatus } from '@core/constants/cart-status';\nimport { ServiceIdToName } from '@core/constants/service-ids-name.const';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { DialogService } from '@services/dialog.service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\n\nexport interface BookingError {\n    message: string;\n    error: string;\n    showError: boolean;\n    code: number;\n    info?: any;\n    reloadRentalMeta: boolean;\n}\n\n// Trazler support Booking Error codes\nexport enum BOOKING_ERROR_TYPE {\n    // Payment card error\n    INVALID_CARD = 80,\n    UNSUPPORTED_CARD = 81,\n    // Payment error\n    BE_TZ_PAYMENT = 402,\n    BE_PAYMENT = 426,\n    // price been changed (Reset Content)\n    BE_PRICE_CHANGE = 205,\n    // Data expired from the provider/from redis\n    BE_EXPIRED = 206,\n    // Availability changed or ticket sold out while booking\n    BE_SOLDOUT = 410,\n    // Duplicate booking initiated\n    BE_DUPLICATE = 409,\n    // Invalid data sent to provider.\n    // used when the traveller, customer information is not valid\n    BE_VALIDATION = 422,\n    // Invalid request sent or request not valid (TZ action)\n    BE_INVALIDRQ = 400,\n    // Invalid response received (TZ action)\n    BE_INVALIDRS = 406,\n    // Internal system error (Tz & provider)\n    BE_INTERNAL = 500,\n    // BENotAllowed - access restricted from the server\n    BE_NOT_ALLOWED = 405,\n    // If system unable to detect error.\n    // use this (watch unknown error in logs and add it to error list)\n    BE_UNKNOWN = 421,\n    // Server timeout error\n    BE_TIMEOUT = 408,\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CheckoutErrorService {\n    constructor(\n        private router: Router,\n        private translateService: TranslateService,\n        private dialogService: DialogService,\n        private cartService: CartService,\n        private cartRoutingService: CartRoutingService,\n        private apiAccessService: ApiAccessService,\n        private searchDataService: SearchDataService,\n        private searchMetadataService: SearchMetadataService\n    ) {}\n    private static errorType(errorCode: number) {\n        switch (errorCode) {\n            case BOOKING_ERROR_TYPE.BE_SOLDOUT:\n                return 7.2;\n            case BOOKING_ERROR_TYPE.BE_PRICE_CHANGE:\n                return 7.3;\n            default:\n                return 7.1;\n        }\n    }\n\n    private static roomsFailed(items: ICartItem[]): boolean {\n        const hasBookedRooms = items.some(\n            (item) =>\n                item.serviceId === ServiceId.ACC &&\n                item.selectedItem.bookingOptions.some((option) => CartUtils.isFailed(option.status))\n        );\n\n        const hasFailedRooms = items.some(\n            (item) =>\n                item.serviceId === ServiceId.ACC &&\n                item.selectedItem.bookingOptions.some((option) => CartUtils.isBooked(option.status))\n        );\n\n        return hasBookedRooms && hasFailedRooms;\n    }\n\n    public handleBookingError(error: BookingError, fromStripe: boolean): void {\n        const paymentError =\n            error.code === BOOKING_ERROR_TYPE.INVALID_CARD ||\n            error.code === BOOKING_ERROR_TYPE.UNSUPPORTED_CARD ||\n            error.code === BOOKING_ERROR_TYPE.BE_TZ_PAYMENT ||\n            error.code === BOOKING_ERROR_TYPE.BE_PAYMENT;\n        const isCheckoutError =\n            error.code === BOOKING_ERROR_TYPE.BE_VALIDATION || error.code === BOOKING_ERROR_TYPE.BE_INVALIDRQ;\n\n        if (paymentError || isCheckoutError) {\n            if (paymentError) {\n                this.router.navigate(['checkout-processed', 'payment-failed']);\n            } else {\n                this.dialogService.openSnackBar({ message: this.formCheckoutErrorMessage(error, fromStripe) });\n            }\n            return;\n        }\n        if (error.reloadRentalMeta) {\n            console.log('reload rental meta data');\n            this.apiAccessService\n                .getMetaRes(\n                    this.searchDataService.getCombId(),\n                    ServiceId.CAR_RENTAL,\n                    this.searchDataService.getDataId(ServiceId.CAR_RENTAL)\n                )\n                .then(\n                    (res: any) => {\n                        this.searchMetadataService.saveSearch(res);\n                        this.cartRoutingService.moveToSummary().then(() => this.showInvalidCartAlert());\n                    },\n                    (failure: any) => {\n                        console.error(failure);\n                        this.cartRoutingService.moveToSummary().then(() => this.showInvalidCartAlert());\n                    }\n                );\n        } else {\n            this.cartRoutingService.moveToSummary().then(() => this.showInvalidCartAlert());\n        }\n    }\n\n    private formCheckoutErrorMessage(error: BookingError, fromStripe: boolean): string {\n        let message = error.message;\n        switch (error.code) {\n            case BOOKING_ERROR_TYPE.INVALID_CARD:\n                message = this.translateService.instant('NOTIFS.ERROR.CREDIT_CARDS_INVALID_CARD_NUMBER');\n                break;\n            case BOOKING_ERROR_TYPE.UNSUPPORTED_CARD:\n                message = this.translateService.instant('NOTIFS.ERROR.CREDIT_CARDS_UNSUPPORTED');\n                break;\n            case BOOKING_ERROR_TYPE.BE_TZ_PAYMENT:\n            case BOOKING_ERROR_TYPE.BE_PAYMENT:\n                message = this.translateService.instant('NOTIFS.ERROR.PAYMENT_FAIL');\n                break;\n            case BOOKING_ERROR_TYPE.BE_VALIDATION:\n            case BOOKING_ERROR_TYPE.BE_INVALIDRQ:\n                message = this.translateService.instant('NOTIFS.ERROR.INVALID_REQ');\n                break;\n        }\n        return message;\n    }\n\n    private showInvalidCartAlert(): void {\n        const cartData = this.cartService.getCartData() as ICart;\n        const errorType = CheckoutErrorService.errorType(cartData.errorCode);\n\n        if (CheckoutErrorService.roomsFailed(cartData.items)) {\n            this.dialogService.openConfirmationDialog({\n                title: this.translateService.instant('BOOKINGS.REJECTION.ROOM_REJECTION_POPUPS.TITLE_' + errorType),\n                content: this.translateService.instant('BOOKINGS.REJECTION.ROOM_REJECTION_POPUPS.MESSAGE_' + errorType),\n                confirmBtnTitle: this.translateService.instant('GENERAL.OK'),\n            });\n\n            return;\n        }\n\n        let invalidItems = cartData.items.filter((item) =>\n            item.selectedItem.bookingOptions.some((option: any) => option.status >= CartStatus.STATUS_REJECTED)\n        );\n        invalidItems = invalidItems.filter(\n            (item, i, items) => items.findIndex((t) => t.serviceId === item.serviceId) === i\n        );\n\n        if (invalidItems.length === 0) {\n            return;\n        }\n\n        const serviceName = invalidItems.reduce(\n            (servicesTxt, item) =>\n                servicesTxt +\n                (servicesTxt !== '' ? ', ' : '') +\n                this.translateService.instant('SERVICES.' + item.serviceId).toLowerCase(),\n            ''\n        );\n\n        this.dialogService.openConfirmationDialog({\n            title: this.translateService.instant('BOOKINGS.REJECTION.POPUPS.TITLE_' + errorType, {\n                service: serviceName,\n            }),\n            content: this.translateService.instant('BOOKINGS.REJECTION.POPUPS.MESSAGE_' + errorType, {\n                service: serviceName,\n            }),\n            confirmBtnTitle: this.translateService.instant('GENERAL.OK'),\n        });\n    }\n}\n"],"names":["FormGroup","TravellerType","skip","takeUntil","Subject","StorageManagerUtil","ServiceId","i0","ctx_r4","ctx_r6","ctx_r7","ctx_r8","ctx_r11","ctx_r1","ctx_r19","ctx_r13","ctx_r21","ctx_r14","ctx_r25","ctx_r23","ctx_r27","ctx_r24","ctx_r29","ctx_r17","ctx_r32","ctx_r35","ctx_r2","ctx_r3","CheckoutComponent","constructor","cartService","fb","tzTravellerService","tzCheckoutService","cartRoutingService","settingsService","searchDataService","checkoutDataService","userService","scrollService","loaderService","dialogService","translateService","platformService","isStripeValid","invoiceRequired","agreeToTerms","healthDeclarationChecked","baggageSelected","insurance","selected","selectedIdx","validatedTC","additionalLuggagePrice","listPrice","listPriceCur","transportID","profileFormGroup","paymentForm","_a","get","paymentFormGroup","transportFormArray","travellersForm","controls","insuranceSelected","tzTravelInsurances","insurances","length","_b","checkout","hotelFormArray","beforeUnload","draftTravellerInfo","ngOnInit","scrollToTop","initializeCheckoutComponent","ngOnDestroy","destroy$","next","complete","updateHelper","cartData","Object","helpers","getHelpers","switchTab","tabId","invalid","scrollTo","onMarkFormAsVisited","cartInfo","FLIGHT_TRAIN","IsLogged","traveller","passengerDetails","id","undefined","updateTraveller","travellerUpdated","updateInfo","docNotRequired","formProfileTraveller","saveTraveller","selctedInsurance","hasSelectedOption","getTravelInsurance","goto","gotoSummary","moveToSummary","onInsuranceChange","onEmailFieldClicked","openSnackBarDialog","instant","markUntil","invalidId","activeTab","checkFormValidity","formGroupArr","formIdPrefix","idx","formGroup","entries","formId","updateTravellerForm$","keys","forEach","key","markAsDirty","markAsTouched","insuranceTouched","reInit","then","triggerLoading","emit","loading","items","getTransportID","formCheckoutTravellers","updateCartInfos","formCheckoutPayment","payNowInt","formDraftValues","checkSignedIn","selectedLanguageSubject","pipe","subscribe","loggedIn$","isLogged","formProfileData","cartSummary","formCheckoutCartSummary","checkoutLuggages","formTransportLuggage","group","transport","array","hotel","formCartTravellersData","TRANSFER","transferPassenger","type","ADULT","transfer","createTravellerGroup","RENTAL","rentalPassenger","selectedAge","driversAge","rental","travellers","newFlightTrainTravellers","push","ACC","newAccTravellers","hotelPassengers","formStripe","profile","getProfileGroup","billing","getBillingGroup","payment","getPaymentGroup","setBillingValue","setDraftValues","checkoutDataStr","checkoutData","JSON","parse","formCheckoutDraftValues","paymentFormValue","patchValue","value","travellersFormValue","setBillingValidators","item","serviceId","FLIGHT","selectedItem","data","stringify","set","setDraftTravellerInfo","getCombId","failure","console","log","getDraftTravellerInfo","response","gotoPayment","bookingReq","makeBookingReq","getInsurance","priceChanged","net","profileValue","repeatEmailID","emailID","skipSignin","askToLogin","openLoginModel","reason","getCustomer","selectors","hostBindings","ctx","CartStatus","ctx_r9","ctx_r0","PaymentComponent","trazlerAPI","stripeService","checkoutErrorService","router","serviceTabs","billingFormGroup","disableBooking","stripeForm","valid","validTravellers","showTripRefundInfo","cartItems","Map","map","values","updateValidation","proceedCheckout","Booking","success","handleBookingSuccess","bookingFailure","bookingSuccess","showLoader","infoMessage","showPriceChangeAlert","openSnackBar","message","bookingId","navigate","makeBooking","res","err","hdlNoPCIPayment","clientSecret","getStripe","confirmCardPayment","payment_method","card","getCartElement","result","error","pId","paymentIntent","hdlPaymentWithSecret","successData","stripeAction","isStripe","bookingStatus","STATUS_PROGRESS","combId","deviceId","retry","recheckInterval","setInterval","recheckCartItem","cartRes","clearInterval","STATUS_PRICE_CHANGED","cartErr","info","handleBookingError","infoContent","openConfirmationDialog","title","content","confirmBtnTitle","afterClosed","show","msg","textKey","markFormAsDirty","profileForm","updateStripe","inputs","decls","vars","consts","template","ElementRef","StripeElementsKeys","StripeElementContainer","StripeComponent","ngAfterViewInit","isStripLoaded","loaded","initStripe","eltBlur","CARDNO","CARDEXP","CARDCVC","cardNo","destroy","cardExp","cardCvc","setFormEle","getEl","nativeElementOfInput","stripeFormContainer","nativeElement","querySelector","innerText","classList","remove","setEle","el","setStripeValid","isValid","fieldType","add","textContent","eltChange","event","empty","eltFocus","stripeMount","mount","ele","on","e","setTimeout","bind","elements","locale","langCode","stripeStyle","isMobileDevice","stripeMobileFieldStyle","stripeFieldStyle","create","style","showIcon","setCartElement","viewQuery","EventEmitter","Trip","ctx_r10","i_r9","ctx_r12","$event","traveller_r8","ctx_r20","i_r19","ctx_r22","ctx_r30","ctx_r31","ctx_r34","ctx_r36","ctx_r37","ctx_r38","TravellersComponent","changeDetectorRef","dateRange","datePipe","formArray","transferFormGroup","rentalFormGroup","serviceTitle","serviceTitleMap","transferDates","trainDates","isMobile","maxAddrLength","summary","travelDate","flyType","ROUND_TRIP","transform","departureTzFormat","arrivalTzFormat","addr","originCity","originCode","destinationCity","destinationCode","substring","TRAIN","date","checkIn","checkOut","hotelName","pickupTzDate","CAR_RENTAL","dropOffTzDate","class","setTraveller","fromSavedTravellers","middleName","t","additionalLuggage","updateTravellerForm","roomType","roomOfferId","optionId","customer","getCustomerInformation","phone","number","firstName","trim","lastName","replace","toLowerCase","detectChanges","resetTraveller","outputs","markFormAsVisited","ngContentSelectors"],"sourceRoot":"webpack:///"}