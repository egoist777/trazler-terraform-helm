{"version":3,"file":"default-src_app_modules_results_results-cart-item-selection_module_ts.js","mappings":"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","sources":["./src/app/modules/core/constants/flight-options-static.ts","./src/app/modules/core/constants/mapbox-gl-const.ts","./src/app/modules/results/accommodation-details-util.service.ts","./src/app/modules/results/accommodation/components/accommodation-gallery/accommodation-gallery.component.ts","./src/app/modules/results/accommodation/components/accommodation-gallery/accommodation-gallery.component.html","./src/app/modules/results/accommodation/components/accommodation-image/accommodation-image.component.ts","./src/app/modules/results/accommodation/components/accommodation-image/accommodation-image.component.html","./src/app/modules/results/accommodation/components/accommodation-room-option/accommodation-room-option.component.ts","./src/app/modules/results/accommodation/components/accommodation-room-option/accommodation-room-option.component.html","./src/app/modules/results/accommodation/components/accommodation-room/accommodation-room.component.ts","./src/app/modules/results/accommodation/components/accommodation-room/accommodation-room.component.html","./src/app/modules/results/accommodation/components/accommodation-terms-popup/accommodation-terms-popup.component.ts","./src/app/modules/results/accommodation/components/accommodation-terms-popup/accommodation-terms-popup.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-amenities/mob-accommodation-amenities.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-amenities/mob-accommodation-amenities.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-description/mob-accommodation-description.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-description/mob-accommodation-description.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-details-room-main-info/mob-accommodation-details-room-main-info.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-details-room-main-info/mob-accommodation-details-room-main-info.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-details-room-offer/mob-accommodation-details-room-offer.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-details-room-offer/mob-accommodation-details-room-offer.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-gallery/mob-accommodation-gallery.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-gallery/mob-accommodation-gallery.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-guest-info/mob-accommodation-guest-info.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-guest-info/mob-accommodation-guest-info.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-images-carosel/mob-accommodation-images-carosel.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-images-carosel/mob-accommodation-images-carosel.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-map/mob-accommodation-map.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-map/mob-accommodation-map.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-nearby/mob-accommodation-nearby.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-nearby/mob-accommodation-nearby.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-rating/mob-accommodation-rating.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-rating/mob-accommodation-rating.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-recommended/mob-accommodation-recommended.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-recommended/mob-accommodation-recommended.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-reviews/mob-accommodation-reviews.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-reviews/mob-accommodation-reviews.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-room-offer/mob-accommodation-room-offer.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-room-offer/mob-accommodation-room-offer.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-rooms/mob-accommodation-rooms.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-rooms/mob-accommodation-rooms.component.html","./src/app/modules/results/accommodation/components/mob-accommodation-who-stays-here/mob-accommodation-who-stays-here.component.ts","./src/app/modules/results/accommodation/components/mob-accommodation-who-stays-here/mob-accommodation-who-stays-here.component.html","./src/app/modules/results/accommodation/components/mob-accomodation-details/mob-accommodation-details.component.ts","./src/app/modules/results/accommodation/components/mob-accomodation-details/mob-accommodation-details.component.html","./src/app/modules/results/accommodation/components/mob-accomodation-popular-facilities/mob-accommodation-popular-facilities.component.ts","./src/app/modules/results/accommodation/components/mob-accomodation-popular-facilities/mob-accommodation-popular-facilities.component.html","./src/app/modules/results/accommodation/components/mob-modal-page-link-block/mob-modal-page-link-block.component.ts","./src/app/modules/results/accommodation/components/mob-modal-page-link-block/mob-modal-page-link-block.component.html","./src/app/modules/results/accommodations/components/accommodation-list-item-footer/accommodation-list-item-footer.component.ts","./src/app/modules/results/accommodations/components/accommodation-list-item-footer/accommodation-list-item-footer.component.html","./src/app/modules/results/accommodations/components/accommodation-list-item-price-info-block/accommodation-list-item-price-info-block.component.ts","./src/app/modules/results/accommodations/components/accommodation-list-item-price-info-block/accommodation-list-item-price-info-block.component.html","./src/app/modules/results/accommodations/components/accommodation-list-item/accommodation-list-item.component.ts","./src/app/modules/results/accommodations/components/accommodation-list-item/accommodation-list-item.component.html","./src/app/modules/results/accommodations/components/mob-accommodation-advantages-disadvantages/mob-accommodation-advantages-disadvantages.component.ts","./src/app/modules/results/accommodations/components/mob-accommodation-advantages-disadvantages/mob-accommodation-advantages-disadvantages.component.html","./src/app/modules/results/accommodations/components/mob-accommodation-selected-room-details/mob-accommodation-selected-room-details.component.ts","./src/app/modules/results/accommodations/components/mob-accommodation-selected-room-details/mob-accommodation-selected-room-details.component.html","./src/app/modules/results/accommodations/components/mob-accommodation-selected-room-list/mob-accommodation-selected-room-list.component.ts","./src/app/modules/results/accommodations/components/mob-accommodation-selected-room-list/mob-accommodation-selected-room-list.component.html","./src/app/modules/results/accommodations/components/mob-accommodations-list-item/mob-accommodations-list-item.component.ts","./src/app/modules/results/accommodations/components/mob-accommodations-list-item/mob-accommodations-list-item.component.html","./src/app/modules/results/accommodations/components/mob-selected-accommodation-details/mob-selected-accommodation-details.component.ts","./src/app/modules/results/accommodations/components/mob-selected-accommodation-details/mob-selected-accommodation-details.component.html","./src/app/modules/results/accommodations/components/selected-accommodations/selected-accommodations.component.ts","./src/app/modules/results/accommodations/components/selected-accommodations/selected-accommodations.component.html","./src/app/modules/results/car-rentals/components/car-rental-list-item/car-rental-list-item.component.ts","./src/app/modules/results/car-rentals/components/car-rental-list-item/car-rental-list-item.component.html","./src/app/modules/results/car-rentals/components/car-rental-location-dialog/car-rental-location-dialog.component.ts","./src/app/modules/results/car-rentals/components/car-rental-location-dialog/car-rental-location-dialog.component.html","./src/app/modules/results/car-rentals/components/car-rental-package-dialog/car-rental-package-dialog.component.ts","./src/app/modules/results/car-rentals/components/car-rental-package-dialog/car-rental-package-dialog.component.html","./src/app/modules/results/car-rentals/components/car-rental-packages/car-rental-packages.component.ts","./src/app/modules/results/car-rentals/components/car-rental-packages/car-rental-packages.component.html","./src/app/modules/results/car-rentals/components/car-rental-terms.dialog/car-rental-terms.dialog.component.ts","./src/app/modules/results/car-rentals/components/car-rental-terms.dialog/car-rental-terms.dialog.component.html","./src/app/modules/results/car-rentals/components/car-rentals-cart-item/car-rental-cart-item.component.ts","./src/app/modules/results/car-rentals/components/car-rentals-cart-item/car-rental-cart-item.component.html","./src/app/modules/results/car-rentals/components/mob-car-location/mob-car-location.component.ts","./src/app/modules/results/car-rentals/components/mob-car-location/mob-car-location.component.html","./src/app/modules/results/car-rentals/components/mob-car-rental-details/mob-car-rental-details.component.ts","./src/app/modules/results/car-rentals/components/mob-car-rental-details/mob-car-rental-details.component.html","./src/app/modules/results/car-rentals/components/mob-car-rental-list-item/mob-car-rental-list-item.component.ts","./src/app/modules/results/car-rentals/components/mob-car-rental-list-item/mob-car-rental-list-item.component.html","./src/app/modules/results/car-rentals/components/mob-car-terms/mob-car-terms.component.ts","./src/app/modules/results/car-rentals/components/mob-car-terms/mob-car-terms.component.html","./src/app/modules/results/car-rentals/components/selected-car-rentals/selected-car-rentals.component.ts","./src/app/modules/results/car-rentals/components/selected-car-rentals/selected-car-rentals.component.html","./src/app/modules/results/components/acc-car-transfer-skeleton/acc-car-transfer-skeleton.component.ts","./src/app/modules/results/components/acc-car-transfer-skeleton/acc-car-transfer-skeleton.component.html","./src/app/modules/results/components/car-transfer-skeleton/car-transfer-skeleton.component.ts","./src/app/modules/results/components/car-transfer-skeleton/car-transfer-skeleton.component.html","./src/app/modules/results/components/flight-train-skeleton-loader/flight-train-skeleton-loader.component.ts","./src/app/modules/results/components/flight-train-skeleton-loader/flight-train-skeleton-loader.component.html","./src/app/modules/results/components/mob-filter-navbar/mob-filter-navbar.component.ts","./src/app/modules/results/components/mob-filter-navbar/mob-filter-navbar.component.html","./src/app/modules/results/components/mob-flight-train-skeleton-loader/mob-flight-train-skeleton-loader.component.ts","./src/app/modules/results/components/mob-flight-train-skeleton-loader/mob-flight-train-skeleton-loader.component.html","./src/app/modules/results/components/price-change-tooltop/price-change-tooltop.component.ts","./src/app/modules/results/components/price-change-tooltop/price-change-tooltop.component.html","./src/app/modules/results/components/rejected-cart-item-banner/rejected-cart-item-banner.component.ts","./src/app/modules/results/components/rejected-cart-item-banner/rejected-cart-item-banner.component.html","./src/app/modules/results/pipes/flight-airline-name.pipe.ts","./src/app/modules/results/results-cart-item-selection.module.ts","./src/app/modules/results/results-filters/components/checkbox/checkbox.component.ts","./src/app/modules/results/results-filters/components/checkbox/checkbox.component.html","./src/app/modules/results/results-filters/components/filter-btn/filter-btn.component.ts","./src/app/modules/results/results-filters/components/filter-btn/filter-btn.component.html","./src/app/modules/results/results-filters/components/filter-sections/filter-sections.component.ts","./src/app/modules/results/results-filters/components/filter-sections/filter-sections.component.html","./src/app/modules/results/results-filters/components/filter-show-more-less-button/filter-show-more-less-button.component.ts","./src/app/modules/results/results-filters/components/filter-show-more-less-button/filter-show-more-less-button.component.html","./src/app/modules/results/results-filters/components/slider/slider.component.ts","./src/app/modules/results/results-filters/components/slider/slider.component.html","./src/app/modules/results/results-filters/results-filters.module.ts","./src/app/modules/results/selectedUtils/tz-selected-service.ts","./src/app/modules/results/transfers/components/mob-transfer-list-item/mob-transfer-list-item.component.ts","./src/app/modules/results/transfers/components/mob-transfer-list-item/mob-transfer-list-item.component.html","./src/app/modules/results/transfers/components/selected-transfers/selected-transfers.component.ts","./src/app/modules/results/transfers/components/selected-transfers/selected-transfers.component.html","./src/app/modules/results/transfers/components/transfer-cart-item/transfer-cart-item.component.ts","./src/app/modules/results/transfers/components/transfer-cart-item/transfer-cart-item.component.html","./src/app/modules/results/transfers/components/transfer-list-item/transfer-list-item.component.ts","./src/app/modules/results/transfers/components/transfer-list-item/transfer-list-item.component.html","./src/app/modules/results/transport/flights/components/flight-bag-separator/flight-bag-separator.component.ts","./src/app/modules/results/transport/flights/components/flight-bag-separator/flight-bag-separator.component.html","./src/app/modules/results/transport/flights/components/flight-item-desc-options-summary/flight-item-desc-options-summary.component.ts","./src/app/modules/results/transport/flights/components/flight-item-desc-options-summary/flight-item-desc-options-summary.component.html","./src/app/modules/results/transport/flights/components/flight-item-desc-packages/flight-item-desc-packages.component.ts","./src/app/modules/results/transport/flights/components/flight-item-desc-packages/flight-item-desc-packages.component.html","./src/app/modules/results/transport/flights/components/flight-list-info-block-item/flight-list-info-block-item.component.ts","./src/app/modules/results/transport/flights/components/flight-list-info-block-item/flight-list-info-block-item.component.html","./src/app/modules/results/transport/flights/components/flight-list-item-desc-block/flight-list-item-desc-block.component.ts","./src/app/modules/results/transport/flights/components/flight-list-item-desc-block/flight-list-item-desc-block.component.html","./src/app/modules/results/transport/flights/components/flight-list-item-desc-luggage/flight-list-item-desc-luggage.component.ts","./src/app/modules/results/transport/flights/components/flight-list-item-desc-luggage/flight-list-item-desc-luggage.component.html","./src/app/modules/results/transport/flights/components/flight-list-item-description/flight-list-item-description.component.ts","./src/app/modules/results/transport/flights/components/flight-list-item-description/flight-list-item-description.component.html","./src/app/modules/results/transport/flights/components/flight-list-item/flight-list-item.component.ts","./src/app/modules/results/transport/flights/components/flight-list-item/flight-list-item.component.html","./src/app/modules/results/transport/flights/components/flight-provider-image/flight-provider-image.component.ts","./src/app/modules/results/transport/flights/components/flight-provider-image/flight-provider-image.component.html","./src/app/modules/results/transport/flights/components/flights-pricing-plans/flights-pricing-plans.component.ts","./src/app/modules/results/transport/flights/components/flights-pricing-plans/flights-pricing-plans.component.html","./src/app/modules/results/transport/flights/components/mob-flight-details-route-details/mob-flight-details-route-details.component.ts","./src/app/modules/results/transport/flights/components/mob-flight-details-route-details/mob-flight-details-route-details.component.html","./src/app/modules/results/transport/flights/components/mob-flight-details-route-scheme/mob-flight-details-route-scheme.component.ts","./src/app/modules/results/transport/flights/components/mob-flight-details-route-scheme/mob-flight-details-route-scheme.component.html","./src/app/modules/results/transport/flights/components/mob-flight-details/mob-flight-details.component.ts","./src/app/modules/results/transport/flights/components/mob-flight-details/mob-flight-details.component.html","./src/app/modules/results/transport/flights/components/mob-flight-direction-item/mob-flight-direction-item.component.ts","./src/app/modules/results/transport/flights/components/mob-flight-direction-item/mob-flight-direction-item.component.html","./src/app/modules/results/transport/flights/components/mob-flight-item-desc-options-summary/mob-flight-item-desc-options-summary.component.ts","./src/app/modules/results/transport/flights/components/mob-flight-item-desc-options-summary/mob-flight-item-desc-options-summary.component.html","./src/app/modules/results/transport/flights/components/mob-flight-list-item-info-block/mob-flight-list-item-info-block.component.ts","./src/app/modules/results/transport/flights/components/mob-flight-list-item-info-block/mob-flight-list-item-info-block.component.html","./src/app/modules/results/transport/flights/components/mob-flight-list-item/mob-flight-list-item.component.ts","./src/app/modules/results/transport/flights/components/mob-flight-list-item/mob-flight-list-item.component.html","./src/app/modules/results/transport/flights/components/mob-flight-pricing-plans/mob-flight-pricing-plans.component.ts","./src/app/modules/results/transport/flights/components/mob-flight-pricing-plans/mob-flight-pricing-plans.component.html","./src/app/modules/results/transport/flights/components/selected-flights/selected-flights.component.ts","./src/app/modules/results/transport/flights/components/selected-flights/selected-flights.component.html","./src/app/modules/results/transport/trains/components/facilities-list/facilities-list.component.ts","./src/app/modules/results/transport/trains/components/facilities-list/facilities-list.component.html","./src/app/modules/results/transport/trains/components/mob-selected-train-details-item/mob-selected-train-details-item.component.ts","./src/app/modules/results/transport/trains/components/mob-selected-train-details-item/mob-selected-train-details-item.component.html","./src/app/modules/results/transport/trains/components/mob-selected-train-details/mob-selected-train-details.component.ts","./src/app/modules/results/transport/trains/components/mob-selected-train-details/mob-selected-train-details.component.html","./src/app/modules/results/transport/trains/components/mob-train-class-details/mob-train-class-details.component.ts","./src/app/modules/results/transport/trains/components/mob-train-class-details/mob-train-class-details.component.html","./src/app/modules/results/transport/trains/components/mob-train-details/mob-train-details.component.ts","./src/app/modules/results/transport/trains/components/mob-train-details/mob-train-details.component.html","./src/app/modules/results/transport/trains/components/mob-train-direction/mob-train-direction.component.ts","./src/app/modules/results/transport/trains/components/mob-train-direction/mob-train-direction.component.html","./src/app/modules/results/transport/trains/components/mob-train-route-scheme-header/mob-train-route-scheme-header.component.ts","./src/app/modules/results/transport/trains/components/mob-train-route-scheme-header/mob-train-route-scheme-header.component.html","./src/app/modules/results/transport/trains/components/mob-train-route-scheme/mob-train-route-scheme.component.ts","./src/app/modules/results/transport/trains/components/mob-train-route-scheme/mob-train-route-scheme.component.html","./src/app/modules/results/transport/trains/components/mob-train-terms-modal/mob-train-terms-modal.component.ts","./src/app/modules/results/transport/trains/components/mob-train-terms-modal/mob-train-terms-modal.component.html","./src/app/modules/results/transport/trains/components/mob-trains-list-item-info-block/mob-trains-list-item-info-block.component.ts","./src/app/modules/results/transport/trains/components/mob-trains-list-item-info-block/mob-trains-list-item-info-block.component.html","./src/app/modules/results/transport/trains/components/mob-trains-list-item/mob-trains-list-item.component.ts","./src/app/modules/results/transport/trains/components/mob-trains-list-item/mob-trains-list-item.component.html","./src/app/modules/results/transport/trains/components/selected-trains/selected-trains.component.ts","./src/app/modules/results/transport/trains/components/selected-trains/selected-trains.component.html","./src/app/modules/results/transport/trains/components/terms/terms.component.ts","./src/app/modules/results/transport/trains/components/terms/terms.component.html","./src/app/modules/results/transport/trains/components/train-cart-item/train-cart-item.component.ts","./src/app/modules/results/transport/trains/components/train-cart-item/train-cart-item.component.html","./src/app/modules/results/transport/trains/components/trains-class-details/trains-class-details.component.ts","./src/app/modules/results/transport/trains/components/trains-class-details/trains-class-details.component.html","./src/app/modules/results/transport/trains/components/trains-class/trains-class.component.ts","./src/app/modules/results/transport/trains/components/trains-class/trains-class.component.html","./src/app/modules/results/transport/trains/components/trains-list-item-info/trains-list-item-info.component.ts","./src/app/modules/results/transport/trains/components/trains-list-item-info/trains-list-item-info.component.html","./src/app/modules/shared/components/service-booking-confirmation-component/service-booking-confirmation.component.ts","./src/app/modules/shared/components/service-booking-confirmation-component/service-booking-confirmation.component.html","./src/app/services/modules/accommodations/dataservices/accommodations.data.service.ts","./src/app/services/modules/accommodations/services/accommodations.service.ts","./src/app/services/modules/accommodations/utils/accommodations.utils.ts","./src/app/services/modules/car-rental/dataservices/car-rental.data.service.ts","./src/app/services/modules/car-rental/services/car-rental.service.ts","./src/app/services/modules/results/services/tools.shared.services.ts"],"sourcesContent":["export const FLIGHT_OPTIONS_STATIC = [\n    { id: 2, txt: 'FLIGHT.OPTIONS.Cancellable', mandatory: true },\n    { id: 1, txt: 'FLIGHT.OPTIONS.Changeable', mandatory: true },\n    { id: 4, txt: 'FLIGHT.OPTIONS.Change_name', mandatory: false },\n    { id: 5, txt: 'FLIGHT.OPTIONS.Speedy_boarding', mandatory: false },\n    { id: 9, txt: 'FLIGHT.OPTIONS.flexible_tickets', mandatory: false },\n    { id: 9, txt: 'FLIGHT.OPTIONS.free_airport_check_in', mandatory: false },\n    { id: 6, txt: 'FLIGHT.OPTIONS.Checked_bag_fee', mandatory: false },\n];\n","export enum MapMarkers {\n    PURPLE = 'marker_purple',\n    RED = 'marker_red',\n    YELLOW = 'marker_yellow',\n    ORANGE = 'marker_orange',\n}\n","import { Injectable } from '@angular/core';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { Subject } from 'rxjs';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { Room, RoomPrice } from '@schemas/modules/accommodations/room';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { AccommodationListMetadata } from '@schemas/modules/accommodations/accommodation-list-metadata';\nimport { AccommodationsDataService } from '@services/modules/accommodations/dataservices/accommodations.data.service';\nimport { AccommodationsService } from '@services/modules/accommodations/services/accommodations.service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalService } from '@services/modal.service';\nimport { UserSearchService } from '@services/searchEngine/services/user-search-service';\nimport { AccommodationTermsPopupComponent } from './accommodation/components/accommodation-terms-popup/accommodation-terms-popup.component';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { MainDialogSize } from '@shared/schemas/dialog.model';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AccommodationDetailsUtilService {\n    public readonly maxRoomQuantity = 4;\n    public accommodation!: Accommodation;\n    public bookingOptions: ICartSelectedItemBookingOption[] = [];\n    public isUserLogged!: boolean;\n    public fromTzMap = false;\n    public isNextSummary = false;\n    public cartRooms: any = [];\n    public confirmableRoom: number | null = null;\n    public roomsLeftForSelection = this.maxRoomQuantity;\n    public fromHotelsMap = false;\n    public hasBooked = false;\n    public destroy$: Subject<boolean> = new Subject<boolean>();\n    public roomsQuantity = 0;\n    public totalPrice = 0;\n    public selectedHotel!: ICartItem;\n    public accommodationListMetadata?: AccommodationListMetadata;\n    public selectRecommended = false;\n\n    constructor(\n        private accommodationsDataService: AccommodationsDataService,\n        private accommodationsService: AccommodationsService,\n        private cartRouterService: CartRoutingService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private modalService: ModalService,\n        private userSearchService: UserSearchService\n    ) {}\n\n    public getRoomPrice(roomPrice: RoomPrice, servicePrices: RoomPrice[]): number {\n        if (servicePrices?.find((item: RoomPrice) => item.id === roomPrice.id)) {\n            servicePrices = servicePrices.filter((value: RoomPrice) => value.id !== roomPrice.id);\n        } else {\n            servicePrices.push(roomPrice);\n        }\n\n        return servicePrices.reduce((accumulator: number, value: RoomPrice) => accumulator + value.price, 0);\n    }\n\n    public openTermsModal(roomOption: RoomOption): void {\n        const data = {\n            roomCancellation: roomOption.roomCancellation,\n            hasPromotions: roomOption.hasPromotions,\n            discounts: roomOption.discounts,\n            remarks: roomOption.remarks,\n            isPayOnArrival: roomOption.payAt === 'Pay on arrival',\n            checkInDateTime: this.accommodation.checkIn,\n        };\n\n        this.dialogService.openMainDialog({\n            component: AccommodationTermsPopupComponent,\n            showCloseBtn: true,\n            title: 'HOTELS.TERMS_CONDITIONS',\n            data: { ...data },\n        });\n    }\n\n    public addAccommodationItemToCart(accommodation: Accommodation): void {\n        if (accommodation.broker === 'Hotelbeds') {\n            const rateComments: { comment: string; roomName: string }[] = [];\n            accommodation.rooms.forEach((room: Room) => {\n                if (room.roomOffers) {\n                    room.roomOffers.forEach((offer: RoomOption) => {\n                        if (offer.personCount > 0 && offer.rateComments !== '') {\n                            const rateComment = {\n                                roomName: `${room.displayName.toUpperCase()} ${\n                                    offer.personCount > 1 ? 'x ' + offer.personCount : ''\n                                } (${offer.meal.toUpperCase()})`,\n                                comment: offer.rateComments,\n                            };\n                            let avail = false;\n                            rateComments.forEach((rc) => {\n                                if (rc.comment === rateComment.comment) {\n                                    rc.roomName = rc.roomName + ', ' + rateComment.roomName;\n                                    avail = true;\n                                }\n                            });\n\n                            if (!avail) {\n                                rateComments.push(rateComment);\n                            }\n                        }\n                    });\n                }\n            });\n\n            if (rateComments.length) {\n                this.dialogService\n                    .openConfirmationDialog(\n                        {\n                            confirmBtnTitle: this.translateService.instant('POPUPS.CONTINUE'),\n                            cancelBtnTitle: this.translateService.instant('POPUPS.CANCEL'),\n                            title: this.translateService.instant('POPUPS.RATE_COMMENTS.TITLE'),\n                            multipleContent: [`<b>${rateComments[0].roomName}</b>`, rateComments[0].comment],\n                            containerClass: 'tz-hb-rate-comment',\n                        },\n                        { mainDialogSize: MainDialogSize.LARGE, dialogPanelClasses: ['tz-rate-comment-dialog'] }\n                    )\n                    .afterClosed()\n                    .pipe(takeUntil(this.destroy$))\n                    .subscribe((dialogReturn: TzDialogReturn) => {\n                        if (dialogReturn === CONFIRM) {\n                            this.addItem(accommodation);\n                        }\n                    });\n            }\n        } else {\n            this.addItem(accommodation);\n        }\n    }\n\n    public checkRoomsSold(accommodation: Accommodation): void {\n        if (!accommodation.noRoom || this.fromTzMap) {\n            return;\n        }\n\n        if (this.fromHotelsMap) {\n            this.dialogService\n                .openConfirmationDialog({\n                    title: this.translateService.instant('POPUPS.HOTEL_SOLD_OUT.TITLE'),\n                    multipleContent: [this.translateService.instant('POPUPS.HOTEL_SOLD_OUT.MESSAGE')],\n                    confirmBtnTitle: this.translateService.instant('POPUPS.HOTEL_SOLD_OUT.CONTINUE'),\n                    cancelBtnTitle: this.translateService.instant('POPUPS.HOTEL_SOLD_OUT.BACK'),\n                    icon: { name: 'no-hotel-dialog', iconStyle: { 'width.px': 105.89, 'height.px': 96.4 } },\n                })\n                .afterClosed()\n                .subscribe((confirm) => {\n                    if (confirm) {\n                        return;\n                    }\n\n                    this.onBackToResultsPage();\n                    return;\n                });\n        } else {\n            this.dialogService.openSnackBar({\n                message: this.translateService.instant('NOTIFS.ACC_NOT_AVAILABLE'),\n            });\n        }\n    }\n\n    private onBackToResultsPage(backToMap?: boolean): void {\n        if (!backToMap) {\n            this.accommodationsService.setMapHotel(undefined);\n        }\n\n        this.cartRouterService.goToState(ServiceId.ACC, undefined, false, StateFrom.ACC_DETAILS);\n    }\n\n    private addItem(accommodation: Accommodation): void {\n        this.accommodationsDataService.addAccommodationToCart(accommodation).subscribe(\n            () => {\n                this.accommodationsService.setMapHotel(undefined);\n                this.userSearchService.searchCheckDep(ServiceId.ACC, this.isNextSummary, false, false, true);\n\n                this.modalService.dismiss(true);\n            },\n            (error: any) => {\n                console.error(error);\n            }\n        );\n    }\n}\n","import { Component, Input, OnInit, Inject, ChangeDetectionStrategy, HostListener } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { Gallery } from '@schemas/modules/accommodations/accommodation-gallery.model';\nimport { KeyType } from '@core/constants/keyboard-key-types.const';\nimport { DialogService } from '@services/dialog.service';\n\nconst maxGellaryCount = 48;\nconst galleryImgRows = 12;\n\n@Component({\n    selector: 'tz-accommodation-gallery',\n    templateUrl: './accommodation-gallery.component.html',\n    styleUrls: ['./accommodation-gallery.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccommodationGalleryComponent implements OnInit {\n    @Input() galleryData: {\n        name: string;\n        giataId: string;\n        code: string;\n        imageProvider: string;\n        images: Gallery[];\n        selectedIdx: number;\n    };\n\n    public currentImg!: Gallery;\n    public images: Gallery[] = [];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private mdDialogRef: MatDialogRef<AccommodationGalleryComponent>,\n        private dialogService: DialogService\n    ) {\n        this.galleryData = ToolsService.deepCopy(data);\n    }\n\n    get currentImgIdx(): number {\n        return this.images.findIndex((img) => img.selected);\n    }\n\n    @HostListener('document:keyup', ['$event'])\n    onKeyUp(event: KeyboardEvent) {\n        switch (event.key) {\n            case KeyType.LEFT_ARROW:\n            case KeyType.RIGHT_ARROW:\n                this.plusSlides(event.key === KeyType.LEFT_ARROW ? -1 : 1);\n                break;\n            case KeyType.UP_ARROW:\n            case KeyType.DOWN_ARROW:\n                this.arrowUpDownSlides(event.key === KeyType.UP_ARROW);\n                break;\n            case KeyType.ESCAPE:\n                this.close();\n                break;\n        }\n    }\n\n    ngOnInit() {\n        this.galleryData.images.sort((a, b) => a.id - b.id);\n\n        if (this.galleryData.images.length > maxGellaryCount) {\n            this.galleryData.images = this.galleryData.images.splice(0, maxGellaryCount);\n        }\n\n        this.setSelectedImg();\n    }\n\n    public selectImage(id: number): void {\n        this.resetSelectedImage();\n        this.sortImages();\n\n        this.images.forEach((img, idx) => {\n            img.selected = false;\n\n            if (img.id === id) {\n                this.setCurrentImage(idx);\n            }\n        });\n    }\n\n    public imgCallback(resp: any): void {\n        if (resp.status === 200) {\n            const img = this.galleryData.images[Number(resp.id)];\n            this.images.push(img);\n            this.sortImages();\n            if (img.selected) {\n                this.selectImage(img.id);\n            }\n        } else {\n            if (resp.selected) {\n                this.setCurrentImage(0);\n            }\n        }\n    }\n\n    public plusSlides(n: number): void {\n        if (this.currentImgIdx === -1 || !this.images[this.currentImgIdx]) {\n            return;\n        }\n\n        let selectedIdx = this.currentImgIdx;\n        this.resetSelectedImage();\n        selectedIdx += n;\n\n        if (selectedIdx < 0) {\n            selectedIdx = this.images.length - 1;\n        }\n        if (selectedIdx > this.images.length - 1) {\n            selectedIdx = 0;\n        }\n        this.setCurrentImage(selectedIdx);\n    }\n\n    public reformImageUrl(url: string, size: string): string {\n        if (!url || !size) {\n            return url;\n        }\n        return url.replace('{size}', size);\n    }\n\n    public close(): void {\n        this.dialogService.closeDialog(this.mdDialogRef);\n    }\n\n    private sortImages(): void {\n        this.images.sort((a, b) => a.id - b.id);\n    }\n\n    private resetSelectedImage(): void {\n        this.currentImg = {} as Gallery;\n\n        this.images.forEach((img) => {\n            img.selected = false;\n        });\n    }\n\n    private setCurrentImage(selectedIdx: number) {\n        this.resetSelectedImage();\n        if (this.images.length > 0 && this.images.length > selectedIdx) {\n            this.images[selectedIdx].selected = true;\n            this.currentImg = this.images[selectedIdx];\n        }\n    }\n\n    /*dynamic loading of image may result in duplicate selection.\n        so when user select image manually check whether any one of image is selected to\n        ensure the default image is loaded before selection*/\n    private setSelectedImg(): boolean {\n        let isSelected = false;\n        for (const img of this.galleryData.images) {\n            img.selected = img.id === this.galleryData.selectedIdx;\n\n            if (img.selected === true) {\n                isSelected = true;\n            }\n        }\n\n        if (!isSelected && this.galleryData.images.length > 0) {\n            this.galleryData.images[0].selected = true;\n            isSelected = true;\n        }\n        return isSelected;\n    }\n\n    private arrowUpDownSlides(moveUp: boolean) {\n        const totalImages = this.images.length - 1;\n        const selectedIdx = this.currentImgIdx;\n        const moveToIdx = selectedIdx + (moveUp ? -galleryImgRows : galleryImgRows);\n        if (moveToIdx < 0 || moveToIdx >= totalImages) {\n            return;\n        }\n\n        this.setCurrentImage(moveToIdx);\n    }\n}\n","<div class=\"gallery-container tz-container\">\n    <div class=\"flex justify-center\">\n        <div class=\"hotel-name\" data-test=\"hotel-gallery-container-hotel-name\">{{ galleryData.name }}</div>\n        <div class=\"field-icon tz-icon-clear\" data-test=\"hotel-gallery-close-gallery\" (click)=\"close()\"></div>\n    </div>\n    <div class=\"selected-image-container\">\n        <div class=\"selected-img-wrapper\" *ngIf=\"currentImg && currentImg.url\">\n            <img [id]=\"currentImg.id\" [tzHotelImage]=\"currentImg.url\" [provider]=\"galleryData.imageProvider\" />\n            <span class=\"img-count\"> {{ currentImgIdx + 1 }} / {{ images.length }}</span>\n        </div>\n        <div class=\"tz-icon-arrow left\" data-test=\"hotel-gallery-slide-left\" (click)=\"plusSlides(-1)\"></div>\n        <div class=\"tz-icon-arrow right\" data-test=\"hotel-gallery-slide-right\" (click)=\"plusSlides(1)\"></div>\n    </div>\n    <div class=\"gallery-thumb\">\n        <img\n            [ngClass]=\"{ selected: img.selected }\"\n            [id]=\"img.id\"\n            [tzHotelImage]=\"reformImageUrl(img.url, img.thumbnailSize)\"\n            [provider]=\"galleryData.imageProvider\"\n            *ngFor=\"let img of galleryData.images\"\n            (click)=\"selectImage(img.id)\"\n        />\n    </div>\n</div>\n\n<img\n    class=\"test-img\"\n    [id]=\"img.id\"\n    [tzHotelImage]=\"reformImageUrl(img.url, img.thumbnailSize)\"\n    [provider]=\"galleryData.imageProvider\"\n    (imgCallback)=\"imgCallback($event)\"\n    *ngFor=\"let img of galleryData.images\"\n    onErrorSrc=\"_omit\"\n    dynamic\n/>\n","import {\n    Component,\n    Input,\n    OnInit,\n    ChangeDetectorRef,\n    Output,\n    EventEmitter,\n    ChangeDetectionStrategy,\n} from '@angular/core';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { AccGalleryRes, Gallery } from '@schemas/modules/accommodations/accommodation-gallery.model';\nimport { DialogService } from '@services/dialog.service';\nimport { ModalService } from '@services/modal.service';\nimport { AccommodationsDataService } from '@services/modules/accommodations/dataservices/accommodations.data.service';\nimport { PlatformService } from '@services/platform.service';\nimport { AccommodationGalleryComponent } from '../accommodation-gallery/accommodation-gallery.component';\nimport { MobAccommodationGalleryComponent } from '../mob-accommodation-gallery/mob-accommodation-gallery.component';\nimport { MobAccommodationImagesCaroselComponent } from '../mob-accommodation-images-carosel/mob-accommodation-images-carosel.component';\n\nconst TOPIMGCOUNT = 4;\nconst MOBTOPIMGCOUNT = 5;\n\n@Component({\n    selector: 'tz-accommodation-image',\n    templateUrl: './accommodation-image.component.html',\n    styleUrls: ['./accommodation-image.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccommodationImageComponent implements OnInit {\n    @Input() giataId!: string;\n    @Input() code!: string;\n    @Input() imageProvider!: string;\n    @Input() hotelName = '';\n\n    @Output() showRooms = new EventEmitter<void>();\n\n    public imagesCount = 0;\n    public testImages: Gallery[] = [];\n    public loading = true;\n    public hotelTopImages: Gallery[] = [];\n\n    private images: Gallery[] = [];\n    private testCount = 0;\n    private testedImagesCount = 0;\n    private selectedImgIds: number[] = [];\n    private selectedImgs: string[] = [];\n    private maxImgCount = TOPIMGCOUNT;\n\n    constructor(\n        private dialogService: DialogService,\n        private accommodationsService: AccommodationsDataService,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        public platformService: PlatformService,\n        private modalService: ModalService\n    ) {\n        if (this.platformService.isMobileDevice) {\n            this.maxImgCount = MOBTOPIMGCOUNT;\n        }\n    }\n\n    ngOnInit() {\n        this.fetchImages();\n    }\n\n    public imgCallback(data: any): void {\n        this.testedImagesCount++;\n        if (data.status === 200) {\n            this.selectedImgIds.push(data.id);\n            this.selectedImgs[data.id as number] = data.url as string;\n            if (this.selectedImgIds.length === this.maxImgCount) {\n                this.formTopImages();\n            }\n            return;\n        }\n\n        if (this.images.length < this.testCount) {\n            if (this.testCount === this.testedImagesCount) {\n                this.formTopImages();\n            }\n            return;\n        }\n\n        this.testCount++;\n        this.testImages.push(this.images[this.testCount]);\n    }\n\n    public openGallery(selectedIdx: number): void {\n        if (this.platformService.isMobileDevice) {\n            this.modalService\n                .createDetailsPage(MobAccommodationGalleryComponent, {\n                    data: {\n                        name: this.hotelName,\n                        imageProvider: this.imageProvider,\n                        images: this.images,\n                    },\n                    title: this.hotelName,\n                })\n                .then((modal) => {\n                    if (!modal.data) {\n                        return;\n                    }\n\n                    if (modal.data.showRooms) {\n                        this.showRooms.emit();\n                    } else if (modal.data.hasOwnProperty('imageId')) {\n                        this.openMobImageSlider(modal.data.imageId);\n                    }\n                });\n\n            return;\n        }\n\n        const galleryConf = {\n            height: '100%',\n            width: '100%',\n            maxWidth: '100vw',\n            panelClass: 'tz-accommodation-gallery',\n            data: {\n                name: this.hotelName,\n                giataId: this.giataId,\n                code: this.code,\n                imageProvider: this.imageProvider,\n                images: this.images,\n                selectedIdx,\n            },\n        };\n\n        this.dialogService.openAccommodationDialog(AccommodationGalleryComponent, galleryConf);\n    }\n\n    private openMobImageSlider(selectedIdx: number): void {\n        this.modalService.createMainModal(MobAccommodationImagesCaroselComponent, {\n            data: {\n                name: this.hotelName,\n                imageProvider: this.imageProvider,\n                images: this.images,\n                selectedIdx,\n            },\n            title: this.hotelName,\n        });\n    }\n\n    private formTopImages(): void {\n        let count = 0;\n\n        this.images.sort((a: any, b: any) => a.ordinal - b.ordinal);\n\n        for (const img of this.images) {\n            if (count === this.maxImgCount) {\n                continue;\n            }\n\n            if (this.selectedImgIds.indexOf(img.id) > -1) {\n                img.url = this.selectedImgs[Number(img.id)];\n                this.hotelTopImages.push(img);\n                count++;\n            }\n        }\n\n        if (count < this.maxImgCount) {\n            this.imagesCount = count;\n        }\n\n        for (let i = count; i < this.maxImgCount; i++) {\n            this.hotelTopImages.push({\n                id: i,\n                url: 'assets/icons/web/img/corrupted.png',\n            } as Gallery);\n        }\n\n        this.loading = false;\n    }\n\n    private initImages(count: number): void {\n        if (this.images) {\n            this.testImages = ToolsService.deepCopy(this.images.slice(0, this.maxImgCount));\n        }\n        this.testCount = this.maxImgCount;\n        this.imagesCount = count;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private fetchImages(): void {\n        const galleyRes$ = this.accommodationsService.getHotelImages(this.giataId, this.code, this.imageProvider);\n        galleyRes$.subscribe(\n            (accGalleryRes: AccGalleryRes) => {\n                accGalleryRes.gallery?.forEach((g: Gallery, idx: number) => (g.id = idx));\n                this.images = accGalleryRes.gallery;\n                this.initImages(accGalleryRes.count);\n            },\n            (err: any) => {\n                this.loading = false;\n                console.log('Error in get giata images = ', err);\n            }\n        );\n    }\n}\n","<div *ngIf=\"loading; else gallery_grid\" class=\"loading-elm flex\">\n    <span style=\"margin: auto\">{{ 'LOADER_MESSAGES.LOADING' | translate }}</span>\n    <img\n        [id]=\"img!.id\"\n        [tzHotelImage]=\"img.url\"\n        [provider]=\"imageProvider\"\n        (imgCallback)=\"imgCallback($event)\"\n        *ngFor=\"let img of testImages\"\n        onErrorSrc=\"_omit\"\n        dynamic\n    />\n</div>\n<ng-template #gallery_grid>\n    <div class=\"gallery-grid\" *ngIf=\"imagesCount > 0\">\n        <div class=\"gallery-slot\" *ngFor=\"let image of hotelTopImages; let i = index\">\n            <img\n                [id]=\"image.id\"\n                [tzHotelImage]=\"image.url\"\n                [provider]=\"imageProvider\"\n                (click)=\"openGallery(image.id)\"\n                [attr.data-test]=\"'hotel-room-gallery-' + image.id\"\n            />\n\n            <ng-container *ngIf=\"i === hotelTopImages.length - 1 && image.id < imagesCount\">\n                <div\n                    class=\"open-gallery-btn\"\n                    *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n                    (click)=\"openGallery(image.id + 1)\"\n                >\n                    <img src=\"assets/icons/web/img/icons/Image.svg\" alt=\"\" />\n                    +{{ (imagesCount > 48 ? 48 : imagesCount) - (image.id + 1) }}\n                    {{ 'HOTELS.' + (imagesCount - image.id > 1 ? 'PHOTOS' : 'PHOTO') | translate }}\n                </div>\n                <div class=\"mob-img-count\" *ngIf=\"platformService.isMobileDevice$ | async\" (click)=\"openGallery(-1)\">\n                    <tz-svg-icon icon=\"shape\" [mobile]=\"true\" class=\"image\"></tz-svg-icon>\n                    +{{ (imagesCount > 48 ? 48 : imagesCount) - (image.id + 1) }}\n                </div>\n            </ng-container>\n        </div>\n    </div>\n    <img *ngIf=\"imagesCount === 0\" class=\"no-images\" src=\"assets/icons/web/img/corrupted.png\" alt=\"\" />\n</ng-template>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\n\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { ServicePrices } from '@schemas/modules/core/service-prices';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { AccommodationsUtilsService } from '@services/modules/accommodations/utils/accommodations.utils';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-accommodation-room-option',\n    templateUrl: './accommodation-room-option.component.html',\n    styleUrls: ['./accommodation-room-option.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccommodationRoomOptionComponent implements OnInit, OnChanges {\n    @Input() isUserLogged!: boolean;\n    @Input() roomOption!: RoomOption;\n    @Input() roomPrice!: ServicePrices;\n    @Input() cartAmountOfTheRoom = 0;\n    @Input() selectedAmountOfTheRoom = 0;\n    @Input() count = 0;\n    @Input() disable = false;\n    @Input() roomsLeftForSelection = 0;\n    @Input() bookedOffers = 0;\n    @Input() roomType = '';\n    @Input() fromSelected = false;\n    @Output() optionSelected: EventEmitter<number> = new EventEmitter<number>();\n    @Output() roomOptionChange: EventEmitter<RoomOption> = new EventEmitter<RoomOption>();\n    @Output() roomMaxSelectedCountReached: EventEmitter<void> = new EventEmitter<void>();\n    @Output() openTermsModal: EventEmitter<void> = new EventEmitter<void>();\n    public maxValue = 0;\n\n    constructor(public userService: UserService, public platformService: PlatformService) {}\n\n    ngOnInit() {\n        this.setMaxAvailableRooms();\n        this.roomOption.personCount = this.selectedAmountOfTheRoom || this.cartAmountOfTheRoom || this.count;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['roomsLeftForSelection']) {\n            this.setMaxAvailableRooms();\n        }\n\n        if (changes['count'] && !this.roomOption.personCount) {\n            this.roomOption.personCount = this.count;\n        }\n    }\n\n    public onCountChanged($event: number): void {\n        this.roomOption.personCount = $event;\n        this.roomOptionChange.emit(this.roomOption);\n        this.optionSelected.emit($event);\n    }\n\n    public checkShowTerms(roomOption: RoomOption): boolean {\n        return AccommodationsUtilsService.checkShowTerms(roomOption, this.isUserLogged);\n    }\n\n    public roomCapacity(capacity: number) {\n        return new Array(capacity);\n    }\n\n    public onRoomMaxSelectedCountReached(): void {\n        if (this.roomOption.personCount !== this.roomOption.roomsLeft) {\n            this.roomMaxSelectedCountReached.emit();\n        }\n    }\n\n    public onOpenTermsModal(): void {\n        this.openTermsModal.emit();\n    }\n\n    private setMaxAvailableRooms(): void {\n        const personCount = this.roomOption.personCount;\n        const roomsLeft = this.roomOption.roomsLeft;\n        this.maxValue = AccommodationsUtilsService.getMaxRoomSelectionNumber(\n            { personCount, roomsLeft },\n            this.roomsLeftForSelection\n        );\n    }\n}\n","<div\n    *ngIf=\"!platformService.isMobileDevice\"\n    class=\"room-option\"\n    [ngClass]=\"{ selected: !fromSelected && roomType && roomType !== '' }\"\n>\n    <div class=\"room-option__content\">\n        <div class=\"room-option__description\">\n            <div *ngIf=\"!fromSelected && roomType && roomType !== ''\" class=\"room-option__type\">{{ roomType }}</div>\n            <div\n                class=\"room-option__description-item offer-info room-option--description-item-green-color\"\n                *ngIf=\"roomOption.hasPromotions\"\n            >\n                <span class=\"room-option__description-item-icon\">•</span>\n                {{ 'HOTELS.' + (userService.IsLogged() ? 'TZ_EXCLUSIVE_OFFER' : 'TZ_SPECIAL_OFFER') | translate }}\n            </div>\n            <div\n                class=\"room-option__description-item\"\n                [class.room-option--description-item-green-color]=\"\n                    roomOption.mealTypeCode !== 'nomeal' && roomOption.mealTypeCode !== 'RO'\n                \"\n            >\n                <span class=\"room-option__description-item-icon\">•</span> {{ roomOption.meal }}\n            </div>\n\n            <div\n                *ngIf=\"roomOption.payAt\"\n                class=\"room-option__description-item room-option--description-item-green-color\"\n            >\n                <span class=\"room-option__description-item-icon\">•</span> {{ 'HOTELS.Pay on arrival' | translate }}\n            </div>\n\n            <div\n                class=\"room-option__description-item\"\n                [class.room-option--description-item-green-color]=\"\n                    roomOption.roomCancellation.cancellationPolicy === 'Refundable'\n                \"\n            >\n                <span class=\"room-option__description-item-icon\">•</span>\n                {{\n                    roomOption.roomCancellation.messageKey\n                        | translate: { date: roomOption.roomCancellation.endDateTime | tzDate: 'mediumDate' }\n                }}\n            </div>\n\n            <div\n                *ngIf=\"checkShowTerms(roomOption)\"\n                class=\"room-option__description-item room-option--description-item-purple-color room-option--description-item-link\"\n            >\n                <span class=\"room-option__description-item-icon\">•</span>\n                <div (click)=\"onOpenTermsModal()\" class=\"tz-purple-link\">\n                    {{ 'HOTELS.TERMS_CONDITIONS' | translate }}\n                </div>\n            </div>\n        </div>\n\n        <div class=\"room-option__desc-info\">\n            <div\n                *ngIf=\"roomOption.roomsLeft && roomOption.roomsLeft <= 3\"\n                class=\"room-option__desc-info-item room-option__desc-info__left-rooms\"\n            >\n                <span class=\"room-option__desc-info-icon\">•</span>\n                {{ 'HOTELS.ONLY' | translate }}\n                {{ roomOption.roomsLeft }}\n                {{ roomOption.roomsLeft > 1 ? ('HOTELS.rOOMS' | translate) : ('HOTELS.rOOM' | translate) }}\n                {{ 'HOTELS.LEFT' | translate }}\n            </div>\n\n            <div *ngIf=\"roomOption.bedSize\" class=\"room-option__desc-info-item\">\n                <span class=\"room-option__desc-info-icon\">•</span>\n                {{ roomOption.bedSize }}\n            </div>\n\n            <div *ngIf=\"roomOption.viewType\" class=\"room-option__desc-info-item\">\n                <span class=\"room-option__desc-info-icon\">•</span>\n                {{ roomOption.viewType }}\n            </div>\n            <div *ngIf=\"roomOption.extraBedInfo.state > 0\" class=\"room-option__desc-info-item\">\n                <span class=\"room-option__desc-info-icon\">•</span>\n                <span>{{ 'HOTELS.EXTRA_BED.' + roomOption.extraBedInfo.state | translate }}</span>\n                <span *ngIf=\"roomOption.extraBedInfo.state === 3\">\n                    &nbsp;{{ 'HOTELS.EXTRA_BED.priceType.' + roomOption.extraBedInfo.priceType | translate }}\n                    {{ roomOption.extraBedInfo.originalPrice.curCode }}\n                    {{ roomOption.extraBedInfo.originalPrice.value | number }}\n                </span>\n            </div>\n        </div>\n\n        <div *ngIf=\"roomOption.capacity <= 4\" class=\"room-option__capacity-block\">\n            <ng-container *ngFor=\"let room of roomCapacity(roomOption.capacity)\">\n                <tz-icon className=\"room-option__capacity-block-icon\" icon=\"guest-16\"></tz-icon>\n            </ng-container>\n        </div>\n    </div>\n\n    <div class=\"room-option__actions-block\">\n        <div class=\"room-option__price\" *ngIf=\"roomPrice.listPrice > 0\">\n            {{ roomPrice.listPrice | tzCurrency: roomPrice.listPriceCur }}\n        </div>\n\n        <tz-counter\n            *ngIf=\"!fromSelected\"\n            [count]=\"count\"\n            className=\"room-option__counter\"\n            [maxValue]=\"maxValue\"\n            [minValue]=\"bookedOffers\"\n            (countChange)=\"onCountChanged($event)\"\n            (maxValueLimitReached)=\"onRoomMaxSelectedCountReached()\"\n        >\n        </tz-counter>\n    </div>\n</div>\n\n<div *ngIf=\"platformService.isMobileDevice\">\n    <div *ngIf=\"roomType && roomType !== ''\" class=\"room-option__type-mobile\">{{ roomType }}</div>\n\n    <div class=\"d-flex mb-2 room-option__bed-info\">\n        <div *ngIf=\"roomOption.capacity <= 4\" class=\"room-option__capacity-block\">\n            <span *ngFor=\"let room of roomCapacity(roomOption.capacity)\">\n                <tz-icon\n                    class=\"room-option__capacity-icon\"\n                    className=\"room-option__capacity-block-icon\"\n                    icon=\"guest-16\"\n                ></tz-icon>\n            </span>\n        </div>\n        <div\n            class=\"room-option__description-item-mobile mb-0\"\n            [class.room-option--description-item-green-color]=\"\n                roomOption.mealTypeCode !== 'nomeal' && roomOption.mealTypeCode !== 'RO'\n            \"\n        >\n            {{ roomOption.meal }}\n            <span class=\"room-option__description-item_bed-size\" *ngIf=\"!!roomOption.bedSize\"\n                ><span class=\"room-option__description-item_divider vertical-text-divider\">&nbsp;|&nbsp;</span\n                >{{ roomOption.bedSize }}</span\n            >\n        </div>\n    </div>\n    <div class=\"room-option__description\">\n        <div\n            class=\"room-option__description-item-mobile offer-info room-option--description-item-green-color\"\n            *ngIf=\"roomOption.hasPromotions\"\n        >\n            {{ 'HOTELS.' + (userService.IsLogged() ? 'TZ_EXCLUSIVE_OFFER' : 'TZ_SPECIAL_OFFER') | translate }}\n        </div>\n\n        <div *ngIf=\"roomOption.payAt\" class=\"room-option__description-item room-option--description-item-green-color\">\n            <span class=\"room-option__description-item-icon\">•</span> {{ 'HOTELS.Pay on arrival' | translate }}\n        </div>\n\n        <div\n            class=\"room-option__description-item-mobile\"\n            [class.room-option--description-item-green-color]=\"\n                roomOption.roomCancellation.cancellationPolicy === 'Refundable'\n            \"\n        >\n            {{\n                roomOption.roomCancellation.messageKey\n                    | translate: { date: roomOption.roomCancellation.endDateTime | tzDate: 'mediumDate' }\n            }}\n        </div>\n    </div>\n    <div class=\"room-option__terms-wrapper\" *ngIf=\"checkShowTerms(roomOption)\">\n        <div (click)=\"onOpenTermsModal()\" class=\"room-option__terms\">\n            {{ 'HOTELS.TERMS_CONDITIONS' | translate }}\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { AccommodationRatings } from '@schemas/modules/accommodations/accommodation-ratings.model';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { ToolsService } from '@core/utils/tools-service';\n\n@Component({\n    selector: 'tz-accommodation-room',\n    templateUrl: './accommodation-room.component.html',\n    styleUrls: ['./accommodation-room.component.scss'],\n})\nexport class AccommodationRoomComponent implements OnInit {\n    @Input() room!: Room;\n    @Input() ratings!: AccommodationRatings;\n    @Input() numberOfNights!: number;\n    @Input() fromSelected = false;\n    @Input() hideOptions = false;\n    @Input() isUserLogged!: boolean;\n    @Input() roomBookings: ICartSelectedItemBookingOption[] = [];\n    @Input() roomsLeftForSelection = 0;\n    @Output() roomCountChanged: EventEmitter<number> = new EventEmitter<number>();\n    @Output() roomMaxSelectedCountReached: EventEmitter<void> = new EventEmitter<void>();\n    @Output() openTermsModal: EventEmitter<RoomOption> = new EventEmitter<RoomOption>();\n\n    public showRoomsOptionsNumbers = 3;\n    public selectedRoomOptions: { [key: string]: number } = {};\n    public cartRoomOptions: { [key: string]: number } = {};\n    public bookedRoomOptions: { [key: string]: number } = {};\n\n    constructor() {}\n\n    ngOnInit() {\n        this.showRoomsOptionsNumbers = this.room.roomOffers.length > 3 ? 2 : this.room.roomOffers.length;\n        this.getCartRoomOptions();\n    }\n\n    public onOptionCountChanged($event: number, id: string) {\n        this.selectedRoomOptions[id] = $event;\n        let count = 0;\n        for (const option in this.selectedRoomOptions) {\n            if (this.selectedRoomOptions[option] !== 0) {\n                count++;\n            }\n        }\n        this.roomCountChanged.emit(count);\n    }\n\n    public onViewOptionsToggle(): void {\n        this.showRoomsOptionsNumbers =\n            this.showRoomsOptionsNumbers < this.room.roomOffers.length ? this.room.roomOffers.length : 2;\n    }\n\n    public onRoomMaxSelectedCountReached(): void {\n        this.roomMaxSelectedCountReached.emit();\n    }\n\n    private getCartRoomOptions(): void {\n        let validatedOptionIdx = 0;\n        for (const option of this.roomBookings) {\n            const roomOfferId = option.selectedRoom?.roomOfferId;\n            if (roomOfferId) {\n                const cartOfferCount = this.cartRoomOptions[roomOfferId];\n                this.cartRoomOptions[roomOfferId] = cartOfferCount ? cartOfferCount + 1 : 1;\n\n                if (CartUtils.isBooked(option.status)) {\n                    const bookedCount = this.bookedRoomOptions[roomOfferId];\n                    this.bookedRoomOptions[roomOfferId] = bookedCount ? bookedCount + 1 : 1;\n                }\n\n                const offerIdx = this.room.roomOffers.findIndex((offer) => offer.id === roomOfferId) + 1;\n                if (offerIdx > validatedOptionIdx) {\n                    validatedOptionIdx = offerIdx;\n                }\n            }\n        }\n        this.selectedRoomOptions = ToolsService.deepCopy(this.cartRoomOptions);\n        if (validatedOptionIdx > this.showRoomsOptionsNumbers) {\n            this.showRoomsOptionsNumbers = validatedOptionIdx;\n        }\n    }\n}\n","<div class=\"room-details__container tz-block-with-border\">\n    <div class=\"room-details__content\">\n        <tz-image-slider\n            class=\"room-details__slider\"\n            [images]=\"room.images\"\n            [imageProvider]=\"room.broker\"\n            [showWarning]=\"room.showHotelTopImage\"\n        ></tz-image-slider>\n\n        <div class=\"room-details__info-content\" *ngIf=\"room\">\n            <div class=\"room-details__info-content-desc-block\" data-test=\"room-details-block\">\n                <div class=\"room-details__title\" data-test=\"room-details-title\">\n                    {{ room.displayName }}\n                </div>\n\n                <div class=\"room-details__info-block\" data-test=\"room-details-info-block\">\n                    <div *ngIf=\"room.type && room.broker === 'Hotelbeds'\" class=\"room-details__info-item\">\n                        •<span class=\"room-details__info-text-padding\"></span>\n                        <span class=\"room-details__info-text\">{{ room.type }}</span>\n                    </div>\n                    <div *ngIf=\"room.bedType\" class=\"room-details__info-item\" data-test=\"room-details-info-bedtype\">\n                        •<span class=\"room-details__info-text-padding\"></span>\n                        <span class=\"room-details__info-text\">{{ room.bedType }}</span>\n                    </div>\n                    <div *ngIf=\"room.roomInfo\" class=\"room-details__info-item\" data-test=\"room-details-info-roominfo\">\n                        •<span class=\"room-details__info-text-padding\"></span>\n                        <span class=\"room-details__info-text\">{{ room.roomInfo }}</span>\n                    </div>\n                    <div *ngIf=\"room.size\" class=\"room-details__info-item\" data-test=\"room-details-info-roomsize\">\n                        •<span class=\"room-details__info-text-padding\"></span>\n                        <span class=\"room-details__info-text\">\n                            {{ 'HOTELS.ROOM_SIZE' | translate }}\n                            <span class=\"room-details__info-text\" [innerHTML]=\"room.size\"></span>\n                        </span>\n                    </div>\n                    <div *ngIf=\"room.roomViews\" class=\"room-details__info-item\" data-test=\"room-details-info-roomviews\">\n                        •<span class=\"room-details__info-text-padding\"></span>\n                        <span class=\"room-details__info-text\">{{ room.roomViews }}</span>\n                    </div>\n                    <div *ngIf=\"room.facility1\" class=\"room-details__info-item\" data-test=\"room-details-info-facility1\">\n                        •<span class=\"room-details__info-text-padding\"></span>\n                        <span class=\"room-details__info-text\">{{ room.facility1 }}</span>\n                    </div>\n                    <div *ngIf=\"room.facility2\" class=\"room-details__info-item\" data-test=\"room-details-info-facility2\">\n                        •<span class=\"room-details__info-text-padding\"></span>\n                        <span class=\"room-details__info-text\">{{ room.facility2 }}</span>\n                    </div>\n                </div>\n\n                <div\n                    *ngIf=\"room.amenities && room.amenities.length\"\n                    class=\"room-details__info-icons-block\"\n                    data-test=\"room-details-info-icons-block\"\n                >\n                    <div\n                        *ngFor=\"let amenity of room.amenities | sortArray: 'ordinal'\"\n                        class=\"room-details__info-icons-block-item\"\n                    >\n                        <tz-icon class=\"room-details__info-icons-block-item-icon\" [icon]=\"amenity.icon\"></tz-icon>\n\n                        <div\n                            class=\"room-details__info-icons-block-item-text\"\n                            data-test=\"room-details-info-icone-text\"\n                            [attr.data-test]=\"'hotel-room-details-' + amenity.description + '-component'\"\n                        >\n                            {{ amenity.description }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"room-details__info-content-room-info\">\n                <div *ngFor=\"let rating of ratings.categoryRatings | sortArray: 'ordinal'\">\n                    <div\n                        *ngIf=\"\n                            rating.category === 'Cleanliness' ||\n                            rating.category === 'Room' ||\n                            rating.category === 'Staff'\n                        \"\n                        class=\"room-details__rating-item\"\n                    >\n                        <div class=\"room-details__rating-item-category\">\n                            {{ 'HOTELS.OLERY.RATING.' + rating.category | translate }}\n                        </div>\n                        <div class=\"room-details__rating-item-rating\">{{ rating.ratingStr | number: '1.1-1' }}</div>\n                    </div>\n                </div>\n\n                <div class=\"room-details__broker-block\" data-test=\"room-details-broker-icon\" [title]=\"room.broker\">\n                    {{ room.broker }}\n                </div>\n\n                <div class=\"room-details__number-of-nights\">\n                    {{ numberOfNights }}\n                    {{ numberOfNights > 1 ? ('HOTELS.NIGHTS' | translate) : ('HOTELS.NIGHT' | translate) }}\n                </div>\n                <div class=\"room-details__tax-info\">\n                    {{ room.taxInfo | translate }}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"!hideOptions\">\n        <div\n            *ngFor=\"\n                let roomOffer of room.roomOffers | slice: 0:showRoomsOptionsNumbers;\n                let i = index;\n                let first = first;\n                let last = last\n            \"\n            class=\"room-details__option-item\"\n            [ngClass]=\"{\n                'booked-option': bookedRoomOptions[roomOffer.id],\n                'validated-item': cartRoomOptions[roomOffer.id] && !bookedRoomOptions[roomOffer.id],\n                'no-border-top': !first && cartRoomOptions[room.roomOffers[i - 1].id],\n                'no-border-bottom': !last && cartRoomOptions[room.roomOffers[i + 1].id]\n            }\"\n        >\n            <div>\n                <tz-accommodation-room-option\n                    [roomsLeftForSelection]=\"roomsLeftForSelection\"\n                    [bookedOffers]=\"bookedRoomOptions[roomOffer.id] ? bookedRoomOptions[roomOffer.id] : 0\"\n                    [(roomOption)]=\"room.roomOffers[i]\"\n                    [roomPrice]=\"room.roomOffers[i].prices\"\n                    [isUserLogged]=\"isUserLogged\"\n                    [fromSelected]=\"fromSelected\"\n                    (optionSelected)=\"onOptionCountChanged($event, roomOffer.id)\"\n                    (roomMaxSelectedCountReached)=\"onRoomMaxSelectedCountReached()\"\n                    [cartAmountOfTheRoom]=\"cartRoomOptions[roomOffer.id] ? cartRoomOptions[roomOffer.id] : 0\"\n                    [selectedAmountOfTheRoom]=\"\n                        selectedRoomOptions[roomOffer.id] ? selectedRoomOptions[roomOffer.id] : 0\n                    \"\n                    [count]=\"cartRoomOptions[roomOffer.id] ? cartRoomOptions[roomOffer.id] : 0\"\n                    (openTermsModal)=\"openTermsModal.emit(room.roomOffers[i])\"\n                ></tz-accommodation-room-option>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    *ngIf=\"room.roomOffers && room.roomOffers.length > 3\"\n    (click)=\"onViewOptionsToggle()\"\n    class=\"room-options-view-btn\"\n>\n    {{\n        showRoomsOptionsNumbers < room.roomOffers.length\n            ? ('HOTELS.View_more_options' | translate)\n            : ('HOTELS.view_less_options' | translate)\n    }}\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Cancellation } from '@schemas/modules/core/cancelation';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TzDatePipe } from '@shared/pipes/tz-date.pipe';\nimport { TzCurrencyPipe } from '@shared/pipes/tz-currency.pipe';\nimport { RoomOptionDiscounts, RoomOptionRemarks } from '@schemas/modules/accommodations/room-option';\n\n@Component({\n    selector: 'tz-accommodation-terms-popup',\n    templateUrl: './accommodation-terms-popup.component.html',\n    styleUrls: ['./accommodation-terms-popup.component.scss'],\n    providers: [TzDatePipe, TzCurrencyPipe],\n})\nexport class AccommodationTermsPopupComponent implements OnInit {\n    public data: {\n        roomCancellation: Cancellation;\n        hasPromotions: boolean;\n        discounts: RoomOptionDiscounts[];\n        remarks: RoomOptionRemarks[];\n        isPayOnArrival: boolean;\n        checkInDateTime: string;\n    };\n    public otherPolicies: { msg: string }[] = [];\n    public policyMsg = '';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public dialogData: any,\n        private translateService: TranslateService,\n        private datePipe: TzDatePipe,\n        private tzCurrencyPipe: TzCurrencyPipe\n    ) {\n        this.data = this.dialogData.data.data;\n    }\n\n    ngOnInit() {\n        this.otherPolicies = this.getOtherPolicies();\n        this.policyMsg = this.getPoliceMsg();\n    }\n\n    getPoliceMsg(): string {\n        const policy = this.data.roomCancellation;\n        let policyMsg = '';\n        if (!policy) {\n            return policyMsg;\n        }\n        const isRefundable = policy.cancellationPolicy === 'Refundable';\n        const info: { date?: string; time?: string } = this.formatDate(policy.endDateTime);\n\n        if (!isRefundable || policy.isFree) {\n            policyMsg = this.translateService.instant(`${policy.messageKey}_Msg`, info);\n        }\n\n        return policyMsg;\n    }\n\n    getOtherPolicies(): { msg: string }[] {\n        const policies = this.data.roomCancellation.otherPolicies;\n        const checkInDateTime = this.data.checkInDateTime;\n\n        const otherPoliciesArr: { msg: string }[] = [];\n        if (!Array.isArray(policies)) {\n            return otherPoliciesArr;\n        }\n\n        policies.forEach((policy, i) => {\n            let date = policy.startDateTime;\n            let msg = 'CANCELLATION.PolicyMsg';\n            if (i === 0 && !this.data.roomCancellation.isFree) {\n                date = policy.endDateTime && policy.endDateTime !== '' ? policy.endDateTime : checkInDateTime;\n                msg = 'CANCELLATION.RefundablePolicyMsg';\n            }\n\n            const price = this.tzCurrencyPipe.transform(policy.price.listPrice, policy.price.listPriceCur);\n            const info = {\n                price,\n                ...this.formatDate(date),\n            };\n            otherPoliciesArr.push({\n                msg: this.translateService.instant(msg, info),\n            });\n        });\n\n        return otherPoliciesArr;\n    }\n\n    formatDate(dateTime: string): { date: string; time: string } {\n        const dateTimeRes: { date: string; time: string } = { date: '', time: '' };\n\n        if (dateTime) {\n            const date = this.datePipe.transform(dateTime, 'medium');\n            dateTimeRes.date = date\n                ? `${this.datePipe.transform(dateTime, 'mediumDate')} ${this.datePipe.transform(dateTime, 'shortTime')}`\n                : '';\n        }\n\n        return dateTimeRes;\n    }\n}\n","<div>\n    <div *ngIf=\"data.hasPromotions\">\n        <div *ngFor=\"let discount of data.discounts\">\n            <div>{{ discount.name }}</div>\n        </div>\n\n        <div *ngFor=\"let remark of data.remarks\">\n            <div>\n                {{ remark.Name }}\n            </div>\n\n            <div *ngIf=\"remark.content !== ''\">\n                {{ remark.content }}\n            </div>\n        </div>\n    </div>\n\n    <p *ngIf=\"policyMsg\" [innerHTML]=\"policyMsg | safeHtml\"></p>\n\n    <div *ngFor=\"let otherPolice of otherPolicies\">\n        <p [innerHTML]=\"otherPolice.msg | safeHtml\"></p>\n    </div>\n\n    <div *ngIf=\"data.isPayOnArrival\">\n        {{ 'HOTELS.PayOnArrivalMsg' | translate }}\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AmenityGroups } from '@schemas/modules/accommodations/accommodation-amenity-groups';\n\n@Component({\n    selector: 'tz-mob-accommodation-amenities',\n    templateUrl: './mob-accommodation-amenities.component.html',\n    styleUrls: ['./mob-accommodation-amenities.component.scss'],\n})\nexport class MobAccommodationAmenitiesComponent implements OnInit {\n    public data: AmenityGroups[] = [];\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"mob-accommodations-amenities-wrapper\">\n    <div class=\"mob-accommodations-amenities\">\n        <div *ngFor=\"let amenityGroup of data\" class=\"mob-accommodations-amenities__block-list\">\n            <div class=\"mob-accommodations-amenities__title\">{{ amenityGroup.name }}</div>\n\n            <div\n                *ngFor=\"let amenity of amenityGroup.amenities | sortArray: 'description'; let last = last\"\n                class=\"mob-accommodations-amenities__item-list-item\"\n                [class.amenities-groups--amenities-item-list-item-last]=\"last\"\n            >\n                - {{ amenity.description }}\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\n\n@Component({\n    selector: 'tz-mob-accommodation-description',\n    templateUrl: './mob-accommodation-description.component.html',\n    styleUrls: ['./mob-accommodation-description.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobAccommodationDescriptionComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n    showFullDescription = false;\n    descriptionLength = 230;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"description-container\">\n    <div class=\"description-container__title\">Description</div>\n\n    <div class=\"description-container__description-text\">\n        <div [ngClass]=\"{ 'description-text-wrapper': showFullDescription }\">\n            <span\n                [innerHTML]=\"\n                    accommodation.description.substring(\n                        0,\n                        showFullDescription ? accommodation.description.length : descriptionLength\n                    )\n                \"\n            ></span>\n            <span *ngIf=\"!showFullDescription && accommodation.description.length > descriptionLength\">...</span>\n        </div>\n        <div\n            class=\"description-room-details-block flex flex-column\"\n            *ngIf=\"showFullDescription && accommodation.roomDetails.summary.length\"\n        >\n            <div class=\"description-container__title mb_16\">Guests Like</div>\n\n            <div class=\"room-detail-wrapper\">\n                <div *ngFor=\"let hotelFacilitie of accommodation.hotelFacilities | slice: 0:6\" class=\"room-detail\">\n                    - {{ 'HOTELS.OLERY.' + hotelFacilitie.title | translate }}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div\n        *ngIf=\"accommodation.description.length > descriptionLength\"\n        (click)=\"showFullDescription = !showFullDescription\"\n        class=\"description-container__description-text-btn\"\n        data-test=\"description-container__read-more-less-btn\"\n    >\n        {{ 'HOTELS.' + (showFullDescription ? 'READ_LESS' : 'READ_MORE') | translate }}\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Room } from '@schemas/modules/accommodations/room';\n\n@Component({\n    selector: 'tz-mob-accommodation-details-room-main-info',\n    templateUrl: './mob-accommodation-details-room-main-info.component.html',\n    styleUrls: ['./mob-accommodation-details-room-main-info.component.scss'],\n})\nexport class MobAccommodationDetailsRoomMainInfoComponent {\n    @Input() public room?: Room;\n}\n","<div class=\"room-details-container__info-wrapper\" *ngIf=\"room\">\n    <div class=\"room-details-container__image\" data-test=\"room-details-container-image-carousel\">\n        <tz-image-slider\n            class=\"room-details__slider\"\n            [images]=\"room.images\"\n            [imageProvider]=\"room.broker\"\n            [showWarning]=\"room.showHotelTopImage\"\n        ></tz-image-slider>\n    </div>\n\n    <div class=\"room-details-container__info-block\" data-test=\"room-details-info-block\">\n        <div *ngIf=\"room.type\" class=\"room-details-container__info-item\" data-test=\"room-details-info-room-type\">\n            <span class=\"room-details-container__text-padding\">-</span>\n            <span class=\"room-details-container__info-text\">{{ room.type }}</span>\n        </div>\n        <div *ngIf=\"room.bedType\" class=\"room-details-container__info-item\" data-test=\"room-details-info-bed-type\">\n            <span class=\"room-details-container__text-padding\">-</span>\n            <span class=\"room-details-container__info-text\">{{ room.bedType }}</span>\n        </div>\n        <div *ngIf=\"room.roomInfo\" class=\"room-details-container__info-item\" data-test=\"room-details-info-room-info\">\n            <span class=\"room-details-container__text-padding\">-</span>\n            <span class=\"room-details-container__info-text\">{{ room.roomInfo }}</span>\n        </div>\n        <div *ngIf=\"room.size\" class=\"room-details-container__info-item\" data-test=\"room-details-info-room-size\">\n            <span class=\"room-details-container__text-padding\">-</span>\n            <span class=\"room-details-container__info-text\"\n                >{{ 'HOTELS.ROOM_SIZE' | translate }}\n                <span class=\"room-details-container__info-text\" [innerHTML]=\"room.size\"></span>\n            </span>\n        </div>\n        <div *ngIf=\"room.roomViews\" class=\"room-details-container__info-item\" data-test=\"room-details-info-room-views\">\n            <span class=\"room-details-container__text-padding\">-</span>\n            <span class=\"room-details-container__info-text\">{{ room.roomViews }}</span>\n        </div>\n        <div *ngIf=\"room.facility1\" class=\"room-details-container__info-item\" data-test=\"room-details-info-facility1\">\n            <span class=\"room-details-container__text-padding\">-</span>\n            <span class=\"room-details-container__info-text\">{{ room.facility1 }}</span>\n        </div>\n        <div *ngIf=\"room.facility2\" class=\"room-details-container__info-item\" data-test=\"room-details-info-facility2\">\n            <span class=\"room-details-container__text-padding\">-</span>\n            <span class=\"room-details-container__info-text\">{{ room.facility2 }}</span>\n        </div>\n    </div>\n\n    <div class=\"room-details-container__amenities-container\">\n        <div\n            *ngFor=\"let amenity of room.amenities | sortArray: 'ordinal'\"\n            class=\"room-details-container__amenity flex align-center\"\n        >\n            <div class=\"inline-flex\">\n                <tz-icon [icon]=\"amenity.icon\"></tz-icon>\n            </div>\n\n            <span [attr.data-test]=\"'hotel-room-convenience-' + amenity.description | translate\">\n                {{ amenity.description | translate }}\n            </span>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { ServicePrices } from '@schemas/modules/core/service-prices';\nimport { PickerController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AccommodationsUtilsService } from '@services/modules/accommodations/utils/accommodations.utils';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Component({\n    selector: 'tz-mob-accommodation-details-room-offer',\n    templateUrl: './mob-accommodation-details-room-offer.component.html',\n    styleUrls: ['./mob-accommodation-details-room-offer.component.scss'],\n})\nexport class MobAccommodationDetailsRoomOfferComponent implements OnInit, OnChanges {\n    @Input() public roomOffer!: RoomOption;\n    @Input() public isUserLogged!: boolean;\n    @Input() public isSelected = false;\n    @Input() public maxRoomSelectionNumber = 0;\n    @Input() public stayNumber!: number;\n    @Input() public actionsButtons: string[] = [];\n    @Output() public roomCountChanged: EventEmitter<void> = new EventEmitter<void>();\n    @Output() public getRoomPrice: EventEmitter<{ price: number; id: string }> = new EventEmitter<{\n        price: number;\n        id: string;\n    }>();\n    @Output() public openTermsModal: EventEmitter<void> = new EventEmitter<void>();\n    @Output() public removeOption: EventEmitter<string> = new EventEmitter<string>();\n    public roomPrice!: ServicePrices;\n    public visitorsEmptyArr: unknown[] = [];\n    public numberOfNights!: number;\n    public maxValue = 0;\n\n    constructor(\n        private pickerCtrl: PickerController,\n        private translateService: TranslateService,\n        private cartService: CartService\n    ) {}\n\n    get checkShowTerms(): boolean {\n        return AccommodationsUtilsService.checkShowTerms(this.roomOffer, this.isUserLogged);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes['maxRoomSelectionNumber'] &&\n            (changes['maxRoomSelectionNumber'] || changes['maxRoomSelectionNumber'] === 0)\n        ) {\n            const personCount = this.roomOffer.personCount;\n            const roomsLeft = this.roomOffer.roomsLeft;\n            this.maxValue = AccommodationsUtilsService.getMaxRoomSelectionNumber(\n                { personCount, roomsLeft },\n                this.maxRoomSelectionNumber\n            );\n        }\n    }\n\n    public ngOnInit(): void {\n        this.initData();\n        this.roomPrice = this.roomOffer?.prices;\n        this.maxValue = Math.min(this.maxRoomSelectionNumber, this.roomOffer?.roomsLeft);\n    }\n\n    public roomCapacity(capacity: number): number[] {\n        return new Array(capacity);\n    }\n\n    public onSelectRoomOffer(): void {\n        this.maxValue = Math.min(this.maxRoomSelectionNumber, this.roomOffer?.roomsLeft);\n\n        if (this.roomOffer.personCount > 0) {\n            this.openRoomPicker(this.maxValue);\n            return;\n        }\n\n        if (this.maxValue > 0) {\n            if (this.roomOffer.personCount === 0) {\n                this.roomOffer.personCount = 1;\n                this.roomCountChanged.emit();\n                this.getRoomPrice.emit({ price: this.roomPrice.listPrice, id: this.roomOffer?.id });\n            }\n        }\n    }\n\n    public onOpenTermsModal(): void {\n        this.openTermsModal.emit();\n    }\n\n    private async openRoomPicker(maxRoomSelectionNumber: number): Promise<void> {\n        if (this.roomOffer?.roomsLeft > this.maxValue) {\n            maxRoomSelectionNumber = maxRoomSelectionNumber + this.roomOffer?.personCount;\n        }\n\n        const options: { text: string; value: string }[] = [];\n\n        for (let i = maxRoomSelectionNumber; i > 0; i--) {\n            options.push({ text: i + '', value: i + '' });\n        }\n\n        if (!options.length) {\n            options.push({ text: '1', value: '1' });\n        }\n\n        const picker = await this.pickerCtrl.create({\n            columns: [\n                {\n                    name: 'rooms',\n                    options,\n                },\n            ],\n            buttons: [\n                {\n                    text: this.translateService.instant('GENERAL.SELECT'),\n                    handler: (value) => {\n                        this.roomOffer.personCount = parseInt(value.rooms.value, 10);\n                        this.roomCountChanged.emit();\n                        this.getRoomPrice.emit({ price: this.roomPrice.listPrice, id: this.roomOffer?.id });\n                    },\n                },\n                {\n                    text: this.translateService.instant('GENERAL.remove'),\n                    handler: (value) => {\n                        this.roomOffer.personCount = 0;\n                        this.roomCountChanged.emit();\n                        this.getRoomPrice.emit({ price: this.roomPrice.listPrice, id: this.roomOffer?.id });\n                    },\n                    cssClass: 'mob-room-remove-btn',\n                },\n            ],\n            cssClass: 'mob-room-picker',\n        });\n\n        await picker.present();\n    }\n\n    private initData(): void {\n        this.visitorsEmptyArr = this.roomCapacity(this.roomOffer?.capacity);\n        this.numberOfNights = this.cartService.getCartData(ServiceId.ACC).items[0].selectedItem.data.numberOfNights;\n    }\n}\n","<div class=\"room-offer-wrapper\" *ngIf=\"roomOffer\">\n    <div *ngIf=\"roomOffer.capacity <= 4\" class=\"room-option flex\">\n        <span *ngFor=\"let visitor of visitorsEmptyArr\" class=\"room-option__capacity-block\">\n            <tz-icon className=\"room-option__capacity-block-icon\" icon=\"guest-16\"></tz-icon>\n        </span>\n\n        <span\n            class=\"room-option__description-item_meal room-option__item\"\n            [class.room-option--description-item-green-color]=\"\n                roomOffer.mealTypeCode !== 'nomeal' && roomOffer.mealTypeCode !== 'RO'\n            \"\n        >\n            {{ roomOffer.meal }}\n        </span>\n        <span class=\"room-option__description-item_bed-size room-option__item\" *ngIf=\"!!roomOffer.bedSize\"\n            ><span class=\"room-option__description-item_divider vertical-text-divider\">&nbsp;|&nbsp;</span\n            >{{ roomOffer.bedSize }}</span\n        >\n    </div>\n\n    <div\n        class=\"room-offer-wrapper__free-cancelation\"\n        [ngClass]=\"{ bgcolor: roomOffer.roomCancellation.cancellationPolicy === 'Refundable' }\"\n    >\n        {{\n            roomOffer.roomCancellation.messageKey\n                | translate: { date: roomOffer.roomCancellation.endDateTime | tzDate: 'mediumDate' }\n        }}\n    </div>\n\n    <div\n        class=\"room-offer-wrapper__T-C\"\n        data-mob=\"room-offer-wrapper-cancelation-policy\"\n        *ngIf=\"checkShowTerms\"\n        (click)=\"onOpenTermsModal()\"\n    >\n        {{ 'HOTELS.TERMS_CONDITIONS' | translate }}\n    </div>\n</div>\n\n<div class=\"price-container\">\n    <div class=\"price-container__block\">\n        <span class=\"price-container__left-rooms\" *ngIf=\"!isSelected\"\n            >{{ 'HOTELS.ONLY' | translate }} {{ roomOffer.roomsLeft }}\n            {{ (roomOffer.roomsLeft > 1 ? 'HOTELS.rOOMS' : 'HOTELS.rOOM') | translate }}\n            {{ 'HOTELS.LEFT' | translate }}</span\n        >\n        <span class=\"price-container__price\" *ngIf=\"roomPrice.listPrice > 0\">\n            {{ roomPrice.listPrice | tzCurrency: roomPrice.listPriceCur }}\n        </span>\n        <div class=\"price-container__per-room-info\">\n            Price per room for {{ stayNumber }} {{ (stayNumber > 1 ? 'GENERAL.nights' : 'GENERAL.night') | translate }}\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Gallery } from '@schemas/modules/accommodations/accommodation-gallery.model';\nimport { ModalService } from '@services/modal.service';\n\n@Component({\n    selector: 'tz-mob-accommodation-gallery',\n    templateUrl: './mob-accommodation-gallery.component.html',\n    styleUrls: ['./mob-accommodation-gallery.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobAccommodationGalleryComponent implements OnInit {\n    public data!: {\n        name: string;\n        imageProvider: string;\n        images: Gallery[];\n    };\n\n    public images: Gallery[] = [];\n\n    constructor(private modalService: ModalService) {}\n\n    ngOnInit() {}\n\n    public imgCallback(resp: any): void {\n        if (resp.status === 200) {\n            const img = this.data.images[Number(resp.id)];\n            this.images.push(img);\n            this.images.sort((a, b) => a.id - b.id);\n        }\n    }\n\n    public reformImageUrl(url: string, size: string): string {\n        if (!url || !size) {\n            return url;\n        }\n        return url.replace('{size}', size);\n    }\n\n    public showRooms(): void {\n        this.modalService.dismiss({ showRooms: true });\n    }\n\n    public showImgage(id: number): void {\n        this.modalService.dismiss({ imageId: id });\n    }\n}\n","<div class=\"gallery-container\">\n    <div class=\"gallery-imgs\">\n        <img\n            *ngFor=\"let img of images | slice: 0:48\"\n            [id]=\"img.id\"\n            [tzHotelImage]=\"img.url\"\n            [provider]=\"data.imageProvider\"\n            (click)=\"showImgage(img.id)\"\n        />\n    </div>\n    <div class=\"bottom-container\">\n        <button class=\"select-room-btn\" (click)=\"showRooms()\">\n            {{ 'HOTELS.SELECT_ROOMS' | translate }}\n        </button>\n    </div>\n</div>\n\n<img\n    class=\"test-img\"\n    [id]=\"img.id\"\n    [tzHotelImage]=\"reformImageUrl(img.url, img.thumbnailSize)\"\n    [provider]=\"data.imageProvider\"\n    (imgCallback)=\"imgCallback($event)\"\n    *ngFor=\"let img of data.images\"\n    onErrorSrc=\"_omit\"\n    dynamic\n/>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\n\n@Component({\n    selector: 'tz-mob-accommodation-guest-info',\n    templateUrl: './mob-accommodation-guest-info.component.html',\n    styleUrls: ['./mob-accommodation-guest-info.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobAccommodationGuestInfoComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n\n    public bookingOptions!: ICartSelectedItemBookingOption[];\n    public rooms!: number;\n    public childCount = 0;\n    public adultsCount = 0;\n\n    constructor(private cartService: CartService, private searchDataService: SearchDataService) {}\n\n    public ngOnInit(): void {\n        this.bookingOptions = this.cartService.getCartData(ServiceId.ACC)?.items[0]?.selectedItem.bookingOptions;\n        this.rooms = this.bookingOptions?.length || this.accommodation.numberOfRooms;\n\n        this.getPeopleCount();\n    }\n\n    private getPeopleCount(): void {\n        const { passengers } = this.searchDataService.getSearch(ServiceId.ACC);\n\n        this.childCount = (passengers.children || 0) + (passengers.infants || 0);\n        this.adultsCount = passengers.adults || 0;\n    }\n}\n","<div class=\"mob-accommodation-guest-info-container\">\n    <div class=\"mob-accommodation-guest-info-container__duration flex space-between align-start\">\n        <div class=\"guest-info-date\">\n            <p class=\"label\">{{ 'HOTELS.CHECK_IN' | translate }}</p>\n            <p class=\"date\">{{ accommodation.checkIn | tzDate: 'shortDateMonth' }}</p>\n        </div>\n        <div class=\"guest-info-date\">\n            <p class=\"label night\">\n                {{ accommodation.numberOfNights }}\n                {{ (accommodation.numberOfNights > 1 ? 'GENERAL.nights' : 'GENERAL.night') | translate }}\n            </p>\n        </div>\n        <div class=\"guest-info-date\">\n            <p class=\"label\">{{ 'HOTELS.CHECK_OUT' | translate }}</p>\n            <p class=\"date justify-end\">{{ accommodation.checkOut | tzDate: 'shortDateMonth' }}</p>\n        </div>\n    </div>\n    <div class=\"mob-accommodation-guest-info-container__info flex space-between justify-start\">\n        <div class=\"guest-info-value\">\n            <span class=\"label capitalize\">{{ (rooms > 1 ? 'HOTELS.rOOMS' : 'HOTELS.rOOM') | translate }}</span>\n            <span class=\"separator\"></span>\n            <span class=\"label\"> {{ rooms }}</span>\n        </div>\n        <div class=\"guest-info-value\">\n            <span class=\"label capitalize\">{{\n                'TRAVELLER.' + (adultsCount > 1 ? 'ADULTS' : 'ADULT') | translate\n            }}</span>\n            <span class=\"separator\"></span>\n            <span class=\"label\"> {{ adultsCount }}</span>\n        </div>\n        <ng-container [ngSwitch]=\"childCount > 0\">\n            <div *ngSwitchCase=\"true\" class=\"guest-info-value\">\n                <span class=\"label capitalize\">{{\n                    'SEARCH.' + (childCount > 1 ? 'CHILDREN' : 'CHILD') | translate\n                }}</span>\n                <span class=\"separator\"></span>\n                <span class=\"label\"> {{ childCount }}</span>\n            </div>\n            <div *ngSwitchDefault class=\"guest-info-value\">\n                <span class=\"label\">{{ 'HOTELS.NO_CHILDREN' | translate }}</span>\n            </div>\n        </ng-container>\n    </div>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { Gallery } from '@schemas/modules/accommodations/accommodation-gallery.model';\nconst paginationCount = 7;\n@Component({\n    selector: 'tz-mob-accommodation-images-carosel',\n    templateUrl: './mob-accommodation-images-carosel.component.html',\n    styleUrls: ['./mob-accommodation-images-carosel.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobAccommodationImagesCaroselComponent implements OnInit {\n    public data!: {\n        name: string;\n        imageProvider: string;\n        images: Gallery[];\n        selectedIdx: number;\n    };\n\n    public images: Gallery[] = [];\n    public currentImg!: Gallery;\n    public currentImgIdx = -1;\n\n    private loadImages: Gallery[] = [];\n    private loadedImgCount = 0;\n\n    constructor() {}\n\n    get currentPagination(): number[] {\n        let maxImages = paginationCount;\n        let activeIdx = this.currentImgIdx;\n\n        const totalImages = this.images.length;\n        const remainingCount = totalImages - activeIdx;\n\n        if (totalImages < maxImages) {\n            maxImages = totalImages;\n        }\n\n        if (remainingCount < paginationCount) {\n            maxImages = totalImages % paginationCount;\n            activeIdx = maxImages - remainingCount;\n        } else if (activeIdx + 1 > paginationCount) {\n            activeIdx %= paginationCount;\n        }\n\n        return Array(maxImages)\n            .fill(0)\n            .map((x, i) => {\n                if (activeIdx === i) {\n                    return 1;\n                }\n\n                return 0;\n            });\n    }\n\n    ngOnInit() {\n        this.currentImgIdx = this.data.selectedIdx;\n        this.currentImg = this.data.images[Number(this.currentImgIdx)];\n    }\n\n    public imgCallback(resp: any): void {\n        ++this.loadedImgCount;\n        if (resp.status === 200) {\n            const img = this.data.images[Number(resp.id)];\n            this.loadImages.push(img);\n            this.loadImages.sort((a, b) => a.id - b.id);\n        }\n\n        if (this.loadedImgCount === this.data.images.length) {\n            this.images = this.loadImages.slice(0, 48);\n        }\n    }\n\n    public reformImageUrl(url: string, size: string): string {\n        if (!url || !size) {\n            return url;\n        }\n        return url.replace('{size}', size);\n    }\n\n    public plusSlides(n: number): void {\n        if (this.currentImgIdx === -1 || !this.images[this.currentImgIdx]) {\n            return;\n        }\n\n        let selectedIdx = this.currentImgIdx;\n        selectedIdx += n;\n\n        if (selectedIdx < 0) {\n            selectedIdx = this.images.length - 1;\n        }\n        if (selectedIdx > this.images.length - 1) {\n            selectedIdx = 0;\n        }\n\n        this.currentImg = ToolsService.deepCopy(this.images[selectedIdx]) as Gallery;\n        this.currentImgIdx = selectedIdx;\n    }\n}\n","<div class=\"img-count\">{{ currentImgIdx + 1 }} / {{ images.length }}</div>\n<img\n    tzOnSwipe\n    (swipeLeft)=\"plusSlides(1)\"\n    (swipeRight)=\"plusSlides(-1)\"\n    [id]=\"currentImg.id\"\n    [tzHotelImage]=\"currentImg.url\"\n    [provider]=\"data.imageProvider\"\n/>\n<div class=\"pagination-container\">\n    <div class=\"pre-page\" *ngIf=\"currentImgIdx + 1 > 7\"></div>\n    <div class=\"current-page\" [ngClass]=\"{ active: idx === 1 }\" *ngFor=\"let idx of currentPagination\"></div>\n    <div class=\"next-page\" *ngIf=\"images.length - currentImgIdx + 1 > 7\"></div>\n</div>\n<img\n    class=\"test-img\"\n    [id]=\"img.id\"\n    [tzHotelImage]=\"reformImageUrl(img.url, img.thumbnailSize)\"\n    [provider]=\"data.imageProvider\"\n    (imgCallback)=\"imgCallback($event)\"\n    *ngFor=\"let img of data.images\"\n    onErrorSrc=\"_omit\"\n    dynamic\n/>\n","import { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { GeneralSettings } from '@core/constants/general-settings';\nimport { FitBoundsOptions, LngLat, LngLatBounds, LngLatBoundsLike, Map, ScaleControl } from 'mapbox-gl';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { MapMarkers } from '@core/constants/mapbox-gl-const';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Component({\n    selector: 'tz-mob-accommodation-map',\n    templateUrl: './mob-accommodation-map.component.html',\n    styleUrls: ['./mob-accommodation-map.component.scss'],\n})\nexport class MobAccommodationMapComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n    @ViewChild('mapBoxContainer') mapBoxContainer?: ElementRef;\n\n    public mapStyle = GeneralSettings.mapbox.mapStyle;\n    public mapboxRef!: Map;\n    public mapExpanded = false;\n    public locationInfo = {\n        hotelName: '',\n        searchType: '',\n        distance: '',\n    };\n    public markers: {\n        lngLat: LngLat;\n        marker: string;\n    }[] = [];\n    public fitBounds!: LngLatBoundsLike;\n    public fitBoundsOptions: FitBoundsOptions = {};\n\n    constructor(private searchDataService: SearchDataService) {}\n\n    @HostListener('document:click', ['$event'])\n    onClick(event: MouseEvent) {\n        let targetElement = event.target as HTMLElement;\n        let outsideClick = true;\n\n        do {\n            if (targetElement.tagName === 'TZ-ACCOMMODATION-MAP') {\n                outsideClick = false;\n                break;\n            }\n\n            targetElement = targetElement.parentNode as HTMLElement;\n        } while (targetElement);\n\n        if (outsideClick) {\n            this.disableMapInteractions();\n        } else {\n            this.enableMapInteractions();\n        }\n    }\n\n    ngOnInit() {\n        this.setHotelMarkers();\n    }\n\n    public onMapLoad(map: Map): void {\n        this.mapboxRef = map;\n\n        const scale = new ScaleControl({\n            maxWidth: 80,\n            unit: 'metric',\n        });\n        this.mapboxRef.addControl(scale);\n        this.disableMapInteractions();\n    }\n\n    public toggleMapSize(): void {\n        if (this.mapBoxContainer) {\n            this.mapExpanded = !this.mapExpanded;\n            this.mapBoxContainer.nativeElement.style.height = (this.mapExpanded ? 370 : 210) + 'px'; // set height\n            this.mapboxRef.resize();\n        }\n    }\n\n    public zoomMap(zoomin = false): void {\n        this.mapboxRef.setZoom(this.mapboxRef.getZoom() + (zoomin ? 0.5 : -0.5));\n    }\n\n    private setHotelMarkers(): void {\n        this.markers.push({\n            lngLat: new LngLat(\n                Number(this.accommodation.location.longitude),\n                Number(this.accommodation.location.latitude)\n            ),\n            marker: MapMarkers.PURPLE,\n        });\n\n        if (this.accommodation.aerialDistance && this.accommodation.aerialDistance > 0) {\n            const searchInfos = this.searchDataService.getSearchData(ServiceId.ACC);\n\n            if (searchInfos && searchInfos.address) {\n                this.markers.push({\n                    lngLat: new LngLat(Number(searchInfos.address.longitude), Number(searchInfos.address.latitude)),\n                    marker: MapMarkers.ORANGE,\n                });\n\n                this.locationInfo = {\n                    hotelName: this.accommodation.name,\n                    searchType: searchInfos.address.cityName === '' ? 'SEARCH_POINT' : 'CITY_CENTER',\n                    distance: Math.round(this.accommodation.aerialDistance) + ' km',\n                };\n            }\n        }\n\n        if (this.markers.length === 1) {\n            this.fitBoundsOptions.maxZoom = 15;\n        } else {\n            const latLngBounds = new LngLatBounds();\n            for (const marker of this.markers) {\n                latLngBounds.extend([marker.lngLat.lng, marker.lngLat.lat]);\n            }\n            this.fitBounds = latLngBounds;\n        }\n    }\n\n    private disableMapInteractions(): void {\n        if (this.mapboxRef) {\n            this.mapboxRef.scrollZoom.disable();\n            this.mapboxRef.boxZoom.disable();\n            this.mapboxRef.dragRotate.disable();\n            this.mapboxRef.dragPan.disable();\n            this.mapboxRef.keyboard.disable();\n            this.mapboxRef.doubleClickZoom.disable();\n            this.mapboxRef.touchZoomRotate.disable();\n        }\n    }\n\n    private enableMapInteractions(): void {\n        if (this.mapboxRef) {\n            this.mapboxRef.scrollZoom.enable();\n            this.mapboxRef.boxZoom.enable();\n            this.mapboxRef.dragRotate.enable();\n            this.mapboxRef.dragPan.enable();\n            this.mapboxRef.keyboard.enable();\n            this.mapboxRef.doubleClickZoom.enable();\n            this.mapboxRef.touchZoomRotate.enable();\n        }\n    }\n}\n","<div class=\"mob-accommodation-map-container\" #mapBoxContainer [ngClass]=\"{ expanded: mapExpanded }\">\n    <mgl-map\n        [style]=\"mapStyle\"\n        [zoom]=\"[12]\"\n        [fitBounds]=\"fitBounds\"\n        [fitBoundsOptions]=\"fitBoundsOptions\"\n        (mapLoad)=\"onMapLoad($event)\"\n    >\n        <mgl-marker *ngFor=\"let marker of markers\" [lngLat]=\"marker.lngLat\">\n            <tz-icon class=\"marker-icon\" [icon]=\"marker.marker\"></tz-icon>\n        </mgl-marker>\n    </mgl-map>\n    <div class=\"hotel-loc-panel\" *ngIf=\"locationInfo.distance !== ''\">\n        <div class=\"hotel-loc-panel__scheme\">\n            <div class=\"scheme-item__top__left-circle\"></div>\n            <div class=\"distance-line\"></div>\n            <div class=\"scheme-item__top__left-circle\"></div>\n        </div>\n\n        <div class=\"hotel-loc-panel__loc-box\">\n            <div class=\"loc-label hotel\">\n                <span>{{ locationInfo.hotelName }}</span>\n            </div>\n            <div class=\"loc-label local-panel-distance\">{{ locationInfo.distance }}</div>\n            <div class=\"loc-label search-point\">\n                <span>{{ 'HOTELS.' + locationInfo.searchType | translate }}</span>\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"mapboxRef\">\n        <div class=\"map-action-btn expand-shrink-btn\" (click)=\"toggleMapSize()\"></div>\n        <div class=\"zoom-in-out\">\n            <div class=\"map-action-btn zoom-out\" (click)=\"zoomMap()\"></div>\n            <div class=\"map-action-btn zoom-in\" (click)=\"zoomMap(true)\"></div>\n        </div>\n    </ng-container>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-mob-accommodation-nearby',\n    templateUrl: './mob-accommodation-nearby.component.html',\n    styleUrls: ['./mob-accommodation-nearby.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobAccommodationNearbyComponent {\n    @Input() accommodationReviews!: AccommodationReviews;\n\n    constructor() {}\n\n    public formatDistance(d: number): string {\n        return d < 0.1 ? Math.round(d * 1000) + 'm' : d.toFixed(1) + 'km';\n    }\n}\n","<div class=\"mob-nearby-container\">\n    <div class=\"mob-nearby-container__title\">{{ 'HOTELS.NEARBY' | translate }}</div>\n\n    <ng-container\n        *ngIf=\"\n            accommodationReviews.nearbyAttractions &&\n            (accommodationReviews.nearbyAttractions.length > 0 || accommodationReviews.nearbyRestaurants.length > 0)\n        \"\n    >\n        <div class=\"flex flex-column\">\n            <ng-container\n                *ngTemplateOutlet=\"\n                    nearbyPlaces;\n                    context: { $implicit: accommodationReviews.nearbyAttractions, type: 'HOTELS.POINTS_OF_INTEREST' }\n                \"\n            ></ng-container>\n            <ng-container\n                *ngTemplateOutlet=\"\n                    nearbyPlaces;\n                    context: { $implicit: accommodationReviews.nearbyRestaurants, type: 'HOTELS.PLACES_TO_EAT' }\n                \"\n            ></ng-container>\n        </div>\n    </ng-container>\n</div>\n\n<ng-template #nearbyPlaces let-places let-type=\"type\">\n    <div class=\"mob-nearby\" *ngIf=\"places.length > 0\">\n        <div class=\"body-2-semibold mob-nearby__title\" [translate]=\"type\"></div>\n        <div class=\"body-2-semibold mob-nearby__text\">\n            <ng-container *ngFor=\"let place of places.slice(0, places.length)\">\n                <div>\n                    <span> - {{ place.name }} </span>\n                    <span class=\"seperator\"> | </span>\n                    <span class=\"distance\">{{ formatDistance(place.distance) }}</span>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\n\n@Component({\n    selector: 'tz-mob-accommodation-rating',\n    templateUrl: './mob-accommodation-rating.component.html',\n    styleUrls: ['./mob-accommodation-rating.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobAccommodationRatingComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div *ngIf=\"accommodation.ratings.categoryRatings.length\" class=\"category-ratings-container flex flex-column\">\n    <div\n        *ngFor=\"let categoryRating of accommodation.ratings.categoryRatings | sortArray: 'ordinal'\"\n        class=\"category-ratings-container__item\"\n        [style.width]=\"categoryRating.rating * 10 + '%'\"\n    >\n        <span class=\"category-ratings-container__rating-text\">{{ categoryRating.ratingStr | number: '1.1-1' }}</span>\n        <span>{{ 'HOTELS.OLERY.RATING.' + categoryRating.category | translate }}</span>\n    </div>\n</div>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Accommodation, RecommendedTzRooms } from '@schemas/modules/accommodations/accommodation';\nimport { AccommodationCheapestPrice } from '@schemas/modules/accommodations/accommodation-cheapest-price.model';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { ServicePrices } from '@schemas/modules/core/service-prices';\nimport { UserService } from '@services/modules/user/services/user.service';\n\n@Component({\n    selector: 'tz-mob-accommodation-recommended',\n    templateUrl: './mob-accommodation-recommended.component.html',\n    styleUrls: ['./mob-accommodation-recommended.component.scss'],\n})\nexport class MobAccommodationRecommendedComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n    @Input() selectRecommended = false;\n    @Input() roomOption!: RoomOption;\n    @Input() roomPrice!: ServicePrices;\n    @Input() stayNumber!: number;\n    @Input() isUserLogged!: boolean;\n    @Input() maxRoomSelectionNumber = 0;\n    @Output() getRecommendedRoomPrice: EventEmitter<{ price: number; recommendedRooms: RecommendedTzRooms[] }> =\n        new EventEmitter<{ price: number; recommendedRooms: RecommendedTzRooms[] }>();\n\n    @Output() recommendedSelected = new EventEmitter<boolean>();\n    @Output() openTermsModal: EventEmitter<RoomOption> = new EventEmitter<RoomOption>();\n    @Output() scrollTo: EventEmitter<string> = new EventEmitter<string>();\n\n    public recommendedRooms: RecommendedTzRooms[] = [];\n    public cheapestPrice!: AccommodationCheapestPrice;\n    public taxInfo = '';\n    public recommendedTitle = '';\n\n    constructor(private translateService: TranslateService, public userService: UserService) {}\n\n    ngOnInit() {\n        this.initializeRecommendedComponent();\n    }\n\n    public toggleSelection(): void {\n        this.selectRecommended = !this.selectRecommended;\n        this.recommendedSelected.emit(this.selectRecommended);\n        if (this.selectRecommended) {\n            this.getRecommendedRoomPrice.emit({\n                price: this.cheapestPrice.listPrice,\n                recommendedRooms: this.recommendedRooms,\n            });\n        } else {\n            this.getRecommendedRoomPrice.emit({ price: 0, recommendedRooms: [] });\n        }\n    }\n\n    public roomCapacity(capacity: number) {\n        return new Array(capacity);\n    }\n\n    private newRoomInfo(room: Room, offer: RoomOption, allotment: number): RecommendedTzRooms {\n        return {\n            roomId: room.id,\n            name: room.displayName,\n            image: room.images ? room.images[0] : '',\n            allotment,\n            offer,\n            capacity: offer.capacity * allotment,\n            showTerms: this.checkShowTerms(offer),\n        } as RecommendedTzRooms;\n    }\n\n    private checkShowTerms(roomOption: RoomOption): boolean {\n        return (\n            roomOption.roomCancellation.otherPolicies.length > 0 ||\n            roomOption.roomCancellation.cancellationPolicy === 'Non-refundable' ||\n            (roomOption.roomCancellation.isFree && roomOption.roomCancellation.endDateTime !== '') ||\n            roomOption.payAt === 'Pay on arrival' ||\n            (roomOption.discounts.length > 0 &&\n                (roomOption.packaging ? this.userService.IsLogged() : !roomOption.packaging))\n        );\n    }\n\n    private initializeRecommendedComponent(): void {\n        this.cheapestPrice = this.accommodation.cheapestPrice;\n        this.taxInfo = this.accommodation.taxInfo;\n\n        const numberOfGuests = this.accommodation.numberOfGuests;\n        const txt = this.translateService.instant('HOTELS.RECOMMENDED_FOR');\n        const personTxt = this.translateService.instant(numberOfGuests > 1 ? 'TRAVELLER.PERSONS' : 'TRAVELLER.PERSON');\n        this.recommendedTitle = `${txt} ${numberOfGuests} ${personTxt}`;\n\n        const recommendedRooms: { [key: string]: number } = {};\n        let roomLeftToFind = this.accommodation.numberOfRooms;\n\n        let recOffers = this.accommodation.recommendedRooms;\n        if (this.userService.IsLogged() && this.accommodation.recOffersLoggedIn) {\n            recOffers = this.accommodation.recRoomsLoggedIn;\n            this.cheapestPrice = this.accommodation.recOffersLoggedIn.cheapestPrice;\n            this.taxInfo = this.accommodation.recOffersLoggedIn.taxInfo;\n        }\n\n        recOffers.forEach((r) => {\n            recommendedRooms[r.offerId] = r.allotment;\n        });\n\n        this.accommodation.rooms.some((room) => {\n            room.roomOffers.some((offer) => {\n                if (recommendedRooms.hasOwnProperty(offer.id)) {\n                    const allotment = recommendedRooms[offer.id];\n                    this.recommendedRooms.push(this.newRoomInfo(room, offer, allotment));\n\n                    roomLeftToFind--;\n                }\n\n                return roomLeftToFind === 0;\n            });\n            return roomLeftToFind === 0;\n        });\n    }\n}\n","<div class=\"mob-accommodation-recommended__container\">\n    <div class=\"mob-accommodation-recommended__title\">{{ recommendedTitle }}</div>\n    <div class=\"room-offer\" *ngFor=\"let room of recommendedRooms; let i = index\">\n        <tz-mob-accommodation-room-offer\n            [roomOption]=\"room.offer\"\n            [roomName]=\"room.name\"\n            [roomPrice]=\"room.offer.prices\"\n            [recommended]=\"true\"\n            [lastItem]=\"recommendedRooms.length === i + 1\"\n        >\n        </tz-mob-accommodation-room-offer>\n    </div>\n    <div class=\"price-container\">\n        <div class=\"price-container__block\">\n            <span class=\"price-container__price\">\n                {{ cheapestPrice.listPrice | tzCurrency: cheapestPrice.listPriceCur }}\n            </span>\n            <div class=\"price-container__per-room-info\">\n                {{ 'GENERAL.PRICE_FOR' | translate }}\n                <span>\n                    {{ accommodation.numberOfRooms }}\n                    {{ (accommodation.numberOfRooms > 1 ? 'HOTELS.ROOMS' : 'HOTELS.ROOM') | translate | lowercase }},\n                </span>\n                <span>\n                    {{ accommodation.numberOfGuests }}\n                    {{ 'TRAVELLER.' + (accommodation.numberOfGuests > 1 ? 'PEOPLE' : 'PERSON') | translate }},\n                </span>\n                <span>\n                    {{ accommodation.numberOfNights }}\n                    {{ 'GENERAL.' + (accommodation.numberOfNights > 1 ? 'nights' : 'night') | translate }}\n                </span>\n                {{ ' | ' }}\n                <span>{{ accommodation.taxInfo | translate }}</span>\n            </div>\n        </div>\n    </div>\n    <button\n        class=\"room-offer-select-btn\"\n        data-mob=\"room-option-on-select-room\"\n        (click)=\"toggleSelection()\"\n        [ngClass]=\"{ 'room-selected': selectRecommended }\"\n    >\n        {{ 'GENERAL.' + (selectRecommended ? 'SELECTED' : 'SELECT') | translate }}\n    </button>\n    <!--\n  <div class=\"recommended-price-block\">\n    <div class=\"price-block-options\" data-test=\"hotel-price-block-info\">\n        <div>\n            {{ accommodation.numberOfNights }}\n            {{ 'GENERAL.' + (accommodation.numberOfNights > 1 ? 'nights' : 'night') | translate }}\n        </div>\n        <div>\n            {{ accommodation.numberOfRooms }}\n            {{ (accommodation.numberOfRooms > 1 ? 'HOTELS.ROOMS' : 'HOTELS.ROOM') | translate }},\n            {{ accommodation.numberOfGuests }}\n            {{ 'TRAVELLER.' + (accommodation.numberOfGuests > 1 ? 'PERSONS' : 'PERSON') | translate }}\n        </div>\n        <div>{{ accommodation.taxInfo | translate }}</div>\n    </div>\n    <div class=\"recommended-price\" data-test=\"hotel-room-recommended-price\">\n        {{ cheapestPrice.listPrice | tzCurrency: cheapestPrice.listPriceCur }}\n    </div>\n    <button\n        class=\"select-btn recommended-select\"\n        data-test=\"hotel-recommended-room-select-btn\"\n        [ngClass]=\"{ selected: selectRecommended }\"\n        (click)=\"toggleSelection()\"\n    >\n        {{ 'GENERAL.' + (selectRecommended ? 'SELECTED' : 'SELECT') | translate }}\n    </button>\n</div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-mob-accommodation-reviews',\n    templateUrl: './mob-accommodation-reviews.component.html',\n    styleUrls: ['./mob-accommodation-reviews.component.scss'],\n})\nexport class MobAccommodationReviewsComponent implements OnInit {\n    public data!: { accommodationReviews: AccommodationReviews };\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit() {}\n}\n","<div class=\"mob-accommodation-reviews-container\">\n    <div *ngFor=\"let review of data.accommodationReviews.recentReviews\" class=\"mob-accommodation-review\">\n        <div\n            class=\"flex mob-accommodation-review__name-block align-start\"\n            [ngClass]=\"{\n                'align-start': review.countryCode && review.countryName,\n                'align-center': !(review.countryCode && review.countryName)\n            }\"\n        >\n            <div>\n                <div\n                    *ngIf=\"review.countryCode\"\n                    [class]=\"'mob-accommodation-review__flag fflag ff-sm fflag-' + review.countryCode\"\n                ></div>\n                <span *ngIf=\"review.countryName\" class=\"mob-accommodation-review__county-name\">{{\n                    review.countryName\n                }}</span>\n                <div class=\"mob-accommodation-review__date\">{{ review.reviewDate | tzDate: 'mediumDate' }}</div>\n            </div>\n            <div\n                class=\"mob-accommodation-review__rating flex flex-center\"\n                [ngClass]=\"{ 'without-flag': !review.countryCode }\"\n            >\n                {{ review.rating | number: '1.1-1' }}\n            </div>\n        </div>\n\n        <div\n            class=\"mob-accommodation-review__text\"\n            [class.mob-accommodation-review--text-mt]=\"!(review.countryName && review.countryCode)\"\n        >\n            \"{{ review.reviewText }}\"\n        </div>\n    </div>\n</div>\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { PickerController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ServicePrices } from '@schemas/modules/core/service-prices';\nimport { AccommodationsUtilsService } from '@services/modules/accommodations/utils/accommodations.utils';\nimport { ModalService } from '@services/modal.service';\nimport { MobPickerWheels } from '@schemas/modules/picker/mob-picker';\nimport { ScrollService } from '@services/modules/core/scroll-service';\n\n@Component({\n    selector: 'tz-mob-accommodation-room-offer',\n    templateUrl: './mob-accommodation-room-offer.component.html',\n    styleUrls: ['./mob-accommodation-room-offer.component.scss'],\n})\nexport class MobAccommodationRoomOfferComponent implements OnInit, OnChanges {\n    @Input() roomOption!: RoomOption;\n    @Input() roomPrice!: ServicePrices;\n    @Input() stayNumber!: number;\n    @Input() isUserLogged!: boolean;\n    @Input() roomName?: string = '';\n    @Input() recommended?: boolean = false;\n    @Input() lastItem?: boolean = false;\n    @Input() maxRoomSelectionNumber = 0;\n    @Output() roomCountChanged: EventEmitter<void> = new EventEmitter<void>();\n    @Output() getRoomPrice: EventEmitter<{ price: number; id: string }> = new EventEmitter<{\n        price: number;\n        id: string;\n    }>();\n    @Output() openTermsModal: EventEmitter<void> = new EventEmitter<void>();\n\n    public maxValue = 0;\n\n    constructor(\n        private pickerCtrl: PickerController,\n        private translateService: TranslateService,\n        private modalService: ModalService,\n        private scrollService: ScrollService\n    ) {}\n\n    get checkShowTerms(): boolean {\n        return AccommodationsUtilsService.checkShowTerms(this.roomOption, this.isUserLogged);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes['maxRoomSelectionNumber'] &&\n            (changes['maxRoomSelectionNumber'] || changes['maxRoomSelectionNumber'] === 0)\n        ) {\n            const personCount = this.roomOption.personCount;\n            const roomsLeft = this.roomOption.roomsLeft;\n            this.maxValue = AccommodationsUtilsService.getMaxRoomSelectionNumber(\n                { personCount, roomsLeft },\n                this.maxRoomSelectionNumber\n            );\n        }\n    }\n\n    ngOnInit() {\n        this.maxValue = Math.min(this.maxRoomSelectionNumber, this.roomOption.roomsLeft);\n    }\n\n    public roomCapacity(capacity: number) {\n        return new Array(capacity);\n    }\n\n    public onSelectRoomOffer(element: string): void {\n        this.scrollToElement(element);\n\n        const roomsLeft = this.roomOption.roomsLeft;\n        this.maxValue = Math.min(this.maxRoomSelectionNumber, roomsLeft - this.roomOption.personCount);\n\n        if ((roomsLeft === 1 || this.maxValue === 0) && this.roomOption.personCount === 1) {\n            this.roomOption.personCount = 0;\n            this.roomCountChanged.emit();\n            this.getRoomPrice.emit({ price: this.roomPrice.listPrice, id: this.roomOption.id });\n            return;\n        }\n\n        const maxRoomSelectionNumber = this.maxValue + this.roomOption.personCount;\n        const personCount = this.roomOption.personCount;\n        if (maxRoomSelectionNumber > 1 && (this.maxValue || personCount) && roomsLeft + personCount > 1) {\n            this.openRoomPicker(this.maxValue, element);\n            return;\n        }\n\n        if (this.maxValue > 0) {\n            if (this.roomOption.personCount === 0) {\n                this.roomOption.personCount = 1;\n                this.roomCountChanged.emit();\n                this.getRoomPrice.emit({ price: this.roomPrice.listPrice, id: this.roomOption.id });\n            }\n        }\n    }\n\n    public onOpenTermsModal(): void {\n        this.openTermsModal.emit();\n    }\n\n    private openRoomPicker(maxRoomSelectionNumber: number, btnElement: string) {\n        if (this.roomOption.roomsLeft > this.maxValue) {\n            maxRoomSelectionNumber = maxRoomSelectionNumber + this.roomOption.personCount;\n        }\n\n        const wheels: MobPickerWheels[] = [];\n\n        for (let i = maxRoomSelectionNumber; i > 0; i--) {\n            wheels.push({ display: i + '', value: i + '' });\n        }\n\n        if (!wheels.length) {\n            wheels.push({ display: '1', value: '1' });\n        }\n\n        const selected = this.roomOption.personCount ? [this.roomOption.personCount] : [1];\n        this.modalService\n            .openPickerModal({ wheels, selected }, { cancelBtnText: 'GENERAL.Remove', title: 'PICKER.SELECT_ROOM' })\n            .then((modal) => {\n                if (modal.data?.selected) {\n                    this.roomOption.personCount = parseInt(modal.data.selected[0], 10);\n                    this.roomCountChanged.emit();\n                    this.getRoomPrice.emit({ price: this.roomPrice.listPrice, id: this.roomOption.id });\n\n                    this.scrollToElement(btnElement);\n                }\n\n                if (modal.data?.cancel) {\n                    this.roomOption.personCount = 0;\n                    this.roomCountChanged.emit();\n                    this.getRoomPrice.emit({ price: this.roomPrice.listPrice, id: this.roomOption.id });\n                }\n            });\n    }\n\n    private scrollToElement(element: string): void {\n        requestAnimationFrame(() => {\n            this.scrollService.scrollToVisibleArea(element, 'accommodationsRoomsFooter', {\n                scrollTop: 16,\n                includeElementsHeight: ['mobMainModalHeader'],\n            });\n        });\n    }\n}\n","<div\n    class=\"room-offer-wrapper\"\n    [ngClass]=\"{ 'last-room-recommended': recommended && !lastItem, 'room-recommended-wrapper': recommended }\"\n>\n    <div class=\"room-name\" *ngIf=\"roomName\">\n        {{ roomName }}\n    </div>\n    <div *ngIf=\"roomOption.capacity <= 4\" class=\"room-option flex\">\n        <span *ngFor=\"let room of roomCapacity(roomOption.capacity)\" class=\"room-option__capacity-block\">\n            <tz-icon className=\"room-option__capacity-block-icon\" icon=\"guest-16\"></tz-icon>\n        </span>\n\n        <span\n            class=\"room-option__description-item\"\n            [class.room-option--description-item-green-color]=\"\n                roomOption.mealTypeCode !== 'nomeal' && roomOption.mealTypeCode !== 'RO'\n            \"\n        >\n            {{ roomOption.meal }}\n        </span>\n    </div>\n    <div\n        class=\"room-offer-wrapper__free-cancelation\"\n        [class.room-offer-wrapper__free-cancelation-bgcolor]=\"\n            roomOption.roomCancellation.cancellationPolicy === 'Refundable'\n        \"\n    >\n        {{\n            roomOption.roomCancellation.messageKey\n                | translate: { date: roomOption.roomCancellation.endDateTime | tzDate: 'mediumDate' }\n        }}\n    </div>\n    <div class=\"room-offer-wrapper__options\">\n        <div *ngIf=\"roomOption.bedSize\" class=\"room-offer-wrapper__option\">{{ roomOption.bedSize }}</div>\n        <div *ngIf=\"roomOption.viewType\" class=\"room-offer-wrapper__option\">\n            {{ roomOption.viewType }}\n        </div>\n    </div>\n    <div\n        class=\"room-offer-wrapper__T-C tz-purple-link\"\n        data-mob=\"room-offer-wrapper-cancelation-policy\"\n        *ngIf=\"checkShowTerms\"\n        (click)=\"onOpenTermsModal()\"\n    >\n        {{ 'HOTELS.TERMS_CONDITIONS' | translate }}\n    </div>\n</div>\n\n<div *ngIf=\"!recommended\" class=\"price-container\">\n    <div class=\"price-container__block\">\n        <span *ngIf=\"3 >= roomOption.roomsLeft\" class=\"price-container__left-rooms\">\n            {{ 'HOTELS.ONLY' | translate }}\n            {{ roomOption.roomsLeft }}\n            {{ roomOption.roomsLeft > 1 ? ('HOTELS.rOOMS' | translate) : ('HOTELS.rOOM' | translate) }}\n            {{ 'HOTELS.LEFT' | translate }}\n        </span>\n        <span class=\"price-container__price\" *ngIf=\"roomPrice.listPrice > 0\">\n            {{ roomPrice.listPrice | tzCurrency: roomPrice.listPriceCur }}\n        </span>\n        <div class=\"price-container__per-room-info\">\n            {{ 'GENERAL.PRICE_FOR' | translate }} {{ stayNumber }}\n            {{ (stayNumber > 1 ? 'GENERAL.nights' : 'GENERAL.night') | translate }} |\n            {{ 'All taxes included' | translate }}\n        </div>\n    </div>\n</div>\n\n<button\n    *ngIf=\"!recommended\"\n    class=\"tz-mob-select-btn room-offer-select-btn\"\n    [ngClass]=\"{ 'mob-selected-btn': roomOption.personCount }\"\n    data-mob=\"room-option-on-select-room\"\n    [id]=\"'selectRoomId' + roomOption.id\"\n    (click)=\"onSelectRoomOffer('selectRoomId' + roomOption.id)\"\n>\n    {{ roomOption.personCount > 0 ? ('GENERAL.SELECTED' | translate) : ('GENERAL.SELECT' | translate) }}\n    <span *ngIf=\"roomOption.personCount > 1\">&nbsp;{{ roomOption.personCount }}</span>\n    <tz-svg-icon\n        *ngIf=\"roomOption.roomsLeft > 1\"\n        [mobile]=\"true\"\n        class=\"room-offer-select-btn__icon\"\n        icon=\"arrow_drop_up\"\n    ></tz-svg-icon>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { AccommodationRatings } from '@schemas/modules/accommodations/accommodation-ratings.model';\nimport { ModalService } from '@services/modal.service';\nimport { AccommodationsUtilsService } from '@services/modules/accommodations/utils/accommodations.utils';\nimport { Subject } from 'rxjs';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { RecommendedTzRooms } from '@schemas/modules/accommodations/accommodation';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { AccommodationDetailsUtilService } from '../../../accommodation-details-util.service';\nimport { CurrencyService } from '@services/services/currency-service';\n\n@Component({\n    selector: 'tz-mob-accommodation-rooms',\n    templateUrl: './mob-accommodation-rooms.component.html',\n    styleUrls: ['./mob-accommodation-rooms.component.scss'],\n})\nexport class MobAccommodationRoomsComponent implements OnInit {\n    public data!: {\n        accommodationRooms: Room[];\n        accommodation: Accommodation;\n        roomsLeftForSelection: number;\n        isUserLogged: boolean;\n        selectedRooms?: { rooms: Room[]; options: { [key: number]: ICartSelectedItemBookingOption[] } };\n        ratings: AccommodationRatings;\n        numberOfNights: number;\n        openTermsModal$: Subject<RoomOption>;\n    };\n    public selectRecommended = false;\n    public roomsLeftForSelection = 0;\n    public roomsQuantity = 0;\n    public totalPrice = 0;\n    public currency!: string;\n    public accommodation!: Accommodation;\n    private servicePrices: { price: number; id: string }[] = [];\n\n    constructor(\n        private modalService: ModalService,\n        private userService: UserService,\n        private accommodationDetailsUtilService: AccommodationDetailsUtilService,\n        private currencyService: CurrencyService\n    ) {}\n\n    ngOnInit() {\n        this.roomCountChanged();\n        this.accommodation = this.data.accommodation;\n        this.selectRecommended = this.accommodationDetailsUtilService.selectRecommended;\n\n        if (this.data.selectedRooms) {\n            this.totalPrice = Object.values(this.data.selectedRooms.options)\n                .flat()\n                .reduce((accumulator, value) => accumulator + value.itemPrice.listPrice, 0);\n\n            if (!this.selectRecommended) {\n                this.servicePrices = Object.values(this.data.selectedRooms.options)\n                    .flat()\n                    .map((e) => ({ price: e.itemPrice.listPrice, id: e.selectedRoom.roomOfferId }));\n            } else {\n                this.accommodation.rooms.map((room) => room.roomOffers.map((e) => (e.personCount = 0)));\n            }\n        }\n        this.currencyService.selectedCurrencySubject.subscribe((currency) => {\n            this.currency = currency.symbol;\n        });\n    }\n\n    public onBooking(): void {\n        this.accommodationDetailsUtilService.selectRecommended = this.selectRecommended;\n\n        if (this.selectRecommended) {\n            this.addRecommendedRoomToCart();\n        }\n\n        if (!this.data?.selectedRooms) {\n            this.modalService.dismiss(true);\n        } else {\n            this.accommodationDetailsUtilService.addAccommodationItemToCart(this.accommodation);\n        }\n    }\n\n    public roomCountChanged(): void {\n        this.roomsQuantity = AccommodationsUtilsService.getSelectedRoomQuantity(this.data.accommodation.rooms);\n        this.roomsLeftForSelection = this.data.roomsLeftForSelection - this.roomsQuantity;\n    }\n\n    public openTermsModal(roomOffer: RoomOption): void {\n        this.data.openTermsModal$.next(roomOffer);\n    }\n\n    getRecommendedRoomPrice(servicePrices: { price: number; recommendedRooms: RecommendedTzRooms[] }) {\n        this.data.accommodation.rooms.map((el) => el.roomOffers.map((e) => (e.personCount = 0)));\n        this.servicePrices = [];\n\n        this.selectRecommended = true;\n        this.roomCountChanged();\n\n        this.totalPrice = servicePrices.price;\n\n        this.roomsQuantity = servicePrices.recommendedRooms.length;\n    }\n\n    addRecommendedRoomToCart() {\n        const recommendedRooms: { [key: string]: number } = {};\n        let roomLeftToFind = this.data.accommodation.numberOfRooms;\n\n        let recOffers = this.data.accommodation.recommendedRooms;\n        if (this.userService.IsLogged() && this.data.accommodation.recOffersLoggedIn) {\n            recOffers = this.data.accommodation.recRoomsLoggedIn;\n        }\n\n        recOffers.forEach((r: { offerId: string | number; allotment: number }) => {\n            recommendedRooms[r.offerId] = r.allotment;\n        });\n\n        this.data.accommodation.rooms.some((room: { roomOffers: { id: PropertyKey; personCount: number }[] }) => {\n            room.roomOffers.some((offer: { id: any; personCount: number }) => {\n                if (recommendedRooms.hasOwnProperty(offer.id)) {\n                    const allotment = recommendedRooms[offer.id];\n                    offer.personCount = allotment;\n                    roomLeftToFind--;\n                }\n\n                return roomLeftToFind === 0;\n            });\n            return roomLeftToFind === 0;\n        });\n    }\n\n    getRoomPrice(servicePrices: { price: number; id: string }) {\n        if (this.servicePrices?.find((item) => item.id === servicePrices.id)) {\n            this.servicePrices = this.servicePrices.filter((value) => value.id !== servicePrices.id);\n        } else {\n            this.servicePrices.push(servicePrices);\n        }\n\n        this.selectRecommended = false;\n        this.totalPrice = this.servicePrices.reduce((accumulator, value) => accumulator + value.price, 0);\n    }\n}\n","<div class=\"main-bg-color\" [ngClass]=\"{ 'accommodations-rooms--selected-pb': roomsQuantity }\">\n    <div *ngIf=\"!data.accommodation.noRoom && data.accommodation.numberOfRooms > 1\" class=\"map-hidden\">\n        <div class=\"room-details__recommended-block\">\n            <div *ngIf=\"data.accommodation.numberOfRooms > 1\">\n                <tz-mob-accommodation-recommended\n                    [accommodation]=\"data.accommodation\"\n                    [selectRecommended]=\"selectRecommended\"\n                    (getRecommendedRoomPrice)=\"getRecommendedRoomPrice($event)\"\n                >\n                </tz-mob-accommodation-recommended>\n            </div>\n        </div>\n    </div>\n    <div class=\"room-details-container\" *ngFor=\"let room of accommodation.rooms; let i = index\" [id]=\"room.id\">\n        <div class=\"room-details-container__info-wrapper\">\n            <div class=\"room-details-container__displayName\">\n                {{ room.displayName }}\n            </div>\n\n            <div class=\"room-details-container__image\" data-test=\"room-details-container-image-carousel\">\n                <tz-image-slider\n                    class=\"room-details__slider\"\n                    [images]=\"room.images\"\n                    [imageProvider]=\"room.broker\"\n                    [showWarning]=\"room.showHotelTopImage\"\n                ></tz-image-slider>\n            </div>\n\n            <div\n                class=\"room-details-container__info-block\"\n                data-test=\"room-details-info-block\"\n                *ngIf=\"room.bedType || room.roomInfo || room.size || room.roomViews || room.facility1 || room.facility2\"\n            >\n                <div\n                    *ngIf=\"room.bedType\"\n                    class=\"room-details-container__info-item\"\n                    data-test=\"room-details-info-bed-type\"\n                >\n                    <span>-</span>\n                    <span class=\"room-details-container__info-text\">{{ room.bedType }}</span>\n                </div>\n                <div\n                    *ngIf=\"room.roomInfo\"\n                    class=\"room-details-container__info-item\"\n                    data-test=\"room-details-info-room-info\"\n                >\n                    <span>-</span>\n                    <span class=\"room-details-container__info-text\">{{ room.roomInfo }}</span>\n                </div>\n                <div\n                    *ngIf=\"room.size\"\n                    class=\"room-details-container__info-item\"\n                    data-test=\"room-details-info-room-size\"\n                >\n                    <span>-</span>\n                    <span class=\"room-details-container__info-text\">\n                        {{ 'HOTELS.ROOM_SIZE' | translate }}\n                        <span class=\"room-details-container__info-text\" [innerHTML]=\"room.size\"></span>\n                    </span>\n                </div>\n                <div\n                    *ngIf=\"room.roomViews\"\n                    class=\"room-details-container__info-item\"\n                    data-test=\"room-details-info-room-views\"\n                >\n                    <span>-</span>\n                    <span class=\"room-details-container__info-text\">{{ room.roomViews }}</span>\n                </div>\n                <div\n                    *ngIf=\"room.facility1\"\n                    class=\"room-details-container__info-item\"\n                    data-test=\"room-details-info-facility1\"\n                >\n                    <span>-</span>\n                    <span class=\"room-details-container__info-text\">{{ room.facility1 }}</span>\n                </div>\n                <div\n                    *ngIf=\"room.facility2\"\n                    class=\"room-details-container__info-item\"\n                    data-test=\"room-details-info-facility2\"\n                >\n                    <span>-</span>\n                    <span class=\"room-details-container__info-text\">{{ room.facility2 }}</span>\n                </div>\n            </div>\n\n            <div class=\"room-details-container__amenities-container\">\n                <div\n                    *ngFor=\"let amenity of room.amenities | sortArray: 'ordinal'\"\n                    class=\"room-details-container__amenity flex align-center\"\n                >\n                    <div class=\"inline-flex\">\n                        <tz-icon [icon]=\"amenity.icon\"></tz-icon>\n                    </div>\n\n                    <span [attr.data-test]=\"'hotel-room-convenience-' + amenity.description | translate\">\n                        {{ amenity.description | translate }}\n                    </span>\n                </div>\n            </div>\n        </div>\n\n        <div *ngFor=\"let roomOffer of room.roomOffers; let i = index\">\n            <div class=\"devider\"></div>\n            <tz-mob-accommodation-room-offer\n                [roomOption]=\"roomOffer\"\n                [roomPrice]=\"room.roomOffers[i].prices\"\n                [isUserLogged]=\"data.isUserLogged\"\n                [stayNumber]=\"data.numberOfNights\"\n                [maxRoomSelectionNumber]=\"roomsLeftForSelection\"\n                (roomCountChanged)=\"roomCountChanged()\"\n                (getRoomPrice)=\"getRoomPrice($event)\"\n                (openTermsModal)=\"openTermsModal(roomOffer)\"\n            >\n            </tz-mob-accommodation-room-offer>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"roomsQuantity\" class=\"tz-fixed-bottom accommodations-rooms-footer\" id=\"accommodationsRoomsFooter\">\n    <div class=\"room-detail-total-price\">\n        <div class=\"flex space-between align-center\">\n            <div class=\"total\">{{ 'GENERAL.TOTAL' | translate }}</div>\n            <div class=\"total-price\">{{ totalPrice | tzCurrency: currency }}</div>\n        </div>\n        <div class=\"room-total\">\n            {{ 'GENERAL.PRICE_FOR' | translate }}\n            {{ roomsQuantity }}\n            <span class=\"lowercase\"> {{ (roomsQuantity > 1 ? 'HOTELS.rOOMs' : 'HOTELS.rOOM') | translate }}</span\n            >, {{ accommodation.numberOfNights }}\n            {{ accommodation.numberOfNights > 1 ? ('HOTELS.NIGHTS' | translate) : ('HOTELS.night' | translate) }}\n            {{ ' | ' }}\n            {{ 'GENERAL.ALL_TAXES_INCLUDED' | translate }}\n        </div>\n    </div>\n\n    <button class=\"tz-btn tz-btn-primary confirm-Booking\" (click)=\"onBooking()\">\n        {{ 'GENERAL.CONFIRM' | translate }}\n    </button>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\n\n@Component({\n    selector: 'tz-mob-accommodation-who-stays-here',\n    templateUrl: './mob-accommodation-who-stays-here.component.html',\n    styleUrls: ['./mob-accommodation-who-stays-here.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobAccommodationWhoStaysHereComponent implements OnInit {\n    @Input() accommodationReviews!: AccommodationReviews | null | undefined;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"visitors-per-country-container\">\n    <div class=\"visitors-per-country-container__title\">{{ 'HOTELS.STAYS_HERE' | translate }}</div>\n\n    <div class=\"visitors-per-country-container__wrapper flex flex-column\">\n        <div\n            *ngFor=\"let review of accommodationReviews?.visitorsPerCountry?.slice(0, 5)\"\n            class=\"flex align-center visitors-per-country-container__item\"\n        >\n            <div [class]=\"'visitors-per-country__flag fflag ff-sm fflag-' + review.countryCode\"></div>\n            <div class=\"visitors-per-country-container__country\">{{ review.countryName }} -</div>\n            <div class=\"visitors-per-country-container__percentage\">&#160;&#160;{{ review.percentage | number }}%</div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\n\n@Component({\n    selector: 'tz-mob-accommodation-details',\n    templateUrl: './mob-accommodation-details.component.html',\n    styleUrls: ['./mob-accommodation-details.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobAccommodationDetailsComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n    @Input() accommodationReviews!: AccommodationReviews;\n    @Input() nearbyAttractions!: any;\n    @Output() showRooms = new EventEmitter<void>();\n\n    constructor() {}\n\n    public ngOnInit(): void {\n        this.nearbyAttractions = this.accommodation?.roomDetails?.nearByLocations;\n    }\n\n    public transformToMeters(distance: string): string {\n        const distanceVal = +distance.split('k')[0];\n        if (distanceVal < 1) {\n            return distanceVal * 1000 + 'm';\n        }\n        return distance;\n    }\n\n    public formatDistance(d: number): string {\n        return d < 0.1 ? Math.round(d * 1000) + 'm' : d.toFixed(1) + 'km';\n    }\n}\n","<tz-accommodation-image\n    [code]=\"accommodation.code\"\n    [giataId]=\"accommodation.giataID\"\n    [imageProvider]=\"accommodation.imageProvider\"\n    [hotelName]=\"accommodation.name\"\n    (showRooms)=\"showRooms.emit()\"\n></tz-accommodation-image>\n<div class=\"mob-accommodation-details-container\">\n    <div class=\"mob-accommodation-details-container__name flex space-between\">\n        <div class=\"hotel-name\">\n            <h3>{{ accommodation.name }}</h3>\n            <tz-stars [starWidth]=\"14\" [starHeight]=\"14\" [starCount]=\"accommodation.star\" [type]=\"3\"></tz-stars>\n        </div>\n\n        <tz-mob-accommodation-guest-rate\n            [rate]=\"accommodation.ratings.overAllRatingsFloat\"\n            [isHotelDetail]=\"true\"\n        ></tz-mob-accommodation-guest-rate>\n    </div>\n    <!--\n    <div class=\"mob-accommodation-details-container__address flex space-between\">\n        <div class=\"hotel-address-wrapper\">\n            <div class=\"hotel-address flex align-center\">\n                <tz-icon [icon]=\"'marker_transparent'\" class=\"accommodation__marker-transport\"></tz-icon>\n                {{ accommodation.address }}\n            </div>\n            <div class=\"accommodation__near-by-location-block\" data-test=\"location-block\">\n                <div\n                    *ngFor=\"let nearByLocation of accommodation.roomDetails.nearByLocations\"\n                    class=\"accommodation__near-by-location\"\n                    data-test=\"hotel-distance\"\n                >\n                    {{ nearByLocation.distance }}\n                    {{ 'HOTELS.FROM' | translate }}\n                    {{ nearByLocation.place }}\n                </div>\n            </div>\n        </div>\n        <div class=\"map text-center flex align-start\">\n            <tz-icon class=\"map-icon\" [icon]=\"'mob-map-icon'\"></tz-icon>\n            {{ 'Map' }}\n        </div>\n    </div> -->\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\n\n@Component({\n    selector: 'tz-mob-accommodation-popular-facilities',\n    templateUrl: './mob-accommodation-popular-facilities.component.html',\n    styleUrls: ['./mob-accommodation-popular-facilities.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobAccommodationPopularFacilitiesComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"popular-places-container flex flex-column\">\n    <div class=\"popular-places-container__title\">{{ 'HOTELS.POPULAR_FACILITIES' | translate }}</div>\n\n    <div class=\"popular-places-container__item-container\">\n        <div\n            *ngFor=\"let amenity of accommodation.amenities | sortArray: 'ordinal'\"\n            class=\"popular-places-container__item\"\n        >\n            <div class=\"inline-flex\">\n                <tz-icon [icon]=\"amenity.icon\" class=\"icon\"></tz-icon>\n            </div>\n\n            <span [attr.data-test]=\"'hotel-room-convenience-' + amenity.description | translate\">\n                {{ 'HOTELS.ICONS.' + amenity.description | translate }}\n            </span>\n        </div>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { MobAccommodationReviewsComponent } from '../mob-accommodation-reviews/mob-accommodation-reviews.component';\nimport { ModalService } from '@services/modal.service';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\n\n@Component({\n    selector: 'tz-mob-modal-page-link-block',\n    templateUrl: './mob-modal-page-link-block.component.html',\n    styleUrls: ['./mob-modal-page-link-block.component.scss'],\n})\nexport class MobModalPageLinkBlockComponent {\n    @Input() accommodation!: Accommodation;\n    @Input() accommodationReviews: AccommodationReviews | null | undefined;\n\n    constructor(private modalService: ModalService) {}\n\n    public showReviewsMob(): void {\n        this.modalService.createDetailsPage(MobAccommodationReviewsComponent, {\n            data: { accommodationReviews: this.accommodationReviews },\n            title: 'HOTELS.REVIEWS.RECENT',\n        });\n    }\n}\n","<div class=\"mob-modal-page-link-block\">\n    <tz-mob-modal-page-link (clicked)=\"showReviewsMob()\">\n        <div class=\"flex flex-center mob-modal-page-link-block__main\">\n            <tz-mob-accommodation-guest-rate\n                [rate]=\"accommodation.ratings.overAllRatingsFloat\"\n            ></tz-mob-accommodation-guest-rate>\n\n            <div class=\"\">\n                <span class=\"rating-text\">{{\n                    accommodation.ratings.overAllRatingsFloat | ratingToText | translate\n                }}</span>\n\n                <span class=\"rating-count\"> | {{ accommodation.ratings.overAllReviewCount }}</span>\n                <span class=\"rating-title\">{{ 'HOTELS.REVIEWS.REVIEWS' | translate }}</span>\n            </div>\n        </div>\n    </tz-mob-modal-page-link>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { AccommodationAmenities } from '@schemas/modules/accommodations/accommodiation-amenities.model';\nimport { AccommodationRatings } from '@schemas/modules/accommodations/accommodation-ratings.model';\n\n@Component({\n    selector: 'tz-accommodation-list-item-footer',\n    templateUrl: './accommodation-list-item-footer.component.html',\n    styleUrls: ['./accommodation-list-item-footer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccommodationListItemFooterComponent implements OnInit {\n    @Input() amenities: AccommodationAmenities[] = [];\n    @Input() overAllRatingsFloat!: number;\n    @Input() accommodationRatings!: AccommodationRatings;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"accommodation__description-block-footer\">\n    <div class=\"accommodation__description-icons-block\">\n        <div\n            *ngFor=\"let amenity of amenities | sortArray: 'ordinal' | slice: 0:7\"\n            class=\"accommodation__description-icon-block\"\n            placement=\"top\"\n            [attr.data-test]=\"'result-page-hotels-and-stays-hotel-services-' + amenity.description | translate\"\n            [ngbTooltip]=\"'HOTELS.ICONS.' + amenity.description | translate\"\n            tooltipClass=\"hotel-icons-tooltip\"\n        >\n            <tz-icon [icon]=\"amenity.icon\" className=\"accommodation__description-icon\"></tz-icon>\n        </div>\n    </div>\n\n    <div class=\"accommodation__rate-text\">\n        {{ overAllRatingsFloat | ratingToText | translate }}\n    </div>\n\n    <ng-template #popContent>\n        <div class=\"accommodation__category-rating-title\">\n            {{ 'HOTELS.REVIEWS.SCORE_BASED_ON' | translate: { reviewsCount: accommodationRatings.overAllReviewCount } }}\n        </div>\n\n        <div\n            *ngFor=\"let categoryRating of accommodationRatings.categoryRatings | sortArray: 'ordinal'\"\n            class=\"accommodation__category-rating\"\n            [style.width]=\"categoryRating.rating * 10 + '%'\"\n        >\n            <span class=\"accommodation__category-rating-text\">{{ categoryRating.ratingStr | number: '1.1-1' }}</span>\n            <span>{{ 'HOTELS.OLERY.RATING.' + categoryRating.category | translate }}</span>\n        </div>\n    </ng-template>\n    <div\n        class=\"accommodation__rate-number tz-btn-primary\"\n        data-test=\"hotel-rating-number\"\n        [autoClose]=\"false\"\n        [ngbPopover]=\"popContent\"\n        popoverClass=\"accommodation-category-rating-tooltip\"\n        triggers=\"mouseenter:mouseleave\"\n    >\n        {{ overAllRatingsFloat | number: '1.1-1' }}\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { AccommodationListItem } from '@schemas/modules/accommodations/accommodation.model';\nimport { ICartItemBookingOptionSelectedRoom } from '@schemas/modules/cart/cart-item-booking-option-selected-room';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { AccommodationRecOffersLoggedIn } from '@schemas/modules/accommodations/accommodation-rec-offers-logged-in.model';\n\n@Component({\n    selector: 'tz-accommodation-list-item-price-info-block',\n    templateUrl: './accommodation-list-item-price-info-block.component.html',\n    styleUrls: ['./accommodation-list-item-price-info-block.component.scss'],\n})\nexport class AccommodationListItemPriceInfoBlockComponent implements OnChanges {\n    @Input() accommodation!: AccommodationListItem;\n    @Input() cheapestOffer!: AccommodationRecOffersLoggedIn;\n    @Input() isMainBlock!: boolean;\n    @Input() selectable = true;\n    @Input() selectedBookingOptions: ICartSelectedItemBookingOption[] = [];\n    @Input() oldPrice = 0;\n    @Input() itemPrice = 0;\n    @Input() totalPersons = 0;\n\n    @Output() selectHotel: EventEmitter<void> = new EventEmitter<void>();\n\n    public cartRoom!: ICartItemBookingOptionSelectedRoom;\n\n    constructor() {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes['selectedBookingOptions'] &&\n            this.selectedBookingOptions.length === 1 &&\n            this.selectedBookingOptions[0].selectedRoom\n        ) {\n            this.cartRoom = this.selectedBookingOptions[0].selectedRoom;\n        }\n    }\n\n    onSelectHotel() {\n        this.selectHotel.emit();\n    }\n}\n","<div class=\"accommodation__price-block\">\n    <ng-container *ngIf=\"isMainBlock && !accommodation.noRoom\">\n        <div class=\"accommodation__price-text-block\">\n            <tz-svg-icon icon=\"hotel_service\" [styles]=\"{ 'width.px': 24 }\"></tz-svg-icon>\n            <div data-test=\"result-page-hotels-and-stays-hotel-price\" class=\"accommodation__price\">\n                {{ cheapestOffer.cheapestPrice.listPrice | tzCurrency: cheapestOffer.cheapestPrice.listPriceCur }}\n            </div>\n        </div>\n        <div class=\"accommodation__price-info-block accommodation__search-details\">\n            <div *ngIf=\"accommodation.numberOfRooms === 1\">\n                {{ 'GENERAL.PRICE_FOR' | translate }} {{ accommodation.numberOfNights }}\n                {{ accommodation.numberOfNights > 1 ? ('HOTELS.NIGHTS' | translate) : ('HOTELS.NIGHT' | translate) }},\n                {{ accommodation.numberOfGuests }}\n                {{ 'TRAVELLER.' + (accommodation.numberOfGuests > 1 ? 'PERSONS' : 'PERSON') | translate }}\n            </div>\n            <ng-container *ngIf=\"accommodation.numberOfRooms > 1\">\n                <div>\n                    {{ 'GENERAL.PRICE_FOR' | translate }} {{ accommodation.numberOfNights }}\n                    {{\n                        accommodation.numberOfNights > 1 ? ('HOTELS.NIGHTS' | translate) : ('HOTELS.NIGHT' | translate)\n                    }}\n                </div>\n                <div>\n                    {{ accommodation.numberOfGuests }}\n                    {{ 'TRAVELLER.' + (accommodation.numberOfGuests > 1 ? 'PERSONS' : 'PERSON') | translate }},\n                    {{ accommodation.numberOfRooms }}\n                    {{ 'HOTELS.ROOMS' | translate | lowercase }}\n                </div>\n            </ng-container>\n            <div>\n                {{ cheapestOffer.taxInfo | translate }}\n            </div>\n        </div>\n        <div\n            *ngIf=\"accommodation.numberOfRooms === 1\"\n            class=\"accommodation__price-info-block accommodation__room-info\"\n            data-test=\"hotels-and-stays-hotel-info\"\n        >\n            <div class=\"room-type\">{{ cheapestOffer.roomType }}</div>\n            <div\n                *ngIf=\"cheapestOffer.breakFastType\"\n                [class.accommodation__text-green]=\"\n                    cheapestOffer.breakFastTypeCode !== 'nomeal' && cheapestOffer.breakFastTypeCode !== 'RO'\n                \"\n            >\n                {{ cheapestOffer.breakFastType }}\n            </div>\n            <div *ngIf=\"accommodation.payAt\" class=\"accommodation__text-green\">{{ accommodation.payAt }}</div>\n            <div\n                *ngIf=\"cheapestOffer.cpType && cheapestOffer.cpType !== 'CANCELLATION.NonRefundable'\"\n                [class.accommodation__text-green]=\"cheapestOffer.cpType !== 'CANCELLATION.NonRefundable'\"\n            >\n                {{ cheapestOffer.cpType | translate }}\n            </div>\n\n            <div *ngIf=\"cheapestOffer.cpType === 'CANCELLATION.NonRefundable'\">\n                {{ cheapestOffer.cpType | translate }}\n            </div>\n        </div>\n\n        <div\n            *ngIf=\"cheapestOffer.roomsLeft <= 3 && cheapestOffer.roomsLeft > 0\"\n            class=\"accommodation__price-info-block accommodation__rooms-left\"\n        >\n            {{ 'HOTELS.ONLY' | translate }} {{ cheapestOffer.roomsLeft }}\n            {{ cheapestOffer.roomsLeft > 1 ? ('HOTELS.rOOMS' | translate) : ('HOTELS.rOOM' | translate) }}\n            {{ 'HOTELS.LEFT' | translate }}\n        </div>\n\n        <div class=\"accommodation__broker-block\" title=\"{{ accommodation.broker + ' ' + accommodation.giataID }}\">\n            {{ accommodation.broker }}\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!isMainBlock\">\n        <div class=\"accommodation__price-text-block\">\n            <tz-svg-icon icon=\"hotel_service\" [styles]=\"{ 'width.px': 24 }\"></tz-svg-icon>\n            <div class=\"accommodation__price flex align-center\" *ngIf=\"itemPrice > 0\">\n                <tz-price-change-tooltop *ngIf=\"oldPrice > 0\"></tz-price-change-tooltop>\n                <span *ngIf=\"oldPrice > 0\" class=\"service-old-price\">\n                    + {{ itemPrice - oldPrice | tzCurrency: cheapestOffer.cheapestPrice.listPriceCur }}\n                </span>\n                {{ itemPrice | tzCurrency: cheapestOffer.cheapestPrice.listPriceCur }}\n            </div>\n        </div>\n\n        <div class=\"accommodation__price-info-block accommodation__search-details\">\n            <div *ngIf=\"selectedBookingOptions.length === 1\">\n                {{ 'GENERAL.PRICE_FOR' | translate }} {{ accommodation.numberOfNights }}\n                {{ accommodation.numberOfNights > 1 ? ('HOTELS.NIGHTS' | translate) : ('HOTELS.NIGHT' | translate) }},\n                {{ totalPersons }} {{ 'TRAVELLER.' + (totalPersons > 1 ? 'PERSONS' : 'PERSON') | translate }}\n            </div>\n            <ng-container *ngIf=\"selectedBookingOptions.length > 1\">\n                <div>\n                    {{ 'GENERAL.PRICE_FOR' | translate }}\n                    {{ accommodation.numberOfNights }}\n                    {{\n                        accommodation.numberOfNights > 1 ? ('HOTELS.NIGHTS' | translate) : ('HOTELS.NIGHT' | translate)\n                    }}\n                </div>\n                <div>\n                    {{ totalPersons }} {{ 'TRAVELLER.' + (totalPersons > 1 ? 'PERSONS' : 'PERSON') | translate }},\n                    {{ selectedBookingOptions.length }} {{ 'HOTELS.ROOMS' | translate | lowercase }}\n                </div>\n            </ng-container>\n            <div>\n                {{ cheapestOffer.taxInfo | translate }}\n            </div>\n        </div>\n\n        <div\n            *ngIf=\"selectedBookingOptions.length === 1 && cartRoom\"\n            class=\"accommodation__price-info-block accommodation__room-info\"\n        >\n            <div>{{ cartRoom.roomType }}</div>\n\n            <div\n                *ngIf=\"cartRoom.selectedOffer.meal\"\n                [class.accommodation__text-green]=\"\n                    cartRoom.selectedOffer.mealTypeCode !== 'nomeal' && cartRoom.selectedOffer.mealTypeCode !== 'RO'\n                \"\n            >\n                {{ cartRoom.selectedOffer.meal }}\n            </div>\n\n            <div *ngIf=\"cartRoom.selectedOffer.payAt\" class=\"accommodation__text-green\">\n                {{ cartRoom.selectedOffer.payAt }}\n            </div>\n\n            <div\n                *ngIf=\"cartRoom.selectedOffer.roomCancellation.isFree\"\n                [class.accommodation__text-green]=\"cartRoom.selectedOffer.roomCancellation.isFree\"\n            >\n                {{ 'CANCELLATION.ALL_TIME_FREE' | translate }}\n            </div>\n            <div *ngIf=\"cartRoom.selectedOffer.roomCancellation.cancellationPolicy === 'Non-refundable'\">\n                {{ 'CANCELLATION.NON_REFUNDABLE' | translate }}\n            </div>\n        </div>\n    </ng-container>\n\n    <div class=\"accommodation__sold-out\" *ngIf=\"accommodation.noRoom\">\n        {{ (accommodation.unavailable ? 'HOTELS.UNAVAILABLE' : 'HOTELS.SOLD_OUT') | translate }}\n    </div>\n\n    <div *ngIf=\"isMainBlock && selectable\" class=\"accommodation__select-btn-block\">\n        <button\n            class=\"accommodation__select-btn tz-btn tz-btn-primary tz-btn--select\"\n            data-test=\"result-page-hotels-and-stays-hotel-check-availability\"\n            (click)=\"onSelectHotel()\"\n        >\n            {{ (accommodation.noRoom ? 'HOTELS.SEE_DETAILS' : 'HOTELS.CHECK_AVAILABILITY') | translate }}\n        </button>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AccommodationListItem } from '@schemas/modules/accommodations/accommodation.model';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { AccommodationRecOffersLoggedIn } from '@schemas/modules/accommodations/accommodation-rec-offers-logged-in.model';\nimport { BestValType } from '@schemas/modules/search/search';\nimport { ResultsTools } from '@services/modules/results/services/tools.shared.services';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Component({\n    selector: 'tz-accommodation-list-item',\n    templateUrl: './accommodation-list-item.component.html',\n    styleUrls: ['./accommodation-list-item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccommodationListItemComponent implements OnInit {\n    @Input() accommodation!: AccommodationListItem;\n    @Input() cheapest!: AccommodationRecOffersLoggedIn;\n    @Input() selectedBookingOptions: ICartSelectedItemBookingOption[] = [];\n    @Input() accommodationType: 'main' | 'selected' | 'myTrip' = 'main';\n    @Input() selectable = true;\n    @Input() serviceList = false;\n    @Input() oldPrice = 0;\n    @Input() isSelected = false;\n    @Input() itemPrice = 0;\n    @Input() totalPersons = 0;\n    @Output() selectHotel: EventEmitter<void> = new EventEmitter<void>();\n    @Output() openAccommodationInMap: EventEmitter<AccommodationListItem> = new EventEmitter<AccommodationListItem>();\n    public bestValType: BestValType | undefined;\n\n    constructor() {}\n\n    get isMainBlock(): boolean {\n        return this.accommodationType === 'main';\n    }\n\n    ngOnInit(): void {\n        if (this.accommodation && this.accommodation.bestValType) {\n            this.bestValType = ResultsTools.getBestValType(this.accommodation.bestValType, ServiceId.ACC);\n        }\n    }\n\n    public truncateWithEllipses(text: string) {\n        return text.substr(0, 40) + (text.length > 40 ? '...' : '');\n    }\n\n    public onSelectHotel() {\n        if (this.accommodationType !== 'myTrip') {\n            this.selectHotel.emit();\n        }\n    }\n\n    public openInMap(): void {\n        this.openAccommodationInMap.emit(this.accommodation);\n    }\n}\n","<div\n    class=\"accommodation-container accommodation\"\n    *ngIf=\"accommodation\"\n    [ngClass]=\"{\n        'tz-selected-service-list': serviceList && isSelected,\n        'accommodation-container-lit-item': selectable || accommodationType === 'myTrip'\n    }\"\n    (click)=\"onSelectHotel()\"\n>\n    <div *ngIf=\"bestValType && accommodation.roomsLeft >= 0\" class=\"recommended-block\">\n        <div class=\"recommended-block__content hotel-block\">\n            <tz-recommended-list-tem-description [bestValType]=\"bestValType\"></tz-recommended-list-tem-description>\n        </div>\n    </div>\n\n    <div class=\"tz-block-with-border flex\" data-test=\"result-page-hotels-and-stays-hotel-container\">\n        <div class=\"accommodation__content\">\n            <div class=\"accommodation__slider-block\">\n                <tz-image-slider\n                    [images]=\"accommodation.imageURLs\"\n                    [giataId]=\"accommodation.giataID\"\n                    [imageProvider]=\"accommodation.imageProvider\"\n                ></tz-image-slider>\n\n                <!--                <div class=\"recommended\" *ngIf=\"accommodation && isMainBlock\">-->\n                <!--                    <tz-recommended-list-tem-description alignType=\"left\"></tz-recommended-list-tem-description>-->\n                <!--                </div>-->\n            </div>\n\n            <div class=\"accommodation__description-block\">\n                <h3 data-test=\"result-page-hotels-and-stays-hotel-name\" class=\"accommodation__title\">\n                    {{ truncateWithEllipses(accommodation.name) }}\n                    <tz-stars\n                        *ngIf=\"accommodation.star\"\n                        [starCount]=\"accommodation.star\"\n                        className=\"accommodation-title-stars\"\n                    ></tz-stars>\n                </h3>\n\n                <div\n                    class=\"accommodation__address-block\"\n                    [class.accommodation__address-block-text--selected]=\"!isMainBlock\"\n                >\n                    <div\n                        data-test=\"result-page-hotels-and-stays-hotel-address\"\n                        class=\"accommodation__address-block-text\"\n                        (click)=\"openInMap(); $event.stopPropagation()\"\n                    >\n                        {{ accommodation.address }}\n                    </div>\n                    <div\n                        *ngIf=\"isMainBlock\"\n                        data-test=\"result-page-hotels-and-stays-hotel-show-on-map\"\n                        class=\"accommodation__address-block-map-text\"\n                    >\n                        <div class=\"inline-flex\" (click)=\"openInMap(); $event.stopPropagation()\">\n                            &nbsp;—&nbsp;{{ 'GENERAL.SHOW_ON_MAP' | translate }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"accommodation__near-by-location-block\" data-test=\"location-block\">\n                    <div\n                        *ngFor=\"let nearByLocation of accommodation.roomDetails.nearByLocations\"\n                        class=\"accommodation__near-by-location\"\n                        data-test=\"hotel-distance\"\n                    >\n                        {{ nearByLocation.distance }}\n                        {{ 'HOTELS.FROM' | translate }}\n                        {{ nearByLocation.place }}\n                    </div>\n                </div>\n\n                <div\n                    *ngIf=\"accommodation.hotelFacilities && accommodation.hotelFacilities.length > 1\"\n                    class=\"accommodation__hotel-facilities\"\n                >\n                    <div\n                        *ngFor=\"let hotelFacilitie of accommodation.hotelFacilities\"\n                        class=\"accommodation__hotel-facilitie\"\n                    >\n                        {{ 'HOTELS.OLERY.' + hotelFacilitie.title.toLowerCase() | translate }}\n                    </div>\n                </div>\n\n                <div\n                    class=\"accommodation__room-details-block\"\n                    *ngIf=\"\n                        accommodation.roomDetails &&\n                        accommodation.roomDetails.summary &&\n                        accommodation.roomDetails.summary.length\n                    \"\n                >\n                    <div\n                        *ngFor=\"\n                            let summary of accommodation.roomDetails.summary\n                                | filterArray\n                                    : {\n                                          sentiment: 'positive'\n                                      }\n                        \"\n                        class=\"accommodation__room-details-item\"\n                    >\n                        {{ 'HOTELS.OLERY.' + summary.name.toLowerCase() | translate }}\n                    </div>\n                    <div\n                        *ngFor=\"\n                            let summary of accommodation.roomDetails.summary\n                                | filterArray\n                                    : {\n                                          sentiment: 'negative'\n                                      }\n                        \"\n                        class=\"accommodation__room-details-item room-detail room-detail-negative\"\n                    >\n                        {{ 'HOTELS.OLERY.' + summary.name.toLowerCase() | translate }}\n                    </div>\n                </div>\n\n                <div\n                    class=\"accommodation__checkin-checkout\"\n                    data-test=\"accommodation-date-time\"\n                    *ngIf=\"!serviceList && accommodation.checkIn && accommodation.checkOut\"\n                >\n                    <p>\n                        {{ accommodation.checkIn | tzDate: 'shortDateMonth' }} •\n                        {{ accommodation.checkIn | tzDate: 'shortTime' }}\n                        {{ 'HOTELS.CHECK_IN' | translate }}\n                    </p>\n                    <p>\n                        {{ accommodation.checkOut | tzDate: 'shortDateMonth' }} •\n                        {{ accommodation.checkOut | tzDate: 'shortTime' }}\n                        {{ 'HOTELS.CHECK_OUT' | translate }}\n                    </p>\n                </div>\n\n                <tz-accommodation-list-item-footer\n                    [amenities]=\"accommodation.amenities\"\n                    [overAllRatingsFloat]=\"accommodation.ratings.overAllRatingsFloat\"\n                    [accommodationRatings]=\"accommodation.ratings\"\n                ></tz-accommodation-list-item-footer>\n            </div>\n        </div>\n\n        <tz-accommodation-list-item-price-info-block\n            [accommodation]=\"accommodation\"\n            [cheapestOffer]=\"cheapest\"\n            [selectedBookingOptions]=\"selectedBookingOptions\"\n            [isMainBlock]=\"isMainBlock\"\n            [selectable]=\"selectable\"\n            (selectHotel)=\"onSelectHotel()\"\n            [oldPrice]=\"oldPrice\"\n            [itemPrice]=\"itemPrice\"\n            [totalPersons]=\"totalPersons\"\n        ></tz-accommodation-list-item-price-info-block>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Accommodation, AccommodationSummary } from '@schemas/modules/accommodations/accommodation';\n\n@Component({\n    selector: 'tz-mob-accommodation-advantages-disadvantages',\n    templateUrl: './mob-accommodation-advantages-disadvantages.component.html',\n    styleUrls: ['./mob-accommodation-advantages-disadvantages.component.scss'],\n})\nexport class MobAccommodationAdvantagesDisadvantagesComponent implements OnInit {\n    @Input() accommodation!: Accommodation;\n    public summaryList!: AccommodationSummary[];\n\n    public ngOnInit(): void {\n        this.summaryList = this.accommodation.roomDetails.summary;\n    }\n}\n","<div class=\"mob-accommodation-advantages-disadvantages\" *ngIf=\"summaryList?.length\">\n    <p class=\"mob-accommodation-advantages-disadvantages__title\">{{ 'HOTELS.SUMMARY' | translate }}</p>\n\n    <div class=\"summery-list\">\n        <span\n            class=\"summery-item\"\n            [ngClass]=\"{ negative: summary.sentiment === 'negative' }\"\n            *ngFor=\"let summary of summaryList | sortSummary\"\n        >\n            <span class=\"summery-item__name\">{{ summary.name }}</span>\n        </span>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\n\n@Component({\n    selector: 'tz-mob-accommodation-selected-room-details',\n    templateUrl: './mob-accommodation-selected-room-details.component.html',\n    styleUrls: ['./mob-accommodation-selected-room-details.component.scss'],\n})\nexport class MobAccommodationSelectedRoomDetailsComponent implements OnInit {\n    @Input() public selectedRoom!: ICartSelectedItemBookingOption;\n    @Input() public accommodation!: Accommodation;\n    @Input() public actionsButtons: string[] = [];\n    @Input() public selectedRoomQuantity = 0;\n    @Output() public removeRoomOption: EventEmitter<string> = new EventEmitter();\n    public numberOfNights!: number;\n    public room!: Room | undefined;\n\n    constructor(private cartService: CartService) {}\n\n    public ngOnInit(): void {\n        this.initData();\n    }\n\n    public removeOption(id: string): void {\n        this.removeRoomOption.emit(id);\n    }\n\n    private initData(): void {\n        this.room = this.accommodation.rooms.find((room: Room) => room.id === this.selectedRoom.selectedRoom?.roomId);\n        this.numberOfNights = this.cartService.getCartData(ServiceId.ACC).items[0].selectedItem.data.numberOfNights;\n    }\n}\n","<div class=\"main-bg-color\" *ngIf=\"room\">\n    <div class=\"room-details-container\" [id]=\"room.id\">\n        <div class=\"room-details-container__displayName\">\n            {{ room.displayName }}\n        </div>\n\n        <tz-mob-accommodation-details-room-main-info\n            *ngIf=\"selectedRoomQuantity < 2\"\n            [room]=\"room\"\n        ></tz-mob-accommodation-details-room-main-info>\n\n        <tz-mob-accommodation-details-room-offer\n            [isSelected]=\"true\"\n            [actionsButtons]=\"actionsButtons\"\n            [roomOffer]=\"(selectedRoom?.selectedRoom)!.selectedOffer\"\n        ></tz-mob-accommodation-details-room-offer>\n\n        <tz-cart-item-actions-bar\n            (remove)=\"removeOption((selectedRoom?.selectedRoom)!.selectedOffer.id)\"\n            [buttons]=\"actionsButtons\"\n            [status]=\"2\"\n        ></tz-cart-item-actions-bar>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CartRemoveService } from '@services/modules/cart/services/cart-remove-service';\nimport { ICartSelectedItem } from '@schemas/modules/cart/cart-selected-item';\n\n@Component({\n    selector: 'tz-mob-accommodation-selected-room-list',\n    templateUrl: './mob-accommodation-selected-room-list.component.html',\n    styleUrls: ['./mob-accommodation-selected-room-list.component.scss'],\n})\nexport class MobAccommodationSelectedRoomListComponent implements OnInit {\n    @Input() public accommodation!: Accommodation;\n    @Input() public selectedItem!: ICartSelectedItem;\n    @Input() public actionsButtons: string[] = [];\n    @Input() public selectedRoomsData!: { rooms: Room[]; options: { [key: number]: ICartSelectedItemBookingOption[] } };\n    public selectedOptionsList!: ICartSelectedItemBookingOption[];\n    private servTypes = ServiceId;\n\n    constructor(private cartService: CartService, private cartRemoveService: CartRemoveService) {}\n\n    public ngOnInit(): void {\n        this.initData();\n    }\n\n    public removeRoomOption(id: string): void {\n        this.cartRemoveService.removeTheService(this.servTypes.ACC, id, true).then(\n            (isRemoved: boolean) => {\n                if (isRemoved) {\n                    this.selectedOptionsList = this.cartService\n                        .getCartData(ServiceId.ACC)\n                        .items.find((service: ICartItem) => service.dataType === 'hotel')?.selectedItem.bookingOptions;\n                }\n            },\n            (error) => {\n                console.error(error);\n            }\n        );\n    }\n\n    private initData(): void {\n        this.selectedOptionsList = this.selectedItem.bookingOptions;\n    }\n}\n","<div class=\"mob-accommodation-selected-room-list\" *ngIf=\"selectedOptionsList\">\n    <div class=\"mob-accommodation-selected-room-list__selected-rooms selected-rooms\">\n        <span class=\"selected-rooms__text\">\n            {{ 'HOTELS.' + (selectedOptionsList!.length > 1 ? 'SELECTED_ROOMS' : 'SELECTED_ROOMS') | translate }}\n        </span>\n    </div>\n\n    <div class=\"selected-room-details-container\">\n        <tz-mob-accommodation-selected-room-details\n            *ngFor=\"let bookingOption of selectedOptionsList\"\n            [selectedRoom]=\"bookingOption\"\n            [selectedRoomQuantity]=\"selectedOptionsList.length\"\n            [accommodation]=\"accommodation\"\n            [actionsButtons]=\"actionsButtons\"\n            (removeRoomOption)=\"removeRoomOption(bookingOption.optionId)\"\n        ></tz-mob-accommodation-selected-room-details>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { AccommodationListItem } from '@schemas/modules/accommodations/accommodation.model';\nimport { ICartItemBookingOptionSelectedRoom } from '@schemas/modules/cart/cart-item-booking-option-selected-room';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { AccommodationRecOffersLoggedIn } from '@schemas/modules/accommodations/accommodation-rec-offers-logged-in.model';\nimport { TzServiceTabs } from '../../../tabsUtils/tz-tabs-service';\nimport { AccommodationsService } from '@services/modules/accommodations/services/accommodations.service';\n\n@Component({\n    selector: 'tz-mob-accommodations-list-item',\n    templateUrl: './mob-accommodations-list-item.component.html',\n    styleUrls: ['./mob-accommodations-list-item.component.scss'],\n})\nexport class MobAccommodationsListItemComponent implements OnChanges, OnInit {\n    @Input() accommodation!: AccommodationListItem;\n    @Input() summary = false;\n    @Input() serviceList = false;\n    @Input() cheapest!: AccommodationRecOffersLoggedIn;\n    @Input() selectedBookingOptions: ICartSelectedItemBookingOption[] = [];\n    @Input() itemPrice = 0;\n    @Input() totalPersons = 0;\n    @Input() oldPrice = 0;\n    @Output() selectHotel: EventEmitter<void> = new EventEmitter<void>();\n\n    public changedPriceDiff = '';\n    public cartRoom!: ICartItemBookingOptionSelectedRoom;\n    public isShowAddress = true;\n    public isShowReview = true;\n\n    constructor(private serviceTabs: TzServiceTabs, private accommodationsService: AccommodationsService) {}\n\n    public ngOnInit(): void {\n        this.initData();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes['selectedBookingOptions'] &&\n            this.selectedBookingOptions.length === 1 &&\n            this.selectedBookingOptions[0].selectedRoom\n        ) {\n            this.cartRoom = this.selectedBookingOptions[0].selectedRoom;\n        }\n    }\n\n    public starsArray(i: number): number[] {\n        return new Array(i);\n    }\n\n    public onSelectHotel(): void {\n        this.selectHotel.emit();\n    }\n\n    private initData(): void {\n        if (this.oldPrice > 0) {\n            this.changedPriceDiff = this.serviceTabs.updatePriceChanging(this.oldPrice, this.itemPrice);\n        }\n    }\n}\n","<div\n    class=\"accommodation-item-container flex ion-justify-content-between\"\n    [ngClass]=\"{ 'basket-page': summary, 'tz-mob-selected-inner-border': serviceList }\"\n    (click)=\"onSelectHotel()\"\n>\n    <div class=\"accommodation-item-container__image-wrapper\" [ngClass]=\"{ 'has-outline': serviceList }\">\n        <tz-image-slider\n            [images]=\"accommodation.imageURLs\"\n            [giataId]=\"accommodation.giataID\"\n            [imageProvider]=\"accommodation.imageProvider\"\n        ></tz-image-slider>\n    </div>\n\n    <div class=\"accommodation-item-container__info-wrapper flex flex-column space-between\">\n        <div class=\"name-review-container\">\n            <div class=\"name\">\n                <span class=\"name__text\">\n                    {{ accommodation.name }}\n                </span>\n                <div class=\"hotel-stars\">\n                    <tz-svg-icon\n                        *ngFor=\"let star of starsArray(accommodation.star)\"\n                        icon=\"star_acc\"\n                        [mobile]=\"true\"\n                    ></tz-svg-icon>\n                </div>\n            </div>\n            <div class=\"review-container\" *ngIf=\"isShowReview\">\n                <div class=\"rate\">{{ accommodation.ratings.overAllRatingsFloat | number: '1.1-1' }}</div>\n                <div class=\"rate-text\">\n                    {{ accommodation.ratings.overAllRatingsFloat | ratingToText | translate }}\n                </div>\n                <div class=\"review-count\">\n                    <span class=\"text-vertical-divider\">&nbsp;|&nbsp;</span\n                    >{{ accommodation.ratings.overAllReviewCount }}\n                    {{ 'HOTELS.REVIEWS.REVIEWS' | translate }}\n                </div>\n            </div>\n\n            <div class=\"address\" *ngIf=\"isShowAddress\">\n                {{ accommodation.address }}\n                <ng-container\n                    *ngFor=\"let nearByLocation of accommodation.roomDetails.nearByLocations; let first = first\"\n                >\n                    <span class=\"text-vertical-divider\">|</span>\n                    {{ nearByLocation.distance }}\n                    {{ 'HOTELS.FROM' | translate }}\n                    {{ nearByLocation.place }}\n                </ng-container>\n            </div>\n\n            <div class=\"checkin-checkout-dates\" *ngIf=\"summary && accommodation.checkIn && accommodation.checkOut\">\n                <div class=\"checkin-checkout-dates__in\">\n                    <div class=\"date-label\">{{ 'HOTELS.CHECK_IN' | translate }}:&nbsp;</div>\n                    <div class=\"date-text\">\n                        {{ accommodation.checkIn | tzDate: 'mediumDate'\n                        }}<span class=\"text-vertical-divider\">&nbsp;|&nbsp;</span\n                        >{{ accommodation.checkIn | tzDate: 'shortTime' }}\n                    </div>\n                </div>\n                <div class=\"checkin-checkout-dates__out\">\n                    <div class=\"date-label\">{{ 'HOTELS.CHECK_OUT' | translate }}:&nbsp;</div>\n                    <div class=\"date-text\">\n                        {{ accommodation.checkOut | tzDate: 'mediumDate'\n                        }}<span class=\"text-vertical-divider\">&nbsp;|&nbsp;</span\n                        >{{ accommodation.checkOut | tzDate: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div\n            class=\"footer-container\"\n            [ngClass]=\"{ 'more-than-one-room': cheapest.roomType, 'has-outline': serviceList }\"\n        >\n            <ng-container *ngIf=\"summary; else resultContent\">\n                <div\n                    class=\"footer-container__main-info\"\n                    [ngClass]=\"{ 'has-outline': selectedBookingOptions.length > 1 && serviceList }\"\n                >\n                    <div class=\"price_wrapper\">\n                        <tz-mob-price-changed-block\n                            *ngIf=\"oldPrice > 0\"\n                            class=\"mob-price-changed-block\"\n                        ></tz-mob-price-changed-block>\n                        <span class=\"price\">\n                            <span class=\"mob-price-change-diff\" *ngIf=\"oldPrice > 0\">{{ changedPriceDiff }}</span\n                            >{{ itemPrice | tzCurrency: cheapest.cheapestPrice.listPriceCur }}\n                        </span>\n                    </div>\n                    <div class=\"per-room-info\" *ngIf=\"selectedBookingOptions.length > 1\">\n                        {{ 'GENERAL.PRICE_FOR' | translate }}\n                        {{ selectedBookingOptions.length }} {{ 'HOTELS.ROOMS' | translate | lowercase }},\n                        <span *ngIf=\"totalPersons\"\n                            >{{ totalPersons }}\n                            {{ 'TRAVELLER.' + (totalPersons > 1 ? 'PEOPLE' : 'PERSON') | translate }},</span\n                        >\n                        {{ accommodation.numberOfNights }}\n                        {{\n                            accommodation.numberOfNights > 1\n                                ? ('HOTELS.NIGHTS' | translate)\n                                : ('HOTELS.NIGHT' | translate)\n                        }}\n                    </div>\n\n                    <div class=\"per-room-info\" *ngIf=\"selectedBookingOptions.length === 1 && cartRoom\">\n                        <span>{{ 'GENERAL.PRICE_FOR' | translate }}</span>\n                        <span>{{ accommodation.numberOfRooms }}&nbsp;</span>\n                        <span\n                            >{{\n                                accommodation.numberOfRooms > 1\n                                    ? ('HOTELS.rOOMS' | translate)\n                                    : ('HOTELS.rOOM' | translate)\n                            }},&nbsp;</span\n                        >\n                        <span>{{ accommodation.numberOfGuests }}&nbsp;</span>\n                        <span\n                            >{{\n                                accommodation.numberOfGuests > 1\n                                    ? ('TRAVELLER.PEOPLE' | translate)\n                                    : ('HOTELS.PERSON' | translate)\n                            }},&nbsp;</span\n                        >\n                        <span>{{ accommodation.numberOfNights }}</span>\n                        <span>{{\n                            accommodation.numberOfNights > 1\n                                ? ('HOTELS.NIGHTS' | translate)\n                                : ('HOTELS.NIGHT' | translate)\n                        }}</span>\n                    </div>\n                </div>\n\n                <ng-container *ngIf=\"selectedBookingOptions.length === 1 && cartRoom\">\n                    <div class=\"room-type\" *ngIf=\"!!cartRoom.roomType\">{{ cartRoom.roomType }}</div>\n                    <div class=\"important-info flex flex-column\" [ngClass]=\"{ 'has-outline': serviceList }\">\n                        <div\n                            *ngIf=\"cartRoom.selectedOffer.meal\"\n                            [class.important-info__text-green]=\"\n                                cartRoom.selectedOffer.mealTypeCode !== 'nomeal' &&\n                                cartRoom.selectedOffer.mealTypeCode !== 'RO'\n                            \"\n                        >\n                            {{ cartRoom.selectedOffer.meal }}\n                        </div>\n                        <div *ngIf=\"cartRoom.selectedOffer.payAt\" class=\"important-info__text-green\">\n                            {{ cartRoom.selectedOffer.payAt }}\n                        </div>\n                        <div\n                            *ngIf=\"cartRoom.selectedOffer.roomCancellation.isFree\"\n                            [class.important-info__text-green]=\"cartRoom.selectedOffer.roomCancellation.isFree\"\n                        >\n                            {{ 'CANCELLATION.ALL_TIME_FREE' | translate }}\n                        </div>\n                        <div *ngIf=\"cartRoom.selectedOffer.roomCancellation.cancellationPolicy === 'Non-refundable'\">\n                            {{ 'CANCELLATION.NON_REFUNDABLE' | translate }}\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n            <ng-template #resultContent>\n                <div class=\"footer-container__main-info\">\n                    <div class=\"price_wrapper\">\n                        <span *ngIf=\"cheapest.roomsLeft <= 3 && cheapest.roomsLeft > 0\" class=\"rooms-left\">\n                            {{ 'HOTELS.ONLY' | translate }}\n                            {{ cheapest.roomsLeft }}\n                            {{ cheapest.roomsLeft > 1 ? ('HOTELS.rOOMS' | translate) : ('HOTELS.rOOM' | translate) }}\n                            {{ 'HOTELS.LEFT' | translate }}\n                        </span>\n                        <span class=\"price\">\n                            {{ cheapest.cheapestPrice.listPrice | tzCurrency: cheapest.cheapestPrice.listPriceCur }}\n                        </span>\n                    </div>\n                    <div class=\"per-room-info\">\n                        <ng-container *ngIf=\"cheapest.numberOfRooms === 1\">\n                            {{ 'GENERAL.PRICE_FOR' | translate }}\n                            {{ accommodation.numberOfNights }}\n                            {{\n                                accommodation.numberOfNights > 1\n                                    ? ('HOTELS.NIGHTS' | translate)\n                                    : ('HOTELS.NIGHT' | translate)\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"cheapest.numberOfRooms > 1\">\n                            {{ 'GENERAL.PRICE_FOR' | translate }}\n                            {{ cheapest.numberOfRooms }} {{ 'HOTELS.ROOMS' | translate | lowercase }},\n                            {{ accommodation.numberOfGuests }}\n                            {{ 'TRAVELLER.' + (accommodation.numberOfGuests > 1 ? 'PEOPLE' : 'PERSON') | translate }},\n                            {{ accommodation.numberOfNights }}\n                            {{\n                                accommodation.numberOfNights > 1\n                                    ? ('HOTELS.NIGHTS' | translate)\n                                    : ('HOTELS.NIGHT' | translate)\n                            }}\n                        </ng-container>\n                    </div>\n                </div>\n\n                <ng-container *ngIf=\"accommodation.numberOfRooms < 2\">\n                    <div class=\"room-type\">{{ cheapest.roomType }}</div>\n                    <div class=\"important-info flex flex-column\" [ngClass]=\"{ 'has-outline': serviceList }\">\n                        <div\n                            *ngIf=\"cheapest.breakFastType\"\n                            [class.important-info__text-green]=\"\n                                cheapest.breakFastTypeCode !== 'nomeal' && cheapest.breakFastTypeCode !== 'RO'\n                            \"\n                        >\n                            {{ cheapest.breakFastType }}\n                        </div>\n\n                        <div\n                            *ngIf=\"cheapest.cpType && cheapest.cpType !== 'CANCELLATION.NonRefundable'\"\n                            [class.important-info__text-green]=\"cheapest.cpType !== 'CANCELLATION.NonRefundable'\"\n                        >\n                            {{ cheapest.cpType | translate }}\n                        </div>\n\n                        <div *ngIf=\"cheapest.cpType === 'CANCELLATION.NonRefundable'\">\n                            {{ cheapest.cpType | translate }}\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-template>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { AccommodationsDataService } from '@services/modules/accommodations/dataservices/accommodations.data.service';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\nimport { Observable } from 'rxjs';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { ModalService } from '@services/modal.service';\n// eslint-disable-next-line max-len\nimport { MobAccommodationAmenitiesComponent } from '../../../accommodation/components/mob-accommodation-amenities/mob-accommodation-amenities.component';\nimport { BookingSummary } from '@schemas/modules/bookings/booking-summary';\n\n@Component({\n    selector: 'tz-mob-selected-accommodation-details',\n    templateUrl: './mob-selected-accommodation-details.component.html',\n    styleUrls: ['./mob-selected-accommodation-details.component.scss'],\n})\nexport class MobSelectedAccommodationDetailsComponent implements OnInit {\n    public accommodationCartData!: Accommodation;\n    public selectedHotel!: ICartItem;\n    public cart!: any;\n    public accommodationReviews$!: Observable<AccommodationReviews>;\n    public selectedRoomsData: { rooms: Room[]; options: { [key: number]: ICartSelectedItemBookingOption[] } } = {\n        rooms: [],\n        options: {},\n    };\n    private data!: {\n        accommodationCartData: Accommodation;\n        selectedRooms: { rooms: Room[]; options: { [key: number]: ICartSelectedItemBookingOption[] } };\n        bookingSummary: BookingSummary;\n    };\n\n    constructor(\n        private accommodationsDataService: AccommodationsDataService,\n        private cartService: CartService,\n        private modalService: ModalService\n    ) {}\n\n    public ngOnInit(): void {\n        this.initData();\n    }\n\n    public showAmenities(): void {\n        this.modalService.createMainModal(MobAccommodationAmenitiesComponent, {\n            data: this.accommodationCartData.amenityGroups,\n            title: 'HOTELS.AMENITIES',\n        });\n    }\n\n    public showPropertyPolicies(): void {}\n\n    public importantInformation(): void {}\n\n    private initData(): void {\n        this.accommodationCartData = this.data.accommodationCartData;\n        this.accommodationReviews$ = this.accommodationsDataService.getAccommodationReviews(this.accommodationCartData);\n        this.selectedRoomsData = this.data.selectedRooms;\n        this.cart = this.data.bookingSummary.cart;\n\n        this.selectedHotel = this.cartService\n            .getCartData(ServiceId.ACC, this.cart)\n            .items.find((service: ICartItem) => service.dataType === 'hotel');\n    }\n}\n","<div class=\"mob-selected-accommodation-details\">\n    <tz-mob-accommodation-details [accommodation]=\"accommodationCartData\"></tz-mob-accommodation-details>\n\n    <tz-mob-accommodation-guest-info [accommodation]=\"accommodationCartData\"></tz-mob-accommodation-guest-info>\n\n    <tz-mob-accommodation-advantages-disadvantages\n        [accommodation]=\"accommodationCartData\"\n    ></tz-mob-accommodation-advantages-disadvantages>\n\n    <tz-mob-accommodation-popular-facilities\n        [accommodation]=\"accommodationCartData\"\n    ></tz-mob-accommodation-popular-facilities>\n\n    <tz-mob-accommodation-who-stays-here\n        *ngIf=\"accommodationReviews$ | async as accommodationReviews\"\n        [accommodationReviews]=\"accommodationReviews\"\n    ></tz-mob-accommodation-who-stays-here>\n\n    <tz-mob-modal-page-link-block\n        [accommodationReviews]=\"accommodationReviews$ | async\"\n        [accommodation]=\"accommodationCartData\"\n    ></tz-mob-modal-page-link-block>\n\n    <tz-mob-accommodation-rating [accommodation]=\"accommodationCartData\"></tz-mob-accommodation-rating>\n\n    <tz-mob-accommodation-description [accommodation]=\"accommodationCartData\"></tz-mob-accommodation-description>\n\n    <tz-mob-accommodation-selected-room-list\n        *ngIf=\"selectedHotel?.selectedItem\"\n        [actionsButtons]=\"['remove']\"\n        [accommodation]=\"accommodationCartData\"\n        [selectedRoomsData]=\"selectedRoomsData\"\n        [selectedItem]=\"selectedHotel.selectedItem\"\n    ></tz-mob-accommodation-selected-room-list>\n\n    <tz-mob-modal-page-link class=\"modal-page-amenities\" (clicked)=\"showAmenities()\" [isMobileIcon]=\"true\">\n        {{ 'HOTELS.AMENITIES' | translate }}\n    </tz-mob-modal-page-link>\n\n    <tz-mob-accommodation-map [accommodation]=\"accommodationCartData\"></tz-mob-accommodation-map>\n\n    <tz-mob-accommodation-nearby\n        *ngIf=\"accommodationReviews$ | async as accommodationReviews\"\n        [accommodationReviews]=\"accommodationReviews\"\n    ></tz-mob-accommodation-nearby>\n\n    <tz-mob-modal-page-link class=\"show-property-policies\" (clicked)=\"showPropertyPolicies()\" [isMobileIcon]=\"true\">\n        {{ 'HOTELS.PROPERTY_POLICIES' | translate }}\n    </tz-mob-modal-page-link>\n\n    <tz-mob-modal-page-link class=\"important-information\" (clicked)=\"importantInformation()\" [isMobileIcon]=\"true\">\n        {{ 'GENERAL.IMPORTANT_INFORMATION' | translate }}\n    </tz-mob-modal-page-link>\n\n    <!--    <div class=\"close-button\">-->\n    <!--        <div class=\"close-button__line\"></div>-->\n    <!--    </div>-->\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { IAccommodationsCartData } from '@schemas/modules/accommodations/accommodations-cart-data';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { ICartSelectedItem } from '@schemas/modules/cart/cart-selected-item';\nimport { AccommodationListItem } from '@schemas/modules/accommodations/accommodation.model';\nimport { CartStatus, PaymentCaptureMode } from '@core/constants/cart-status';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { DialogService } from '@services/dialog.service';\n// eslint-disable-next-line max-len\nimport { AccommodationTermsPopupComponent } from '../../../accommodation/components/accommodation-terms-popup/accommodation-terms-popup.component';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { TzSelectedService } from '../../../selectedUtils/tz-selected-service';\nimport { PlatformService } from '@services/platform.service';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { ModalService } from '@services/modal.service';\n// eslint-disable-next-line max-len\nimport { MobSelectedAccommodationDetailsComponent } from '../mob-selected-accommodation-details/mob-selected-accommodation-details.component';\n// eslint-disable-next-line max-len\nimport { MobAccommodationRoomsComponent } from '../../../accommodation/components/mob-accommodation-rooms/mob-accommodation-rooms.component';\nimport { ISelectedHotel } from '../../accommodations.component';\nimport { BookingSummary } from '@schemas/modules/bookings/booking-summary';\nimport { AccommodationsUtilsService } from '@services/modules/accommodations/utils/accommodations.utils';\n\n@Component({\n    selector: 'tz-selected-accommodations',\n    templateUrl: './selected-accommodations.component.html',\n    styleUrls: ['./selected-accommodations.component.scss'],\n})\nexport class SelectedAccommodationsComponent implements OnInit, OnChanges {\n    @Input() accommodationCartData!: IAccommodationsCartData;\n    @Input() combId!: string;\n    @Input() serviceList = false;\n    @Input() detailPage = false;\n    @Input() fromBookings = false;\n    @Input() bookingSummary!: BookingSummary;\n    @Input() paymentCaptureMode = PaymentCaptureMode.NORMAL_MODE;\n    @Output() removedItem: EventEmitter<string> = new EventEmitter<string>();\n    @Output() changeHotel: EventEmitter<void> = new EventEmitter<void>();\n    @Output() changeRooms: EventEmitter<ISelectedHotel> = new EventEmitter<ISelectedHotel>();\n    @Output() modify: EventEmitter<void> = new EventEmitter<void>();\n    @Output() cancel: EventEmitter<string[]> = new EventEmitter<string[]>();\n    @Output() gotoHotel = new EventEmitter<void>();\n\n    public readonly maxRoomQuantity = 4;\n    public selectedAccommodation!: AccommodationListItem;\n    public selectedCartItem!: ICartSelectedItem;\n    public selectedAccommodationOptions: ICartSelectedItemBookingOption[] = [];\n    public buttons: string[] = [];\n    public isUserLogged!: boolean;\n    public roomButtons: string[][] = [[]];\n    public invalidCartItem = false;\n    public selectedRooms: { rooms: Room[]; options: { [key: number]: ICartSelectedItemBookingOption[] } } = {\n        rooms: [],\n        options: {},\n    };\n    public roomsLeftForSelection = this.maxRoomQuantity;\n\n    constructor(\n        private dialogService: DialogService,\n        public userService: UserService,\n        public platformService: PlatformService,\n        private modalService: ModalService\n    ) {}\n\n    get itemPrice(): number {\n        const selectedBookingOptions = this.accommodationCartData.items[0].selectedItem.bookingOptions;\n        if (selectedBookingOptions.length === 0) {\n            return this.selectedAccommodation.cheapestPrice.listPrice;\n        }\n\n        let price = 0;\n        selectedBookingOptions.map((item) => {\n            price += item.itemPrice.listPrice;\n        });\n\n        if (!price) {\n            selectedBookingOptions.map((item) => {\n                price += item.selectedRoom.selectedOffer.prices.listPrice;\n            });\n        }\n\n        return price;\n    }\n\n    get totalPersons(): number {\n        let personsCount = 0;\n        const selectedBookingOptions = this.accommodationCartData.items[0].selectedItem.bookingOptions;\n        selectedBookingOptions.map((item) => {\n            if (item.selectedRoom) {\n                personsCount += item.selectedRoom.selectedOffer.capacity;\n            }\n        });\n        return personsCount;\n    }\n\n    public ngOnInit(): void {\n        this.formSelectedAccommodation();\n        this.initializeActionBarButtons();\n        this.isUserLogged = this.userService.IsLogged();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes['accommodationCartData']) {\n            this.formSelectedAccommodation();\n            this.initializeActionBarButtons();\n        }\n    }\n\n    public onMobShowSelectedDetails(event?: Event): void {\n        event?.stopPropagation();\n        if (!this.platformService.isMobileDevice) {\n            return;\n        }\n\n        this.modalService.createDetailsPage(MobSelectedAccommodationDetailsComponent, {\n            data: {\n                accommodationCartData: this.selectedAccommodation,\n                selectedRooms: this.selectedRooms,\n                bookingSummary: this.bookingSummary,\n            },\n            title: 'HOTELS.SELECTED',\n            isHeaderBottomDivider: false,\n        });\n    }\n\n    public onRemoveSelected(optionId?: string): void {\n        this.removedItem.emit(optionId);\n        /*this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant('POPUPS.DELETE_PERMANENTLY'),\n                content: this.translateService.instant('POPUPS.REMOVE_CART_ITEM.MSG', {\n                    serviceName: this.translateService.instant('SERVICES.0').toLowerCase(),\n                }),\n                confirmBtnTitle: this.translateService.instant('POPUPS.YES_DEL'),\n                cancelBtnTitle: this.translateService.instant('POPUPS.CANCEL'),\n            })\n            .afterClosed()\n            .subscribe((dialogReturn: TzDialogReturn) => {\n                if (dialogReturn === CONFIRM) {\n                    this.removedItem.emit(optionId);\n                }\n            });*/\n    }\n\n    public onDebugDialogOpened(): void {}\n\n    public onChangeOptions(): void {}\n\n    public onChangeRooms(): void {\n        if (!this.platformService.isMobileDevice) {\n            this.changeRooms.emit({\n                giataId: this.selectedAccommodation.giataID,\n                hotelName: this.selectedAccommodation.name,\n                position: 0,\n            });\n        } else {\n            const selected = this.selectedRooms.rooms.map((e) => e.roomOffers).flat();\n\n            this.selectedAccommodation.rooms.some(\n                (room: { roomOffers: { id: PropertyKey; personCount: number }[] }) => {\n                    room.roomOffers.some((offer: { id: any; personCount: number }) => {\n                        if (selected.find((e) => e.id === offer.id)) {\n                            offer.personCount = 1;\n                        }\n                    });\n                }\n            );\n            this.modalService.createDetailsPage(MobAccommodationRoomsComponent, {\n                data: {\n                    accommodation: this.selectedAccommodation,\n                    selectedRooms: this.selectedRooms,\n                    selectedCartItem: this.selectedCartItem,\n                    ratings: this.selectedAccommodation.ratings,\n                    isUserLogged: this.isUserLogged,\n                    roomsLeftForSelection: this.roomsLeftForSelection,\n                    numberOfNights: this.selectedAccommodation.numberOfNights,\n                    id: this.selectedAccommodation.giataID,\n                },\n                title: 'HOTELS.CHOOSE_ROOMS',\n            });\n        }\n    }\n\n    public onChangeHotel() {\n        this.changeHotel.emit();\n    }\n\n    public onModify() {\n        this.changeRooms.emit({\n            giataId: this.selectedAccommodation.giataID,\n            hotelName: this.selectedAccommodation.name,\n            position: 0,\n        });\n    }\n\n    public onCancel(cancelAll = false, optionId = ''): void {\n        const optionIds: string[] = [];\n        if (cancelAll) {\n            for (const option of this.selectedAccommodationOptions) {\n                optionIds.push(option.itineraryId);\n            }\n        }\n\n        if (optionId !== '') {\n            optionIds.push(optionId);\n        }\n\n        if (optionIds.length > 0) {\n            this.cancel.emit(optionIds);\n        }\n    }\n\n    public getRoomButtons(option: ICartSelectedItemBookingOption): string[] {\n        let roomButtons: string[] = [];\n        if (CartUtils.isCancellableOption([option]) && this.paymentCaptureMode !== PaymentCaptureMode.NOT_DONE) {\n            roomButtons = ['cancel'];\n        } else {\n            this.buttons = [];\n        }\n\n        if (CartUtils.isFailed(option.status)) {\n            roomButtons = ['update', 'remove'];\n        }\n\n        return roomButtons;\n    }\n\n    public isAllOptionsBooked(): boolean {\n        return !this.selectedAccommodationOptions.some((option) => option.status !== CartStatus.STATUS_CONFIRMED);\n    }\n\n    public openTermsModal(roomOption: RoomOption) {\n        const data = {\n            roomCancellation: roomOption.roomCancellation,\n            hasPromotions: roomOption.hasPromotions,\n            discounts: roomOption.discounts,\n            remarks: roomOption.remarks,\n            isPayOnArrival: roomOption.payAt === 'Pay on arrival',\n            checkInDateTime: this.selectedAccommodation.checkIn,\n        };\n\n        this.dialogService.openMainDialog({\n            component: AccommodationTermsPopupComponent,\n            showCloseBtn: true,\n            title: 'HOTELS.TERMS_CONDITIONS',\n            data: { ...data },\n        });\n    }\n\n    private formSelectedAccommodation() {\n        this.selectedCartItem = this.accommodationCartData.items[0].selectedItem;\n        this.selectedAccommodation = this.selectedCartItem.data;\n        this.selectedRooms = AccommodationsUtilsService.getCartRooms(this.selectedCartItem);\n        this.selectedAccommodationOptions = this.selectedCartItem.bookingOptions;\n\n        this.invalidCartItem =\n            this.selectedAccommodationOptions.length === 1 &&\n            !this.selectedAccommodationOptions.some(\n                (option: ICartSelectedItemBookingOption) =>\n                    option.status < CartStatus.STATUS_REJECTED || option.status === CartStatus.STATUS_PRICE_CHANGED\n            );\n    }\n\n    private initializeActionBarButtons() {\n        this.buttons = TzSelectedService.initializeActionBarButtons(\n            this.selectedCartItem,\n            this.fromBookings,\n            this.serviceList,\n            this.paymentCaptureMode,\n            this.detailPage,\n            this.selectedAccommodationOptions.length > 1\n        );\n\n        if (!this.fromBookings && !this.detailPage) {\n            if (!CartUtils.hasBooked(this.selectedCartItem.bookingOptions)) {\n                this.buttons.push('changeHotel');\n\n                if (CartUtils.hasUnavailable(this.selectedCartItem.bookingOptions)) {\n                    this.buttons.push('update');\n                } else {\n                    if (this.selectedAccommodationOptions.length > 1) {\n                        this.buttons = this.buttons.concat(['changeRooms']);\n                    } else {\n                        this.buttons.push('changeRoom');\n                    }\n                }\n            }\n\n            for (let i = 0; i < this.selectedCartItem.bookingOptions.length; i++) {\n                if (CartUtils.isBooked(this.selectedCartItem.bookingOptions[i].status)) {\n                    this.roomButtons[i] = [];\n                } else {\n                    if (CartUtils.isFailed(this.selectedCartItem.bookingOptions[i].status)) {\n                        this.roomButtons[i] = ['update', 'remove'];\n                    } else {\n                        this.roomButtons[i] = ['remove'];\n                    }\n\n                    if (!this.serviceList && !CartUtils.isFailed(this.selectedCartItem.bookingOptions[i].status)) {\n                        this.roomButtons[i].push('debug');\n                    }\n                }\n            }\n        }\n    }\n}\n","<div class=\"selected-accommodations-container flex flex-column\" *ngIf=\"selectedAccommodation\">\n    <div class=\"tz-block-separator-title\" *ngIf=\"selectedAccommodation && !detailPage\">\n        <tz-block-separator>\n            {{\n                (detailPage\n                    ? accommodationCartData.items[0].selectedItem.bookingOptions.length === 1\n                        ? 'HOTELS.SELECTED_DETAIL'\n                        : 'HOTELS.SELECTED_DETAILS'\n                    : 'HOTELS.SELECTED'\n                ) | translate\n            }}\n        </tz-block-separator>\n    </div>\n\n    <div\n        *ngIf=\"selectedAccommodation && !detailPage\"\n        class=\"flight-list-item\"\n        [ngClass]=\"{ 'rejected-cart-item': invalidCartItem }\"\n        (click)=\"onMobShowSelectedDetails($event)\"\n    >\n        <tz-rejected-cart-item-banner\n            *ngIf=\"invalidCartItem\"\n            [service]=\"'SERVICES.0' | translate\"\n        ></tz-rejected-cart-item-banner>\n        <tz-accommodation-list-item\n            *ngIf=\"!platformService.isMobileDevice\"\n            [accommodation]=\"selectedAccommodation\"\n            [cheapest]=\"selectedAccommodation\"\n            [selectedBookingOptions]=\"this.accommodationCartData.items[0].selectedItem.bookingOptions\"\n            [selectable]=\"false\"\n            [isSelected]=\"true\"\n            [serviceList]=\"serviceList\"\n            [accommodationType]=\"fromBookings ? 'myTrip' : 'selected'\"\n            [oldPrice]=\"this.accommodationCartData.items[0].oldPrice\"\n            [itemPrice]=\"itemPrice\"\n            [totalPersons]=\"totalPersons\"\n            (click)=\"gotoHotel.emit()\"\n        >\n        </tz-accommodation-list-item>\n\n        <div [ngClass]=\"{ 'tz-mob-rejected-cart-item': invalidCartItem }\">\n            <tz-mob-accommodations-list-item\n                *ngIf=\"platformService.isMobileDevice\"\n                [accommodation]=\"selectedAccommodation\"\n                [cheapest]=\"selectedAccommodation\"\n                [selectedBookingOptions]=\"this.accommodationCartData.items[0].selectedItem.bookingOptions\"\n                [summary]=\"true\"\n                [serviceList]=\"serviceList\"\n                [itemPrice]=\"itemPrice\"\n                [totalPersons]=\"totalPersons\"\n                [oldPrice]=\"this.accommodationCartData.items[0].oldPrice\"\n                (click)=\"gotoHotel.emit()\"\n            ></tz-mob-accommodations-list-item>\n        </div>\n    </div>\n    <div\n        class=\"accommodation-actions-bar-container\"\n        [hidden]=\"(fromBookings && selectedAccommodationOptions.length > 1 && !isAllOptionsBooked()) || detailPage\"\n    >\n        <tz-cart-item-actions-bar\n            (remove)=\"onRemoveSelected()\"\n            [buttons]=\"buttons\"\n            (changeHotel)=\"onChangeHotel()\"\n            (changeRooms)=\"onChangeRooms()\"\n            (modify)=\"onChangeRooms()\"\n            (cancel)=\"onCancel(true)\"\n            [combId]=\"combId\"\n            [optionId]=\"selectedAccommodationOptions[0].optionId\"\n            [status]=\"\n                (fromBookings && isAllOptionsBooked()) || selectedAccommodationOptions.length === 1\n                    ? selectedAccommodationOptions[0].status\n                    : -1\n            \"\n        >\n        </tz-cart-item-actions-bar>\n    </div>\n    <ng-container *ngIf=\"selectedAccommodationOptions.length >= 1 && fromBookings && detailPage\">\n        <div class=\"flex flex-column\" *ngFor=\"let room of selectedRooms.rooms; let idx = index\">\n            <div *ngIf=\"selectedRooms.options[idx].length === 1\" [ngClass]=\"{ 'margin-top': idx > 0 }\">\n                <tz-accommodation-room\n                    [room]=\"room\"\n                    [isUserLogged]=\"true\"\n                    [fromSelected]=\"true\"\n                    [ratings]=\"accommodationCartData.items[0].selectedItem.data.ratings\"\n                    [numberOfNights]=\"accommodationCartData.items[0].selectedItem.data.numberOfNights\"\n                    (openTermsModal)=\"openTermsModal($event)\"\n                ></tz-accommodation-room>\n                <tz-cart-item-actions-bar\n                    [buttons]=\"getRoomButtons(selectedRooms.options[idx][0])\"\n                    (cancel)=\"onCancel(false, selectedRooms.options[idx][0].itineraryId)\"\n                    [status]=\"selectedRooms.options[idx][0].status\"\n                ></tz-cart-item-actions-bar>\n            </div>\n            <div *ngIf=\"selectedRooms.options[idx].length > 1\" [ngClass]=\"{ 'margin-top': idx > 0 }\">\n                <tz-accommodation-room\n                    [room]=\"room\"\n                    [isUserLogged]=\"true\"\n                    [fromSelected]=\"true\"\n                    [hideOptions]=\"true\"\n                    [ratings]=\"accommodationCartData.items[0].selectedItem.data.ratings\"\n                    [numberOfNights]=\"accommodationCartData.items[0].selectedItem.data.numberOfNights\"\n                    (openTermsModal)=\"openTermsModal($event)\"\n                ></tz-accommodation-room>\n                <div\n                    class=\"selected-accommodation-option flex flex-column\"\n                    *ngFor=\"let option of selectedRooms.options[idx]; let optionIdx = index\"\n                >\n                    <ng-container *ngIf=\"option && option.selectedRoom\">\n                        <div class=\"tz-block-with-border\">\n                            <tz-accommodation-room-option\n                                [(roomOption)]=\"option.selectedRoom.selectedOffer\"\n                                [roomPrice]=\"option.itemPrice\"\n                                [roomType]=\"option.selectedRoom.roomType\"\n                                [isUserLogged]=\"userService.IsLogged()\"\n                                [fromSelected]=\"true\"\n                                (openTermsModal)=\"openTermsModal(option.selectedRoom.selectedOffer)\"\n                            ></tz-accommodation-room-option>\n                        </div>\n                        <tz-cart-item-actions-bar\n                            [buttons]=\"getRoomButtons(option)\"\n                            (cancel)=\"onCancel(false, option.itineraryId)\"\n                            [status]=\"option.status\"\n                        ></tz-cart-item-actions-bar>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedAccommodationOptions.length > 1 && !serviceList && !detailPage\">\n        <div\n            class=\"selected-accommodation-option flex flex-column\"\n            [ngClass]=\"{ 'rejected-cart-item': option.status === 7 || option.status === 9 }\"\n            *ngFor=\"let option of selectedAccommodationOptions; let idx = index\"\n        >\n            <ng-container *ngIf=\"option && option.selectedRoom\">\n                <tz-rejected-cart-item-banner\n                    *ngIf=\"option.status === 7 || option.status === 9\"\n                    [service]=\"'HOTELS.ROOM' | translate\"\n                ></tz-rejected-cart-item-banner>\n                <div class=\"tz-block-with-border\" [ngClass]=\"{ 'tz-selected-service-list': detailPage }\">\n                    <tz-accommodation-room-option\n                        [(roomOption)]=\"option.selectedRoom.selectedOffer\"\n                        [roomPrice]=\"\n                            option.itemPrice.listPrice ? option.itemPrice : option.selectedRoom.selectedOffer.prices\n                        \"\n                        [roomType]=\"option.selectedRoom.roomType\"\n                        [isUserLogged]=\"userService.IsLogged()\"\n                        (openTermsModal)=\"openTermsModal(option.selectedRoom.selectedOffer)\"\n                    ></tz-accommodation-room-option>\n                </div>\n                <tz-cart-item-actions-bar\n                    *ngIf=\"fromBookings || !detailPage || option.status > 0\"\n                    (remove)=\"onRemoveSelected(option.optionId)\"\n                    [buttons]=\"fromBookings ? getRoomButtons(option) : roomButtons[idx]\"\n                    (cancel)=\"onCancel(false, option.itineraryId)\"\n                    (changeRooms)=\"onChangeRooms()\"\n                    (modify)=\"onChangeRooms()\"\n                    [combId]=\"combId\"\n                    [optionId]=\"option.optionId\"\n                    [status]=\"option.status\"\n                ></tz-cart-item-actions-bar>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n<!--[buttons]=\"fromBookings ? getRoomButtons(option) : roomButtons[idx]\"-->\n<!--[buttons]=\"['remove']\"-->\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CarRental } from '@schemas/modules/car-rentals/car-rental';\nimport { BestValType } from '@schemas/modules/search/search';\nimport { ResultsTools } from '@services/modules/results/services/tools.shared.services';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Component({\n    selector: 'tz-car-rental-list-item',\n    templateUrl: './car-rental-list-item.component.html',\n    styleUrls: ['./car-rental-list-item.component.scss'],\n})\nexport class CarRentalListItemComponent implements OnInit {\n    @Input() carRental: CarRental | null | undefined;\n    @Input() selectable = true;\n    @Input() selectedRental = false;\n    @Input() oldPrice = 0;\n    @Output() selectedCarRental: EventEmitter<void> = new EventEmitter<void>();\n    @Output() openPopupModel = new EventEmitter<{ carRental: CarRental; modelType: string }>();\n\n    public opened = false;\n    public bestValType: BestValType | undefined;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        if (this.carRental && this.carRental.bestValType) {\n            this.bestValType = ResultsTools.getBestValType(this.carRental.bestValType, ServiceId.CAR_RENTAL);\n        }\n    }\n\n    public selectCarRental() {\n        this.selectedCarRental.emit();\n    }\n\n    public openPopup(modelType: string): void {\n        if (this.carRental) {\n            this.openPopupModel.emit({\n                carRental: this.carRental,\n                modelType,\n            });\n        }\n    }\n}\n","<div class=\"car-rental-container\" *ngIf=\"carRental\">\n    <div *ngIf=\"bestValType && !selectedRental\" class=\"recommended-block\">\n        <div class=\"recommended-block__content\">\n            <tz-recommended-list-tem-description [bestValType]=\"bestValType\"></tz-recommended-list-tem-description>\n        </div>\n    </div>\n\n    <div class=\"car-rental tz-block-with-border\" data-test=\"result-page-car-rentals-car-rental-block\">\n        <div class=\"image-container\" data-test=\"image-container\">\n            <img class=\"rentalimg\" *ngIf=\"carRental.vehicle.image.url\" [src]=\"carRental.vehicle.image.url\" alt=\"\" />\n            <img\n                class=\"rentalimg\"\n                *ngIf=\"!carRental.vehicle.image.url\"\n                src=\"/assets/icons/web/img/no_image.png\"\n                alt=\"\"\n            />\n            <img\n                class=\"cars-model-icon\"\n                src=\"/assets/icons/web/img/supplierLogos/{{ carRental.provider.code }}.png\"\n                alt=\"\"\n            />\n        </div>\n        <div class=\"car-rental-description\" data-test=\"result-page-car-rentals-car-rental-description\">\n            <h3 class=\"rental-class\" data-test=\"car-rentals-car-model\">\n                {{ carRental.vehicle.name\n                }}{{ carRental.vehicle.orSimilar ? ' ' + ('TRANSFER.BE.Or_similar' | translate) : '' }}\n            </h3>\n            <p class=\"title-description\" data-test=\"car-rentals-car-type\">\n                {{ (carRental.vehicle.class !== '' ? 'CAR_RENTAL.TYPE.' + carRental.vehicle.class : '') | translate\n                }}{{\n                    carRental.vehicle.type.description !== '' && carRental.vehicle.type.description !== 'Car'\n                        ? ' ' + ('CAR_RENTAL.TYPE.' + carRental.vehicle.type.description | translate)\n                        : ''\n                }}&nbsp;|&nbsp;{{ carRental.vehicle.code }}\n            </p>\n            <div class=\"mt-2 mobile-hidden\" data-test=\"car-rentals-car-mt-2-mobile-hidden\">\n                <div class=\"trip-details\" data-test=\"car-rental-date\">\n                    {{ carRental.pickupTzDate | tzDate: 'mediumDate' }}\n                    •\n                    {{ carRental.pickupTzDate | tzDate: 'shortTime' }}\n                    <span title=\"{{ carRental.pickupLocation.name }}\"\n                        >&nbsp;•&nbsp;{{ carRental.pickupLocation.name }}</span\n                    >\n                </div>\n                <div class=\"mt-2 trip-details\" data-test=\"car-return-date\">\n                    {{ carRental.dropOffTzDate | tzDate: 'mediumDate' }}\n                    •\n                    {{ carRental.dropOffTzDate | tzDate: 'shortTime' }}\n                    <span title=\"{{ carRental.dropOffLocation.name }}\"\n                        >&nbsp;•&nbsp;{{ carRental.dropOffLocation.name }}</span\n                    >\n                </div>\n            </div>\n            <div class=\"date-time mobile-only mt-2\" (click)=\"opened = !opened\">\n                <div class=\"closed-dates\" *ngIf=\"!opened\">\n                    {{ carRental.pickupTzDate | tzDate: 'shortDateMonth' }}\n                    •\n                    {{ carRental.pickupTzDate | tzDate: 'shortTime' }}\n                    —\n                    {{ carRental.dropOffTzDate | tzDate: 'shortDateMonth' }}\n                    •\n                    {{ carRental.dropOffTzDate | tzDate: 'shortTime' }}\n                </div>\n                <div class=\"closed-dates\" *ngIf=\"opened\">\n                    {{ carRental.pickupTzDate | tzDate: 'shortDateMonth' }}\n                    •\n                    {{ carRental.pickupTzDate | tzDate: 'shortTime' }}\n                    &nbsp;•&nbsp;{{ carRental.pickupLocation.name }}\n                    <br />\n                    {{ carRental.dropOffTzDate | tzDate: 'shortDateMonth' }}\n                    •\n                    {{ carRental.dropOffTzDate | tzDate: 'shortTime' }}\n                    &nbsp;•&nbsp;{{ carRental.pickupLocation.name }}\n                </div>\n                <span\n                    class=\"tz-icon-arrow mobile-only\"\n                    [class]=\"{\n                        opened: opened\n                    }\"\n                ></span>\n            </div>\n            <div\n                class=\"mobile-info-container\"\n                data-test=\"car-rentals-mobile-info-container\"\n                [class]=\"{\n                    opened: opened\n                }\"\n            >\n                <div class=\"rental-text-info-icons d-flex flex-wrap mt-3\">\n                    <div class=\"info-container\" *ngIf=\"carRental.vehicle.seats > 0\">\n                        <tz-icon [icon]=\"'users-gray'\"></tz-icon>\n                        <span\n                            data-test=\"car-rentals-vehicle-seats\"\n                            title=\"{{ carRental.vehicle.seats }} {{\n                                carRental.vehicle.seats > 0\n                                    ? ('CAR_RENTAL.PASSENGERS' | translate | lowercase)\n                                    : ('CAR_RENTAL.PASSENGER' | translate | lowercase)\n                            }}\"\n                        >\n                            {{ carRental.vehicle.seats }}\n                            {{\n                                carRental.vehicle.seats > 0\n                                    ? ('CAR_RENTAL.PASSENGERS' | translate | lowercase)\n                                    : ('CAR_RENTAL.PASSENGER' | translate | lowercase)\n                            }}</span\n                        >\n                    </div>\n                    <div class=\"info-container\" *ngIf=\"carRental.vehicle.automaticGearbox\">\n                        <tz-icon [icon]=\"'flat-gray'\"></tz-icon>\n                        <span title=\"Automatic\" data-test=\"car-rentals-car-transmission-a\">{{\n                            'CAR_RENTAL.VEHICLE.AUTOMATIC' | translate\n                        }}</span>\n                    </div>\n                    <div class=\"info-container\" *ngIf=\"!carRental.vehicle.automaticGearbox\">\n                        <tz-icon [icon]=\"'gear'\"></tz-icon>\n                        <span title=\"Manual gear\" data-test=\"car-rentals-car-transmission-m\">{{\n                            'CAR_RENTAL.VEHICLE.MANUAL' | translate\n                        }}</span>\n                    </div>\n                    <div class=\"info-container\" *ngIf=\"carRental.vehicle.airconditioning\">\n                        <tz-icon [icon]=\"'condition-gray'\"></tz-icon>\n                        <span title=\"A/C\" data-test=\"car-rentals-car-a/c\">A/C</span>\n                    </div>\n                    <div class=\"info-container\" *ngIf=\"carRental.vehicle.suitcases > 0\">\n                        <tz-icon [icon]=\"'case-dark'\"></tz-icon>\n                        <span\n                            data-test=\"car-rentals-car-cases\"\n                            title=\"{{ carRental.vehicle.suitcases }} {{\n                                carRental.vehicle.suitcases > 1\n                                    ? ('CAR_RENTAL.SUITCASES' | translate)\n                                    : ('CAR_RENTAL.SUITCASE' | translate)\n                            }}\"\n                        >\n                            {{ carRental.vehicle.suitcases }}\n                            {{\n                                carRental.vehicle.suitcases > 1\n                                    ? ('CAR_RENTAL.SUITCASES' | translate)\n                                    : ('CAR_RENTAL.SUITCASE' | translate)\n                            }}\n                        </span>\n                    </div>\n                    <div class=\"info-container\" *ngIf=\"carRental.vehicle.numberOfDoors > 0\">\n                        <tz-icon [icon]=\"'door'\"></tz-icon>\n                        <span\n                            data-test=\"car-rentals-car-doors\"\n                            title=\"{{ carRental.vehicle.numberOfDoors }} {{\n                                carRental.vehicle.numberOfDoors > 1\n                                    ? ('CAR_RENTAL.VEHICLE.DOORS' | translate)\n                                    : ('CAR_RENTAL.VEHICLE.DOOR' | translate)\n                            }}\"\n                        >\n                            {{ carRental.vehicle.numberOfDoors }}\n                            {{\n                                carRental.vehicle.numberOfDoors > 1\n                                    ? ('CAR_RENTAL.VEHICLE.DOORS' | translate)\n                                    : ('CAR_RENTAL.VEHICLE.DOOR' | translate)\n                            }}\n                        </span>\n                    </div>\n                </div>\n                <div class=\"car-rentals-links flex align-center\">\n                    <a\n                        class=\"tz-purple-link\"\n                        data-test=\"car-rentals-car-standart-package\"\n                        (click)=\"openPopup('package')\"\n                        >{{ 'CAR_RENTAL.INCLUSIONS' | translate }}</a\n                    >\n                    <a class=\"tz-purple-link\" data-test=\"car-rentals-car-location\" (click)=\"openPopup('location')\">{{\n                        'CAR_RENTAL.LOCATION' | translate\n                    }}</a>\n                    <a class=\"tz-purple-link\" data-test=\"car-rentals-car-rental-terms\" (click)=\"openPopup('terms')\">{{\n                        'CAR_RENTAL.TERMS_CONDITIONS' | translate\n                    }}</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"result-block-price\" data-test=\"result-page-car-rentals-car-result-price-block\">\n            <div class=\"ticket-options d-flex flex-wrap justify-content-between\">\n                <span class=\"tz-icon-service-rental mobile-hidden\"></span>\n                <div class=\"ticket-price flex align-center\" data-test=\"car-rentals-car-price\">\n                    <tz-price-change-tooltop *ngIf=\"oldPrice > 0\"></tz-price-change-tooltop>\n                    <span *ngIf=\"oldPrice > 0\" class=\"service-old-price\">\n                        +\n                        {{\n                            carRental.currentPackage.totalPrice.listPrice - oldPrice\n                                | tzCurrency: carRental.currentPackage.totalPrice.listPriceCur\n                        }}\n                    </span>\n                    {{\n                        carRental.currentPackage.totalPrice.listPrice\n                            | tzCurrency: carRental.currentPackage.totalPrice.listPriceCur\n                    }}\n                </div>\n                <div class=\"options-details\" data-test=\"car-rentals-car-rental-info\">\n                    <div>\n                        {{ 'GENERAL.PRICE_FOR' | translate }} {{ carRental.days }}\n                        {{ 'GENERAL.' + (carRental.days > 1 ? 'DAYS' : 'DAY') | translate }}\n                    </div>\n                    <div>\n                        {{\n                            carRental.taxInfo === 'All_taxes_included'\n                                ? ('CAR_RENTAL.ALL_TAXES_INCLUDED' | translate)\n                                : ('CAR_RENTAL.TAXES_INCLUDED' | translate)\n                        }}\n                    </div>\n                    <div>\n                        {{ carRental.currentPackage.name }}\n                        {{ 'CAR_RENTAL.INFOS.PACKAGE' | translate }}\n                    </div>\n                    <div class=\"cancellation\">\n                        {{\n                            carRental.cancellation.freeCpBefore > 0\n                                ? ('CANCELLATION.FREE_CP_BEFORE_HOUR'\n                                  | translate: { hour: carRental.cancellation.freeCpBefore })\n                                : (carRental.cancellation.messageKey\n                                  | translate: { date: (carRental.cancellation.endDateTime | tzDate) })\n                        }}\n                    </div>\n                </div>\n                <div class=\"ticket-price mobile-only\">\n                    <span *ngIf=\"oldPrice > 0\" class=\"service-old-price\">\n                        {{ oldPrice | tzCurrency: carRental.currentPackage.totalPrice.listPriceCur }}\n                    </span>\n                    {{\n                        carRental.currentPackage.totalPrice.listPrice\n                            | tzCurrency: carRental.currentPackage.totalPrice.listPriceCur\n                    }}\n                </div>\n            </div>\n            <div class=\"select-button-container financial-container-row\" *ngIf=\"selectable\">\n                <button\n                    class=\"tz-btn tz-btn-primary tz-btn--select\"\n                    data-test=\"car-rentals-car-select-btn\"\n                    (click)=\"selectCarRental()\"\n                >\n                    {{ 'CAR_RENTAL.SELECT' | translate }}\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Inject, Input, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { CarRental } from '@schemas/modules/car-rentals/car-rental';\nimport { CarRentalLocation } from '@schemas/modules/car-rentals/car-rental-location';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-car-rental-location-dialog',\n    templateUrl: './car-rental-location-dialog.component.html',\n    styleUrls: ['./car-rental-location-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarRentalLocationDialogComponent implements OnInit {\n    @Input() carRental!: CarRental;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private mdDialogRef: MatDialogRef<CarRentalLocationDialogComponent>,\n        private dialogService: DialogService\n    ) {\n        this.carRental = ToolsService.deepCopy(data.carRental);\n    }\n\n    get getCarRentalLocations(): CarRentalLocation[] {\n        if (this.carRental.pickupDropOffDiff) {\n            return [this.carRental.pickupLocation, this.carRental.dropOffLocation];\n        } else {\n            return [this.carRental.pickupLocation];\n        }\n    }\n\n    ngOnInit() {}\n\n    public close(): void {\n        this.dialogService.closeDialog(this.mdDialogRef);\n    }\n}\n","<div class=\"tz-dialog-close-block\" data-test=\"car-rental-location-dialog-close\" (click)=\"close()\">\n    <tz-icon className=\"tz-popup-close-icon\" icon=\"popup-close\"></tz-icon>\n</div>\n\n<div class=\"tz-dialog-container tz-rental-dialog\" data-test=\"car-rental-location-text\">\n    <div class=\"tz-dialog-title\" data-test=\"car-rental-location-text\">{{ 'CAR_RENTAL.LOCATION' | translate }}</div>\n    <div class=\"tz-dialog-multiple-content\">\n        <ng-container *ngFor=\"let location of getCarRentalLocations; let i = index\">\n            <div class=\"tz-rental-dialog__title\" [ngClass]=\"{ 'mt-20': i > 0 }\">\n                {{\n                    (carRental.pickupDropOffDiff\n                        ? i === 0\n                            ? 'CAR_RENTAL.PICK_UP'\n                            : 'CAR_RENTAL.DROP_OFF'\n                        : 'CAR_RENTAL.PICK_UP_DROP_OFF'\n                    ) | translate\n                }}\n            </div>\n\n            <div class=\"tz-rental-dialog__content pt-0\">\n                <div>\n                    {{ carRental.provider.name }}\n                    {{ location.name !== '' ? ', ' + location.name : '' }}\n                    {{ location.address !== '' ? ', ' + location.address : '' }}\n                </div>\n                <div *ngIf=\"location.phoneNumber\">{{ 'CAR_RENTAL.PHONE' | translate }}: {{ location.phoneNumber }}</div>\n                <div *ngIf=\"location.locationId\">\n                    {{ 'CAR_RENTAL.INFOS.LOCATION_CODE' | translate }}: {{ location.locationId }}\n                </div>\n                <div *ngIf=\"location.openingHours\">\n                    <ng-container *ngFor=\"let opening of location.openingHours\">\n                        <div>{{ opening }}</div>\n                    </ng-container>\n                </div>\n                <div *ngIf=\"location.locationInfo\" [innerHTML]=\"location.locationInfo\"></div>\n            </div>\n        </ng-container>\n    </div>\n</div>\n","import { Component, Inject, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { CarRentalPackage } from '@schemas/modules/car-rentals/car-rental-package';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-car-rental-package-dialog',\n    templateUrl: './car-rental-package-dialog.component.html',\n    styleUrls: ['./car-rental-package-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarRentalPackageDialogComponent {\n    @Input() selectedPackage!: CarRentalPackage;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private mdDialogRef: MatDialogRef<CarRentalPackageDialogComponent>,\n        private dialogService: DialogService\n    ) {\n        this.selectedPackage = ToolsService.deepCopy(data.selectedPackage);\n    }\n\n    get mandatory() {\n        return this.packageInfo.mandatory;\n    }\n\n    get packageInfo() {\n        return this.selectedPackage.packageInfo;\n    }\n\n    public close(): void {\n        this.dialogService.closeDialog(this.mdDialogRef);\n    }\n}\n","<div class=\"tz-dialog-close-block\" data-test=\"car-rental-standart-package-text-close\" (click)=\"close()\">\n    <tz-icon className=\"tz-popup-close-icon\" icon=\"popup-close\"></tz-icon>\n</div>\n\n<div class=\"tz-dialog-container tz-rental-dialog\" data-test=\"car-rental-terms-text\">\n    <div class=\"tz-dialog-title\" data-test=\"car-rental-terms-text\">\n        {{ selectedPackage.name }} {{ 'CAR_RENTAL.INFOS.PACKAGE' | translate }}\n    </div>\n    <div class=\"tz-dialog-multiple-content tz-rental-dialog__content\">\n        <ul class=\"rental-package\">\n            <li *ngIf=\"packageInfo.fuelPolicy !== ''\">\n                {{ 'CAR_RENTAL.INFOS.FUEL_POLICY' | translate }} &nbsp;•&nbsp;{{ packageInfo.fuelPolicy }}\n            </li>\n            <li *ngIf=\"packageInfo.fuelCharge\">\n                {{ 'CAR_RENTAL.INFOS.FUEL_CHARGE' | translate }}\n                {{ packageInfo.fuelCharge.listPrice | tzCurrency: packageInfo.fuelCharge.listPriceCur }}\n            </li>\n            <li *ngIf=\"packageInfo.mileagePolicy !== ''\">\n                {{ packageInfo.mileagePolicy }}\n            </li>\n            <li>\n                {{ 'CAR_RENTAL.INFOS.DEPOSIT' | translate }}\n                {{\n                    packageInfo.depositAmount && packageInfo.depositAmount.listPrice > 0\n                        ? (packageInfo.depositAmount.listPrice | tzCurrency: packageInfo.depositAmount.listPriceCur)\n                        : ('CAR_RENTAL.INFOS.ZERO' | translate)\n                }}\n            </li>\n            <li>\n                {{ 'CAR_RENTAL.INFOS.EXCESS' | translate }}\n                {{\n                    packageInfo.excessAmount && packageInfo.excessAmount.listPrice > 0.0\n                        ? (packageInfo.excessAmount.listPrice | tzCurrency: packageInfo.excessAmount.listPriceCur)\n                        : ('CAR_RENTAL.INFOS.ZERO' | translate)\n                }}\n            </li>\n            <ng-container *ngIf=\"mandatory\">\n                <li *ngIf=\"mandatory.fuelSurcharge\">\n                    {{ 'CAR_RENTAL.INFOS.FUEL_SURCHARGE' | translate }}\n                    {{ mandatory.fuelSurcharge.listPrice | tzCurrency: mandatory.fuelSurcharge.listPriceCur }}\n                    {{ 'CAR_RENTAL.INFOS.DUE_UPON_PICKUP' | translate }}\n                </li>\n                <li *ngIf=\"mandatory.outOfHours\">\n                    {{ 'CAR_RENTAL.INFOS.OUT_OF_HOURS' | translate }}\n                    {{ mandatory.outOfHours.listPrice | tzCurrency: mandatory.outOfHours.listPriceCur }}\n                    {{ 'CAR_RENTAL.INFOS.DUE_UPON_PICKUP' | translate }}\n                </li>\n                <li *ngIf=\"mandatory.youngDriverFee\">\n                    {{ 'CAR_RENTAL.INFOS.YOUNG_DRIVER_AGE' | translate }}\n                    {{ mandatory.youngDriverFee.listPrice | tzCurrency: mandatory.youngDriverFee.listPriceCur }}\n                    {{ 'CAR_RENTAL.INFOS.DUE_UPON_PICKUP' | translate }}\n                </li>\n                <li *ngIf=\"mandatory.seniorDriverFee\">\n                    {{ 'CAR_RENTAL.INFOS.SENIOR_DRIVER_AGE' | translate }}\n                    {{ mandatory.seniorDriverFee.listPrice | tzCurrency: mandatory.seniorDriverFee.listPriceCur }}\n                    {{ 'CAR_RENTAL.INFOS.DUE_UPON_PICKUP' | translate }}\n                </li>\n                <li *ngIf=\"mandatory.oneWay\">\n                    {{ 'CAR_RENTAL.INFOS.ONE_WAY' | translate }}\n                    {{ mandatory.oneWay.listPrice | tzCurrency: mandatory.oneWay.listPriceCur }}\n                    {{ 'CAR_RENTAL.INFOS.DUE_UPON_PICKUP' | translate }}\n                </li>\n            </ng-container>\n            <li *ngFor=\"let inclusion of selectedPackage.inclusions\">{{ inclusion }}</li>\n            <li *ngFor=\"let info of selectedPackage.additionalInfo\">{{ info }}</li>\n        </ul>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\nimport { CarRentalPackage } from '@schemas/modules/car-rentals/car-rental-package';\nimport { ScrollService } from '@services/modules/core/scroll-service';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-car-rental-packages',\n    templateUrl: './car-rental-packages.component.html',\n    styleUrls: ['./car-rental-packages.component.scss', './car-rental-packages.component.mobile.scss'],\n})\nexport class CarRentalPackagesComponent implements OnInit {\n    @Input() packages: CarRentalPackage[] = [];\n    @Input() currentKey = '';\n    @Input() days: number | null = null;\n    @Input() mobIsTypeDetails = false;\n    @Output() selectPackage: EventEmitter<CarRentalPackage> = new EventEmitter<CarRentalPackage>();\n    @Output() packageSelected: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    public fromIdx = 0;\n    public selectedRentalPackage!: CarRentalPackage | null;\n    public isPackageSelected = true;\n\n    constructor(private scrollService: ScrollService, public platformService: PlatformService) {}\n\n    ngOnInit() {\n        if (!this.mobIsTypeDetails) {\n            this.selectedRentalPackage = this.packages[0];\n            // } else if (this.mobIsTypeDetails && this.packages.length === 1) {\n            //     this.selectedRentalPackage = this.packages[0];\n            //     this.packageSelected.emit(true);\n        } else {\n            this.isPackageSelected = false;\n        }\n    }\n\n    public selectRentalPackage(rentalPackage: CarRentalPackage, element: string): void {\n        if (this.platformService.isMobileDevice) {\n            requestAnimationFrame(() => {\n                this.scrollService.scrollToVisibleArea(element, 'carDetailsFooter', {\n                    scrollTop: 18,\n                    includeElementsHeight: ['mobMainModalHeader'],\n                });\n            });\n        }\n\n        if (this.selectedRentalPackage && this.selectedRentalPackage.packageKey === rentalPackage.packageKey) {\n            this.packageSelected.emit(false);\n            this.isPackageSelected = false;\n            this.selectedRentalPackage = null;\n            return;\n        }\n\n        this.isPackageSelected = true;\n        this.selectedRentalPackage = rentalPackage;\n        this.packageSelected.emit(true);\n        this.selectPackage.emit(rentalPackage);\n    }\n\n    public navigatePackage(value: number): void {\n        this.fromIdx += value;\n    }\n\n    public getPackageLimit(): number {\n        return window.innerWidth < 768 ? this.packages.length : this.fromIdx + 2;\n    }\n}\n","<div class=\"rental-packages-container tz-block-with-border d-flex\">\n    <div class=\"mobile-hidden\" *ngIf=\"packages.length > 2\">\n        <div class=\"package-btn next-packages\" *ngIf=\"fromIdx < packages.length - 2\" (click)=\"navigatePackage(1)\">\n            <tz-icon [icon]=\"'arrow-right-blue'\"></tz-icon>\n        </div>\n        <div class=\"package-btn pre-packages\" *ngIf=\"fromIdx > 0\" (click)=\"navigatePackage(-1)\">\n            <tz-icon [icon]=\"'arrow-left-blue'\"></tz-icon>\n        </div>\n    </div>\n\n    <div\n        class=\"rental-package\"\n        *ngFor=\"let package of packages | slice: fromIdx:getPackageLimit(); index as i\"\n        [ngClass]=\"{\n            'border-right': i === 0\n        }\"\n    >\n        <h4>\n            {{ package.name }}\n            {{ 'CAR_RENTAL.INFOS.PACKAGE_DETAILS' | translate }}\n        </h4>\n        <div class=\"price-per-person\" *ngIf=\"!mobIsTypeDetails\">\n            {{ package.totalPrice.listPrice | tzCurrency: package.totalPrice.listPriceCur }}\n        </div>\n        <div class=\"package-offers\">\n            <div class=\"d-flex\" *ngIf=\"package.packageInfo.fuelPolicy !== ''\">\n                <tz-icon [icon]=\"'checked_green'\" *ngIf=\"!platformService.isMobileDevice\"></tz-icon>\n                <tz-svg-icon\n                    [icon]=\"'checked_green'\"\n                    *ngIf=\"platformService.isMobileDevice\"\n                    [mobile]=\"true\"\n                ></tz-svg-icon>\n                <span>{{ 'CAR_RENTAL.INFOS.FUEL_POLICY' | translate }}</span\n                ><span>&nbsp;•&nbsp;{{ package.packageInfo.fuelPolicy }}</span>\n            </div>\n            <div class=\"d-flex\" *ngIf=\"package.packageInfo.mileagePolicy !== ''\">\n                <tz-icon [icon]=\"'checked_green'\" *ngIf=\"!platformService.isMobileDevice\"></tz-icon>\n                <tz-svg-icon\n                    [icon]=\"'checked_green'\"\n                    *ngIf=\"platformService.isMobileDevice\"\n                    [mobile]=\"true\"\n                ></tz-svg-icon>\n                <span> {{ package.packageInfo.mileagePolicy }}</span>\n            </div>\n            <div\n                class=\"d-flex\"\n                *ngIf=\"package.packageInfo.depositAmount && package.packageInfo.depositAmount.listPrice > 0\"\n            >\n                <tz-icon [icon]=\"'checked_green'\" *ngIf=\"!platformService.isMobileDevice\"></tz-icon>\n                <tz-svg-icon\n                    [icon]=\"'checked_green'\"\n                    *ngIf=\"platformService.isMobileDevice\"\n                    [mobile]=\"true\"\n                ></tz-svg-icon>\n                <span>\n                    {{ 'CAR_RENTAL.INFOS.DEPOSIT' | translate }}\n                    {{\n                        package.packageInfo.depositAmount && package.packageInfo.depositAmount.listPrice > 0\n                            ? (package.packageInfo.depositAmount.listPrice\n                              | tzCurrency: package.packageInfo.depositAmount.listPriceCur)\n                            : ('CAR_RENTAL.INFOS.ZERO' | translate)\n                    }}</span\n                >\n            </div>\n            <div\n                class=\"d-flex\"\n                *ngIf=\"package.packageInfo.excessAmount && package.packageInfo.excessAmount.listPrice > 0.0\"\n            >\n                <tz-icon [icon]=\"'checked_green'\" *ngIf=\"!platformService.isMobileDevice\"></tz-icon>\n                <tz-svg-icon\n                    [icon]=\"'checked_green'\"\n                    *ngIf=\"platformService.isMobileDevice\"\n                    [mobile]=\"true\"\n                ></tz-svg-icon>\n                <span>\n                    {{ 'CAR_RENTAL.INFOS.EXCESS' | translate }}\n                    {{\n                        package.packageInfo.excessAmount && package.packageInfo.excessAmount.listPrice > 0.0\n                            ? (package.packageInfo.excessAmount.listPrice\n                              | tzCurrency: package.packageInfo.excessAmount.listPriceCur)\n                            : ('CAR_RENTAL.INFOS.ZERO' | translate)\n                    }}\n                </span>\n            </div>\n            <div class=\"d-flex\" *ngFor=\"let inclusion of package.inclusions; index as j\">\n                <tz-icon [icon]=\"'checked_green'\" *ngIf=\"!platformService.isMobileDevice\"></tz-icon>\n                <tz-svg-icon\n                    [icon]=\"'checked_green'\"\n                    *ngIf=\"platformService.isMobileDevice\"\n                    [mobile]=\"true\"\n                ></tz-svg-icon>\n                <span>{{ inclusion }}</span>\n            </div>\n        </div>\n        <button\n            *ngIf=\"!mobIsTypeDetails\"\n            class=\"upgrade-select-btn btn select-btn\"\n            [ngClass]=\"{\n                selected: package.packageKey === currentKey\n            }\"\n            [id]=\"'selectCarId' + package.packageKey\"\n            (click)=\"selectRentalPackage(package, 'selectCarId' + package.packageKey)\"\n        >\n            {{ package.packageKey !== currentKey ? ('GENERAL.SELECT' | translate) : ('GENERAL.SELECTED' | translate) }}\n        </button>\n\n        <div *ngIf=\"mobIsTypeDetails\">\n            <div class=\"rental-packages-container__bottom-block\">\n                <p class=\"rental-packages-container__price\">\n                    {{ package.totalPrice.listPrice | tzCurrency: package.totalPrice.listPriceCur }}\n                </p>\n                <p class=\"rental-packages-container__price-for\" *ngIf=\"days\">\n                    {{ 'GENERAL.PRICE_FOR' | translate }} {{ days }}\n                    {{ 'GENERAL.' + (days > 1 ? 'DAYS' : 'DAY') | translate }}\n                </p>\n            </div>\n            <button\n                class=\"tz-mob-select-btn\"\n                [ngClass]=\"{\n                    'mob-selected-btn': package.packageKey === currentKey && isPackageSelected\n                }\"\n                [id]=\"'selectCarId' + package.packageKey\"\n                (click)=\"selectRentalPackage(package, 'selectCarId' + package.packageKey)\"\n            >\n                {{\n                    package.packageKey === currentKey && isPackageSelected\n                        ? ('GENERAL.SELECTED' | translate)\n                        : ('GENERAL.SELECT' | translate)\n                }}\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { RentalTerm } from '@schemas/modules/car-rentals/car-rental';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-car-rental-terms.dialog',\n    templateUrl: './car-rental-terms.dialog.component.html',\n    styleUrls: ['./car-rental-terms.dialog.component.scss'],\n})\nexport class CarRentalTermsDialogComponent implements OnInit {\n    @Input() carRentalTerms: RentalTerm[] = [];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private mdDialogRef: MatDialogRef<CarRentalTermsDialogComponent>,\n        private dialogService: DialogService\n    ) {\n        this.carRentalTerms = ToolsService.deepCopy(data.carRentalTrems);\n        console.log('Trems: ', this.carRentalTerms);\n    }\n\n    ngOnInit() {}\n\n    public close(): void {\n        this.dialogService.closeDialog(this.mdDialogRef);\n    }\n}\n","<div class=\"tz-dialog-close-block\" data-test=\"terms-block-close\" (click)=\"close()\">\n    <tz-icon className=\"tz-popup-close-icon\" icon=\"popup-close\"></tz-icon>\n</div>\n\n<div class=\"tz-dialog-container tz-terms-dialog\" data-test=\"car-rental-terms-text\">\n    <div class=\"tz-dialog-title\" data-test=\"car-rental-terms-text\">{{ 'CAR_RENTAL.TERMS_CONDITIONS' | translate }}</div>\n    <div class=\"tz-dialog-multiple-content\">\n        <ng-container *ngFor=\"let term of carRentalTerms\">\n            <div class=\"tz-terms-dialog__title\">\n                {{ term.title }}\n            </div>\n            <div class=\"tz-terms-dialog__content\" [innerHTML]=\"term.description\"></div>\n        </ng-container>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CarRental } from '@schemas/modules/car-rentals/car-rental';\nimport { CarRentalPackage } from '@schemas/modules/car-rentals/car-rental-package';\nimport { CarRentalService } from '@services/modules/car-rental/services/car-rental.service';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { CartStatus, PaymentCaptureMode } from '@core/constants/cart-status';\nimport { TzSelectedService } from '../../../selectedUtils/tz-selected-service';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { PlatformService } from '@services/platform.service';\nimport { ModalService } from '@services/modal.service';\nimport { MobCarRentalDetailsComponent } from '../mob-car-rental-details/mob-car-rental-details.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ToolsService } from '@core/utils/tools-service';\n\n@Component({\n    selector: 'tz-car-rentals-cart-item',\n    templateUrl: './car-rental-cart-item.component.html',\n    styleUrls: ['./car-rental-cart-item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarRentalCartItemComponent implements OnInit, OnDestroy {\n    @Input() serviceList = false;\n    @Input() combId!: CombinationId;\n    @Input() carRentalItem!: ICartItem;\n    @Input() packages: CarRentalPackage[] = [];\n    @Input() fromBookings = false;\n    @Input() paymentCaptureMode = PaymentCaptureMode.NORMAL_MODE;\n    //used to notify selected cart item to display car packages options\n    @Input() selectedChangeOptions: EventEmitter<void> = new EventEmitter<void>();\n    @Output() showPackagesFlag: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() remove: EventEmitter<void> = new EventEmitter<void>();\n    @Output() modify: EventEmitter<void> = new EventEmitter<void>();\n    @Output() loadCarRentals: EventEmitter<CarRental> = new EventEmitter<CarRental>();\n    @Output() changeCarRental: EventEmitter<void> = new EventEmitter<void>();\n    @Output() changeOptions: EventEmitter<CarRental> = new EventEmitter<CarRental>();\n    @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n    @Output() showCarRentalDetails: EventEmitter<CarRental> = new EventEmitter<CarRental>();\n    public buttons: string[] = [];\n    //public optionId!: string;\n    public showPackages = false;\n    public invalidCartItem = false;\n    public carRentalItemData: CarRental | undefined;\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private carRentalService: CarRentalService,\n        public platformService: PlatformService,\n        private modalService: ModalService\n    ) {}\n\n    ngOnInit() {\n        //this.optionId = this.carRentalItem.selectedItem.bookingOptions[0].optionId;\n        this.carRentalItemData = ToolsService.deepCopy(this.carRentalItem.selectedItem.data);\n        this.initializeActionBarButtons();\n        this.selectedChangeOptions.subscribe(() => {\n            console.log('external change options called');\n            this.onChangeOptions();\n        });\n        this.invalidCartItem = !this.carRentalItem.selectedItem.bookingOptions.some(\n            (option) =>\n                !(option.status >= CartStatus.STATUS_REJECTED && option.status !== CartStatus.STATUS_PRICE_CHANGED)\n        );\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n        this.selectedChangeOptions.unsubscribe();\n    }\n\n    public onRemove(): void {\n        this.remove.emit();\n    }\n\n    public onChangeCarRental(): void {\n        this.changeCarRental.emit();\n    }\n\n    public onChangeOptions(): void {\n        if (this.serviceList) {\n            if (this.platformService.isMobileDevice) {\n                this.showCarRentalDetails.emit(this.carRentalItemData);\n            } else {\n                this.setShowPackages(true);\n                if (this.carRentalItemData) {\n                    this.loadCarRentals.emit(this.carRentalItemData);\n                }\n            }\n        } else {\n            this.changeOptions.emit(this.carRentalItemData);\n        }\n    }\n\n    public onCancel(): void {\n        this.cancel.emit();\n    }\n\n    public hasChangeOptions(): boolean {\n        const bookingOptions = this.carRentalItem.selectedItem.bookingOptions;\n        if (bookingOptions && bookingOptions.length) {\n            return bookingOptions[0].rentalPackageInfo.nbPackage > 1 || bookingOptions[0].rentalPackageInfo.hasExtras;\n        }\n        return false;\n    }\n\n    public onCarRentalChangeCancel(): void {\n        this.carRentalItemData = ToolsService.deepCopy(this.carRentalItem.selectedItem.data);\n        this.setShowPackages(false);\n    }\n\n    public onSubmitCarRentalChange() {\n        this.changeOptions.emit(this.carRentalItemData);\n    }\n\n    public selectRentalPackage(rentalPackage: CarRentalPackage): void {\n        if (this.carRentalItemData) {\n            this.carRentalItemData.currentPackage = ToolsService.deepCopy(rentalPackage);\n        }\n    }\n\n    public onOpenPopupModel(rentalModel: { carRental: CarRental; modelType: string }) {\n        this.carRentalService.openPopupModel(rentalModel);\n    }\n\n    public onShowCarDetails(): void {\n        const openPopupModel$: Subject<{\n            carRental: CarRental;\n            modelType: string;\n        }> = new Subject<{\n            carRental: CarRental;\n            modelType: string;\n        }>();\n\n        openPopupModel$.pipe(takeUntil(this.destroy$)).subscribe((data) => {\n            this.onOpenPopupModel(data);\n        });\n\n        this.modalService.createDetailsPage(MobCarRentalDetailsComponent, {\n            data: {\n                carRental: this.carRentalItem.selectedItem.data,\n                openPopupModel$,\n                type: 'details',\n            },\n            title: 'CAR_RENTAL.SELECTED',\n        });\n    }\n\n    private setShowPackages(val: boolean) {\n        this.showPackages = val;\n        this.showPackagesFlag.emit(val);\n    }\n\n    private initializeActionBarButtons() {\n        this.buttons = TzSelectedService.initializeActionBarButtons(\n            this.carRentalItem.selectedItem,\n            this.fromBookings,\n            this.serviceList,\n            this.paymentCaptureMode,\n            false\n        );\n\n        if (!this.fromBookings && !CartUtils.hasBooked(this.carRentalItem.selectedItem.bookingOptions)) {\n            this.buttons.push('changeCarRental');\n\n            if (this.hasChangeOptions()) {\n                if (!CartUtils.hasBookingStarted(this.carRentalItem.selectedItem.bookingOptions)) {\n                    this.buttons.push('changeOptions');\n                } else if (CartUtils.hasUnavailable(this.carRentalItem.selectedItem.bookingOptions)) {\n                    this.buttons.push('update');\n                }\n            }\n        }\n    }\n}\n","<div *ngIf=\"!platformService.isMobileDevice\" class=\"transfer-cart-item-container\">\n    <div class=\"tz-block-separator-title\">\n        <tz-block-separator>{{ carRentalItem.summaryTitle }}</tz-block-separator>\n    </div>\n    <div class=\"car-rental-list-cart-item\" [ngClass]=\"{ 'rejected-cart-item': invalidCartItem }\">\n        <tz-rejected-cart-item-banner\n            *ngIf=\"invalidCartItem\"\n            [service]=\"'SERVICES.2' | translate\"\n        ></tz-rejected-cart-item-banner>\n        <tz-car-rental-list-item\n            [selectable]=\"false\"\n            [carRental]=\"carRentalItemData\"\n            (openPopupModel)=\"onOpenPopupModel($event)\"\n            [oldPrice]=\"carRentalItem.oldPrice\"\n            [ngClass]=\"{ 'tz-selected-service-list': serviceList }\"\n        >\n        </tz-car-rental-list-item>\n    </div>\n    <div class=\"car-rental-packages\" *ngIf=\"carRentalItemData && this.showPackages && packages && packages.length > 1\">\n        <tz-car-rental-packages\n            (selectPackage)=\"selectRentalPackage($event)\"\n            [packages]=\"packages\"\n            [currentKey]=\"carRentalItemData.currentPackage.packageKey\"\n        >\n        </tz-car-rental-packages>\n    </div>\n    <div class=\"accommodation-actions-bar-container\" *ngIf=\"!showPackages\">\n        <tz-cart-item-actions-bar\n            (remove)=\"onRemove()\"\n            (modify)=\"onChangeCarRental()\"\n            [buttons]=\"buttons\"\n            (changeCarRental)=\"onChangeCarRental()\"\n            (changeOptions)=\"onChangeOptions()\"\n            (cancel)=\"onCancel()\"\n            [combId]=\"combId\"\n            [status]=\"carRentalItem.selectedItem.bookingOptions[0].status\"\n            [optionId]=\"carRentalItem.selectedItem.bookingOptions[0].optionId\"\n        ></tz-cart-item-actions-bar>\n    </div>\n    <tz-service-booking-confirmation\n        *ngIf=\"showPackages\"\n        (cancelSelection)=\"onCarRentalChangeCancel()\"\n        (submitBooking)=\"onSubmitCarRentalChange()\"\n    ></tz-service-booking-confirmation>\n</div>\n\n<div *ngIf=\"platformService.isMobileDevice\">\n    <div class=\"tz-block-separator-title\">\n        <tz-block-separator>{{ carRentalItem.summaryTitle }}</tz-block-separator>\n    </div>\n    <div class=\"bg-white\">\n        <tz-rejected-cart-item-banner\n            *ngIf=\"invalidCartItem\"\n            [service]=\"'SERVICES.2' | translate\"\n        ></tz-rejected-cart-item-banner>\n        <div (click)=\"onShowCarDetails()\" [ngClass]=\"{ 'tz-mob-rejected-cart-item': invalidCartItem }\">\n            <tz-mob-car-rental-list-item\n                [isPopup]=\"invalidCartItem\"\n                [oldPrice]=\"carRentalItem.oldPrice\"\n                [carRental]=\"carRentalItem.selectedItem.data\"\n                [combId]=\"combId\"\n                [serviceList]=\"serviceList\"\n            ></tz-mob-car-rental-list-item>\n        </div>\n    </div>\n    <div class=\"accommodation-actions-bar-container\">\n        <tz-cart-item-actions-bar\n            (remove)=\"onRemove()\"\n            (modify)=\"onChangeOptions()\"\n            [buttons]=\"buttons\"\n            (changeCarRental)=\"onChangeCarRental()\"\n            (changeOptions)=\"onChangeOptions()\"\n            (cancel)=\"onCancel()\"\n            [combId]=\"combId\"\n            [status]=\"carRentalItem.selectedItem.bookingOptions[0].status\"\n        ></tz-cart-item-actions-bar>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CarRental } from '@schemas/modules/car-rentals/car-rental';\nimport { CarRentalLocation } from '@schemas/modules/car-rentals/car-rental-location';\n\n@Component({\n    selector: 'tz-mob-car-location',\n    templateUrl: './mob-car-location.component.html',\n    styleUrls: ['./mob-car-location.component.scss'],\n})\nexport class MobCarLocationComponent implements OnInit {\n    @Input() carRental!: CarRental;\n    private data!: {\n        carRental: CarRental;\n    };\n\n    constructor() {}\n\n    get getCarRentalLocations(): CarRentalLocation[] {\n        if (this.carRental.pickupDropOffDiff) {\n            return [this.carRental.pickupLocation, this.carRental.dropOffLocation];\n        } else {\n            return [this.carRental.pickupLocation];\n        }\n    }\n\n    ngOnInit() {\n        this.carRental = this.data.carRental;\n    }\n}\n","<div class=\"mob-car-location-container\" data-test=\"car-rental-location-text\">\n    <ng-container *ngFor=\"let location of getCarRentalLocations; let i = index\">\n        <p class=\"title mb-16\">\n            {{\n                (carRental.pickupDropOffDiff\n                    ? i === 0\n                        ? 'CAR_RENTAL.PICK_UP'\n                        : 'CAR_RENTAL.DROP_OFF'\n                    : 'CAR_RENTAL.DROP_OFF'\n                ) | translate\n            }}\n        </p>\n\n        <div class=\"content pt-0\">\n            <p class=\"mb-16\">\n                {{ carRental.provider.name }}\n                {{ location.name !== '' ? ', ' + location.name : '' }}\n                {{ location.address !== '' ? ', ' + location.address : '' }}\n            </p>\n            <p *ngIf=\"location.phoneNumber\">{{ 'CAR_RENTAL.PHONE' | translate }}: {{ location.phoneNumber }}</p>\n\n            <p *ngIf=\"location.locationId\">\n                {{ 'CAR_RENTAL.INFOS.LOCATION_CODE' | translate }}: {{ location.locationId }}\n            </p>\n            <div *ngIf=\"location.openingHours\">\n                <ng-container *ngFor=\"let opening of location.openingHours\">\n                    <p>{{ opening }}</p>\n                </ng-container>\n            </div>\n            <p *ngIf=\"location.locationInfo\" [innerHTML]=\"location.locationInfo\"></p>\n        </div>\n    </ng-container>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { ModalOpenOptions } from '@core/constants/modal';\nimport { CarRental, RentalTerm } from '@schemas/modules/car-rentals/car-rental';\nimport { CarRentalPackage } from '@schemas/modules/car-rentals/car-rental-package';\nimport { ModalService } from '@services/modal.service';\nimport { CarRentalDataService } from '@services/modules/car-rental/dataservices/car-rental.data.service';\nimport { Subject } from 'rxjs';\nimport { CarRentalLocationDialogComponent } from '../car-rental-location-dialog/car-rental-location-dialog.component';\nimport { CarRentalPackageDialogComponent } from '../car-rental-package-dialog/car-rental-package-dialog.component';\nimport { MobCarLocationComponent } from '../mob-car-location/mob-car-location.component';\nimport { MobCarTermsComponent } from '../mob-car-terms/mob-car-terms.component';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-mob-car-rental-details',\n    templateUrl: './mob-car-rental-details.component.html',\n    styleUrls: ['./mob-car-rental-details.component.scss'],\n})\nexport class MobCarRentalDetailsComponent implements OnInit {\n    public carRental!: CarRental;\n    public selectedRentalPackage = false;\n    private data!: {\n        carRental: CarRental;\n        selectedCar: CarRental;\n        type: 'details' | 'action';\n        openPopupModel$: Subject<{ carRental: CarRental; modelType: string }>;\n    };\n\n    constructor(\n        private modalService: ModalService,\n        private carRentalService: CarRentalDataService,\n        public platformService: PlatformService\n    ) {}\n\n    get isTypeAction(): boolean {\n        return this.data.type !== 'details';\n    }\n\n    ngOnInit() {\n        this.carRental = this.data.carRental;\n    }\n\n    public onOpenPopup(modelType: string): void {\n        const selectedPackage: any = this.carRental?.packagesAvailable.find(\n            (availPackage) => availPackage.name === this.carRental?.currentPackage.name\n        );\n\n        switch (modelType) {\n            case 'location':\n                this.modalService.createDetailsPage(\n                    MobCarLocationComponent,\n                    {\n                        data: { carRental: this.carRental },\n                        title: 'CAR_RENTAL.LOCATION',\n                    },\n                    { openOptions: ModalOpenOptions.LEFT }\n                );\n                break;\n            case 'terms':\n                this.carRentalService.getCarRentalTerms(this.carRental, selectedPackage).subscribe(\n                    (terms: RentalTerm[]) => {\n                        this.showRentalTerms(terms);\n                    },\n                    (err: any) => {\n                        console.log('Terms error: ', err);\n                        this.showRentalTerms([]);\n                    }\n                );\n                break;\n            case 'package':\n                this.modalService.createMainModal(\n                    CarRentalPackageDialogComponent,\n                    {\n                        data: { selectedPackage },\n                        title: 'CAR_RENTAL.PACKAGE',\n                        cssClass: 'mob-modal-fullscreen',\n                    },\n                    { openOptions: ModalOpenOptions.RIGHT }\n                );\n                break;\n            default:\n                break;\n        }\n    }\n\n    public packageSelected(isPackageSelected: boolean): void {\n        this.selectedRentalPackage = isPackageSelected;\n    }\n\n    public selectRentalPackage(carRentalPackage: CarRentalPackage): void {\n        this.carRental.currentPackage = carRentalPackage;\n    }\n\n    public onConfirm(): void {\n        this.modalService.dismiss(this.carRental);\n    }\n\n    private showRentalTerms(carRentalTerms: RentalTerm[]): void {\n        this.modalService.createDetailsPage(\n            MobCarTermsComponent,\n            {\n                data: { carRentalTerms },\n                title: 'CAR_RENTAL.TERMS_CONDITIONS',\n            },\n            { openOptions: ModalOpenOptions.LEFT }\n        );\n    }\n}\n","<div\n    class=\"tz-mob-modal-rent-details\"\n    [ngClass]=\"{\n        'tz-mob-modal-rent-details--package-selected': selectedRentalPackage,\n        'mob-app': selectedRentalPackage && !platformService.isMobileBrowser && platformService.isMobile\n    }\"\n>\n    <div class=\"tz-mob-modal-rent-details__car-item\">\n        <tz-mob-car-rental-list-item [carRental]=\"carRental\" [isPopup]=\"true\"></tz-mob-car-rental-list-item>\n    </div>\n\n    <div class=\"tz-mob-modal-rent-details__links\">\n        <div>\n            <tz-mob-modal-page-link (click)=\"onOpenPopup('terms')\" [isMobileIcon]=\"true\">\n                {{ 'CAR_RENTAL.TERMS_CONDITIONS' | translate }}\n            </tz-mob-modal-page-link>\n        </div>\n\n        <div>\n            <tz-mob-modal-page-link (click)=\"onOpenPopup('location')\" [isMobileIcon]=\"true\">\n                {{ 'CAR_RENTAL.LOCATION' | translate }}\n            </tz-mob-modal-page-link>\n        </div>\n\n        <div *ngIf=\"isTypeAction\">\n            <tz-mob-modal-page-link (click)=\"onOpenPopup('package')\" [isMobileIcon]=\"true\">\n                {{ carRental.currentPackage.name }} {{ 'CAR_RENTAL.INFOS.PACKAGE_DETAILS' | translate }}\n            </tz-mob-modal-page-link>\n        </div>\n    </div>\n\n    <div *ngIf=\"isTypeAction\">\n        <tz-car-rental-packages\n            *ngIf=\"carRental.packagesAvailable.length > 1\"\n            [packages]=\"carRental.packagesAvailable\"\n            [currentKey]=\"carRental.currentPackage.packageKey\"\n            (packageSelected)=\"packageSelected($event)\"\n            (selectPackage)=\"selectRentalPackage($event)\"\n        ></tz-car-rental-packages>\n\n        <div>\n            <button (click)=\"onConfirm()\" class=\"tz-btn tz-btn-primary\">\n                {{ 'GENERAL.CONFIRM_CONTINUE' | translate }}\n            </button>\n        </div>\n    </div>\n\n    <div *ngIf=\"!isTypeAction\">\n        <tz-car-rental-packages\n            [mobIsTypeDetails]=\"true\"\n            [days]=\"carRental.days\"\n            [packages]=\"carRental.packagesAvailable\"\n            [currentKey]=\"carRental.currentPackage.packageKey\"\n            (packageSelected)=\"packageSelected($event)\"\n            (selectPackage)=\"selectRentalPackage($event)\"\n        ></tz-car-rental-packages>\n    </div>\n\n    <div\n        *ngIf=\"selectedRentalPackage\"\n        id=\"carDetailsFooter\"\n        class=\"tz-mob-modal-rent-details__confirm tz-fixed-bottom\"\n        [class.mob-app]=\"!platformService.isMobileBrowser\"\n    >\n        <div class=\"tz-mob-modal-rent-details__confirm-top\">\n            <p class=\"tz-mob-modal-rent-details__confirm-total\">{{ 'TOTAL' | translate }}</p>\n            <p class=\"tz-mob-modal-rent-details__confirm-price\">\n                {{\n                    carRental.currentPackage.totalPrice.listPrice\n                        | tzCurrency: carRental.currentPackage.totalPrice.listPriceCur\n                }}\n            </p>\n        </div>\n        <p class=\"tz-mob-modal-rent-details__confirm-description\">\n            {{ 'GENERAL.PRICE_FOR' | translate }} {{ carRental.days }}\n            {{ 'GENERAL.' + (carRental.days > 1 ? 'DAYS' : 'DAY') | translate }}\n            <span class=\"tz-mob-modal-rent-details__separator\">| </span>\n            <span class=\"tz-mob-modal-rent-details__taxes inline-block first-letter-uppercase\">\n                {{ 'All taxes included' | translate }}\n            </span>\n        </p>\n        <button class=\"tz-btn tz-btn-primary tz-btn--select full-width\" (click)=\"onConfirm()\">\n            {{ 'GENERAL.CONFIRM' | translate }}\n        </button>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CarRental } from '@schemas/modules/car-rentals/car-rental';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { TzServiceTabs } from '../../../tabsUtils/tz-tabs-service';\n\n@Component({\n    selector: 'tz-mob-car-rental-list-item',\n    templateUrl: './mob-car-rental-list-item.component.html',\n    styleUrls: ['./mob-car-rental-list-item.component.scss'],\n})\nexport class MobCarRentalListItemComponent implements OnInit {\n    @Input() carRental: CarRental | null | undefined;\n    @Input() carRentalItem: ICartItem | undefined;\n    @Input() oldPrice = 0;\n    @Input() isPopup = false;\n    @Input() serviceList = false;\n    @Input() combId: CombinationId | undefined;\n\n    @Output() selectedCarRental: EventEmitter<void> = new EventEmitter<void>();\n\n    carName: string | undefined = '';\n    carSimilar = false;\n    public changedPriceDiff = '';\n\n    constructor(private serviceTabs: TzServiceTabs) {}\n\n    public ngOnInit(): void {\n        this.initData();\n        if (this.carRental) {\n            this.carName = this.carRental?.vehicle.name.toLowerCase() || '';\n\n            /*const indexSimilar = this.carName.indexOf('or similar');\n\n            if (indexSimilar > 0) {\n                this.carName = this.carName.slice(0, indexSimilar);\n                this.carSimilar = true;\n            }*/\n        }\n    }\n\n    private initData(): void {\n        const currentCartPrice = this.carRental?.currentPackage.totalPrice.listPrice;\n\n        if (this.oldPrice > 0 && currentCartPrice) {\n            this.changedPriceDiff = this.serviceTabs.updatePriceChanging(this.oldPrice, currentCartPrice);\n        }\n    }\n}\n","<div *ngIf=\"carRental\" [class]=\"{ 'tz-mob-selected-block': serviceList }\">\n    <div class=\"tz-mob-item__block\">\n        <div class=\"tz-mob-item__image-block\">\n            <img\n                class=\"tz-mob-item__image\"\n                *ngIf=\"carRental.vehicle.image.url\"\n                [src]=\"carRental.vehicle.image.url\"\n                alt=\"\"\n            />\n            <img\n                class=\"tz-mob-item__image\"\n                *ngIf=\"!carRental.vehicle.image.url\"\n                src=\"/assets/icons/web/img/no_image.png\"\n                alt=\"\"\n            />\n            <img\n                class=\"tz-mob-item__cars-model-icon\"\n                src=\"/assets/icons/web/img/supplierLogos/{{ carRental.provider.code }}.png\"\n                alt=\"\"\n            />\n        </div>\n\n        <div class=\"tz-mob-item__info-block\">\n            <h3 class=\"tz-mob-item__car-name\">\n                {{ carName }}\n                <span *ngIf=\"carRental.vehicle.orSimilar\">{{ 'TRANSFER.BE.Or_similar' | translate }}</span>\n            </h3>\n            <p class=\"tz-mob-item__description\">\n                {{ (carRental.vehicle.class !== '' ? 'CAR_RENTAL.TYPE.' + carRental.vehicle.class : '') | translate }}\n                {{\n                    carRental.vehicle.type.description !== '' && carRental.vehicle.type.description !== 'Car'\n                        ? ' ' + ('CAR_RENTAL.TYPE.' + carRental.vehicle.type.description | translate)\n                        : ''\n                }}\n                <span class=\"separator\">|</span>\n                {{ carRental.vehicle.code }}\n            </p>\n            <p class=\"tz-mob-item__terms\" *ngIf=\"carRental.cancellation.isFree\">\n                <span class=\"tz-mob-item__terms--green\">\n                    {{\n                        carRental.cancellation.freeCpBefore > 0\n                            ? ('CANCELLATION.FREE_CP_BEFORE_HOUR'\n                              | translate: { hour: carRental.cancellation.freeCpBefore })\n                            : (carRental.cancellation.messageKey\n                              | translate: { date: (carRental.cancellation.endDateTime | tzDate) })\n                    }}\n                </span>\n            </p>\n            <p class=\"tz-mob-item__capacity\">\n                <span\n                    title=\"{{ carRental.vehicle.suitcases }} {{\n                        carRental.vehicle.suitcases > 0\n                            ? ('CAR_RENTAL.SEATS' | translate | lowercase)\n                            : ('CAR_RENTAL.SEAT' | translate | lowercase)\n                    }}\"\n                >\n                    {{ carRental.vehicle.suitcases }}\n                    {{\n                        carRental.vehicle.suitcases > 0\n                            ? ('CAR_RENTAL.SEATS' | translate)\n                            : ('CAR_RENTAL.SEAT' | translate)\n                    }}\n                </span>\n                <span\n                    *ngIf=\"carRental.vehicle.numberOfDoors\"\n                    data-test=\"car-rentals-car-doors\"\n                    title=\"{{ carRental.vehicle.numberOfDoors }} {{\n                        carRental.vehicle.numberOfDoors > 1\n                            ? ('CAR_RENTAL.VEHICLE.DOORS' | translate)\n                            : ('CAR_RENTAL.VEHICLE.DOOR' | translate)\n                    }}\"\n                >\n                    {{ carRental.vehicle.numberOfDoors }}\n                    {{\n                        carRental.vehicle.numberOfDoors > 1\n                            ? ('CAR_RENTAL.VEHICLE.DOORS' | translate)\n                            : ('CAR_RENTAL.VEHICLE.DOOR' | translate)\n                    }}\n                </span>\n            </p>\n            <div class=\"tz-mob-item__car-info\">\n                <div *ngIf=\"!!carRental.currentPackage.packageInfo.fuelPolicy\">\n                    <tz-svg-icon [icon]=\"'car-gas'\" [styles]=\"{ 'height.px': 16, 'width.px': 16.04 }\"></tz-svg-icon>\n                    <span title=\"Automatic\">\n                        {{ carRental.currentPackage.packageInfo.fuelPolicy }}\n                    </span>\n                </div>\n                <div *ngIf=\"!carRental.vehicle.automaticGearbox\">\n                    <tz-svg-icon [icon]=\"'gear'\" [styles]=\"{ 'height.px': 16, 'width.px': 16.04 }\"></tz-svg-icon>\n                    <span title=\"Manual gear\">\n                        {{ 'CAR_RENTAL.VEHICLE.MANUAL' | translate }}\n                    </span>\n                </div>\n                <div *ngIf=\"carRental.vehicle.automaticGearbox\">\n                    <tz-svg-icon [icon]=\"'flat-gray'\" [styles]=\"{ 'height.px': 16, 'width.px': 16.04 }\"></tz-svg-icon>\n                    <span title=\"Automatic\">\n                        {{ 'CAR_RENTAL.VEHICLE.AUTOMATIC' | translate }}\n                    </span>\n                </div>\n                <div *ngIf=\"carRental.vehicle.airconditioning\">\n                    <tz-svg-icon\n                        [icon]=\"'condition-gray'\"\n                        [styles]=\"{ 'height.px': 16, 'width.px': 16.04 }\"\n                    ></tz-svg-icon>\n                    <span title=\"A/C\" data-test=\"car-rentals-car-a/c\">A/C</span>\n                </div>\n            </div>\n            <p class=\"tz-mob-item__location\" *ngIf=\"!carRental.pickupDropOffDiff\">\n                <span>{{ 'CAR_RENTAL.PICK_UP' | translate }} & {{ 'CAR_RENTAL.DROP_OFF' | translate }} : </span>\n                {{ carRental.pickupLocation.name }}\n            </p>\n            <p class=\"tz-mob-item__location\" *ngIf=\"carRental.pickupDropOffDiff\">\n                <span>{{ 'CAR_RENTAL.PICK_UP' | translate }} : </span>\n                {{ carRental.pickupLocation.name }}\n            </p>\n            <p class=\"tz-mob-item__date first\">\n                <span>{{ carRental.pickupTzDate | tzDate: 'mediumDate' }}</span>\n                <span>{{ carRental.pickupTzDate | tzDate: 'shortTime' }}</span>\n            </p>\n            <p class=\"tz-mob-item__location\" *ngIf=\"carRental.pickupDropOffDiff\">\n                <span>{{ 'CAR_RENTAL.DROP_OFF' | translate }} : </span>\n                {{ carRental.dropOffLocation.name }}\n            </p>\n            <p class=\"tz-mob-item__date\">\n                <span>{{ carRental.dropOffTzDate | tzDate: 'mediumDate' }}</span>\n                <span>{{ carRental.dropOffTzDate | tzDate: 'shortTime' }}</span>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"tz-mob-item__bottom-block\">\n        <tz-mob-price-changed-block *ngIf=\"oldPrice > 0\" class=\"mob-price-changed-block\"></tz-mob-price-changed-block>\n        <p class=\"tz-mob-item__price\">\n            <span class=\"mob-price-change-diff\" *ngIf=\"oldPrice > 0\">{{ changedPriceDiff }}</span\n            >{{\n                carRental.currentPackage.totalPrice.listPrice\n                    | tzCurrency: carRental.currentPackage.totalPrice.listPriceCur\n            }}\n        </p>\n        <p class=\"tz-mob-item__price-for\">\n            {{ 'GENERAL.PRICE_FOR' | translate }} {{ carRental.days }}\n            {{ 'GENERAL.' + (carRental.days > 1 ? 'DAYS' : 'DAY') | translate }}\n        </p>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { RentalTerm } from '@schemas/modules/car-rentals/car-rental';\n\n@Component({\n    selector: 'tz-mob-car-terms',\n    templateUrl: './mob-car-terms.component.html',\n    styleUrls: ['./mob-car-terms.component.scss'],\n})\nexport class MobCarTermsComponent implements OnInit {\n    @Input() carRentalTerms: RentalTerm[] = [];\n    private data!: {\n        carRentalTerms: any;\n    };\n\n    constructor(private toolService: ToolsService) {}\n\n    ngOnInit() {\n        this.carRentalTerms = ToolsService.deepCopy(this.data.carRentalTerms);\n    }\n}\n","<div class=\"mob-car-terms__container\" data-test=\"car-rental-terms-text\">\n    <div class=\"mob-car-terms__content\">\n        <ng-container *ngFor=\"let term of carRentalTerms\">\n            <p class=\"title\">\n                {{ term.title }}\n            </p>\n            <div class=\"description\" [innerHTML]=\"term.description\"></div>\n        </ng-container>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Transfer } from '@schemas/modules/transfers/transfer';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { CarRental } from '@schemas/modules/car-rentals/car-rental';\nimport { CarRentalPackage } from '@schemas/modules/car-rentals/car-rental-package';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { PaymentCaptureMode } from '@core/constants/cart-status';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-selected-car-rentals',\n    templateUrl: './selected-car-rentals.component.html',\n    styleUrls: ['./selected-car-rentals.component.scss'],\n})\nexport class SelectedCarRentalsComponent implements OnInit {\n    @Input() serviceList = false;\n    @Input() combId!: CombinationId;\n    @Input() carRentalCartData!: ICart;\n    @Input() carRentalPackages: CarRentalPackage[] = [];\n    @Input() fromBookings = false;\n    @Input() paymentCaptureMode = PaymentCaptureMode.NORMAL_MODE;\n    @Input() detailPage = false;\n    @Input() selectedChangeOptions: EventEmitter<void> = new EventEmitter<void>();\n    @Output() loadCarRentalPackages: EventEmitter<CarRental> = new EventEmitter<CarRental>();\n    @Output() removedItem: EventEmitter<string> = new EventEmitter<string>();\n    @Output() changeCarRentals: EventEmitter<void> = new EventEmitter<void>();\n    @Output() modifyCarRentalsOptions: EventEmitter<void> = new EventEmitter<void>();\n    @Output() modify: EventEmitter<void> = new EventEmitter<void>();\n    @Output() newCarRentalPackageSelected: EventEmitter<CarRental> = new EventEmitter<CarRental>();\n    @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n    @Output() showCarRentalDetails: EventEmitter<CarRental> = new EventEmitter<CarRental>();\n    @Output() showPackagesFlag: EventEmitter<boolean> = new EventEmitter<boolean>();\n    public selectedTransfer!: Transfer;\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit() {}\n\n    public onRemove(): void {\n        this.removedItem.emit();\n    }\n\n    public onLoadCarRentalPackages() {\n        this.loadCarRentalPackages.emit(this.carRentalCartData.items[0].selectedItem.data);\n    }\n\n    public onChangeCarRentals(): void {\n        this.changeCarRentals.emit();\n    }\n\n    public onModify(): void {\n        this.modifyCarRentalsOptions.emit();\n    }\n\n    public onDebugDialogOpened(): void {}\n\n    public onChangeCarRentalOptions(carRental: CarRental): void {\n        if (this.serviceList) {\n            this.newCarRentalPackageSelected.emit(carRental);\n        } else {\n            this.modifyCarRentalsOptions.emit();\n        }\n    }\n\n    public onCancel(): void {\n        this.cancel.emit();\n    }\n}\n","<div class=\"selected-transfer-container flex flex-column\" *ngIf=\"carRentalCartData.items.length\">\n    <div class=\"transfer-cart-item\" *ngFor=\"let carRentalItem of carRentalCartData.items\">\n        <tz-car-rentals-cart-item\n            [serviceList]=\"serviceList\"\n            [carRentalItem]=\"carRentalItem\"\n            [packages]=\"carRentalPackages\"\n            [selectedChangeOptions]=\"selectedChangeOptions\"\n            (showPackagesFlag)=\"showPackagesFlag.emit($event)\"\n            (remove)=\"onRemove()\"\n            (changeCarRental)=\"onChangeCarRentals()\"\n            (modify)=\"onChangeCarRentals()\"\n            (loadCarRentals)=\"onLoadCarRentalPackages()\"\n            (changeOptions)=\"onChangeCarRentalOptions($event)\"\n            (showCarRentalDetails)=\"showCarRentalDetails.emit(carRentalItem.selectedItem.data)\"\n            [combId]=\"combId\"\n            [fromBookings]=\"fromBookings\"\n            [paymentCaptureMode]=\"paymentCaptureMode\"\n            (cancel)=\"onCancel()\"\n        ></tz-car-rentals-cart-item>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-acc-car-transfer-skeleton-loader',\n    templateUrl: './acc-car-transfer-skeleton.component.html',\n    styleUrls: ['./acc-car-transfer-skeleton.component.scss'],\n})\nexport class AccCarTransferSkeletonComponent implements OnInit {\n    public items!: number[];\n    private itemsCount = 20;\n\n    constructor() {}\n\n    ngOnInit() {\n        this.setItems();\n    }\n\n    private setItems(): void {\n        this.items = new Array(this.itemsCount);\n    }\n}\n","<div class=\"tz-skeleton-loader\">\n    <div class=\"tz-skeleton-top-border\"></div>\n\n    <div *ngFor=\"let item of items\" class=\"item tz-skeleton-loader-block flex\">\n        <div class=\"item-img img-large item-img-no-border\">\n            <ngx-skeleton-loader count=\"1\"></ngx-skeleton-loader>\n        </div>\n\n        <div class=\"item-text\">\n            <div class=\"item-text-item-space\">\n                <ngx-skeleton-loader\n                    count=\"1\"\n                    [theme]=\"{\n                        height: '1.25rem',\n                        width: '20.5rem'\n                    }\"\n                ></ngx-skeleton-loader>\n            </div>\n\n            <div>\n                <ngx-skeleton-loader\n                    count=\"1\"\n                    [theme]=\"{\n                        height: '0.75rem',\n                        width: '16rem'\n                    }\"\n                ></ngx-skeleton-loader>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'tz-car-transfer-skeleton',\n    templateUrl: './car-transfer-skeleton.component.html',\n    styleUrls: ['./car-transfer-skeleton.component.scss'],\n})\nexport class CarTransferSkeletonComponent {\n    @Input() isRental = false;\n\n    public items = new Array(20);\n\n    constructor() {}\n}\n","<div class=\"tz-skeleton-loader\">\n    <div *ngFor=\"let item of items\" class=\"tz-skeleton-block\" [ngClass]=\"{ rental: isRental }\">\n        <div class=\"car-option-skeleton\">\n            <ngx-skeleton-loader [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n            <ngx-skeleton-loader [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n            <ngx-skeleton-loader class=\"small\" [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n        </div>\n        <div class=\"car-img-skeleton\">\n            <ngx-skeleton-loader [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-flight-train-skeleton-loader',\n    templateUrl: './flight-train-skeleton-loader.component.html',\n    styleUrls: ['./flight-train-skeleton-loader.component.scss'],\n})\nexport class FlightTrainSkeletonLoaderComponent implements OnInit {\n    @Input() twoWay = false;\n\n    public transports!: number[];\n    public transportItems!: number[];\n    private transportsCount = 20;\n    private transportItemsCount = 1;\n\n    constructor() {}\n\n    ngOnInit() {\n        if (this.twoWay) {\n            this.transportItemsCount = 2;\n        }\n\n        this.setTransports();\n    }\n\n    private setTransports(): void {\n        this.transports = new Array(this.transportsCount);\n        this.transportItems = new Array(this.transportItemsCount);\n    }\n}\n","<div class=\"tz-skeleton-loader\">\n    <div class=\"tz-skeleton-top-border\"></div>\n\n    <div *ngFor=\"let transport of transports\" class=\"transport tz-skeleton-loader-block\">\n        <div *ngFor=\"let transportItem of transportItems; let last = last\" class=\"transport-item flex\">\n            <div class=\"transport-img img-small\">\n                <ngx-skeleton-loader count=\"1\"></ngx-skeleton-loader>\n            </div>\n\n            <div class=\"transport-text\">\n                <div class=\"transport-text-item-space\">\n                    <ngx-skeleton-loader\n                        count=\"1\"\n                        [theme]=\"{\n                            height: '0.75rem',\n                            width: '5.25rem'\n                        }\"\n                    ></ngx-skeleton-loader>\n                </div>\n\n                <div>\n                    <ngx-skeleton-loader\n                        count=\"1\"\n                        [theme]=\"{\n                            height: '0.75rem',\n                            width: '3rem'\n                        }\"\n                    ></ngx-skeleton-loader>\n                </div>\n            </div>\n            <div class=\"transport-info\">\n                <ngx-skeleton-loader\n                    count=\"1\"\n                    [theme]=\"{\n                        height: '0.75rem',\n                        width: '26.125rem'\n                    }\"\n                ></ngx-skeleton-loader>\n            </div>\n\n            <div *ngIf=\"last\" class=\"ml-a price-block\">\n                <div class=\"price-item-space\">\n                    <ngx-skeleton-loader\n                        count=\"1\"\n                        [theme]=\"{\n                            height: '1rem',\n                            width: '5.25rem'\n                        }\"\n                    ></ngx-skeleton-loader>\n                </div>\n                <div>\n                    <ngx-skeleton-loader\n                        count=\"1\"\n                        [theme]=\"{\n                            height: '1.625rem',\n                            width: '5.25rem'\n                        }\"\n                    ></ngx-skeleton-loader>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { SortByValueOption } from '@schemas/modules/core/sort-by-value.option';\n\n@Component({\n    selector: 'tz-mob-filter-navbar',\n    templateUrl: './mob-filter-navbar.component.html',\n    styleUrls: ['./mob-filter-navbar.component.scss'],\n})\nexport class MobFilterNavbarComponent implements OnInit, OnChanges {\n    @Input() sortKey: string | undefined = '';\n    @Input() sortByOptions: SortByValueOption[] = [];\n    @Input() isEnableClearFilter = false;\n    @Input() filtersCount: number | undefined;\n    @Input() displayMap = false;\n    @Input() skeletonLoading = true;\n    @Output() openFilter: EventEmitter<void> = new EventEmitter<void>();\n    @Output() resetFilter: EventEmitter<void> = new EventEmitter<void>();\n    @Output() openSort: EventEmitter<void> = new EventEmitter<void>();\n    @Output() showMap: EventEmitter<void> = new EventEmitter<void>();\n\n    public sortLabel = '';\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.setSortText();\n    }\n\n    public onOpenFilter(): void {\n        this.openFilter.emit();\n    }\n\n    public onResetFilter(): void {\n        this.resetFilter.emit();\n    }\n\n    public onShowMap(): void {\n        this.showMap.emit();\n    }\n\n    public onOpenSort(): void {\n        this.openSort.emit();\n    }\n\n    private setSortText(): void {\n        this.sortByOptions.map((sortByOption) => {\n            if (this.sortKey && sortByOption.sort === this.sortKey) {\n                this.sortLabel = sortByOption.label;\n            }\n        });\n    }\n}\n","<div\n    class=\"mob-filter-navbar\"\n    *ngIf=\"!skeletonLoading\"\n    [ngClass]=\"{\n        start: !displayMap\n    }\"\n>\n    <div class=\"mob-filter-navbar__filter-btn\">\n        <div (click)=\"onOpenFilter()\" class=\"mob-filter-navbar__filter-btn\">\n            <tz-svg-icon\n                icon=\"mob-filter\"\n                [styles]=\"{\n                    width: '0.9525rem',\n                    height: '0.833125rem'\n                }\"\n            >\n            </tz-svg-icon>\n            <div class=\"mob-filter-navbar__filter-text\">{{ 'FILTER.COMPONENT.FILTER' | translate }}</div>\n            <div *ngIf=\"filtersCount && isEnableClearFilter\">({{ filtersCount }})</div>\n        </div>\n        <div *ngIf=\"isEnableClearFilter\" class=\"mob-filter-navbar__filter-icon\">\n            <tz-svg-icon\n                (click)=\"onResetFilter()\"\n                icon=\"close-button\"\n                [styles]=\"{\n                    width: '0.583125rem',\n                    height: '0.583125rem',\n                    margin: '0 auto'\n                }\"\n            >\n            </tz-svg-icon>\n        </div>\n    </div>\n    <div *ngIf=\"displayMap\" (click)=\"onShowMap()\" class=\"mob-filter-navbar__sort-btn\">\n        <tz-svg-icon\n            icon=\"mob-map-icon\"\n            [styles]=\"{\n                width: '1.0625rem',\n                height: '0.875rem'\n            }\"\n        >\n        </tz-svg-icon>\n        {{ 'GENERAL.MAP' | translate }}\n    </div>\n    <div class=\"mob-filter-navbar__sort-btn\" (click)=\"onOpenSort()\">\n        <tz-svg-icon icon=\"mob-sort-results\"></tz-svg-icon>\n        {{ sortLabel | translate }}\n    </div>\n</div>\n<div *ngIf=\"skeletonLoading\" class=\"tz-skeleton-loader skeleton-loader-btn-block\">\n    <ngx-skeleton-loader count=\"1\" [theme]=\"{ width: '100%', height: '100%' }\"></ngx-skeleton-loader>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-flight-train-skeleton-loader',\n    templateUrl: './mob-flight-train-skeleton-loader.component.html',\n    styleUrls: ['./mob-flight-train-skeleton-loader.component.scss'],\n})\nexport class MobFlightTrainSkeletonLoaderComponent implements OnInit {\n    @Input() isFlight = false;\n\n    public transports!: number[];\n    private transportsCount = 20;\n\n    constructor() {}\n\n    ngOnInit() {\n        this.transports = new Array(this.transportsCount);\n    }\n}\n","<div class=\"tz-skeleton-loader\">\n    <div *ngFor=\"let transport of transports\" class=\"tz-skeleton-block\">\n        <div class=\"transport-skeleton-option\">\n            <ngx-skeleton-loader [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n            <ngx-skeleton-loader [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n        </div>\n        <div class=\"transport-skeleton-option\" *ngIf=\"isFlight\">\n            <ngx-skeleton-loader [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n            <ngx-skeleton-loader [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n        </div>\n        <div class=\"transport-skeleton-option small\">\n            <ngx-skeleton-loader [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n            <ngx-skeleton-loader [theme]=\"{ height: '100%', width: '100%' }\"></ngx-skeleton-loader>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-price-change-tooltop',\n    templateUrl: './price-change-tooltop.component.html',\n    styleUrls: ['./price-change-tooltop.component.scss'],\n})\nexport class PriceChangeTooltopComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"price-change-tooltip\">\n    <div class=\"price-change-tooltip__title\">{{ 'BOOKINGS.PRICE_CHANGE_TOOLTIP.TITLE' | translate }}</div>\n    <div class=\"price-change-tooltip__message\">{{ 'BOOKINGS.PRICE_CHANGE_TOOLTIP.MESSAGE' | translate }}</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'tz-rejected-cart-item-banner',\n    templateUrl: './rejected-cart-item-banner.component.html',\n    styleUrls: ['./rejected-cart-item-banner.component.scss'],\n})\nexport class RejectedCartItemBannerComponent implements OnInit {\n    @Input() service = '';\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"rejected-banner\">\n    <div class=\"rejected-banner__title\">\n        <tz-icon icon=\"rejected-cart\"></tz-icon>\n        <div>{{ 'BOOKINGS.REJECTION.POPUPS.TITLE_7.1' | translate: { service: service | lowercase } }}</div>\n    </div>\n    <div class=\"rejected-banner__info\">\n        {{ 'BOOKINGS.REJECTION.POPUPS.MESSAGE_7.1' | translate: { service: service | lowercase } }}\n    </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { FlightSummary } from '@schemas/modules/flights/flight-summary.model';\n\n@Pipe({\n    name: 'flightAirlineName',\n})\nexport class FlightAirlineNamePipe implements PipeTransform {\n    transform(flightSummary: FlightSummary): string {\n        if (flightSummary.airlineName) {\n            return flightSummary.airlineName;\n        }\n\n        if (flightSummary.operatedByAirlines[0]) {\n            return flightSummary.operatedByAirlines[0];\n        }\n\n        return flightSummary.airline;\n    }\n}\n","import { NgModule } from '@angular/core';\n// eslint-disable-next-line max-len\nimport { SelectedAccommodationsComponent } from './accommodations/components/selected-accommodations/selected-accommodations.component';\nimport { SelectedTransfersComponent } from './transfers/components/selected-transfers/selected-transfers.component';\nimport { SelectedFlightsComponent } from './transport/flights/components/selected-flights/selected-flights.component';\n// eslint-disable-next-line max-len\nimport { AccommodationRoomOptionComponent } from './accommodation/components/accommodation-room-option/accommodation-room-option.component';\n// eslint-disable-next-line max-len\nimport { AccommodationTermsPopupComponent } from './accommodation/components/accommodation-terms-popup/accommodation-terms-popup.component';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '@shared/shared.module';\nimport { TransferListItemComponent } from './transfers/components/transfer-list-item/transfer-list-item.component';\n// eslint-disable-next-line max-len\nimport { AccommodationListItemComponent } from './accommodations/components/accommodation-list-item/accommodation-list-item.component';\n// eslint-disable-next-line max-len\nimport { AccommodationListItemFooterComponent } from './accommodations/components/accommodation-list-item-footer/accommodation-list-item-footer.component';\n// eslint-disable-next-line max-len\nimport { AccommodationListItemPriceInfoBlockComponent } from './accommodations/components/accommodation-list-item-price-info-block/accommodation-list-item-price-info-block.component';\n// eslint-disable-next-line max-len\nimport { FlightListItemComponent } from './transport/flights/components/flight-list-item/flight-list-item.component';\n// eslint-disable-next-line max-len\nimport { FlightProviderImageComponent } from './transport/flights/components/flight-provider-image/flight-provider-image.component';\n// eslint-disable-next-line max-len\nimport { MobFlightDirectionItemComponent } from './transport/flights/components/mob-flight-direction-item/mob-flight-direction-item.component';\nimport { RouterModule } from '@angular/router';\n// eslint-disable-next-line max-len\nimport { FlightListInfoBlockItemComponent } from './transport/flights/components/flight-list-info-block-item/flight-list-info-block-item.component';\n// eslint-disable-next-line max-len\nimport { FlightsPricingPlansComponent } from './transport/flights/components/flights-pricing-plans/flights-pricing-plans.component';\n// eslint-disable-next-line max-len\nimport { FlightItemDescPackagesComponent } from './transport/flights/components/flight-item-desc-packages/flight-item-desc-packages.component';\n// eslint-disable-next-line max-len\nimport { FlightListItemDescLuggageComponent } from './transport/flights/components/flight-list-item-desc-luggage/flight-list-item-desc-luggage.component';\n// eslint-disable-next-line max-len\nimport { FlightItemDescOptionsSummaryComponent } from './transport/flights/components/flight-item-desc-options-summary/flight-item-desc-options-summary.component';\n\nimport { CarRentalListItemComponent } from './car-rentals/components/car-rental-list-item/car-rental-list-item.component';\nimport { SelectedCarRentalsComponent } from './car-rentals/components/selected-car-rentals/selected-car-rentals.component';\n// eslint-disable-next-line max-len\nimport { CarRentalCartItemComponent } from './car-rentals/components/car-rentals-cart-item/car-rental-cart-item.component';\nimport { TransferCartItemComponent } from './transfers/components/transfer-cart-item/transfer-cart-item.component';\n\nimport { TrainsClassComponent } from './transport/trains/components/trains-class/trains-class.component';\n// eslint-disable-next-line max-len\nimport { TrainsClassDetailsComponent } from './transport/trains/components/trains-class-details/trains-class-details.component';\n// eslint-disable-next-line max-len\nimport { FlightListItemDescriptionComponent } from './transport/flights/components/flight-list-item-description/flight-list-item-description.component';\n// eslint-disable-next-line max-len\nimport { FlightListItemDescBlockComponent } from './transport/flights/components/flight-list-item-desc-block/flight-list-item-desc-block.component';\nimport { FlightTermsDialogComponent } from './transport/flights/components/flight-terms-dialog/flight-terms-dialog.component';\nimport { CarRentalPackagesComponent } from './car-rentals/components/car-rental-packages/car-rental-packages.component';\nimport { FlightAirlineNamePipe } from './pipes/flight-airline-name.pipe';\nimport { CarRentalPackageDialogComponent } from './car-rentals/components/car-rental-package-dialog/car-rental-package-dialog.component';\nimport { CarRentalLocationDialogComponent } from './car-rentals/components/car-rental-location-dialog/car-rental-location-dialog.component';\nimport { CarRentalTermsDialogComponent } from './car-rentals/components/car-rental-terms.dialog/car-rental-terms.dialog.component';\nimport { FlightTrainSkeletonLoaderComponent } from './components/flight-train-skeleton-loader/flight-train-skeleton-loader.component';\n// eslint-disable-next-line max-len\nimport { MobFlightTrainSkeletonLoaderComponent } from './components/mob-flight-train-skeleton-loader/mob-flight-train-skeleton-loader.component';\nimport { AccCarTransferSkeletonComponent } from './components/acc-car-transfer-skeleton/acc-car-transfer-skeleton.component';\nimport { FlightBagSeparatorComponent } from './transport/flights/components/flight-bag-separator/flight-bag-separator.component';\nimport { TrainsListItemInfoComponent } from './transport/trains/components/trains-list-item-info/trains-list-item-info.component';\n// eslint-disable-next-line max-len\nimport { ServiceBookingConfirmationComponent } from '@shared/components/service-booking-confirmation-component/service-booking-confirmation.component';\n// eslint-disable-next-line max-len\nimport { MobFlightListItemComponent } from './transport/flights/components/mob-flight-list-item/mob-flight-list-item.component';\n// eslint-disable-next-line max-len\nimport { MobFlightListItemInfoBlockComponent } from './transport/flights/components/mob-flight-list-item-info-block/mob-flight-list-item-info-block.component';\nimport { MobFilterNavbarComponent } from './components/mob-filter-navbar/mob-filter-navbar.component';\n// eslint-disable-next-line max-len\nimport { MobFilterModalComponent } from './components/mob-filter-modal/mob-filter-modal.component';\nimport { ResultsFiltersModule } from './results-filters/results-filters.module';\n// eslint-disable-next-line max-len\nimport { MobAccommodationsListItemComponent } from './accommodations/components/mob-accommodations-list-item/mob-accommodations-list-item.component';\nimport { SelectedTrainsComponent } from './transport/trains/components/selected-trains/selected-trains.component';\nimport { TrainCartItemComponent } from './transport/trains/components/train-cart-item/train-cart-item.component';\nimport { MobTrainsListItemComponent } from './transport/trains/components/mob-trains-list-item/mob-trains-list-item.component';\nimport { MobTrainDirectionComponent } from './transport/trains/components/mob-train-direction/mob-train-direction.component';\n// eslint-disable-next-line max-len\nimport { MobTrainsListItemInfoBlockComponent } from './transport/trains/components/mob-trains-list-item-info-block/mob-trains-list-item-info-block.component';\nimport { MobTrainDetailsComponent } from './transport/trains/components/mob-train-details/mob-train-details.component';\nimport { MobTrainRouteSchemeComponent } from './transport/trains/components/mob-train-route-scheme/mob-train-route-scheme.component';\n// eslint-disable-next-line max-len\nimport { MobCarRentalListItemComponent } from './car-rentals/components/mob-car-rental-list-item/mob-car-rental-list-item.component';\n// eslint-disable-next-line max-len\nimport { MobCarRentalDetailsComponent } from './car-rentals/components/mob-car-rental-details/mob-car-rental-details.component';\nimport { MobTransferListItemComponent } from './transfers/components/mob-transfer-list-item/mob-transfer-list-item.component';\nimport { MobTrainClassDetailsComponent } from './transport/trains/components/mob-train-class-details/mob-train-class-details.component';\nimport { MobSortResultsModalComponent } from './components/mob-sort-results-modal/mob-sort-results-modal.component';\nimport { AccommodationRoomComponent } from './accommodation/components/accommodation-room/accommodation-room.component';\n// eslint-disable-next-line max-len\nimport { MobSelectedTrainDetailsComponent } from './transport/trains/components/mob-selected-train-details/mob-selected-train-details.component';\n// eslint-disable-next-line max-len\nimport { MobSelectedTrainDetailsItemComponent } from './transport/trains/components/mob-selected-train-details-item/mob-selected-train-details-item.component';\n// eslint-disable-next-line max-len\nimport { MobTrainRouteSchemeHeaderComponent } from './transport/trains/components/mob-train-route-scheme-header/mob-train-route-scheme-header.component';\nimport { FacilitiesListComponent } from './transport/trains/components/facilities-list/facilities-list.component';\nimport { MobSummeryModalComponent } from './components/mob-summery-modal/mob-summery-modal.component';\nimport { MobCarLocationComponent } from './car-rentals/components/mob-car-location/mob-car-location.component';\nimport { MobCarTermsComponent } from './car-rentals/components/mob-car-terms/mob-car-terms.component';\nimport { CarTransferSkeletonComponent } from './components/car-transfer-skeleton/car-transfer-skeleton.component';\n// eslint-disable-next-line max-len\nimport { MobFlightItemDescOptionsSummaryComponent } from './transport/flights/components/mob-flight-item-desc-options-summary/mob-flight-item-desc-options-summary.component';\nimport { RejectedCartItemBannerComponent } from './components/rejected-cart-item-banner/rejected-cart-item-banner.component';\nimport { PriceChangeTooltopComponent } from './components/price-change-tooltop/price-change-tooltop.component';\nimport { MobTrainTermsModalComponent } from './transport/trains/components/mob-train-terms-modal/mob-train-terms-modal.component';\n@NgModule({\n    declarations: [\n        AccCarTransferSkeletonComponent,\n        AccommodationRoomComponent,\n        AccommodationRoomOptionComponent,\n        AccommodationTermsPopupComponent,\n        AccommodationListItemComponent,\n        AccommodationListItemFooterComponent,\n        AccommodationListItemPriceInfoBlockComponent,\n        CarRentalCartItemComponent,\n        CarRentalListItemComponent,\n        MobCarLocationComponent,\n        CarRentalLocationDialogComponent,\n        CarRentalPackageDialogComponent,\n        CarRentalPackagesComponent,\n        CarRentalTermsDialogComponent,\n        MobCarTermsComponent,\n        FlightAirlineNamePipe,\n        FlightItemDescPackagesComponent,\n        FlightListItemComponent,\n        FlightListItemDescLuggageComponent,\n        FlightBagSeparatorComponent,\n        FlightItemDescOptionsSummaryComponent,\n        FlightListInfoBlockItemComponent,\n        FlightListItemDescriptionComponent,\n        FlightListItemDescBlockComponent,\n        FlightTermsDialogComponent,\n        FlightsPricingPlansComponent,\n        FlightProviderImageComponent,\n        MobFlightDirectionItemComponent,\n        FlightTrainSkeletonLoaderComponent,\n        MobFlightTrainSkeletonLoaderComponent,\n        SelectedAccommodationsComponent,\n        SelectedTrainsComponent,\n        SelectedTransfersComponent,\n        SelectedFlightsComponent,\n        SelectedCarRentalsComponent,\n        TransferListItemComponent,\n        TransferCartItemComponent,\n        TrainCartItemComponent,\n        TrainsClassComponent,\n        TrainsClassDetailsComponent,\n        TrainsListItemInfoComponent,\n        ServiceBookingConfirmationComponent,\n        MobFlightListItemComponent,\n        MobFlightListItemInfoBlockComponent,\n        MobFilterNavbarComponent,\n        MobFilterModalComponent,\n        MobAccommodationsListItemComponent,\n        MobTrainsListItemComponent,\n        MobTrainDirectionComponent,\n        MobTrainsListItemInfoBlockComponent,\n        MobTrainTermsModalComponent,\n        MobTrainDetailsComponent,\n        MobTrainRouteSchemeComponent,\n        MobTrainClassDetailsComponent,\n        MobCarRentalListItemComponent,\n        MobCarRentalDetailsComponent,\n        MobTransferListItemComponent,\n        MobSortResultsModalComponent,\n        MobSelectedTrainDetailsComponent,\n        MobSelectedTrainDetailsItemComponent,\n        MobTrainRouteSchemeHeaderComponent,\n        FacilitiesListComponent,\n        MobSummeryModalComponent,\n        CarTransferSkeletonComponent,\n        RejectedCartItemBannerComponent,\n        MobFlightItemDescOptionsSummaryComponent,\n        PriceChangeTooltopComponent,\n    ],\n    imports: [CommonModule, SharedModule, RouterModule, ResultsFiltersModule],\n    exports: [\n        AccCarTransferSkeletonComponent,\n        AccommodationRoomComponent,\n        AccommodationRoomOptionComponent,\n        AccommodationTermsPopupComponent,\n        AccommodationListItemComponent,\n        AccommodationListItemFooterComponent,\n        AccommodationListItemPriceInfoBlockComponent,\n        CarRentalCartItemComponent,\n        CarRentalListItemComponent,\n        CarRentalLocationDialogComponent,\n        CarRentalPackageDialogComponent,\n        CarRentalPackagesComponent,\n        CarRentalTermsDialogComponent,\n        FlightAirlineNamePipe,\n        FlightItemDescPackagesComponent,\n        FlightListItemComponent,\n        FlightListItemDescLuggageComponent,\n        FlightBagSeparatorComponent,\n        FlightItemDescOptionsSummaryComponent,\n        FlightListInfoBlockItemComponent,\n        FlightListItemDescriptionComponent,\n        FlightListItemDescBlockComponent,\n        FlightTermsDialogComponent,\n        FlightsPricingPlansComponent,\n        FlightProviderImageComponent,\n        FlightTrainSkeletonLoaderComponent,\n        MobFlightTrainSkeletonLoaderComponent,\n        SelectedAccommodationsComponent,\n        SelectedTrainsComponent,\n        SelectedTransfersComponent,\n        SelectedFlightsComponent,\n        SelectedCarRentalsComponent,\n        TransferListItemComponent,\n        TransferCartItemComponent,\n        TrainCartItemComponent,\n        TrainsClassComponent,\n        TrainsClassDetailsComponent,\n        TrainsListItemInfoComponent,\n        ServiceBookingConfirmationComponent,\n        MobFlightListItemComponent,\n        MobCarTermsComponent,\n        MobFlightListItemInfoBlockComponent,\n        MobFilterNavbarComponent,\n        MobFilterModalComponent,\n        MobAccommodationsListItemComponent,\n        MobTrainsListItemComponent,\n        MobTrainDirectionComponent,\n        MobTrainTermsModalComponent,\n        MobTrainsListItemInfoBlockComponent,\n        MobTrainDetailsComponent,\n        MobTrainRouteSchemeComponent,\n        MobTrainClassDetailsComponent,\n        MobCarRentalListItemComponent,\n        MobCarLocationComponent,\n        MobCarRentalDetailsComponent,\n        MobTransferListItemComponent,\n        MobSortResultsModalComponent,\n        MobSelectedTrainDetailsComponent,\n        MobSummeryModalComponent,\n        CarTransferSkeletonComponent,\n        MobFlightItemDescOptionsSummaryComponent,\n        RejectedCartItemBannerComponent,\n        PriceChangeTooltopComponent,\n    ],\n})\nexport class ResultsCartItemSelectionModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { FilterItemCheckbox } from '@schemas/modules/core/filters/service-filter';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-filter-checkbox',\n    templateUrl: './checkbox.component.html',\n    styleUrls: ['./checkbox.component.scss'],\n})\nexport class FilterCheckboxComponent implements OnInit {\n    @Input() selected? = false;\n    @Input() label?: string;\n    @Input() checkbox!: FilterItemCheckbox;\n    @Input() className = '';\n    @Input() stopPropagation = false;\n    @Input() isMobileStops = false;\n    @Input() isMobileStar = false;\n    @Input() hideCheckBoxIcon = false;\n    @Input() hideCheckBoxCount = false;\n    @Input() stops = false;\n    @Output() selectedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit(): void {}\n\n    public onChange($event: Event): void {\n        this.selectedChange.emit(($event.target as HTMLInputElement).checked);\n    }\n\n    public onClick($event: Event): void {\n        if (this.stopPropagation) {\n            $event.stopPropagation();\n        }\n    }\n}\n","<div\n    [class]=\"'checkbox-container ' + className\"\n    [attr.data-test]=\"label\"\n    [ngClass]=\"{ disabled: checkbox.disabled, 'mob-steps': isMobileStops || isMobileStar, stops: stops }\"\n>\n    <div class=\"checkbox-block\" [ngClass]=\"{ 'mob-steps': isMobileStops || isMobileStar, selected: selected }\">\n        <label\n            (click)=\"onClick($event)\"\n            class=\"checkbox-label\"\n            [ngClass]=\"{ selected: selected, 'mob-star': isMobileStar, disabled: checkbox.disabled }\"\n        >\n            <span class=\"checkbox-label-text\">\n                {{ label }}\n                <ng-content></ng-content>\n            </span>\n\n            <input\n                class=\"checkbox-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"selected\"\n                (change)=\"onChange($event)\"\n                [disabled]=\"checkbox.disabled\"\n            />\n            <span\n                class=\"checkbox-icon\"\n                [attr.data-test]=\"label + '-checkbox'\"\n                *ngIf=\"!hideCheckBoxIcon\"\n                [ngClass]=\"{ mob: platformService.isMobileDevice, disabled: checkbox.disabled }\"\n            ></span>\n        </label>\n    </div>\n    <div\n        class=\"count\"\n        [attr.data-test]=\"label + '-checkbox-count'\"\n        *ngIf=\"!hideCheckBoxCount\"\n        [ngClass]=\"{\n            mob: platformService.isMobileDevice,\n            disabled: checkbox.disabled\n        }\"\n    >\n        <span *ngIf=\"!checkbox.enable_price\" [attr.data-test]=\"label + '-checkbox-count-text'\">\n            {{ checkbox.count }}\n        </span>\n        <span *ngIf=\"checkbox.enable_price\">\n            {{ +checkbox.min_price | tzCurrency: checkbox.min_price_cur:'symbol':'1.0' }}\n        </span>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'tz-filter-btn',\n    templateUrl: './filter-btn.component.html',\n    styleUrls: ['./filter-btn.component.scss'],\n})\nexport class FilterBtnComponent {\n    @Input() filterCount = 0;\n    @Output() clickFilter: EventEmitter<void> = new EventEmitter<void>();\n    @Output() clearFilter: EventEmitter<void> = new EventEmitter<void>();\n\n    public onClickFilter(): void {\n        this.clickFilter.emit();\n    }\n\n    public onClearFilter(): void {\n        this.clearFilter.emit();\n    }\n}\n","<div class=\"filter-btn inline-flex align-center\">\n    <div class=\"filter-text inline-flex align-center\" (click)=\"onClickFilter()\">\n        <tz-svg-icon icon=\"filter-gray\" [styles]=\"{ 'width.px': 17.78 }\"></tz-svg-icon>\n        <span class=\"filter-btn-text\">\n            {{ 'FILTER.COMPONENT.FILTER' | translate }}\n            <ng-container *ngIf=\"filterCount > 0\"> ({{ filterCount }}) </ng-container>\n        </span>\n    </div>\n    <tz-svg-icon\n        *ngIf=\"filterCount > 0\"\n        (click)=\"onClearFilter()\"\n        class=\"clear-all\"\n        icon=\"close-button\"\n        [styles]=\"{ 'width.px': 9.33, 'height.px': 9.33 }\"\n    ></tz-svg-icon>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, OnDestroy } from '@angular/core';\n\nimport { FilterItem, FilterOptionType } from '@schemas/modules/core/filters/service-filter';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-filter-sections',\n    templateUrl: './filter-sections.component.html',\n    styleUrls: ['./filter-sections.component.scss'],\n})\nexport class FilterSectionsComponent implements OnInit {\n    @Input() filterItem!: FilterItem;\n    @Input() optionType!: FilterOptionType;\n    @Output() filterItemChange: EventEmitter<FilterItem> = new EventEmitter<FilterItem>();\n\n    public lastSliderIdx = -1;\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit() {\n        this.setLastSliderIdx();\n    }\n\n    public changeSection(sectionName: string) {\n        if (this.filterItem && Array.isArray(this.filterItem.sections)) {\n            this.filterItem.sections.forEach((section) => {\n                if (section.name === sectionName) {\n                    section.active = true;\n                    return;\n                }\n                section.active = false;\n                this.setLastSliderIdx();\n            });\n        }\n    }\n\n    public onFilterItemChanged() {\n        this.filterItemChange.emit(this.filterItem);\n    }\n\n    private setLastSliderIdx(): void {\n        for (const section of this.filterItem.sections ?? []) {\n            if (!section.active) {\n                continue;\n            }\n\n            let slideIdx = -1;\n            for (const [idx, option] of section.ogs.entries()) {\n                if (option.slider) {\n                    slideIdx = idx;\n                }\n            }\n\n            this.lastSliderIdx = slideIdx;\n        }\n    }\n}\n","<div\n    class=\"section-btn-container\"\n    [ngClass]=\"{\n        mob: platformService.isMobileDevice\n    }\"\n    *ngIf=\"filterItem.sections && filterItem.sections.length > 1\"\n>\n    <ng-container *ngFor=\"let section of filterItem.sections\">\n        <button\n            class=\"select-btn\"\n            (click)=\"changeSection(section.name)\"\n            [ngClass]=\"{\n                selected: section.active,\n                disabled: section.disabled,\n                mob: platformService.isMobileDevice\n            }\"\n            [attr.data-test]=\"'result-page-filter-time-and-stations-' + section.name\"\n        >\n            {{ (section.name === 'Onward' ? 'GENERAL.DEPART' : section.name) | translate }}\n        </button>\n    </ng-container>\n</div>\n\n<ng-container *ngFor=\"let section of filterItem.sections\">\n    <div [hidden]=\"!section.active\" class=\"time-stations-wrapper\">\n        <ng-container *ngFor=\"let og of section.ogs; let i = index; let last = last\">\n            <div\n                [hidden]=\"og.hide\"\n                class=\"tz-filter-item-block\"\n                data-test=\"result-page-filter-slide\"\n                [class.tz-filter-item-block--last-item]=\"last\"\n                [ngClass]=\"{\n                    'tz-filter-item-block--last-item': last,\n                    'tz-filter-item-slider-block': og.slider,\n                    'tz-filter-item-last-slider': i === lastSliderIdx,\n                    mob: platformService.isMobileDevice\n                }\"\n            >\n                <tz-filter-options\n                    [filterItem]=\"og\"\n                    [optionType]=\"optionType\"\n                    (filterItemChange)=\"onFilterItemChanged()\"\n                ></tz-filter-options>\n            </div>\n        </ng-container>\n    </div>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { FilterShowMoreOptions, FiltersShowMoreOptions } from '@schemas/modules/core/filters/service-filter';\n\n@Component({\n    selector: 'tz-filter-show-more-less-button',\n    templateUrl: './filter-show-more-less-button.component.html',\n    styleUrls: ['./filter-show-more-less-button.component.scss'],\n})\nexport class FilterShowMoreLessButtonComponent {\n    @Input() limitTo!: number;\n    @Input() filterId!: string;\n    @Input() itemsCount!: number;\n    @Input() filtersOptions!: FiltersShowMoreOptions;\n\n    @Output() showMore: EventEmitter<FilterShowMoreOptions> = new EventEmitter<FilterShowMoreOptions>();\n    @Output() showLess: EventEmitter<FilterShowMoreOptions> = new EventEmitter<FilterShowMoreOptions>();\n    @Output() showAll: EventEmitter<FilterShowMoreOptions> = new EventEmitter<FilterShowMoreOptions>();\n\n    public onShowMore(): void {\n        this.showMore.emit(this.getFiltersShowMoreOptions());\n    }\n\n    public onShowLess(): void {\n        this.showLess.emit(this.getFiltersShowMoreOptions());\n    }\n\n    public onShowAll(): void {\n        this.showAll.emit(this.getFiltersShowMoreOptions());\n    }\n\n    private getFiltersShowMoreOptions(): FilterShowMoreOptions {\n        return {\n            id: this.filterId,\n            itemsCount: this.itemsCount,\n            limitTo: this.limitTo,\n        };\n    }\n}\n","<div>\n    <button\n        *ngIf=\"\n            itemsCount > limitTo &&\n            !(filtersOptions[filterId] && (filtersOptions[filterId].showLess || filtersOptions[filterId].showAll))\n        \"\n        (click)=\"onShowMore()\"\n        class=\"filter-show-more-btn\"\n        data-test=\"result-page-filter-show-more\"\n    >\n        {{ 'GENERAL.SHOW_MORE' | translate }}\n    </button>\n\n    <button\n        *ngIf=\"filtersOptions[filterId] && filtersOptions[filterId].showLess\"\n        (click)=\"onShowLess()\"\n        class=\"filter-show-more-btn\"\n    >\n        {{ 'GENERAL.SHOW_LESS' | translate }}\n    </button>\n\n    <button\n        *ngIf=\"filtersOptions[filterId] && filtersOptions[filterId].showAll\"\n        (click)=\"onShowAll()\"\n        class=\"filter-show-more-btn\"\n    >\n        {{ 'GENERAL.SHOW_ALL' | translate }}\n    </button>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, Inject, LOCALE_ID, ViewEncapsulation } from '@angular/core';\nimport { formatCurrency, formatNumber, getCurrencySymbol } from '@angular/common';\nimport { formatDate } from '@angular/common';\nimport { Options } from '@angular-slider/ngx-slider';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { SettingsService } from '@services/services/settings-service';\nimport {\n    FilterSlider,\n    FilterSliderOptionType,\n    FilterSliderUnitType,\n} from '@schemas/modules/core/filters/service-filter';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-slider',\n    templateUrl: './slider.component.html',\n    styleUrls: ['./slider.component.scss'],\n})\nexport class SliderComponent implements OnInit {\n    @Input() slider!: FilterSlider;\n    @Input() displayRange = true;\n    @Input() displayRangeCount = false;\n    @Input() disabled = false;\n    @Input() className = '';\n    @Output() minChange: EventEmitter<number> = new EventEmitter<number>();\n    @Output() maxChange: EventEmitter<number> = new EventEmitter<number>();\n    @Output() sliderChange: EventEmitter<FilterSlider> = new EventEmitter<FilterSlider>();\n    options: Options = {};\n\n    public selectionInfo = '';\n    public rangeCount = { min: '', max: '' };\n    public sliderTypes = FilterSliderOptionType;\n    public mobSelectionInfo: string[] = [];\n\n    constructor(\n        private translateService: TranslateService,\n        private settingsService: SettingsService,\n        public platformService: PlatformService\n    ) {}\n\n    ngOnInit(): void {\n        this.formOptions();\n    }\n\n    public onChange() {\n        const min = this.slider.min;\n        const max = this.slider.max;\n        if (min > max) {\n            console.error('min > max', min, max);\n        }\n        this.slider.max = this.slider.selected_max;\n        this.slider.min = this.slider.selected_min;\n        this.formatSliderText();\n\n        this.slider.max = max;\n        this.slider.min = min;\n    }\n\n    public onChangeEnd() {\n        if (this.slider.selected_max === this.slider.max && this.slider.selected_min === this.slider.min) {\n            return;\n        }\n\n        this.onChange();\n        this.slider.max = this.slider.selected_max;\n        this.slider.min = this.slider.selected_min;\n        this.slider.selected = true;\n        this.sliderChange.emit(this.slider);\n    }\n\n    private formOptions(): void {\n        this.options = this.slider.options;\n        this.options.showSelectionBar = true;\n        this.formatSliderText();\n    }\n\n    private formatSliderCountRange(min?: string, sep?: string, max?: string, last?: string) {\n        this.rangeCount = { min: min || '0', max: max || '' };\n        this.selectionInfo = `${min || ''} ${sep || ''} ${max || ''} ${last || ''}`;\n\n        if (this.platformService.isMobileDevice) {\n            this.mobSelectionInfo = this.selectionInfo\n                .split('|')\n                .map((selectionInfoItem: string) => selectionInfoItem.trim());\n        }\n    }\n\n    // format slider text based on their type\n    private formatSliderText() {\n        const slider = this.slider;\n        if (!slider) {\n            return;\n        }\n        const sep = '–';\n        switch (slider.unit_type) {\n            case FilterSliderUnitType.CURRENCY:\n                /** price:: `$ 10.00 — $ 12.00` */\n                this.formatSliderCountRange(\n                    this.platformService.isMobileDevice ? `Range | ` : 'Range ',\n                    this.formatCurrency(slider.min, slider.unit),\n                    sep,\n                    this.formatCurrency(slider.max, slider.unit)\n                );\n                return;\n            case FilterSliderUnitType.DISTANCE:\n                /**  distance:: `100 km`| `10 — 100 km` */\n                if (slider.slider_type === FilterSliderOptionType.SINGLE) {\n                    this.formatSliderCountRange(\n                        undefined,\n                        undefined,\n                        this.formatNumber(slider.max),\n                        slider.unit || 'km'\n                    );\n                    return;\n                }\n                this.formatSliderCountRange(\n                    this.platformService.isMobileDevice\n                        ? `Range | ${this.formatNumber(slider.min)}`\n                        : this.formatNumber(slider.min),\n                    sep,\n                    this.formatNumber(slider.max),\n                    slider.unit || 'km'\n                );\n                return;\n            case FilterSliderUnitType.DATE:\n                /**  date::\n                 * 1. for different date (Thu 10:22 — Fri 04:33),\n                 * 2. for different date with more than one week (17 Thu 10:22 — 24 Thu 04:33),\n                 * 3. for same date (Thu 10:22 — 04:33)\n                 */\n                const timezone = this.slider.conversion_unit || 'UTC';\n                const timeFormat = this.settingsService.locales.DATETIME_FORMATS.shortTime;\n                let t = this.platformService.isMobileDevice ? 'EEE | ' + timeFormat : 'EEE ' + timeFormat;\n                let f = t;\n                const from = this.getDate(this.slider.min * 1000);\n                const to = this.getDate(this.slider.max * 1000);\n                if (from.date === to.date && from.month === to.month && from.yr === to.yr) {\n                    t = timeFormat;\n                }\n                if (from.yr !== to.yr || from.month !== to.month || to.date - from.date > 6) {\n                    f = t = this.platformService.isMobileDevice ? 'dd EEE | ' + timeFormat : 'dd EEE ' + timeFormat;\n                }\n                const minDate = this.formatDate(this.slider.min, f, timezone);\n                const maxDate = this.formatDate(this.slider.max, t, timezone);\n                this.formatSliderCountRange(minDate, sep, maxDate);\n                return;\n            case FilterSliderUnitType.DURATION:\n                /** duration:: `00h 00m — 01h 10m`*/\n                this.formatSliderCountRange(this.formatDuration(slider.min), sep, this.formatDuration(slider.max));\n                return;\n            default:\n                /** default `10 — 100` */\n                if (this.platformService.isMobileDevice) {\n                    this.formatSliderCountRange(\n                        'Range |',\n                        this.formatNumber(slider.min),\n                        sep,\n                        this.formatNumber(slider.max)\n                    );\n                } else {\n                    this.formatSliderCountRange(this.formatNumber(slider.min), sep, this.formatNumber(slider.max));\n                }\n                return;\n        }\n    }\n\n    // format slider text\n    // format duration formats the slider duration number to readable text\n    private formatDuration(duration: number) {\n        const hr = Math.floor(duration / 60);\n        const min = duration % 60;\n        const f = (num: number) => (num > -1 && num < 10 ? `${num}` : `${num}`);\n        if (hr > 0) {\n            if (min > 0) {\n                return `${f(hr)}h ${f(min)}m`;\n            }\n            return `${f(hr)}h`;\n        }\n        return `${f(min)}m`;\n    }\n\n    private formatCurrency(value: number, curCode: string) {\n        return formatCurrency(\n            value,\n            this.settingsService.langCode,\n            getCurrencySymbol(curCode, 'wide'),\n            curCode,\n            '1.0-0'\n        );\n    }\n\n    private formatNumber(value: number) {\n        return formatNumber(value, this.settingsService.langCode, '1.1');\n    }\n\n    private formatDate(date: number, format: string, timezone: string): string {\n        return formatDate(new Date(date * 1000), format, this.settingsService.langCode, timezone);\n    }\n\n    private getDate(d: number): { date: number; month: number; yr: number } {\n        const fromDate = new Date(d);\n        return {\n            date: fromDate.getUTCDate(),\n            month: fromDate.getUTCMonth(),\n            yr: fromDate.getUTCFullYear(),\n        };\n    }\n}\n","<div [class]=\"'tz-slider-container ' + className\" *ngIf=\"slider\">\n    <div\n        class=\"range-display-container\"\n        *ngIf=\"displayRange && !platformService.isMobileDevice\"\n        data-test=\"result-page-filter-value\"\n    >\n        <span>{{ selectionInfo }}</span>\n    </div>\n    <p\n        class=\"range-display-mob-container\"\n        *ngIf=\"displayRange && platformService.isMobileDevice\"\n        data-test=\"result-page-filter-value\"\n    >\n        <span class=\"selection-info\" *ngIf=\"!platformService.isMobileDevice\">{{ selectionInfo }}</span>\n        <span class=\"selection-info\" *ngIf=\"platformService.isMobileDevice\">\n            <span *ngFor=\"let mobInfo of mobSelectionInfo; let last = last\"\n                >{{ mobInfo }}<span class=\"mob-slider-vertical-text-divider\" *ngIf=\"!last\">&nbsp;|&nbsp;</span></span\n            >\n        </span>\n    </p>\n\n    <ng-container *ngIf=\"slider.slider_type === sliderTypes.SINGLE\">\n        <ngx-slider\n            data-test=\"single-slider\"\n            class=\"slider\"\n            [(value)]=\"slider.selected_max\"\n            [options]=\"slider.options\"\n            (userChange)=\"onChange()\"\n            (userChangeEnd)=\"onChangeEnd()\"\n        >\n        </ngx-slider>\n    </ng-container>\n\n    <ng-container *ngIf=\"slider.slider_type === sliderTypes.DOUBLE\">\n        <ngx-slider\n            data-test=\"double-slider\"\n            class=\"slider\"\n            [(value)]=\"slider.selected_min\"\n            [(highValue)]=\"slider.selected_max\"\n            [options]=\"slider.options\"\n            (userChange)=\"onChange()\"\n            (userChangeEnd)=\"onChangeEnd()\"\n        >\n        </ngx-slider>\n    </ng-container>\n\n    <div class=\"price-display-mob-container\" *ngIf=\"displayRangeCount && platformService.isMobileDevice\">\n        <p *ngIf=\"slider.unit === 'EUR'\">{{ slider.min | tzCurrency }}</p>\n        <p *ngIf=\"slider.unit === 'EUR'\">{{ slider.max | tzCurrency }}</p>\n        <p *ngIf=\"slider.unit !== 'EUR'\">{{ slider.min }}</p>\n        <p *ngIf=\"slider.unit !== 'EUR'\">{{ slider.max }}</p>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxSliderModule } from '@angular-slider/ngx-slider';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { FilterHeaderComponent } from './components/filter-header-component/filter-header-component.component';\nimport { FilterFooterComponent } from './components/filter-footer/filter-footer.component';\n// eslint-disable-next-line max-len\nimport { FilterShowMoreLessButtonComponent } from './components/filter-show-more-less-button/filter-show-more-less-button.component';\nimport { FilterBtnComponent } from './components/filter-btn/filter-btn.component';\nimport { FilterCheckboxComponent } from './components/checkbox/checkbox.component';\nimport { SliderComponent } from './components/slider/slider.component';\nimport { FilterSectionsComponent } from './components/filter-sections/filter-sections.component';\nimport { FilterOptionsComponent } from './components/filter-options/filter-options.component';\nimport { FiltersComponent } from './filters.component';\nimport { FilterDialogComponent } from './components/filter-dialog/filter-dialog.component';\nimport { FilterSkeletonLoaderComponent } from './components/filter-skeleton-loader/filter-skeleton-loader.component';\n\n@NgModule({\n    declarations: [\n        FilterHeaderComponent,\n        FilterFooterComponent,\n        FilterShowMoreLessButtonComponent,\n        FilterBtnComponent,\n        FilterCheckboxComponent,\n        SliderComponent,\n        FilterSectionsComponent,\n        FilterOptionsComponent,\n        FiltersComponent,\n        FilterDialogComponent,\n        FilterSkeletonLoaderComponent,\n    ],\n    imports: [CommonModule, TranslateModule, NgxSliderModule, SharedModule, FormsModule, ReactiveFormsModule],\n    exports: [FiltersComponent, FilterBtnComponent, FilterDialogComponent, FilterFooterComponent],\n})\nexport class ResultsFiltersModule {}\n","import { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { PaymentCaptureMode } from '@core/constants/cart-status';\nimport { ICartSelectedItem } from '@schemas/modules/cart/cart-selected-item';\n\nexport class TzSelectedService {\n    public static initializeActionBarButtons(\n        cartItem: ICartSelectedItem,\n        fromBookings: boolean,\n        isServiceList: boolean,\n        paymentCaptureMode: number,\n        cancelOnly: boolean,\n        hasMultipleItems?: boolean\n    ): string[] {\n        let buttons: string[] = [];\n\n        if (fromBookings) {\n            return TzSelectedService.fromBookingButtons(cartItem, paymentCaptureMode, cancelOnly, hasMultipleItems);\n        }\n\n        if (!hasMultipleItems && CartUtils.hasPriceChange(cartItem.bookingOptions)) {\n            buttons = ['accept'];\n        }\n        if (hasMultipleItems) {\n            if (CartUtils.hasBooked(cartItem.bookingOptions)) {\n                if (\n                    CartUtils.hasUnavailable(cartItem.bookingOptions) ||\n                    CartUtils.hasNoBookingStarted(cartItem.bookingOptions)\n                ) {\n                    buttons = buttons.concat(['update']);\n                }\n                return buttons;\n            } else if (CartUtils.hasBookingStarted(cartItem.bookingOptions)) {\n                // return buttons.concat(['update', 'removeAll']);\n                return buttons.concat(['update', 'remove']);\n            }\n        } else {\n            if (CartUtils.hasBooked(cartItem.bookingOptions)) {\n                return buttons;\n            } else if (CartUtils.hasBookingStarted(cartItem.bookingOptions)) {\n                return buttons.concat(['update', 'remove']);\n            }\n        }\n\n        if (!isServiceList && !hasMultipleItems) {\n            buttons = buttons.concat(['debug']);\n        }\n\n        /*if (hasMultipleItems) {\n            buttons = buttons.concat(['removeAll']);\n        } else {\n            buttons = buttons.concat(['remove']);\n        }*/\n        buttons = buttons.concat(['remove']);\n\n        return buttons;\n    }\n\n    private static fromBookingButtons(\n        cartItem: ICartSelectedItem,\n        paymentCaptureMode: number,\n        cancelOnly: boolean, // when true only show cancel action when needed\n        isCancelAll?: boolean\n    ): string[] {\n        let buttons: string[] = [];\n\n        if (\n            CartUtils.isCancellableOption(cartItem.bookingOptions) &&\n            paymentCaptureMode !== PaymentCaptureMode.NOT_DONE\n        ) {\n            if (isCancelAll) {\n                buttons = ['cancelAll'];\n            } else {\n                buttons = ['cancel'];\n            }\n        }\n        if (!cancelOnly && CartUtils.hasUnavailable(cartItem.bookingOptions)) {\n            buttons = ['update', 'remove'];\n        }\n\n        return buttons;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Transfer } from '@schemas/modules/transfers/transfer';\nimport { TzServiceTabs } from '../../../tabsUtils/tz-tabs-service';\nimport { ScrollService } from '@services/modules/core/scroll-service';\n\n@Component({\n    selector: 'tz-mob-transfer-list-item',\n    templateUrl: './mob-transfer-list-item.component.html',\n    styleUrls: ['./mob-transfer-list-item.component.scss'],\n})\nexport class MobTransferListItemComponent implements OnInit {\n    @Input() transfer: Transfer | null | undefined;\n    @Input() selectable = true;\n    @Input() cancelable = false;\n    @Input() oldPrice = 0;\n    @Input() totalPassengers = 0;\n    @Input() isSummary = true;\n    @Output() selectedTransfer: EventEmitter<void> = new EventEmitter<void>();\n    @Output() cancelSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    public changedPriceDiff = '';\n\n    constructor(private serviceTabs: TzServiceTabs, private scrollService: ScrollService) {}\n\n    public ngOnInit(): void {\n        this.initData();\n    }\n\n    public onSelectTransfer(element: string): void {\n        this.selectedTransfer.emit();\n\n        requestAnimationFrame(() => {\n            this.scrollService.scrollToVisibleArea(element, 'transferDetailsFooter', {\n                scrollTop: 16,\n            });\n        });\n    }\n\n    public onCancelSelection(): void {\n        this.cancelSelection.emit();\n    }\n\n    private initData(): void {\n        if (this.oldPrice > 0 && this.transfer?.prices?.listPrice) {\n            this.changedPriceDiff = this.serviceTabs.updatePriceChanging(\n                this.oldPrice,\n                this.transfer?.prices?.listPrice\n            );\n        }\n    }\n}\n","<div *ngIf=\"transfer\" class=\"tz-mob-item\" [class]=\"isSummary ? '' : 'tz-mob-selected-block'\">\n    <div class=\"tz-mob-item__top-block\">\n        <div class=\"tz-mob-item__left-block\">\n            <p class=\"tz-mob-item__title\">\n                {{ 'TRANSFER.CLASS.' + transfer.vehicle.class | translate }}\n                {{ 'TRANSFER.TYPE.' + transfer.vehicle.type | translate }}\n            </p>\n            <p class=\"tz-mob-item__description\">\n                {{ transfer.vehicle.description }} {{ 'TRANSFER.BE.Or_similar' | translate }}\n            </p>\n            <div class=\"tz-mob-item__cancellation\">\n                <span>\n                    <ng-container *ngIf=\"transfer.cancellation.freeCpBefore > 0\">\n                        {{\n                            'CANCELLATION.FREE_CP_BEFORE_HOUR' | translate: { hour: transfer.cancellation.freeCpBefore }\n                        }}\n                    </ng-container>\n                    <ng-container *ngIf=\"transfer.cancellation.freeCpBefore === 0\">\n                        {{\n                            transfer.cancellation.messageKey\n                                | translate: { date: transfer.cancellation.endDateTime | tzDate: 'mediumDate' }\n                        }}\n                    </ng-container>\n                </span>\n            </div>\n        </div>\n        <div class=\"tz-mob-item__right-block\">\n            <ion-img\n                *ngIf=\"transfer.vehicle.imageURL\"\n                [src]=\"transfer.vehicle.imageURL ? transfer.vehicle.imageURL : '/assets/icons/web/img/no_image.png'\"\n                alt=\"\"\n            ></ion-img>\n        </div>\n    </div>\n\n    <div class=\"tz-mob-item__options\">\n        <div *ngIf=\"transfer.vehicle.luggage > 0\">\n            <tz-svg-icon\n                [styles]=\"{ 'width.px': 16, 'height.px': 16 }\"\n                [icon]=\"'luggage'\"\n                [mobile]=\"true\"\n            ></tz-svg-icon>\n            <span\n                title=\"{{ transfer.vehicle.luggage }}  {{\n                    transfer.vehicle.luggage > 1\n                        ? ('TRANSFER.Suitcases' | translate)\n                        : ('TRANSFER.Suitcase' | translate)\n                }}\"\n                class=\"tz-mob-item__options-text\"\n            >\n                {{ transfer.vehicle.luggage }}\n            </span>\n        </div>\n        <div *ngIf=\"transfer.vehicle.showBooster && transfer.vehicle.childBooster > 0\">\n            <tz-svg-icon class=\"info-option\" [icon]=\"'child-booster'\" [mobile]=\"true\"></tz-svg-icon>\n            <span\n                title=\" {{ transfer.vehicle.childBooster }} {{\n                    transfer.vehicle.childBooster > 1\n                        ? ('TRANSFER.CHILD_BOOSTERS' | translate)\n                        : ('TRANSFER.CHILD_BOOSTER' | translate)\n                }}\"\n            >\n                {{ transfer.vehicle.childBooster }}\n            </span>\n        </div>\n        <div *ngIf=\"transfer.vehicle.showChildSeat && transfer.vehicle.childSeat > 0\">\n            <tz-svg-icon class=\"info-option\" [icon]=\"'children'\" [mobile]=\"true\"></tz-svg-icon>\n            <span\n                title=\"{{ transfer.vehicle.childSeat }} {{\n                    transfer.vehicle.childSeat > 1\n                        ? ('TRANSFER.CHILD_SEATS' | translate)\n                        : ('TRANSFER.CHILD_SEAT' | translate)\n                }}\"\n            >\n                {{ transfer.vehicle.childSeat }}\n            </span>\n        </div>\n        <div class=\"info-container\">\n            <tz-svg-icon class=\"info-option\" [icon]=\"'person'\" [mobile]=\"true\"></tz-svg-icon>\n            <span\n                title=\"{{ transfer.vehicle.maxpax }} {{\n                    transfer.vehicle.maxpax > 1 ? ('TRANSFER.PASSENGERS' | translate) : ('TRANSFER.PERSON' | translate)\n                }}\"\n            >\n                {{ transfer.vehicle.maxpax }}\n            </span>\n        </div>\n        <div class=\"info-container\">\n            <tz-svg-icon class=\"info-option\" [icon]=\"'bath'\" [mobile]=\"true\"></tz-svg-icon>\n            <span\n                *ngIf=\"transfer.onwardDetails.duration\"\n                title=\"{{ transfer.onwardDetails.duration }} {{ 'min' | translate }} \"\n            >\n                {{ transfer.onwardDetails.duration }} {{ 'min' | translate }}\n            </span>\n        </div>\n\n        <div class=\"info-container\" *ngIf=\"transfer.onwardDetails.duration || transfer.onwardDetails.distance\">\n            <span\n                *ngIf=\"transfer.onwardDetails.distance !== ''\"\n                title=\"{{ transfer.onwardDetails.distance || 'N/A' }} km\"\n            >\n                {{ transfer.onwardDetails.distance || 'N/A' }} km\n            </span>\n        </div>\n    </div>\n\n    <p class=\"tz-mob-item__date\">\n        <span class=\"tz-mob-item__separator\">{{ transfer.onwardDetails.pickupTzDate | tzDate: 'mediumDate' }}</span>\n        <span class=\"tz-mob-item__separator\">{{ transfer.onwardDetails.pickupTzDate | tzDate: 'shortTime' }}</span>\n        <span class=\"tz-mob-item__date-waiting-time\">\n            {{ 'TRANSFER.WAITING_TIME' | translate | lowercase }}\n            {{ transfer.vehicle.waitingTime }}\n            {{ 'TRANSFER.MINS' | translate }}\n        </span>\n    </p>\n\n    <div class=\"tz-mob-item__location\">\n        <div>\n            <tz-icon [icon]=\"'transfer-from'\" *ngIf=\"!isSummary\" class=\"tz-mob-item__location-icon\"></tz-icon>\n            <p class=\"tz-mob-item__location-type\">{{ 'GENERAL.FROM' | translate }}:</p>\n            <p class=\"tz-mob-item__location-text\">{{ transfer.onwardDetails.pickup }}</p>\n        </div>\n        <div>\n            <tz-icon [icon]=\"'transfer-to'\" *ngIf=\"!isSummary\" class=\"tz-mob-item__location-icon\"></tz-icon>\n            <p class=\"tz-mob-item__location-type\">{{ 'GENERAL.TO' | translate }}:</p>\n            <p class=\"tz-mob-item__location-text\">{{ transfer.onwardDetails.drop }}</p>\n        </div>\n    </div>\n\n    <div class=\"tz-mob-item__price\">\n        <tz-mob-price-changed-block *ngIf=\"oldPrice > 0\" class=\"mob-price-changed-block\"></tz-mob-price-changed-block>\n        <p class=\"tz-mob-item__price_value\">\n            <span class=\"mob-price-change-diff\" *ngIf=\"oldPrice > 0\">{{ changedPriceDiff }}</span\n            >{{ transfer.prices.listPrice | tzCurrency: transfer.prices.listPriceCur }}\n        </p>\n        <p class=\"tz-mob-item__price-for\">\n            {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }}\n            {{ 'TRAVELLER.' + (totalPassengers > 1 ? 'PEOPLE' : 'PERSON') | translate }}\n        </p>\n    </div>\n\n    <div class=\"tz-mob-item__action-block\" *ngIf=\"selectable || cancelable\">\n        <button\n            *ngIf=\"selectable\"\n            class=\"tz-mob-select-btn\"\n            [id]=\"'selectTransferId' + transfer.id\"\n            (click)=\"onSelectTransfer('selectTransferId' + transfer.id)\"\n        >\n            {{ 'GENERAL.SELECT' | translate }}\n        </button>\n\n        <button\n            *ngIf=\"cancelable\"\n            class=\"tz-mob-select-btn mob-selected-btn\"\n            (click)=\"onCancelSelection()\"\n            [id]=\"'selectTransferId' + transfer.id\"\n        >\n            {{ 'GENERAL.SELECTED' | translate }}\n        </button>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Transfer } from '@schemas/modules/transfers/transfer';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { PaymentCaptureMode } from '@core/constants/cart-status';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\n\n@Component({\n    selector: 'tz-selected-transfers',\n    templateUrl: './selected-transfers.component.html',\n    styleUrls: ['./selected-transfers.component.scss'],\n})\nexport class SelectedTransfersComponent implements OnInit {\n    @Input() serviceList = false;\n    @Input() combId!: CombinationId;\n    @Input() transferCartData!: ICart;\n    @Input() fromBookings = false;\n    @Input() paymentCaptureMode = PaymentCaptureMode.NORMAL_MODE;\n    @Input() isSummary = false;\n    @Output() removedItem: EventEmitter<string> = new EventEmitter<string>();\n    @Output() changeTransfer: EventEmitter<Transfer> = new EventEmitter<Transfer>();\n    @Output() selectedId: EventEmitter<string> = new EventEmitter<string>();\n    @Output() cancel: EventEmitter<string> = new EventEmitter<string>();\n    public selectedTransfer!: Transfer;\n    public totalPassengers = 0;\n\n    constructor() {}\n\n    ngOnInit() {\n        const travellersData = CartUtils.getTravellersData(this.transferCartData.items);\n        if (travellersData) {\n            this.totalPassengers = travellersData.total;\n        }\n    }\n\n    public onRemove(optionId: string): void {\n        this.removedItem.emit(optionId);\n    }\n\n    public onChangeTransfer(data: Transfer): void {\n        this.changeTransfer.emit(data);\n    }\n\n    public onCancel(itineraryId: string): void {\n        this.cancel.emit(itineraryId);\n    }\n\n    public setSelectedId(itemId: string): void {\n        this.selectedId.emit(itemId);\n    }\n\n    public onChangeOptions(): void {}\n\n    public sortTransfer(transfers: ICartItem[]): ICartItem[] {\n        return transfers.sort((a, b) =>\n            a.selectedItem.data.journeyType > b.selectedItem.data.journeyType\n                ? 1\n                : a.selectedItem.data.journeyType === b.selectedItem.data.journeyType\n                ? 0\n                : -1\n        );\n    }\n}\n","<div class=\"selected-transfer-container flex flex-column\" *ngIf=\"transferCartData.items.length\">\n    <div class=\"tz-block-separator-title\">\n        <tz-block-separator>\n            <span class=\"ng-binding\"> {{ sortTransfer(transferCartData.items)[0].summaryTitle }} </span>\n        </tz-block-separator>\n    </div>\n    <div class=\"selected-transfer-container__items\" [ngClass]=\"{ summary: isSummary }\">\n        <div\n            class=\"transfer-cart-item\"\n            *ngFor=\"\n                let transferCartItem of sortTransfer(transferCartData.items);\n                let indexOfElement = index;\n                let first = first\n            \"\n        >\n            <tz-transfers-cart-item\n                [isFirst]=\"first\"\n                [selectedItemsQuantity]=\"transferCartData.items.length\"\n                [isSummary]=\"isSummary\"\n                [serviceList]=\"serviceList\"\n                [transferCartItem]=\"transferCartItem\"\n                (remove)=\"onRemove($event)\"\n                (changeTransfer)=\"onChangeTransfer(transferCartItem.selectedItem.data)\"\n                [combId]=\"combId\"\n                (mouseenter)=\"fromBookings && setSelectedId(transferCartItem.selectedItem.id)\"\n                (mouseleave)=\"fromBookings && setSelectedId('')\"\n                [fromBookings]=\"fromBookings\"\n                [paymentCaptureMode]=\"paymentCaptureMode\"\n                (cancel)=\"onCancel(transferCartItem.selectedItem.bookingOptions[0].itineraryId)\"\n                [showActionBar]=\"fromBookings || indexOfElement === transferCartData.items.length - 1\"\n                [showTitle]=\"indexOfElement === 0\"\n                [totalPassengers]=\"totalPassengers\"\n                (selectedId)=\"setSelectedId($event)\"\n            ></tz-transfers-cart-item>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CartStatus, PaymentCaptureMode } from '@core/constants/cart-status';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { TzSelectedService } from '../../../selectedUtils/tz-selected-service';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { Transfer } from '@schemas/modules/transfers/transfer';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-transfers-cart-item',\n    templateUrl: './transfer-cart-item.component.html',\n    styleUrls: ['./transfer-cart-item.component.scss'],\n})\nexport class TransferCartItemComponent implements OnInit {\n    @Input() serviceList = false;\n    @Input() combId!: CombinationId;\n    @Input() transferCartItem!: ICartItem;\n    @Input() fromBookings = false;\n    @Input() paymentCaptureMode = PaymentCaptureMode.NORMAL_MODE;\n    @Input() showActionBar!: boolean;\n    @Input() showTitle!: boolean;\n    @Input() totalPassengers = 0;\n    @Input() isSummary = false;\n    @Input() public selectedItemsQuantity = 0;\n    @Input() public isFirst!: boolean;\n\n    @Output() remove: EventEmitter<string> = new EventEmitter<string>();\n    @Output() changeTransfer: EventEmitter<Transfer> = new EventEmitter<Transfer>();\n    @Output() modify: EventEmitter<void> = new EventEmitter<void>();\n    @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n    @Output() selectedId: EventEmitter<string> = new EventEmitter<string>();\n    public buttons: string[] = [];\n    public optionId!: string;\n    public invalidCartItem = false;\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit() {\n        this.optionId = this.transferCartItem.selectedItem.bookingOptions[0].optionId;\n        this.initializeActionBarButtons();\n\n        this.invalidCartItem = !this.transferCartItem.selectedItem.bookingOptions.some(\n            (option) =>\n                !(option.status >= CartStatus.STATUS_REJECTED && option.status !== CartStatus.STATUS_PRICE_CHANGED)\n        );\n    }\n\n    public onRemove(): void {\n        this.remove.emit(this.optionId);\n    }\n\n    public onChangeTransfer(data: Transfer): void {\n        this.changeTransfer.emit(data);\n    }\n\n    public onCancel(): void {\n        this.cancel.emit();\n    }\n\n    public setSelectedId(itemId: string): void {\n        this.selectedId.emit(itemId);\n    }\n\n    private initializeActionBarButtons() {\n        this.buttons = TzSelectedService.initializeActionBarButtons(\n            this.transferCartItem.selectedItem,\n            this.fromBookings,\n            this.serviceList,\n            this.paymentCaptureMode,\n            false\n        );\n        if (!this.fromBookings && !CartUtils.hasBookingStarted(this.transferCartItem.selectedItem.bookingOptions)) {\n            this.buttons.push('changeTransfer');\n        }\n    }\n}\n","<div class=\"transfer-cart-item-container\">\n    <div\n        class=\"transfer-cart-item\"\n        [ngClass]=\"{ 'rejected-cart-item': invalidCartItem }\"\n        (mouseenter)=\"setSelectedId(transferCartItem.selectedItem.id)\"\n        (mouseleave)=\"setSelectedId('')\"\n    >\n        <tz-rejected-cart-item-banner\n            *ngIf=\"invalidCartItem\"\n            [service]=\"'SERVICES.3' | translate\"\n        ></tz-rejected-cart-item-banner>\n        <tz-transfer-list-item\n            *ngIf=\"!platformService.isMobileDevice\"\n            [selectable]=\"false\"\n            [transfer]=\"transferCartItem.selectedItem.data\"\n            [oldPrice]=\"transferCartItem.oldPrice\"\n            [totalPassengers]=\"totalPassengers\"\n            [ngClass]=\"{ 'tz-selected-service-list': serviceList }\"\n        >\n        </tz-transfer-list-item>\n        <div [ngClass]=\"{ 'tz-mob-rejected-cart-item': invalidCartItem }\">\n            <tz-mob-transfer-list-item\n                [isSummary]=\"isSummary\"\n                *ngIf=\"platformService.isMobileDevice\"\n                [transfer]=\"transferCartItem.selectedItem.data\"\n                [selectable]=\"false\"\n                [oldPrice]=\"transferCartItem.oldPrice\"\n                [totalPassengers]=\"totalPassengers\"\n            ></tz-mob-transfer-list-item>\n        </div>\n    </div>\n    <div class=\"accommodation-actions-bar-container\">\n        <tz-cart-item-actions-bar\n            (remove)=\"onRemove()\"\n            (cancel)=\"onCancel()\"\n            [buttons]=\"buttons\"\n            (changeTransfer)=\"onChangeTransfer($event)\"\n            (modify)=\"onChangeTransfer(transferCartItem.selectedItem.data)\"\n            [combId]=\"combId\"\n            [optionId]=\"optionId\"\n            [status]=\"transferCartItem.selectedItem.bookingOptions[0].status\"\n        ></tz-cart-item-actions-bar>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Transfer } from '@schemas/modules/transfers/transfer';\nimport { BestValType } from '@schemas/modules/search/search';\nimport { ResultsTools } from '@services/modules/results/services/tools.shared.services';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Component({\n    selector: 'tz-transfer-list-item',\n    templateUrl: './transfer-list-item.component.html',\n    styleUrls: ['./transfer-list-item.component.scss'],\n})\nexport class TransferListItemComponent implements OnInit {\n    @Input() transfer: Transfer | null | undefined;\n    @Input() selectable = true;\n    @Input() showBestValLabel = false;\n    @Input() cancelable = false;\n    @Input() oldPrice = 0;\n    @Input() totalPassengers = 0;\n    @Output() selectedTransfer: EventEmitter<void> = new EventEmitter<void>();\n    @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    public bestValType: BestValType | undefined;\n    public opened = false;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        if (this.transfer && this.showBestValLabel && this.transfer.bestValType) {\n            this.bestValType = ResultsTools.getBestValType(this.transfer.bestValType, ServiceId.TRANSFER);\n        }\n    }\n\n    public selectTransfer(): void {\n        this.selectedTransfer.emit();\n    }\n\n    public onCancel(): void {\n        this.cancel.emit();\n    }\n}\n","<div class=\"transfer-container\" *ngIf=\"transfer\">\n    <div *ngIf=\"bestValType\" class=\"recommended-block\">\n        <div class=\"recommended-block__content\">\n            <tz-recommended-list-tem-description [bestValType]=\"bestValType\"></tz-recommended-list-tem-description>\n        </div>\n    </div>\n    <div class=\"transfer tz-block-with-border\" data-test=\"result-page-transfers-transfer-container\">\n        <div class=\"image-container\">\n            <img class=\"transferimg\" *ngIf=\"transfer.vehicle.imageURL\" [src]=\"transfer.vehicle.imageURL\" alt=\"\" />\n            <img *ngIf=\"!transfer.vehicle.imageURL\" src=\"/assets/icons/web/img/no_image.png\" alt=\"\" />\n        </div>\n        <div class=\"transfer-description\">\n            <h3 data-test=\"result-page-transfers-transfer-class\" class=\"transfer-class\">\n                {{ 'TRANSFER.CLASS.' + transfer.vehicle.class | translate }}\n                {{ 'TRANSFER.TYPE.' + transfer.vehicle.type | translate }}\n            </h3>\n            <div data-test=\"result-page-transfers-transfer-car-type\" class=\"title-description\">\n                {{ transfer.vehicle.description }} {{ 'TRANSFER.BE.Or_similar' | translate }}\n            </div>\n            <div class=\"title-description date-time\" data-test=\"transfer-date-time\" (click)=\"opened = !opened\">\n                {{ transfer.onwardDetails.pickupTzDate | tzDate: 'mediumDate' }}\n                •\n                {{ transfer.onwardDetails.pickupTzDate | tzDate: 'shortTime' }}\n                <span class=\"waiting-time\">\n                    ({{ 'TRANSFER.WAITING_TIME' | translate | lowercase }}\n                    {{ transfer.vehicle.waitingTime }}\n                    {{ 'TRANSFER.MINS' | translate }})\n                </span>\n            </div>\n            <div\n                class=\"mobile-info-container\"\n                [class]=\"{\n                    opened: opened\n                }\"\n            >\n                <div class=\"transfer-route mt-2\">\n                    <span class=\"color-9b\">{{ 'GENERAL.FROM' | translate }}: &nbsp;</span>\n                    {{ transfer.onwardDetails.pickup }}\n                    <br />\n                    <span class=\"color-9b\">{{ 'GENERAL.TO' | translate }}: &nbsp;</span>\n                    {{ transfer.onwardDetails.drop }}\n                </div>\n                <div class=\"transfer-text-info-icons d-flex flex-wrap mt-3\">\n                    <div class=\"info-container\">\n                        <tz-icon [icon]=\"'users'\"></tz-icon>\n                        <span\n                            title=\"{{ transfer.vehicle.maxpax }} {{\n                                transfer.vehicle.maxpax > 1\n                                    ? ('TRANSFER.PASSENGERS' | translate)\n                                    : ('TRANSFER.PERSON' | translate)\n                            }}\"\n                        >\n                            {{ transfer.vehicle.maxpax }}\n                            {{\n                                transfer.vehicle.maxpax > 1\n                                    ? ('TRANSFER.PASSENGERS' | translate)\n                                    : ('TRANSFER.PERSON' | translate)\n                            }}\n                        </span>\n                    </div>\n                    <div\n                        class=\"info-container\"\n                        *ngIf=\"transfer.vehicle.showChildSeat && transfer.vehicle.childSeat > 0\"\n                    >\n                        <tz-icon [icon]=\"'child_seat'\"></tz-icon>\n                        <span\n                            title=\"{{ transfer.vehicle.childSeat > 1 ? transfer.vehicle.childSeat : '' }} {{\n                                transfer.vehicle.childSeat > 1\n                                    ? ('TRANSFER.CHILD_SEATS' | translate)\n                                    : ('TRANSFER.CHILD_SEAT' | translate)\n                            }}\"\n                        >\n                            {{ transfer.vehicle.childSeat > 1 ? transfer.vehicle.childSeat : '' }}\n                            {{\n                                transfer.vehicle.childSeat > 1\n                                    ? ('TRANSFER.CHILD_SEATS' | translate)\n                                    : ('TRANSFER.CHILD_SEAT' | translate)\n                            }}\n                        </span>\n                    </div>\n                    <div\n                        class=\"info-container\"\n                        *ngIf=\"transfer.vehicle.showBooster && transfer.vehicle.childBooster > 0\"\n                    >\n                        <tz-icon [icon]=\"'booster'\"></tz-icon>\n                        <span\n                            title=\" {{ transfer.vehicle.childBooster > 1 ? transfer.vehicle.childBooster : '' }} {{\n                                transfer.vehicle.childBooster > 1\n                                    ? ('TRANSFER.CHILD_BOOSTERS' | translate)\n                                    : ('TRANSFER.CHILD_BOOSTER' | translate)\n                            }}\"\n                        >\n                            {{ transfer.vehicle.childBooster > 1 ? transfer.vehicle.childBooster : '' }}\n                            {{\n                                transfer.vehicle.childBooster > 1\n                                    ? ('TRANSFER.CHILD_BOOSTERS' | translate)\n                                    : ('TRANSFER.CHILD_BOOSTER' | translate)\n                            }}\n                        </span>\n                    </div>\n                    <div class=\"info-container\" *ngIf=\"transfer.vehicle.luggage > 0\">\n                        <tz-icon [icon]=\"'case-dark'\"></tz-icon>\n                        <span\n                            title=\"{{ transfer.vehicle.luggage }}  {{\n                                transfer.vehicle.luggage > 1\n                                    ? ('TRANSFER.Suitcases' | translate)\n                                    : ('TRANSFER.Suitcase' | translate)\n                            }}\"\n                        >\n                            {{ transfer.vehicle.luggage }}\n                            {{\n                                transfer.vehicle.luggage > 1\n                                    ? ('TRANSFER.Suitcases' | translate)\n                                    : ('TRANSFER.Suitcase' | translate)\n                            }}\n                        </span>\n                    </div>\n                    <div class=\"info-container\" style=\"max-width: max-content\">\n                        <tz-icon [icon]=\"'bath'\"></tz-icon>\n                        <span title=\"{{ transfer.onwardDetails.duration || 'N/A' }} {{ 'min' | translate }} \">\n                            {{ transfer.onwardDetails.duration || 'N/A' }}\n                            {{ 'min' | translate }}</span\n                        >&nbsp;•&nbsp;\n                        <span\n                            *ngIf=\"transfer.onwardDetails.distance !== ''\"\n                            title=\"{{ transfer.onwardDetails.distance || 'N/A' }} km\"\n                        >\n                            {{ transfer.onwardDetails.distance || 'N/A' }}\n                            km</span\n                        >\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"result-block-price\">\n            <div class=\"ticket-options d-flex flex-wrap justify-content-between\">\n                <span class=\"tz-icon-service-transfer\"></span>\n                <div class=\"ticket-price flex align-center\" data-test=\"result-page-transfers-transfer-ticket-price\">\n                    <tz-price-change-tooltop *ngIf=\"oldPrice > 0\"></tz-price-change-tooltop>\n                    <span *ngIf=\"oldPrice > 0\" class=\"service-old-price\">\n                        + {{ transfer.prices.listPrice - oldPrice | tzCurrency: transfer.prices.listPriceCur }}\n                    </span>\n                    {{ transfer.prices.listPrice | tzCurrency: transfer.prices.listPriceCur }}\n                </div>\n                <div class=\"options-details\">\n                    <div>\n                        {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }}\n                        {{ 'TRAVELLER.' + (totalPassengers > 1 ? 'PERSONS' : 'PERSON') | translate }}\n                    </div>\n                    <div>{{ 'All taxes included' | translate }}</div>\n                    <div class=\"cancellation\">\n                        <ng-container *ngIf=\"transfer.cancellation.freeCpBefore > 0\">\n                            {{\n                                'CANCELLATION.FREE_CP_BEFORE_HOUR'\n                                    | translate: { hour: transfer.cancellation.freeCpBefore }\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"transfer.cancellation.freeCpBefore === 0\">\n                            {{\n                                transfer.cancellation.messageKey\n                                    | translate: { date: transfer.cancellation.endDateTime | tzDate: 'mediumDate' }\n                            }}\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n            <div class=\"select-button-container financial-container-row\">\n                <button\n                    data-test=\"result-page-transfers-transfer-select\"\n                    class=\"tz-btn tz-btn-primary tz-btn--select\"\n                    (click)=\"selectTransfer()\"\n                    *ngIf=\"selectable\"\n                >\n                    {{ 'GENERAL.SELECT' | translate }}\n                </button>\n                <button\n                    data-test=\"result-page-transfers-transfer-unselect\"\n                    class=\"tz-btn tz-btn-primary tz-btn--select\"\n                    (click)=\"onCancel()\"\n                    *ngIf=\"cancelable\"\n                >\n                    {{ 'TRANSFER.UNSELECT' | translate }}\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { FlightLuggageOption } from '@schemas/modules/flights/flight-luggage.model';\n\n@Component({\n    selector: 'tz-flight-bag-separator',\n    templateUrl: './flight-bag-separator.component.html',\n    styleUrls: ['./flight-bag-separator.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FlightBagSeparatorComponent implements OnChanges {\n    @Input() luggageOption!: FlightLuggageOption;\n    @Input() componentType: 'details' | 'package' = 'details';\n    public displaySeparator = false;\n\n    constructor() {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        const luggageOption = changes['luggageOption'].currentValue;\n        this.displaySeparator = !!(\n            luggageOption.dimensions &&\n            luggageOption.weightTexts.length &&\n            luggageOption.dimensions?.length + luggageOption.weightTexts?.join(', ').length <\n                (this.componentType === 'package' ? 40 : 23)\n        );\n    }\n}\n","<span *ngIf=\"displaySeparator\">&nbsp;&nbsp;</span>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { FlightSummary } from '@schemas/modules/flights/flight-summary.model';\nimport { CurrencyService } from '@services/services/currency-service';\nimport { FLIGHT_OPTIONS_STATIC } from '@core/constants/flight-options-static';\n\n@Component({\n    selector: 'tz-flight-item-desc-options-summary',\n    templateUrl: './flight-item-desc-options-summary.component.html',\n    styleUrls: ['./flight-item-desc-options-summary.component.scss'],\n})\nexport class FlightItemDescOptionsSummaryComponent implements OnInit {\n    @Input() flightSummary!: FlightSummary;\n    @Input() currencyColor: string | undefined;\n    @Input() customCurrencyIconSize: string | undefined;\n    @Input() customFontSize: string | undefined;\n    @Input() customIconsSize: number | undefined;\n\n    public optionsStatic = FLIGHT_OPTIONS_STATIC;\n\n    constructor(public currencyService: CurrencyService) {}\n\n    ngOnInit() {}\n}\n","<div *ngFor=\"let option of optionsStatic\" class=\"flight-description-wrapper\">\n    <div\n        class=\"flight-description__options-summery\"\n        *ngIf=\"\n            (flightSummary.options && flightSummary.options.summary && flightSummary.options.summary[option.id]) ||\n            option.mandatory\n        \"\n        [ngStyle]=\"{ fontSize: customFontSize }\"\n        [ngClass]=\"{\n            'flight-description__options-summery-light-color': flightSummary.options && !flightSummary.options.summary,\n            'flight-description__options-summery-light-color2':\n                flightSummary.options && flightSummary.options.summary && !flightSummary.options.summary[option.id]\n        }\"\n    >\n        <ng-container\n            *ngIf=\"\n                flightSummary.options &&\n                    flightSummary.options.summary &&\n                    flightSummary.options.summary[option.id] &&\n                    !flightSummary.options.summary[option.id].row_txt &&\n                    !flightSummary.options.summary[option.id].isFree;\n                else second\n            \"\n        >\n            <div\n                class=\"flight-description__options-summery-icon flight-description--options-summery-icon-not-free\"\n                [ngStyle]=\"{ color: currencyColor, fontSize: customCurrencyIconSize }\"\n            >\n                {{ currencyService.currency.symbol }}\n            </div>\n        </ng-container>\n\n        <ng-template #second>\n            <ng-container\n                *ngIf=\"\n                    !(\n                        flightSummary.options &&\n                        flightSummary.options.summary &&\n                        flightSummary.options.summary[option.id]\n                    );\n                    else third\n                \"\n            >\n                <div class=\"flight-description__options-summery-icon flight-description__options-summery-close-icon\">\n                    <tz-svg-icon icon=\"mobile-filter-close\"></tz-svg-icon>\n                </div>\n            </ng-container>\n        </ng-template>\n\n        <ng-template #third>\n            <div\n                class=\"flight-description__options-summery-icon flight-description&#45;&#45;options-summery-icon-disabled\"\n            >\n                <tz-icon icon=\"checked_green\"></tz-icon>\n            </div>\n        </ng-template>\n\n        <span>{{ option.txt | translate }}</span>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, AfterContentChecked, Output, ChangeDetectorRef } from '@angular/core';\n\nimport { Flight } from '@schemas/modules/flights/flight';\n\n@Component({\n    selector: 'tz-flight-item-desc-packages',\n    templateUrl: './flight-item-desc-packages.component.html',\n    styleUrls: ['./flight-item-desc-packages.component.scss'],\n})\nexport class FlightItemDescPackagesComponent implements OnInit, AfterContentChecked {\n    @Input() packages: Flight[] | undefined = [];\n    @Input() selectedPackageIndex: number | undefined | null = 0;\n    @Input() packageStartIdx = 0;\n\n    @Output() changeSelectedPackageIndex = new EventEmitter<{ pkgIndex: number; packageStartIdx: number }>();\n\n    public fromIdx = 0;\n    public luggageBlockCount = 0;\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    ngAfterContentChecked(): void {\n        this.changeDetector.detectChanges();\n    }\n\n    ngOnInit(): void {\n        if (this.packageStartIdx > 0) {\n            this.fromIdx = this.packageStartIdx;\n        }\n    }\n\n    public navigatePackage(value: number): void {\n        this.fromIdx += value;\n    }\n\n    public selectPackage(flightId: string): void {\n        const packageIdx = this.packages?.findIndex((flight) => flight.id === flightId);\n        if (packageIdx !== undefined) {\n            this.changeSelectedPackageIndex.emit({ pkgIndex: packageIdx, packageStartIdx: this.fromIdx });\n        }\n    }\n\n    public luggageBlockCountChange(luggageBlockCount: number): void {\n        if (luggageBlockCount > this.luggageBlockCount) {\n            this.luggageBlockCount = luggageBlockCount;\n        }\n    }\n}\n","<div class=\"flight-packages\" data-test=\"result-page-ticket-flight-package\" *ngIf=\"packages\">\n    <div class=\"package-item\" *ngFor=\"let flightPackage of packages | slice: fromIdx:fromIdx + 3; index as i\">\n        <tz-flights-pricing-plans\n            [luggageBlockCount]=\"luggageBlockCount\"\n            [selected]=\"\n                selectedPackageIndex !== null && selectedPackageIndex !== undefined\n                    ? packages[selectedPackageIndex].id === flightPackage.id\n                    : false\n            \"\n            [package]=\"flightPackage\"\n            (luggageBlockCountChange)=\"luggageBlockCountChange($event)\"\n            (selectPackage)=\"selectPackage(flightPackage.id)\"\n        >\n        </tz-flights-pricing-plans>\n    </div>\n\n    <div class=\"flight-packages__slide-options-not-available package-item\" *ngIf=\"packages?.length === 2\">\n        <div>{{ 'NOTIFS.OPTION_NOT_AVAILABLE' | translate }}</div>\n    </div>\n\n    <ng-container *ngIf=\"packages\">\n        <div class=\"slide-btn select-btn--next\" *ngIf=\"fromIdx < packages.length - 3\" (click)=\"navigatePackage(1)\">\n            <tz-icon icon=\"arrow-right-blue\"></tz-icon>\n        </div>\n\n        <div class=\"slide-btn select-btn--prev\" *ngIf=\"fromIdx > 0\" (click)=\"navigatePackage(-1)\">\n            <tz-icon icon=\"arrow-left-blue\"></tz-icon>\n        </div>\n    </ng-container>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { FlightSummary, FlightSummaryType } from '@schemas/modules/flights/flight-summary.model';\n\n@Component({\n    selector: 'tz-flight-list-info-block-item',\n    templateUrl: './flight-list-info-block-item.component.html',\n    styleUrls: ['./flight-list-info-block-item.component.scss'],\n})\nexport class FlightListInfoBlockItemComponent implements OnInit {\n    @Input() flight!: Flight;\n    @Input() flightSummary!: FlightSummary;\n    @Input() onWardSelected = false;\n    @Input() right = false;\n    @Input() itemType: FlightSummaryType = 'depart';\n    @Input() selectable = true;\n    @Output() onwardFlightChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    public airportStopRoutes: string[] = [];\n\n    constructor() {}\n\n    get isDepartItem(): boolean {\n        return this.itemType === 'depart';\n    }\n\n    get isReturnItem(): boolean {\n        return this.itemType === 'return';\n    }\n\n    public setAirportStopRoutes(): string[] {\n        const airportStopRoutesArr: string[] = [];\n        if (!this.flightSummary.airportStopRoutes || !this.flightSummary.airportStopRoutes.length) {\n            airportStopRoutesArr.push('Direct');\n        }\n\n        if (this.flightSummary.airportStopRoutes?.length === 1) {\n            airportStopRoutesArr.push(this.flightSummary.airportStopRoutes[0].code);\n\n            if (this.flightSummary.changeInAirport) {\n                airportStopRoutesArr.push(this.flightSummary.airportStopRoutes[1].code);\n            }\n        }\n\n        if (this.flightSummary.airportStopRoutes?.length === 2) {\n            airportStopRoutesArr.push(this.flightSummary.airportStopRoutes[0].code);\n            airportStopRoutesArr.push(this.flightSummary.airportStopRoutes[1].code);\n        }\n        return airportStopRoutesArr;\n    }\n\n    ngOnInit() {\n        this.setFlightSummeryData();\n        this.airportStopRoutes = this.setAirportStopRoutes();\n    }\n\n    onOnwardFlightChanged(selected: boolean): void {\n        this.onwardFlightChanged.emit(selected);\n    }\n\n    setFlightSummeryData(): void {\n        this.flightSummary = this.isDepartItem ? this.flight.departureSummary : this.flight.returnSummary;\n    }\n}\n","<div class=\"flight__info-block\">\n    <div class=\"flight__info-block-checkbox\" [class.flight__info-block-checkbox-selectabel]=\"!selectable\">\n        <tz-checkbox\n            className=\"checkbox--primary\"\n            [stopPropagation]=\"true\"\n            (selectedChange)=\"onOnwardFlightChanged($event)\"\n            [selected]=\"onWardSelected\"\n        ></tz-checkbox>\n    </div>\n\n    <div class=\"flight__info-block-image\">\n        <tz-flight-provider-image\n            className=\"flight__info-image\"\n            [provider]=\"flightSummary.airline\"\n        ></tz-flight-provider-image>\n    </div>\n\n    <div class=\"flight__company-name-block\">\n        <div\n            class=\"flight__company-name\"\n            data-test=\"flight-company-name\"\n            container=\"body\"\n            tooltipClass=\"tooltip-mb-2\"\n            [ngbTooltip]=\"(flightSummary | flightAirlineName).length > 11 ? (flightSummary | flightAirlineName) : ''\"\n        >\n            {{ flightSummary.airlineName }}\n        </div>\n\n        <div class=\"flight__type-text\" data-test=\"flight-type-text-departure\" *ngIf=\"isDepartItem\">\n            {{ 'GENERAL.DEPART' | translate }}\n        </div>\n        <div class=\"flight__type-text\" data-test=\"flight-type-text-return\" *ngIf=\"isReturnItem\">\n            {{ 'GENERAL.RETURN' | translate }}\n        </div>\n    </div>\n\n    <div class=\"flight__info-content\" data-test=\"flight-info-content\">\n        <div class=\"flight__time-block flight__time-block--start\">\n            <div class=\"flight__time-item\" data-test=\"flight-time-item-depart\">\n                {{ flightSummary.departureTzFormat | tzDate: 'shortTime' }}\n            </div>\n            <div class=\"flight__day-item\" data-test=\"flight-date-item-depart\">\n                {{ flightSummary.departureTzFormat | tzDate: 'shortDateMonth' }}\n            </div>\n        </div>\n\n        <div class=\"flight__duration-block\" data-test=\"flight-duration-block\">\n            <div class=\"flight__duration-text\">\n                {{ 'FLIGHT_TRAIN.DURATION' | translate }}: {{ flightSummary.duration }}\n            </div>\n\n            <div class=\"flight__duration-item\">\n                <div class=\"flight__duration-line-point\">\n                    <div\n                        tooltipClass=\"tooltip-mb-1\"\n                        container=\"body\"\n                        class=\"flight__duration-line-tooltip-point\"\n                        data-test=\"origin-city\"\n                        placement=\"top\"\n                        [ngbTooltip]=\"flightSummary.originCity + ', ' + flightSummary.originAirportName\"\n                    ></div>\n                </div>\n                <div class=\"flight__duration-line\"></div>\n                <div class=\"flight__duration-line-point\">\n                    <div\n                        tooltipClass=\"tooltip-mb-1\"\n                        class=\"flight__duration-line-tooltip-point\"\n                        data-test=\"destination-city\"\n                        placement=\"top\"\n                        [ngbTooltip]=\"flightSummary.destinationCity + ', ' + flightSummary.destinationAirportName\"\n                    ></div>\n                </div>\n            </div>\n\n            <div class=\"flight__duration-item-content\">\n                <div class=\"flight__duration-item-origin-code\" data-test=\"flight-origin-text\">\n                    {{ flightSummary.originCode }}\n                </div>\n\n                <div\n                    [class.flight__duration-item-airport-stop-routes--one]=\"airportStopRoutes.length === 1\"\n                    class=\"flight__duration-item-airport-stop-routes\"\n                >\n                    <div\n                        *ngFor=\"let airportStopRoute of airportStopRoutes\"\n                        class=\"flight__duration-item-airport-stop-route-item\"\n                    >\n                        <div\n                            [class.flight__duration-line-point]=\"\n                                flightSummary.airportStopRoutes && flightSummary.airportStopRoutes.length\n                            \"\n                            class=\"flight__duration-line-no-point\"\n                        >\n                            <div\n                                class=\"flight__duration-text-tooltip\"\n                                placement=\"top\"\n                                tooltipClass=\"flight-duration-tooltip\"\n                                [ngbTooltip]=\"flightSummary | layoverDescription\"\n                            ></div>\n                        </div>\n                        <div class=\"flight__duration-short-name\">{{ airportStopRoute }}</div>\n                    </div>\n                </div>\n\n                <div class=\"flight__duration-item-destination-code\" data-test=\"flight-duration-text\">\n                    {{ flightSummary.destinationCode }}\n                </div>\n            </div>\n        </div>\n\n        <div class=\"flight__time-block flight__time-block--end\">\n            <div class=\"flight__time-item\" data-test=\"flight-time-item-arriv\">\n                {{ flightSummary.arrivalTzFormat | tzDate: 'shortTime' }}\n            </div>\n            <div class=\"flight__day-item\" data-test=\"flight-date-item-arriv\">\n                {{ flightSummary.arrivalTzFormat | tzDate: 'shortDateMonth' }}\n\n                <span *ngIf=\"flightSummary.noOfDays > 0\" class=\"flight__day-item-no-of-days\">\n                    + {{ flightSummary.noOfDays }}\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\nimport { FlightSummary, FlightSummaryType } from '@schemas/modules/flights/flight-summary.model';\nimport { FLIGHT_OPTIONS_STATIC } from '@core/constants/flight-options-static';\n\n@Component({\n    selector: 'tz-flight-list-item-desc-block',\n    templateUrl: './flight-list-item-desc-block.component.html',\n    styleUrls: ['./flight-list-item-desc-block.component.scss'],\n})\nexport class FlightListItemDescBlockComponent implements OnChanges, OnInit {\n    @Input() returnSummary!: FlightSummary;\n    @Input() departureSummary!: FlightSummary;\n    @Input() isMyTipTicket = false;\n    @Input() itemType: FlightSummaryType = 'depart';\n\n    public flightSummary!: FlightSummary;\n    public optionsStatic = FLIGHT_OPTIONS_STATIC;\n\n    constructor() {}\n\n    get isDepartItem(): boolean {\n        return this.itemType === 'depart' ? true : false;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes['departureSummary'] &&\n            (changes['departureSummary'].previousValue?.id !== changes['departureSummary'].currentValue?.id ||\n                changes['departureSummary'].previousValue.classes[0] !==\n                    changes['departureSummary'].currentValue.classes[0])\n        ) {\n            this.flightSummary = this.isDepartItem ? this.departureSummary : this.returnSummary;\n        }\n    }\n\n    ngOnInit() {\n        this.setFlightSummeryData();\n    }\n\n    setFlightSummeryData(): void {\n        this.flightSummary = this.isDepartItem ? this.departureSummary : this.returnSummary;\n    }\n}\n","<div class=\"flight-description\" data-test=\"result-page-ticket-flight-desciption\">\n    <div class=\"flight-description__info\">\n        <div class=\"flight-description__title\" data-test=\"flight-description-title\">\n            {{ flightSummary.originCity }} – {{ flightSummary.destinationCity }}\n\n            <span class=\"flight-description__title-date\" data-test=\"flight-date\">{{\n                flightSummary.departureTzFormat | tzDate: 'mediumDate'\n            }}</span>\n\n            <span class=\"flight-description__title--is-date-a-head\" *ngIf=\"flightSummary.isDateAHead\">\n                {{ 'FLIGHT.ARRIVES' | translate }} {{ flightSummary.arrivalTzFormat | tzDate: 'mediumDate' }}\n            </span>\n        </div>\n\n        <div *ngFor=\"let route of flightSummary.route\" class=\"flight-description__ticket-info-block\">\n            <div class=\"flight-description__ticket-info-item flight-description--ticket-info-item-top\">\n                <div class=\"flight-description__ticket-duration-info-block\">\n                    <div>{{ 'FLIGHT.FLIGHT' | translate }} {{ route.flightNumber }}</div>\n\n                    <div>{{ 'FLIGHT_TRAIN.DURATION' | translate }}: {{ route.duration }}</div>\n                </div>\n\n                <div class=\"flight-description__ticket-address-info-block\">\n                    <div class=\"flight-description__ticket-arrival-date\">\n                        {{ route.departureTzFormat | tzDate: 'shortTime' }}\n                    </div>\n                    <div>\n                        {{ route.origin.city }}&nbsp;({{ route.origin.code }})&nbsp;{{ route.origin.airport }}\n                        {{ route.origin.terminal }}\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"flight-description__ticket-info-item\">\n                <div class=\"flight-description__ticket-airline-info-item\">\n                    <div class=\"flight-description__ticket-airline-operated-by-text\">\n                        {{ 'FLIGHT.OPERATED_BY' | translate }}\n                        {{\n                            route.operatedByName\n                                ? route.operatedByName\n                                : route.airlineName\n                                ? route.airlineName\n                                : route.airline\n                        }}\n                    </div>\n                    <div class=\"flight-description__ticket-airline-operated-by-text\">{{ route.airplaneModel }}</div>\n                </div>\n\n                <div class=\"flight-description__ticket-address-info-block\">\n                    <div class=\"flight-description__ticket-arrival-date\">\n                        {{ route.arrivalTzFormat | tzDate: 'shortTime' }}\n                    </div>\n                    <div>\n                        {{ route.destination.city }}&nbsp;({{ route.destination.code }})&nbsp;{{\n                            route.destination.airport\n                        }}\n                        {{ route.destination.terminal }}\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"route.hasLayover\" class=\"flight-description__has-layover\">\n                <div *ngIf=\"route.sameLayover && route.nightLayover\" class=\"flight-description__layover-in\">\n                    {{\n                        'FLIGHT_TRAIN.NIGHT_LAYOVER_IN_PLACE'\n                            | translate: { city: route.layoverIn.city, country: route.layoverIn.country }\n                    }}\n                </div>\n\n                <div *ngIf=\"route.sameLayover && !route.nightLayover\" class=\"flight-description__layover-in\">\n                    {{\n                        'FLIGHT_TRAIN.LAYOVER_IN_PLACE'\n                            | translate: { city: route.layoverIn.city, country: route.layoverIn.country }\n                    }}\n                </div>\n\n                <div class=\"flight-description__layover-duration\">\n                    <div>{{ route.layoverDuration }}</div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"flight-description__price-info\">\n        <div class=\"flight-description__price-info-flight-block\">\n            <span\n                [class.flight-description__price-info-flight-icon--return]=\"itemType === 'return'\"\n                class=\"tz-icon-service-flight flight-description__price-info-flight-icon flight-description__price-info-flight-icon--departure\"\n            ></span>\n            {{ flightSummary.classes[0] | translate }}\n        </div>\n\n        <tz-flight-item-desc-options-summary [flightSummary]=\"flightSummary\"></tz-flight-item-desc-options-summary>\n\n        <div class=\"flight-description__luggage-block\">\n            <tz-flight-list-item-desc-luggage [luggage]=\"flightSummary.luggage\"></tz-flight-list-item-desc-luggage>\n        </div>\n\n        <div\n            *ngIf=\"departureSummary.bagSummary.hasAdditional && !isMyTipTicket\"\n            class=\"flight-description__price-info-case-block\"\n        >\n            <tz-icon [className]=\"'flight-description__price-info-case-icon'\" icon=\"case-lightgray\"></tz-icon>\n            <div class=\"flight-description__additional-luggage-text\">\n                <div>{{ 'FLIGHT.LUGGAGE.checkIn' | translate }}&nbsp;</div>\n                <div class=\"text-fee\">{{ 'FLIGHT.OPTIONS.Checked_bag_fee' | translate }}</div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport {\n    FlightLuggage,\n    FlightLuggageOption,\n    FlightLuggageOptionTypes,\n} from '@schemas/modules/flights/flight-luggage.model';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-flight-list-item-desc-luggage',\n    templateUrl: './flight-list-item-desc-luggage.component.html',\n    styleUrls: ['./flight-list-item-desc-luggage.component.scss'],\n})\nexport class FlightListItemDescLuggageComponent implements OnChanges, OnInit {\n    @Input() luggage!: FlightLuggage;\n    @Input() componentType: 'details' | 'package' = 'details';\n    @Output() luggageBlockCountChange: EventEmitter<number> = new EventEmitter<number>();\n\n    public bags: { option: FlightLuggageOption; hide: boolean; icon: string; text: string; style: string }[] = [];\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['luggage'] && !changes['luggage'].firstChange) {\n            this.orderLuggage();\n        }\n    }\n\n    ngOnInit() {\n        this.orderLuggage();\n    }\n\n    orderLuggage(): void {\n        const luggage = { ...this.luggage };\n        const orderingBags: {\n            option: FlightLuggageOption;\n            hide: boolean;\n            icon: string;\n            text: string;\n            style: string;\n        }[] = [];\n        if (luggage.cabin && luggage.cabin.options) {\n            luggage.cabin.options.map((option) => {\n                if (\n                    !(\n                        (option.prices && option.prices.listPrice > 0) ||\n                        (option.travelerTypes?.length === 1 && option.travelerTypes.includes('Child')) ||\n                        (option.travelerTypes?.length === 1 && option.travelerTypes.includes('Infant'))\n                    )\n                ) {\n                    orderingBags.push({ option, hide: false, icon: '', text: '', style: '' });\n                }\n            });\n        }\n        if (luggage.checkIn && luggage.checkIn.options) {\n            luggage.checkIn.options.map((option) => {\n                if (\n                    !(\n                        (option.prices && option.prices.listPrice > 0) ||\n                        (option.travelerTypes?.length === 1 && option.travelerTypes.includes('Child')) ||\n                        (option.travelerTypes?.length === 1 && option.travelerTypes.includes('Infant'))\n                    )\n                ) {\n                    orderingBags.push({ option, hide: false, icon: '', text: '', style: '' });\n                }\n            });\n        }\n\n        let luggageBlockCount = orderingBags.length;\n\n        orderingBags.map((optionItem) => {\n            if (optionItem.option.type === FlightLuggageOptionTypes.PERSONALITEM) {\n                optionItem.icon = 'case-small-black';\n                optionItem.style = 'width: 1rem; height: 1rem;';\n            }\n\n            if (optionItem.option.type === FlightLuggageOptionTypes.CABIN) {\n                optionItem.icon = 'case-small-black';\n                optionItem.style = 'width: 1rem; height: 1rem;';\n            }\n\n            if (optionItem.option.type === FlightLuggageOptionTypes.CHECKIN) {\n                optionItem.icon = 'case-dark';\n                optionItem.style = 'width: 1rem; height: 1.375rem;';\n            }\n\n            optionItem.text = optionItem.option.type;\n\n            if (orderingBags.length > 2 && optionItem.option.type === FlightLuggageOptionTypes.PERSONALITEM) {\n                --luggageBlockCount;\n                optionItem.hide = true;\n            }\n        });\n\n        if (luggageBlockCount) {\n            this.changeBlockCount(luggageBlockCount);\n        }\n\n        this.bags = [...orderingBags];\n    }\n\n    private changeBlockCount(luggageBlockCount: number): void {\n        this.luggageBlockCountChange.emit(luggageBlockCount);\n    }\n}\n","<div *ngFor=\"let bag of bags\" class=\"flight-description-bag-wrapper\" [ngClass]=\"{ hide: bag.hide }\">\n    <div *ngIf=\"!bag.hide && (platformService.isMobileDevice$ | async) === false\" class=\"flight-description-bag-block\">\n        <tz-icon [class]=\"bag.icon\" [className]=\"'flight-description-bag-block__icon'\" [icon]=\"bag.icon\"></tz-icon>\n        <div class=\"flight-description-bag-block__info tz-luggages flex-column\">\n            <div class=\"flight-description-bag-block__title tz-luggages__type\">\n                {{ 'FLIGHT.LUGGAGE.' + bag.text | translate }}&nbsp;\n            </div>\n            <div\n                class=\"flight-description-bag-block__description tz-luggages\"\n                [ngClass]=\"{ 'flex-column': componentType === 'details' }\"\n            >\n                <span class=\"tz-luggages__weight\" *ngFor=\"let weightText of bag.option.weightTexts; let last = last\">\n                    {{ weightText.trim() }}<span *ngIf=\"!last\">,&nbsp;</span>\n                </span>\n                <tz-flight-bag-separator\n                    *ngIf=\"componentType !== 'details'\"\n                    [luggageOption]=\"bag.option\"\n                    [componentType]=\"componentType\"\n                >\n                </tz-flight-bag-separator>\n                <span class=\"tz-luggages__dimension\" *ngIf=\"bag.option.dimensions\">\n                    {{ bag.option.dimensions | replace: ' cm':'cm' }}\n                </span>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"!bag.hide && (platformService.isMobileDevice$ | async)\" class=\"flight-description-bag-block-mob\">\n        <div class=\"flight-description-bag-block-mob__info\">\n            <div class=\"luggage-type\">\n                <tz-icon\n                    [style]=\"bag.style\"\n                    [className]=\"'flight-description-bag-block__icon'\"\n                    [icon]=\"bag.icon\"\n                ></tz-icon>\n                <p class=\"luggage-type__title\">{{ 'FLIGHT.LUGGAGE.' + bag.text | translate }}</p>\n            </div>\n            <div class=\"flight-luggage-info\">\n                <span class=\"luggage-weight\" *ngFor=\"let weightText of bag.option.weightTexts\">{{ weightText }}</span>\n                <p class=\"luggage-dimensions\">{{ bag.option.dimensions }}</p>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Flight } from '@schemas/modules/flights/flight';\n\n@Component({\n    selector: 'tz-flight-list-item-description',\n    templateUrl: './flight-list-item-description.component.html',\n    styleUrls: ['./flight-list-item-description.component.scss'],\n})\nexport class FlightListItemDescriptionComponent implements OnInit {\n    @Input() flight!: Flight;\n\n    @Output() openTerms: EventEmitter<void> = new EventEmitter<void>();\n    @Output() openCheckinAllowanceInfo: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    onOpenTermsAndConditions($event: Event) {\n        $event.stopPropagation();\n        this.openTerms.emit();\n    }\n\n    onOpenCheckinAllowance($event: Event): void {\n        $event.stopPropagation();\n        this.openCheckinAllowanceInfo.emit();\n    }\n}\n","<div>\n    <tz-flight-list-item-desc-block\n        [returnSummary]=\"flight.returnSummary\"\n        [departureSummary]=\"flight.departureSummary\"\n        itemType=\"depart\"\n    ></tz-flight-list-item-desc-block>\n\n    <div *ngIf=\"flight.isRoundTrip\" class=\"flight-description__info-block-separator\"></div>\n\n    <tz-flight-list-item-desc-block\n        *ngIf=\"flight.isRoundTrip\"\n        [returnSummary]=\"flight.returnSummary\"\n        [departureSummary]=\"flight.departureSummary\"\n        itemType=\"return\"\n    ></tz-flight-list-item-desc-block>\n\n    <div\n        *ngIf=\"\n            (flight.broker !== 'KIWI' && flight.termsUnavailable !== true) ||\n            (flight.broker === 'KIWI' && flight.checkinAllowance > 0)\n        \"\n        class=\"flight-description__info-block-separator\"\n    ></div>\n\n    <div *ngIf=\"flight.broker !== 'KIWI' && flight.termsUnavailable !== true\" class=\"terms-and-conditions-block\">\n        <div class=\"terms-and-conditions-block__text-block\">\n            <a (click)=\"onOpenTermsAndConditions($event)\" class=\"terms-and-conditions-block__link tz-purple-link\">\n                <span class=\"terms-and-conditions-block__icon-block\">\n                    <tz-icon icon=\"assignment\"></tz-icon>\n                </span>\n\n                <span>{{ 'FLIGHT_TRAIN.CONDITIONS' | translate }}</span>\n            </a>\n        </div>\n    </div>\n    <div *ngIf=\"flight.broker === 'KIWI' && flight.checkinAllowance > 0\" class=\"terms-and-conditions-block\">\n        <a\n            (click)=\"onOpenCheckinAllowance($event)\"\n            class=\"terms-and-conditions-block__link tz-purple-link checkin-allowance\"\n        >\n            <span class=\"terms-and-conditions-block__icon-block\">\n                <tz-icon [icon]=\"flight.checkinAllowance === 1 ? 'free-checkin' : 'airport-checkin'\"></tz-icon>\n            </span>\n\n            <span *ngIf=\"flight.checkinAllowance === 1\">{{ 'FLIGHT.FREE_CHECKIN' | translate }}</span>\n            <span *ngIf=\"flight.checkinAllowance === 2\">{{ 'FLIGHT.AIRPORT_CHECKIN' | translate }}</span>\n        </a>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { BestValType } from '@schemas/modules/search/search';\nimport { ResultsTools } from '@services/modules/results/services/tools.shared.services';\nimport { PlatformService } from '@services/platform.service';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Component({\n    selector: 'tz-flight-list-item',\n    templateUrl: './flight-list-item.component.html',\n    styleUrls: ['./flight-list-item.component.scss'],\n})\nexport class FlightListItemComponent implements OnInit {\n    @Input() twoWayFlight = false;\n    @Input() flight!: Flight;\n    @Input() onWardSelected = false;\n    @Input() returnSelected = false;\n    @Input() selectable = true;\n    @Input() oldPrice = 0;\n    @Input() totalPassengers = 0;\n\n    @Output() selectedOnwardFlight: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() selectedReturnFlight: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    public bestValType: BestValType | undefined;\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit(): void {\n        if (this.flight && this.flight.bestValType) {\n            this.bestValType = ResultsTools.getBestValType(this.flight.bestValType, ServiceId.FLIGHT);\n        }\n    }\n\n    public onOnwardFlightChanged(selected: boolean) {\n        this.selectedOnwardFlight.emit(selected);\n    }\n\n    public onReturnFlightChanged(selected: boolean) {\n        this.selectedReturnFlight.emit(selected);\n    }\n}\n","<div class=\"flight-container\" *ngIf=\"flight\" data-test=\"result-page-flight-container\">\n    <div class=\"flight\">\n        <div *ngIf=\"bestValType\" class=\"recommended-block__content\">\n            <tz-recommended-list-tem-description [bestValType]=\"bestValType\"></tz-recommended-list-tem-description>\n        </div>\n        <div class=\"flight__info-content\">\n            <tz-flight-list-info-block-item\n                [selectable]=\"selectable\"\n                [flight]=\"flight\"\n                [right]=\"true\"\n                [onWardSelected]=\"onWardSelected\"\n                itemType=\"depart\"\n                (onwardFlightChanged)=\"onOnwardFlightChanged($event)\"\n            ></tz-flight-list-info-block-item>\n\n            <div *ngIf=\"flight.isRoundTrip\" class=\"flight__info-block-separator\"></div>\n\n            <tz-flight-list-info-block-item\n                *ngIf=\"flight.isRoundTrip\"\n                [selectable]=\"selectable\"\n                [flight]=\"flight\"\n                [onWardSelected]=\"returnSelected\"\n                itemType=\"return\"\n                (onwardFlightChanged)=\"onReturnFlightChanged($event)\"\n            ></tz-flight-list-info-block-item>\n        </div>\n        <div class=\"flight__price-block\">\n            <div class=\"flight__price-icon\">\n                <div class=\"flight__icon-content\">\n                    <span\n                        data-test=\"result-page-flight-container-airplane-icon\"\n                        class=\"tz-icon-service-flight icon-flight\"\n                    ></span>\n                    <tz-icon *ngIf=\"flight.departureSummary.bagSummary.hasCheckInBag\" icon=\"case\"></tz-icon>\n                    <tz-icon\n                        *ngIf=\"\n                            !flight.departureSummary.bagSummary.hasCheckInBag &&\n                            flight.departureSummary.bagSummary.hasCabinBag\n                        \"\n                        icon=\"case-small\"\n                    ></tz-icon>\n                    <div data-test=\"result-page-flight-container-flight-broker\" class=\"flight__financial-broker\">\n                        {{ flight.broker }}\n                    </div>\n                </div>\n\n                <div data-test=\"result-page-flight-container-price\" class=\"flight__price-text flex align-center\">\n                    <tz-price-change-tooltop *ngIf=\"oldPrice > 0\"></tz-price-change-tooltop>\n                    <span *ngIf=\"oldPrice > 0\" class=\"service-old-price\">\n                        + {{ flight.prices.listPrice - oldPrice | tzCurrency: flight.prices.listPriceCur }}\n                    </span>\n                    {{ flight.prices.listPrice | tzCurrency: flight.prices.listPriceCur }}\n                </div>\n            </div>\n            <div class=\"flight__persons-text\" data-test=\"flight-persons-text\">\n                {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }}\n                {{ 'TRAVELLER.' + (totalPassengers > 1 ? 'PERSONS' : 'PERSON') | translate }}\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-flight-provider-image',\n    templateUrl: './flight-provider-image.component.html',\n    styleUrls: ['./flight-provider-image.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FlightProviderImageComponent implements OnInit {\n    @Input() className = '';\n    @Input() provider!: string;\n\n    public imageClassName = '';\n    public providerImage = '';\n\n    constructor() {}\n\n    ngOnInit(): void {\n        this.imageClassName = 'flight-provider-image ' + this.className;\n        this.providerImage = '/assets/icons/web/img/airHex/' + this.provider + '.png';\n    }\n}\n","<img [class]=\"imageClassName\" [src]=\"providerImage\" />\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Flight } from '@schemas/modules/flights/flight';\n\n@Component({\n    selector: 'tz-flights-pricing-plans',\n    templateUrl: './flights-pricing-plans.component.html',\n    styleUrls: ['./flights-pricing-plans.component.scss'],\n})\nexport class FlightsPricingPlansComponent implements OnInit {\n    @Input() package!: Flight;\n    @Input() selected = false;\n    @Input() luggageBlockCount!: number;\n    @Output() selectPackage: EventEmitter<void> = new EventEmitter<void>();\n    @Output() luggageBlockCountChange: EventEmitter<number> = new EventEmitter<number>();\n\n    constructor() {}\n\n    get luggageBlockMinHeight(): number {\n        const count = this.luggageBlockCount;\n        const luggageTextHeigh = 44;\n        const luggageSpacing = 16;\n\n        const toatlTextHeight = count * luggageTextHeigh;\n        const totalMargin = count > 1 ? (count - 1) * luggageSpacing : 0;\n        return toatlTextHeight + totalMargin;\n    }\n\n    ngOnInit(): void {\n        // console.log('this.package');\n        // console.log(this.package);\n    }\n\n    public onSelectClicked() {\n        this.selectPackage.emit();\n    }\n\n    public onLuggageBlockCountChange(count: number): void {\n        this.luggageBlockCountChange.emit(count);\n    }\n}\n","<div class=\"flight-package-item\">\n    <div class=\"flight-package-item__title\">\n        {{ package.departureSummary.classes[0] | translate }}\n    </div>\n\n    <div class=\"flight-package-item__price\" data-test=\"flight-package-item-price\">\n        {{ package.prices.listPrice | tzCurrency: package.prices.listPriceCur }}\n    </div>\n\n    <div class=\"flight-package-item__options-summary\">\n        <tz-flight-item-desc-options-summary\n            [flightSummary]=\"package.departureSummary\"\n        ></tz-flight-item-desc-options-summary>\n    </div>\n\n    <div class=\"flight-package-item__luggage-block\" [ngStyle]=\"{ 'min-height': luggageBlockMinHeight + 'px' }\">\n        <tz-flight-list-item-desc-luggage\n            [luggage]=\"package.departureSummary.luggage\"\n            componentType=\"package\"\n            (luggageBlockCountChange)=\"onLuggageBlockCountChange($event)\"\n        ></tz-flight-list-item-desc-luggage>\n    </div>\n\n    <div class=\"flight-package-item__select-btn-block\">\n        <button\n            data-test=\"select-btn\"\n            [class.tz-btn-primary-selected]=\"selected\"\n            class=\"tz-btn tz-btn-primary tz-btn--select\"\n            (click)=\"onSelectClicked()\"\n        >\n            {{ selected ? ('GENERAL.SELECTED' | translate) : ('GENERAL.SELECT' | translate) }}\n        </button>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { FlightSummary, FlightSummaryType } from '@schemas/modules/flights/flight-summary.model';\n\n@Component({\n    selector: 'tz-mob-flight-details-route-details',\n    templateUrl: './mob-flight-details-route-details.component.html',\n    styleUrls: ['./mob-flight-details-route-details.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobFlightDetailsRouteDetailsComponent implements OnInit {\n    @Input() flight!: Flight;\n    @Input() itemType: FlightSummaryType = 'depart';\n    public departSummary!: FlightSummary;\n    public returnSummary!: FlightSummary;\n    public departStops: undefined | number;\n    public returnStops: undefined | number;\n    constructor() {}\n\n    get isDepartItem(): boolean {\n        return this.itemType === 'depart';\n    }\n\n    get isReturnItem(): boolean {\n        return this.itemType === 'return';\n    }\n\n    ngOnInit() {\n        this.setFlightSummeryData();\n        this.initializeNumberOfStops();\n        console.log('departSummaryFlight', this.departSummary);\n        console.log('returnSummaryFlight', this.returnSummary);\n    }\n\n    setFlightSummeryData(): void {\n        this.departSummary = this.flight.departureSummary;\n        if (this.flight.isRoundTrip) {\n            this.returnSummary = this.flight.returnSummary;\n        }\n    }\n    private initializeNumberOfStops(): void {\n        if (this.flight.departureSummary.airportStopRoutes) {\n            this.departStops = this.departSummary?.airportStopRoutes?.length;\n        }\n        if (this.flight.returnSummary.airportStopRoutes) {\n            this.returnStops = this.returnSummary?.airportStopRoutes?.length;\n        }\n    }\n}\n","<div class=\"flight-details\">\n    <div class=\"flight-details__title\" data-test=\"mob-flight-details-destinationCity\">\n        <p>\n            <span>{{ 'FLIGHT.FLIGHT_TO' | translate }}&nbsp;</span>{{ flight?.departureSummary?.destinationCity }}\n        </p>\n        <p class=\"flight-details__title-details\" data-test=\"mob-flight-details-departure-time\">\n            <span class=\"data\">{{ flight?.departureSummary?.departureTzFormat | tzDate: 'tzDay' }},&nbsp;</span>\n            <span class=\"data\">{{ flight?.departureSummary?.departureTzFormat | tzDate: 'shortDateMonth' }}</span\n            >&nbsp;-<span\n                *ngIf=\"departSummary.noOfDays === 1\"\n                class=\"flight-details__title-details-red\"\n                data-test=\"mob-flight-details-arrival-time\"\n            >\n                {{ 'FLIGHT.ARRIVING_NEXT_DAY' | translate }}\n                <span class=\"flight-details__title-details\">-</span>\n            </span>\n            <span\n                *ngIf=\"departSummary.noOfDays > 1\"\n                class=\"flight-details__title-details-red\"\n                data-test=\"mob-flight-details-arrival-time\"\n            >\n                {{ 'FLIGHT.ARRIVES' | translate }} {{ departSummary.arrivalTzFormat | tzDate: 'shortDateMonth' }}\n                <span class=\"flight-details__title-details\">-</span>\n            </span>\n            <span *ngIf=\"departStops\" data-test=\"mob-flight-details-stops\">\n                {{ departStops }}\n                {{ departStops > 1 ? ('stops' | translate) : ('stop' | translate) }}\n                -\n            </span>\n            {{ flight?.departureSummary?.duration }}\n        </p>\n    </div>\n    <div class=\"flight-details__scheme\">\n        <div class=\"flight-details__scheme-container\">\n            <tz-mob-flight-details-route-scheme\n                *ngFor=\"let route of departSummary.route; let i = index\"\n                [route]=\"route\"\n                [isLast]=\"i === departStops || !departStops\"\n                [noOfDays]=\"departSummary.noOfDays\"\n            >\n            </tz-mob-flight-details-route-scheme>\n        </div>\n    </div>\n\n    <div\n        class=\"flight-details__title return-way\"\n        data-test=\"mob-flight-details-destinationCity\"\n        *ngIf=\"flight.isRoundTrip\"\n    >\n        <p>\n            <span>{{ 'FLIGHT.FLIGHT_TO' | translate }}&nbsp;</span>{{ flight?.returnSummary?.destinationCity }}\n        </p>\n        <p class=\"flight-details__title-details\" data-test=\"mob-flight-details-departure-time\">\n            <span class=\"data\">{{ flight?.returnSummary?.departureTzFormat | tzDate: 'tzDay' }},&nbsp;</span>\n            <span class=\"data\">{{ flight?.returnSummary?.departureTzFormat | tzDate: 'shortDateMonth' }}</span\n            >&nbsp;-<span\n                *ngIf=\"returnSummary?.noOfDays === 1\"\n                class=\"flight-details__title-details-red\"\n                data-test=\"mob-flight-details-arrival-time\"\n            >\n                {{ 'FLIGHT.ARRIVING_NEXT_DAY' | translate }}\n                <span class=\"flight-details__title-details\">-</span>\n            </span>\n            <span\n                *ngIf=\"returnSummary.noOfDays > 1\"\n                class=\"flight-details__title-details-red\"\n                data-test=\"mob-flight-details-arrival-time\"\n            >\n                {{ 'FLIGHT.ARRIVES' | translate }} {{ returnSummary.arrivalTzFormat | tzDate: 'shortDateMonth' }}\n                <span class=\"flight-details__title-details\">-</span>\n            </span>\n            <span *ngIf=\"returnStops\" data-test=\"mob-flight-details-stops\">\n                {{ returnStops }}\n                {{ returnStops > 1 ? ('stops' | translate) : ('stop' | translate) }}\n                -\n            </span>\n            {{ flight?.returnSummary?.duration }}\n        </p>\n    </div>\n    <div class=\"flight-details__scheme\" *ngIf=\"flight.isRoundTrip\">\n        <div class=\"flight-details__scheme-container\">\n            <tz-mob-flight-details-route-scheme\n                *ngFor=\"let route of returnSummary.route; let i = index\"\n                [route]=\"route\"\n                [isLast]=\"i === returnStops || !returnStops\"\n                [noOfDays]=\"returnSummary.noOfDays\"\n            >\n            </tz-mob-flight-details-route-scheme>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { FlightSummary } from '@schemas/modules/flights/flight-summary.model';\nimport { FlightRoute } from '@schemas/modules/flights/flight-route.model';\n\n@Component({\n    selector: 'tz-mob-flight-details-route-scheme',\n    templateUrl: './mob-flight-details-route-scheme.component.html',\n    styleUrls: ['./mob-flight-details-route-scheme.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobFlightDetailsRouteSchemeComponent implements OnInit {\n    @Input() route!: FlightRoute;\n    @Input() noOfDays: number | undefined;\n    @Input() isLast = false;\n\n    constructor() {}\n\n    ngOnInit() {\n        console.log('routeFlight', this.route);\n    }\n}\n","<div class=\"scheme-item\">\n    <div class=\"scheme-item__top\">\n        <div class=\"scheme-item__top__left\">\n            <div class=\"scheme-item__top__left-time\">\n                <p class=\"scheme-item__text-time\" data-test=\"mob-flight-route-scheme-departure-time\">\n                    {{ route?.departureTzFormat | tzDate: 'shortTime' }}\n                </p>\n                <div class=\"scheme-item__top__left-circle\"></div>\n            </div>\n            <div class=\"scheme-item__top__left-separator scheme-item__top__left-separator-solid\"></div>\n        </div>\n        <div class=\"scheme-item__top__right\">\n            <p class=\"scheme-item__text-name\" data-test=\"mob-flight-route-scheme-departure-info\">\n                {{ route?.origin?.city }}\n                ({{ route?.origin?.code }})\n                {{ route?.origin?.airport }}\n            </p>\n            <div class=\"scheme-item__text-description\" data-test=\"mob-flight-route-scheme-departure-airline-info\">\n                <p>{{ route?.airlineName }}</p>\n                <p>\n                    {{ 'FLIGHT.FLIGHT' | translate }} {{ route?.flightNumber }} –\n                    {{ 'FLIGHT_TRAIN.DURATION' | translate }}\n                    {{ route?.duration }}\n                </p>\n                <p>{{ 'FLIGHT.OPERATED_BY' | translate }} {{ route?.operatedByName }} {{ route?.airplaneModel }}</p>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"route.layover > 0\" class=\"scheme-item__top\">\n        <div class=\"scheme-item__top__left\">\n            <div class=\"scheme-item__top__left-time\">\n                <p class=\"scheme-item__text-time\" data-test=\"mob-flight-route-scheme-arrival-time\">\n                    {{ route?.arrivalTzFormat | tzDate: 'shortTime' }}\n                </p>\n                <div class=\"scheme-item__top__left-circle\"></div>\n            </div>\n            <div class=\"scheme-item__top__left-separator scheme-item__top__left-separator-dashed\"></div>\n        </div>\n        <div class=\"scheme-item__top__right\">\n            <p class=\"scheme-item__text-name\" data-test=\"mob-flight-route-scheme-destination-info\">\n                {{ route?.destination?.city }}\n                ({{ route?.destination?.code }})\n                {{ route?.destination?.airport }}\n            </p>\n            <div class=\"scheme-item__top__right-layover\" data-test=\"mob-flight-route-scheme-layover-info\">\n                {{ 'FLIGHT_TRAIN.LAYOVER_IN_SIMPLE' | translate }} {{ route?.layoverIn?.city }} ,\n                {{ route?.layoverIn?.country }}\n                {{ route?.layoverDuration }}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"scheme-item__bottom\" *ngIf=\"isLast\" data-test=\"mob-flight-route-scheme-if-it-last-item\">\n        <div class=\"scheme-item__bottom-time\">\n            <div class=\"scheme-item__text-time\" data-test=\"mob-flight-route-scheme-if-it-last-item-arrival-time\">\n                <p>{{ route?.arrivalTzFormat | tzDate: 'shortTime' }}</p>\n                <p *ngIf=\"noOfDays && noOfDays > 0\" class=\"scheme-item__text-time-days\">+{{ noOfDays }}</p>\n            </div>\n            <div class=\"scheme-item__top__left-circle\"></div>\n        </div>\n        <p class=\"scheme-item__text-name\" data-test=\"mob-flight-route-scheme-if-it-last-item-destination-info\">\n            {{ route?.destination?.city }}\n            ({{ route?.destination?.code }})\n            {{ route?.destination?.airport }}\n        </p>\n    </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { ModalService } from '@services/modal.service';\nimport { FlightsService } from '@services/modules/transport/flights/flights.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { Observable, Subject } from 'rxjs';\nimport { IFlightsCartData } from '@schemas/modules/flights/flights-cart-data';\n@Component({\n    selector: 'tz-mob-flight-details',\n    templateUrl: './mob-flight-details.component.html',\n    styleUrls: ['./mob-flight-details.component.scss'],\n})\nexport class MobFlightDetailsComponent implements OnInit, OnDestroy {\n    public flight!: Flight;\n    public flightsPackages: Flight[] = [];\n    public selectedFlight: Flight | undefined | null;\n    public selectedFlightFromCart: IFlightsCartData | undefined | null;\n    public totalPassengers = 0;\n    public destroy$: Subject<boolean> = new Subject<boolean>();\n    private data!: {\n        flight: Flight;\n        flightsPackages: Flight[];\n        type: 'details' | 'action';\n        totalPassengers: number;\n    };\n\n    constructor(private modalService: ModalService, private flightService: FlightsService) {}\n\n    get isTypeAction(): boolean {\n        return this.data.type !== 'details';\n    }\n\n    ngOnInit() {\n        this.flight = this.data.flight;\n        this.totalPassengers = this.data.totalPassengers;\n        if (this.data.flightsPackages) {\n            this.flightsPackages = this.data.flightsPackages;\n        }\n        this.selectedFlightFromCart = this.flightService.getSelectedFLightsFromCart();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public onSelectPackage(flight: Flight): void {\n        this.selectedFlight = flight;\n    }\n\n    public onSelectedFlightChange(selectedFlight: Flight | null) {\n        if (!selectedFlight) {\n            this.selectedFlight = null;\n            return;\n        }\n\n        this.selectedFlight = selectedFlight;\n    }\n\n    public onConfirm(): void {\n        const selectedFlight: Flight =\n            this.data.flightsPackages && this.selectedFlight ? this.selectedFlight : this.flight;\n\n        if (!this.selectedFlightFromCart?.isVirtual) {\n            this.addItemToCart(selectedFlight)\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                    this.modalService.dismiss({ nextService: true });\n                });\n        } else {\n            this.modalService.dismiss({ flight: selectedFlight });\n        }\n    }\n\n    public addItemToCart(flight: Flight): Observable<ICart | undefined> {\n        return this.flightService.addFlightToCart(flight);\n    }\n\n    public onOpenCheckinAllowance(flight: Flight): void {\n        if (flight) {\n            this.flightService.showFlightTrems(flight, true);\n        }\n    }\n}\n","<div class=\"flight-details\" [ngClass]=\"{ 'flight-container-selected-pb': !!selectedFlight && selectedFlight }\">\n    <div *ngIf=\"!isTypeAction\">\n        <tz-mob-flight-list-item [flight]=\"flight\" [totalPassengers]=\"totalPassengers\"></tz-mob-flight-list-item>\n    </div>\n    <div class=\"flight-details__separator\" *ngIf=\"!isTypeAction\"></div>\n    <tz-mob-flight-details-route-details [flight]=\"flight\"></tz-mob-flight-details-route-details>\n    <div class=\"flight-details__central-container\">\n        <div *ngFor=\"let package of flightsPackages; let i = index\">\n            <div class=\"flight-details__separator\"></div>\n            <tz-mob-flight-pricing-plans\n                [flight]=\"flight\"\n                [packages]=\"package\"\n                [totalPassengers]=\"totalPassengers\"\n                [selectedFlight]=\"selectedFlight\"\n                [currentIndex]=\"i\"\n                (selectedFlightChange)=\"onSelectedFlightChange($event)\"\n                (openTerms)=\"onOpenCheckinAllowance($event)\"\n            >\n            </tz-mob-flight-pricing-plans>\n        </div>\n        <div class=\"flight-details__separator-small\" *ngIf=\"!isTypeAction\"></div>\n        <div *ngIf=\"!isTypeAction\">\n            <tz-mob-flight-pricing-plans\n                [flight]=\"flight\"\n                [packages]=\"flight\"\n                [totalPassengers]=\"totalPassengers\"\n                [selectedFlight]=\"selectedFlight\"\n                [hidePriceInfo]=\"true\"\n                [isTypeAction]=\"false\"\n                (selectedFlightChange)=\"onSelectedFlightChange($event)\"\n                (openTerms)=\"onOpenCheckinAllowance($event)\"\n            ></tz-mob-flight-pricing-plans>\n        </div>\n    </div>\n\n    <div\n        class=\"flight-details__checkout tz-fixed-bottom flight-details-footer\"\n        *ngIf=\"!!selectedFlight && selectedFlight\"\n        data-test=\"mob-flight-details-checkout\"\n        id=\"flightDetailsFooter\"\n    >\n        <div class=\"flight-details__checkout-details\" *ngIf=\"!!selectedFlight.prices.listPrice\">\n            <div class=\"flight-details__checkout-details__total\">\n                <p class=\"flight-details__checkout-details__total-label\">\n                    {{ 'GENERAL.TOTAL' | translate }}\n                </p>\n                <div>\n                    <p class=\"flight-details__checkout-details__price\" data-test=\"mob-flight-details-checkout-price\">\n                        {{ selectedFlight.prices.listPrice | tzCurrency: selectedFlight?.prices?.listPriceCur }}\n                    </p>\n                    <p\n                        class=\"flight-details__checkout-details__persons\"\n                        data-test=\"mob-flight-details-checkout-passengers-number\"\n                    >\n                        {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }}\n                        {{ 'TRAVELLER.' + (totalPassengers > 1 ? 'PEOPLE' : 'PERSON') | translate }}\n                        <span class=\"text-vertical-divider\">{{ ' | ' }}</span>\n                        <span class=\"inline-block first-letter-uppercase\">{{ 'FLIGHT.ALL_TAXES' | translate }}</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n        <button\n            class=\"flight-details__checkout-btn\"\n            (click)=\"onConfirm()\"\n            data-test=\"mob-flight-details-checkout-confirm\"\n        >\n            {{ 'GENERAL.CONFIRM' | translate }}\n        </button>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-flight-direction-item',\n    templateUrl: './mob-flight-direction-item.component.html',\n    styleUrls: ['./mob-flight-direction-item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobFlightDirectionItemComponent {\n    @Input() stops!: number[];\n}\n","<div class=\"flight-direction\">\n    <div class=\"separator-line\">\n        <div class=\"separator-line__dot\"></div>\n        <div class=\"separator-line__line\"></div>\n    </div>\n    <div *ngFor=\"let stop of stops\" class=\"separator-line\">\n        <div class=\"separator-line__dot-circle\"></div>\n        <div class=\"separator-line__line\"></div>\n    </div>\n    <div class=\"separator-line__dot\"></div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FlightSummary } from '@schemas/modules/flights/flight-summary.model';\nimport { FLIGHT_OPTIONS_STATIC } from '@core/constants/flight-options-static';\nimport { CurrencyService } from '@services/services/currency-service';\n\n@Component({\n    selector: 'tz-mob-flight-item-desc-options-summary',\n    templateUrl: './mob-flight-item-desc-options-summary.component.html',\n    styleUrls: ['./mob-flight-item-desc-options-summary.component.scss'],\n})\nexport class MobFlightItemDescOptionsSummaryComponent implements OnInit {\n    @Input() flightSummary!: FlightSummary;\n    @Input() currencyColor: string | undefined;\n    @Input() customCurrencyIconSize: string | undefined;\n    @Input() customFontSize: string | undefined;\n    @Input() customIconsSize: number | undefined;\n\n    public optionsStatic = FLIGHT_OPTIONS_STATIC;\n\n    constructor(public currencyService: CurrencyService) {}\n\n    ngOnInit() {}\n}\n","<div>\n    <div *ngFor=\"let option of optionsStatic\">\n        <div *ngIf=\"option.id === 2 || option.id === 1\" class=\"flight-description-wrapper\">\n            <div\n                class=\"flight-description__options-summery\"\n                *ngIf=\"\n                    (flightSummary.options &&\n                        flightSummary.options.summary &&\n                        flightSummary.options.summary[option.id]) ||\n                    option.mandatory\n                \"\n                [ngClass]=\"{\n                    'flight-description__options-summery-light-color':\n                        flightSummary.options && !flightSummary.options.summary,\n                    'flight-description__options-summery-light-color2':\n                        flightSummary.options &&\n                        flightSummary.options.summary &&\n                        !flightSummary.options.summary[option.id]\n                }\"\n            >\n                <ng-container\n                    *ngIf=\"\n                        flightSummary.options &&\n                            flightSummary.options.summary &&\n                            flightSummary.options.summary[option.id] &&\n                            !flightSummary.options.summary[option.id].row_txt &&\n                            !flightSummary.options.summary[option.id].isFree;\n                        else second\n                    \"\n                >\n                    <div\n                        class=\"flight-description__options-summery-icon flight-description--options-summery-icon-not-free\"\n                        [ngStyle]=\"{ color: currencyColor }\"\n                    >\n                        {{ currencyService.currency.symbol }}\n                    </div>\n                </ng-container>\n\n                <ng-template #second>\n                    <ng-container\n                        *ngIf=\"\n                            !(\n                                flightSummary.options &&\n                                flightSummary.options.summary &&\n                                flightSummary.options.summary[option.id]\n                            );\n                            else third\n                        \"\n                    >\n                        <div\n                            class=\"flight-description__options-summery-icon flight-description__options-summery-close-icon\"\n                        >\n                            <tz-svg-icon icon=\"mobile-filter-close\"></tz-svg-icon>\n                        </div>\n                    </ng-container>\n                </ng-template>\n\n                <ng-template #third>\n                    <div\n                        class=\"flight-description__options-summery-icon flight-description&#45;&#45;options-summery-icon-disabled\"\n                    >\n                        <tz-icon icon=\"checked_green\"></tz-icon>\n                    </div>\n                </ng-template>\n\n                <span>{{ option.txt | translate }}</span>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div>\n    <div *ngFor=\"let option of optionsStatic\">\n        <div class=\"flight-description-wrapper\" *ngIf=\"option.id !== 2 && option.id !== 1\">\n            <div\n                class=\"flight-description__options-summery justify-end\"\n                *ngIf=\"\n                    (flightSummary.options &&\n                        flightSummary.options.summary &&\n                        flightSummary.options.summary[option.id]) ||\n                    option.mandatory\n                \"\n                [ngClass]=\"{\n                    'flight-description__options-summery-light-color':\n                        flightSummary.options && !flightSummary.options.summary,\n                    'flight-description__options-summery-light-color2':\n                        flightSummary.options &&\n                        flightSummary.options.summary &&\n                        !flightSummary.options.summary[option.id]\n                }\"\n            >\n                <ng-container\n                    *ngIf=\"\n                        flightSummary.options &&\n                            flightSummary.options.summary &&\n                            flightSummary.options.summary[option.id] &&\n                            !flightSummary.options.summary[option.id].row_txt &&\n                            !flightSummary.options.summary[option.id].isFree;\n                        else second\n                    \"\n                >\n                    <div\n                        class=\"flight-description__options-summery-icon flight-description--options-summery-icon-not-free\"\n                        [ngStyle]=\"{ color: currencyColor }\"\n                    >\n                        {{ currencyService.currency.symbol }}\n                    </div>\n                </ng-container>\n\n                <ng-template #second>\n                    <ng-container\n                        *ngIf=\"\n                            !(\n                                flightSummary.options &&\n                                flightSummary.options.summary &&\n                                flightSummary.options.summary[option.id]\n                            );\n                            else third\n                        \"\n                    >\n                        <div\n                            class=\"flight-description__options-summery-icon flight-description__options-summery-close-icon\"\n                        >\n                            <tz-svg-icon icon=\"mobile-filter-close\"></tz-svg-icon>\n                        </div>\n                    </ng-container>\n                </ng-template>\n\n                <ng-template #third>\n                    <div\n                        class=\"flight-description__options-summery-icon flight-description&#45;&#45;options-summery-icon-disabled\"\n                    >\n                        <tz-icon icon=\"checked_green\"></tz-icon>\n                    </div>\n                </ng-template>\n\n                <span>{{ option.txt | translate }}</span>\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { FlightSummary, FlightSummaryType } from '@schemas/modules/flights/flight-summary.model';\n\n@Component({\n    selector: 'tz-mob-flight-list-item-info-block',\n    templateUrl: './mob-flight-list-item-info-block.component.html',\n    styleUrls: ['./mob-flight-list-item-info-block.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobFlightListItemInfoBlockComponent implements OnInit {\n    @Input() flight!: Flight;\n    @Input() flightSummary!: FlightSummary;\n    @Input() itemType: FlightSummaryType = 'depart';\n    @Input() packages: Flight[] | undefined = [];\n\n    public stops: number[] = [];\n\n    constructor() {}\n\n    get isDepartItem(): boolean {\n        return this.itemType === 'depart';\n    }\n\n    ngOnInit() {\n        this.setFlightSummeryData();\n    }\n\n    setFlightSummeryData(): void {\n        this.flightSummary = this.isDepartItem ? this.flight.departureSummary : this.flight.returnSummary;\n        this.stops = Array(this.setAirportStopRoutes().length);\n    }\n\n    private setAirportStopRoutes(): string[] {\n        let airportStopRoutesArr: string[] = [];\n        if (!this.flightSummary.airportStopRoutes || !this.flightSummary.airportStopRoutes.length) {\n            return airportStopRoutesArr;\n        }\n\n        if (this.flightSummary.airportStopRoutes?.length === 1) {\n            airportStopRoutesArr.push(this.flightSummary.airportStopRoutes[0].code);\n\n            if (this.flightSummary.changeInAirport) {\n                airportStopRoutesArr.push(this.flightSummary.airportStopRoutes[1].code);\n            }\n        }\n\n        if (this.flightSummary.airportStopRoutes?.length === 2) {\n            airportStopRoutesArr = this.flightSummary.airportStopRoutes.map((routes) => routes.code);\n        }\n        return airportStopRoutesArr;\n    }\n}\n","<div class=\"flight-list-item\" data-test=\"mob-flight-item\">\n    <div class=\"flight-list-item-image-container\" data-test=\"”flight-list-item-info-airline-icon”\">\n        <tz-flight-provider-image className=\"flight-list-item-image\" [provider]=\"flightSummary.airline\">\n        </tz-flight-provider-image>\n    </div>\n    <div class=\"flight-list-item-text\">\n        <div class=\"flight-list-item-text-airlines\">\n            <div class=\"flight-list-item-text-container\" data-test=\"flight-list-item-info-text\">\n                <p class=\"flight__list-airport__name--mobile_time\" data-test=\"mob-flight-item-depart-airport-code\">\n                    {{ flightSummary?.departureTzFormat | tzDate: 'shortTime' }}\n                </p>\n            </div>\n\n            <tz-mob-flight-direction-item class=\"flight-list-item__direction\" [stops]=\"stops\">\n            </tz-mob-flight-direction-item>\n\n            <div class=\"flight-list-item-text-container arrival\">\n                <p class=\"flight__list-airport__name--mobile_time\" data-test=\"mob-flight-item-destination-airport-code\">\n                    {{ flightSummary?.arrivalTzFormat | tzDate: 'shortTime' }}\n                </p>\n            </div>\n\n            <div class=\"flight-list-item-text-container\">\n                <p class=\"flight__time-item\" data-test=\"mob-flight-item-destination-time\">\n                    {{\n                        stops.length === 0\n                            ? ('FILTER.TRAIN.DIRECT' | translate)\n                            : stops.length > 1\n                            ? stops.length + ' ' + ('TRAIN.STOPS' | translate)\n                            : stops.length + ' ' + ('TRAIN.STOP' | translate)\n                    }}\n                </p>\n            </div>\n        </div>\n\n        <div class=\"flight-list-item-text-airlines\">\n            <div class=\"flight-list-item-text-container\" data-test=\"flight-list-item-info-text\">\n                <p class=\"\" data-test=\"mob-flight-item-depart-airport-code\">\n                    {{ flightSummary?.originCode }}\n                </p>\n                <div class=\"flight-list-item-text-stat\" data-test=\"flight-list-item-info-text-summary\">\n                    <p class=\"flight__day-item\">- {{ flightSummary.departureTzFormat | tzDate: 'shortDateMonth' }}</p>\n                </div>\n            </div>\n\n            <div class=\"flight-list-item__direction\"></div>\n\n            <div class=\"flight-list-item-text-container arrival\" data-test=\"flight-list-item-info-text\">\n                <p class=\"\" data-test=\"mob-flight-item-depart-airport-code\">\n                    {{ flightSummary?.destinationCode }}\n                </p>\n                <div class=\"flight-list-item-text-stat\" data-test=\"flight-list-item-info-text-summary\">\n                    <p class=\"flight__day-item\">\n                        <span [ngClass]=\"{ invisible: !flightSummary.noOfDays }\">\n                            -\n                            <span [ngClass]=\"{ 'flight__day-item_red': flightSummary.noOfDays > 0 }\">{{\n                                flightSummary.arrivalTzFormat | tzDate: 'shortDateMonth'\n                            }}</span></span\n                        >\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"flight-list-item-text-container\">\n                <p class=\"flight__time-item\" data-test=\"mob-flight-item-destination-time duration\">\n                    {{ flightSummary.duration }}\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { TzServiceTabs } from '../../../../tabsUtils/tz-tabs-service';\n\n@Component({\n    selector: 'tz-mob-flight-list-item',\n    templateUrl: './mob-flight-list-item.component.html',\n    styleUrls: ['./mob-flight-list-item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobFlightListItemComponent implements OnInit {\n    @Input() isSelected = false;\n    @Input() flight!: Flight;\n    @Input() totalPassengers = 0;\n    @Input() oldPrice = 0;\n    @Input() packages: Flight[] | undefined = [];\n    public selectedCartItem: ICartItem | undefined;\n    public changedPriceDiff = '';\n\n    constructor(private serviceTabs: TzServiceTabs) {}\n\n    public ngOnInit(): void {\n        this.initData();\n    }\n\n    private initData(): void {\n        if (this.oldPrice > 0) {\n            this.changedPriceDiff = this.serviceTabs.updatePriceChanging(this.oldPrice, this.flight.prices.listPrice);\n        }\n    }\n}\n","<div class=\"mob-flight-item\">\n    <div class=\"mob-flight-item__info-block\" data-test=\"mob-flight-item-info-block\">\n        <tz-mob-flight-list-item-info-block [flight]=\"flight\" itemType=\"depart\"></tz-mob-flight-list-item-info-block>\n        <tz-mob-flight-list-item-info-block\n            *ngIf=\"flight.isRoundTrip\"\n            [flight]=\"flight\"\n            itemType=\"return\"\n            [packages]=\"packages\"\n        ></tz-mob-flight-list-item-info-block>\n    </div>\n    <div class=\"mob-flight-item__footer-blcok\" data-test=\"mob-flight-item-footer-container\">\n        <div class=\"mob-flight-item__icon-block\">\n            <tz-svg-icon [stretch]=\"false\" icon=\"flight-icon\" className=\"flights-filter-icon\"></tz-svg-icon>\n            <div\n                class=\"mob-flight-item-has-check-in-bag\"\n                *ngIf=\"flight.departureSummary.bagSummary.hasCheckInBag\"\n                data-test=\"mob-flight-item-has-check-in-bag\"\n            >\n                <tz-svg-icon [icon]=\"'case-blue-mob'\" [class]=\"'mob-flight-item__icon-item'\" [stretch]=\"true\">\n                </tz-svg-icon>\n            </div>\n            <div\n                *ngIf=\"\n                    !flight.departureSummary.bagSummary.hasCheckInBag && flight.departureSummary.bagSummary.hasCabinBag\n                \"\n                class=\"mob-flight-item-has-cabin-bag\"\n                data-test=\"mob-flight-item-has-cabin-bag\"\n            >\n                <tz-svg-icon [icon]=\"'case-small-blue-mob'\" [class]=\"'mob-flight-item__icon-item'\" [stretch]=\"true\">\n                </tz-svg-icon>\n            </div>\n        </div>\n        <div class=\"mob-flight-item__price-block\">\n            <div class=\"mob-flight-item__price\" data-test=\"mob-flight-item-price\">\n                <tz-mob-price-changed-block\n                    *ngIf=\"oldPrice > 0\"\n                    class=\"mob-price-changed-block\"\n                ></tz-mob-price-changed-block>\n                <span class=\"mob-price-change-diff\" *ngIf=\"oldPrice > 0\">{{ changedPriceDiff }}</span\n                ><span> {{ flight.prices.listPrice | tzCurrency: flight.prices.listPriceCur }}</span>\n            </div>\n            <div class=\"mob-flight-item__price-text\" data-test=\"mob-flight-item-number-of-passengers\">\n                {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }}\n                {{ 'TRAVELLER.' + (totalPassengers > 1 ? 'PEOPLE' : 'PERSON') | translate }}\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { ScrollService } from '@services/modules/core/scroll-service';\n\n@Component({\n    selector: 'tz-mob-flight-pricing-plans',\n    templateUrl: './mob-flight-pricing-plans.component.html',\n    styleUrls: ['./mob-flight-pricing-plans.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobFlightPricingPlansComponent implements OnInit {\n    @Input() packages!: Flight;\n    @Input() flight!: Flight;\n    @Input() totalPassengers!: number;\n    @Input() selectedFlight!: Flight | undefined | null;\n    @Input() currentIndex!: number;\n    @Input() hidePriceInfo = false;\n    @Input() isTypeAction = true;\n    @Output() selectedFlightChange = new EventEmitter<Flight | null>();\n    @Output() openTerms = new EventEmitter<Flight>();\n\n    constructor(private scrollService: ScrollService) {}\n\n    public ngOnInit(): void {}\n\n    public onSelectPackage(flight: Flight, element: string): void {\n        requestAnimationFrame(() => {\n            this.scrollService.scrollToVisibleArea(element, 'flightDetailsFooter', {\n                scrollTop: 15,\n                includeElementsHeight: ['mobMainModalHeader'],\n            });\n        });\n\n        if (this.selectedFlight && this.selectedFlight.id === flight.id) {\n            this.selectedFlight = null;\n            this.selectedFlightChange.emit(null);\n            return;\n        }\n\n        if (flight) {\n            this.selectedFlight = flight;\n            this.selectedFlightChange.emit(flight as Flight);\n        }\n    }\n\n    public onOpenTermsAndConditions($event: Event): void {\n        $event.stopPropagation();\n        this.openTerms.emit(this.flight);\n    }\n}\n","<div class=\"flight-package\">\n    <div class=\"top-block\">\n        <div class=\"top-block__title\" data-test=\"mob-flight-pricing-plan-class-name\">\n            {{ packages.departureSummary.classes[0] | translate }}\n        </div>\n        <div class=\"top-block__content\">\n            <tz-mob-flight-item-desc-options-summary\n                [flightSummary]=\"packages.departureSummary\"\n                [currencyColor]=\"'#298AFF'\"\n                [customFontSize]=\"'0.75rem'\"\n                [customIconsSize]=\"11\"\n                [customCurrencyIconSize]=\"'0.875rem'\"\n            ></tz-mob-flight-item-desc-options-summary>\n\n            <tz-flight-list-item-desc-luggage\n                [luggage]=\"packages.departureSummary.luggage\"\n                componentType=\"package\"\n            ></tz-flight-list-item-desc-luggage>\n        </div>\n        <div\n            *ngIf=\"flight.broker !== 'KIWI' && flight.termsUnavailable !== true\"\n            (click)=\"onOpenTermsAndConditions($event)\"\n            class=\"top-block__terms-conditions\"\n            data-test=\"mob-flight-pricing-plan-terms-conditions\"\n        >\n            <span>{{ 'FLIGHT_TRAIN.CONDITIONS' | translate }}</span>\n        </div>\n    </div>\n    <div *ngIf=\"!hidePriceInfo\" class=\"price-block\">\n        <div class=\"price-block__price\" data-test=\"mob-flight-pricing-plan-price\">\n            {{ packages.prices.listPrice | tzCurrency: packages.prices.listPriceCur }}\n        </div>\n        <div class=\"price-block__person-count\" data-test=\"mob-flight-pricing-plan-passengers-number\">\n            {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }}\n            {{ 'TRAVELLER.' + (totalPassengers > 1 ? 'PEOPLE' : 'PERSON') | translate }}\n        </div>\n    </div>\n    <div *ngIf=\"isTypeAction\" class=\"btn-block\">\n        <button\n            class=\"tz-mob-select-btn\"\n            [ngClass]=\"{\n                'mob-selected-btn': selectedFlight && packages.id === selectedFlight.id\n            }\"\n            [id]=\"'selectFlightId' + packages.id\"\n            (click)=\"onSelectPackage(packages, 'selectFlightId' + packages.id)\"\n            data-test=\"mob-flight-pricing-plan-select-btn\"\n        >\n            {{\n                selectedFlight && packages.id === selectedFlight.id\n                    ? ('GENERAL.SELECTED' | translate)\n                    : ('GENERAL.SELECT' | translate)\n            }}\n        </button>\n    </div>\n</div>\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\n\nimport { IFlightsCartData } from '@schemas/modules/flights/flights-cart-data';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { IonAccordion, IonAccordionGroup } from '@ionic/angular';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { CartStatus, PaymentCaptureMode } from '@core/constants/cart-status';\nimport { TzSelectedService } from '../../../../selectedUtils/tz-selected-service';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { PlatformService } from '@services/platform.service';\nimport { FlightsService } from '@services/modules/transport/flights/flights.service';\nimport { ModalService } from '@services/modal.service';\nimport { MobFlightDetailsComponent } from '../mob-flight-details/mob-flight-details.component';\nimport { PageUtils } from '@core/utils/page-utils';\nimport { Router } from '@angular/router';\nimport { PagesUrls } from '@core/constants/pages-urls';\n\n@Component({\n    selector: 'tz-selected-flights',\n    templateUrl: './selected-flights.component.html',\n    styleUrls: ['./selected-flights.component.scss'],\n})\nexport class SelectedFlightsComponent implements OnInit, OnChanges, AfterViewInit {\n    @ViewChild('selectedFLightAccordionPanel') selectedFlightAccordionPanel?: IonAccordionGroup;\n    @ViewChild('selectedFLightAccordion') selectedFlightAccordion?: IonAccordion;\n    @Input() flightCartData!: IFlightsCartData;\n    @Input() combId!: CombinationId;\n    @Input() serviceList = false;\n    @Input() packages: Flight[] | undefined = [];\n    @Input() fromBookings = false;\n    @Input() paymentCaptureMode = PaymentCaptureMode.NORMAL_MODE;\n    @Output() removedItem: EventEmitter<string> = new EventEmitter<string>();\n    @Output() changeTickets: EventEmitter<void> = new EventEmitter();\n    @Output() changeOptions: EventEmitter<Flight> = new EventEmitter();\n    @Output() newFlightSelected: EventEmitter<Flight> = new EventEmitter();\n    @Output() selectPackage: EventEmitter<{ package: Flight; flightId: string }> = new EventEmitter<{\n        package: Flight;\n        flightId: string;\n    }>();\n    @Output() modify: EventEmitter<void> = new EventEmitter<void>();\n    @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n    @Output() showingPackage: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    public buttons: string[] = [];\n    public confirmable = false;\n    public selectedFlight!: Flight;\n    public selectedCartItem!: ICartItem;\n    public selectedPackageIndex = 0;\n    public showPackages = false;\n    public selectedFlightOptionId!: string;\n    public invalidCartItem = false;\n    public totalPassengers = 0;\n    public isBasketPage!: boolean;\n\n    constructor(\n        public platformService: PlatformService,\n        private flightService: FlightsService,\n        private modalService: ModalService,\n        private router: Router\n    ) {}\n\n    ngOnInit() {\n        this.formSelectedFlight();\n        this.initializeActionBarButtons();\n        this.addSpaceInSelectedFlightsSummaryText();\n        this.isBasketPage = this.checkIsBasketPage();\n    }\n\n    ngAfterViewInit() {\n        this.handleExtraParams();\n    }\n\n    public toggleShowDetail() {\n        if (this.selectedFlightAccordionPanel !== undefined) {\n            this.selectedFlightAccordionPanel.value = null;\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes['packages'] && changes['packages'].currentValue) {\n            this.getCurrentSelectedPackageIndex();\n        }\n\n        if (changes['flightCartData']) {\n            this.formSelectedFlight();\n        }\n    }\n\n    public onRemoveSelected(): void {\n        this.removedItem.emit(this.selectedFlightOptionId);\n    }\n\n    public onDebugDialogOpened(): void {}\n\n    public onChangeOptions(): void {\n        console.log('change options');\n        if (!this.platformService.isMobileDevice) {\n            (this.selectedFlightAccordionPanel as IonAccordionGroup).value = null;\n            (this.selectedFlightAccordion as IonAccordion).value = '';\n            this.showPackages = true;\n            this.showingPackage.emit(true);\n        }\n        this.changeOptions.emit(this.selectedFlight);\n    }\n\n    public onChangeTickets(): void {\n        console.log('change tickets');\n        if (!this.platformService.isMobileDevice) {\n            (this.selectedFlightAccordionPanel as IonAccordionGroup).value = null;\n            (this.selectedFlightAccordion as IonAccordion).value = '';\n        }\n        this.changeTickets.emit();\n    }\n\n    public onCancelFLightPackageChange(): void {\n        this.showPackages = false;\n        this.selectedFlight = this.selectedCartItem.selectedItem.data;\n        this.getCurrentSelectedPackageIndex();\n        this.showingPackage.emit(false);\n    }\n\n    public onSubmitFlightPackageChange() {\n        /*this.showPackages = false;\n        this.showingPackage.emit(false);*/\n        const flight = this.packages && this.packages[this.selectedPackageIndex];\n        this.newFlightSelected.emit(flight);\n    }\n\n    public onSelectPackage(index: number) {\n        this.selectedPackageIndex = index;\n        this.confirmable = !!(this.packages && this.packages[this.selectedPackageIndex].id !== this.selectedFlight.id);\n        if (this.packages) {\n            this.selectedFlight = this.packages[this.selectedPackageIndex];\n        }\n    }\n\n    public onCancelTicket(): void {\n        this.cancel.emit();\n    }\n\n    public onOpenTransportTerms(): void {\n        this.flightService.showFlightTrems(this.selectedFlight);\n    }\n\n    public onOpenCheckinAllowance(): void {\n        this.flightService.showFlightCheckinAllowance(this.selectedFlight.checkinAllowance);\n    }\n\n    public onShowFlightDetails(): void {\n        this.modalService.createDetailsPage(MobFlightDetailsComponent, {\n            data: {\n                flight: this.selectedFlight,\n                flightsPackages: this.packages,\n                type: 'details',\n                totalPassengers: this.totalPassengers,\n            },\n            title: 'FLIGHT.SELECTED',\n        });\n    }\n\n    private handleExtraParams() {\n        const state = history.state;\n        if (state && state.extra) {\n            for (const extraAction in state.extra) {\n                if (state.extra.hasOwnProperty(extraAction)) {\n                    switch (extraAction) {\n                        case 'changeOptions':\n                            console.log('change options');\n                            this.onChangeOptions();\n                            break;\n                    }\n                }\n            }\n        }\n    }\n\n    private formSelectedFlight(): void {\n        this.selectedCartItem = this.flightCartData.items[0];\n        this.selectedFlightOptionId = this.selectedCartItem.selectedItem.bookingOptions[0].optionId;\n        this.selectedFlight = this.selectedCartItem.selectedItem.data;\n\n        const travellersData = CartUtils.getTravellersData(this.flightCartData.items);\n        if (travellersData) {\n            this.totalPassengers = travellersData.total;\n        }\n\n        this.invalidCartItem = !this.selectedCartItem.selectedItem.bookingOptions.some(\n            (option) =>\n                !(option.status >= CartStatus.STATUS_REJECTED && option.status !== CartStatus.STATUS_PRICE_CHANGED)\n        );\n    }\n\n    private getCurrentSelectedPackageIndex(): void {\n        const index =\n            this.selectedFlight &&\n            this.packages &&\n            this.packages.findIndex((flightPackage: Flight) => flightPackage.id === this.selectedFlight.id);\n        if (index || index === 0) {\n            this.selectedPackageIndex = index;\n        }\n    }\n\n    private initializeActionBarButtons() {\n        this.buttons = TzSelectedService.initializeActionBarButtons(\n            this.selectedCartItem.selectedItem,\n            this.fromBookings,\n            this.serviceList,\n            this.paymentCaptureMode,\n            false\n        );\n\n        if (!this.fromBookings && !CartUtils.hasBooked(this.selectedCartItem.selectedItem.bookingOptions)) {\n            this.buttons.push(this.totalPassengers > 1 ? 'changeTickets' : 'changeTicket');\n\n            if (this.selectedCartItem.selectedItem.hasUpgrades) {\n                if (!CartUtils.hasBookingStarted(this.selectedCartItem.selectedItem.bookingOptions)) {\n                    this.buttons.push('changeOptions');\n                } else if (CartUtils.hasUnavailable(this.selectedCartItem.selectedItem.bookingOptions)) {\n                    this.buttons.push('update');\n                }\n            }\n        }\n    }\n\n    private addSpaceInSelectedFlightsSummaryText(): void {\n        const splitSummaryText = this.selectedCartItem.summaryTitle?.split(':');\n        if (!!splitSummaryText) {\n            this.selectedCartItem.summaryTitle = `${splitSummaryText[0]} : ${splitSummaryText[1]}`;\n        }\n    }\n\n    private checkIsBasketPage(): boolean {\n        return PageUtils.is(this.router.url, PagesUrls.BASKET);\n    }\n}\n","<div class=\"selected-flight-container flex flex-column\" *ngIf=\"selectedFlight\">\n    <div class=\"tz-block-separator-title\">\n        <tz-block-separator *ngIf=\"selectedFlight\">{{ selectedCartItem.summaryTitle }}</tz-block-separator>\n    </div>\n    <div\n        [ngClass]=\"{\n            'mob-selected-flight-block': (platformService.isMobileDevice$ | async) && serviceList\n        }\"\n    >\n        <div\n            *ngIf=\"platformService.isMobileDevice$ | async\"\n            [ngClass]=\"{\n                'tz-mob-selected-inner-border': selectedFlight && !isBasketPage && !fromBookings,\n                'bg-white': invalidCartItem\n            }\"\n            (click)=\"onShowFlightDetails()\"\n        >\n            <tz-rejected-cart-item-banner\n                *ngIf=\"(platformService.isMobileDevice$ | async) && invalidCartItem\"\n                [service]=\"'SERVICES.5' | translate\"\n            ></tz-rejected-cart-item-banner>\n            <div\n                *ngIf=\"platformService.isMobileDevice$ | async\"\n                [ngClass]=\"{\n                    'tz-mob-selected-block': serviceList && !showPackages,\n                    'tz-mob-rejected-cart-item': (platformService.isMobileDevice$ | async) && invalidCartItem\n                }\"\n            >\n                <tz-mob-flight-list-item\n                    [totalPassengers]=\"totalPassengers\"\n                    [isSelected]=\"true\"\n                    [flight]=\"selectedFlight\"\n                    [oldPrice]=\"selectedCartItem.oldPrice\"\n                ></tz-mob-flight-list-item>\n            </div>\n        </div>\n        <div *ngIf=\"(platformService.isMobileDevice$ | async) === false\" class=\"flight-list-item\">\n            <tz-rejected-cart-item-banner\n                *ngIf=\"invalidCartItem\"\n                [service]=\"'SERVICES.5' | translate\"\n            ></tz-rejected-cart-item-banner>\n            <ion-accordion-group\n                toggle-icon=\"''\"\n                #selectedFLightAccordionPanel\n                [ngClass]=\"{ 'tz-selected-service-list': serviceList && !showPackages }\"\n            >\n                <ion-accordion\n                    class=\"tz-block-with-border\"\n                    toggle-icon=\"''\"\n                    #selectedFLightAccordion\n                    value=\"first\"\n                    [ngClass]=\"{\n                        'rejected-cart-item': invalidCartItem,\n                        'price-changed': selectedCartItem.oldPrice > 0,\n                        'accordion-expanded-show-package': serviceList && showPackages\n                    }\"\n                >\n                    <ion-item slot=\"header\" class=\"flight-list-accordion-item ion-no-padding\">\n                        <tz-flight-list-item\n                            [selectable]=\"false\"\n                            [twoWayFlight]=\"selectedFlight.isRoundTrip\"\n                            [flight]=\"selectedFlight\"\n                            [totalPassengers]=\"totalPassengers\"\n                            [oldPrice]=\"selectedCartItem.oldPrice\"\n                        >\n                        </tz-flight-list-item>\n                    </ion-item>\n                    <ion-item slot=\"content\" (click)=\"toggleShowDetail()\">\n                        <tz-flight-list-item-description\n                            [flight]=\"selectedFlight\"\n                            (openTerms)=\"onOpenTransportTerms()\"\n                            (openCheckinAllowanceInfo)=\"onOpenCheckinAllowance()\"\n                        ></tz-flight-list-item-description>\n                    </ion-item>\n                </ion-accordion>\n            </ion-accordion-group>\n        </div>\n\n        <div class=\"accommodation-actions-bar-container\">\n            <tz-cart-item-actions-bar\n                *ngIf=\"!showPackages\"\n                (remove)=\"onRemoveSelected()\"\n                (changeTickets)=\"onChangeTickets()\"\n                (changeOptions)=\"onChangeOptions()\"\n                (modify)=\"onChangeOptions()\"\n                (cancel)=\"onCancelTicket()\"\n                [buttons]=\"buttons\"\n                [combId]=\"combId\"\n                [optionId]=\"selectedFlightOptionId\"\n                [status]=\"selectedCartItem.selectedItem.bookingOptions[0].status\"\n            ></tz-cart-item-actions-bar>\n        </div>\n    </div>\n\n    <div class=\"service-submission-container\" *ngIf=\"showPackages && packages?.length\">\n        <tz-flight-item-desc-packages\n            *ngIf=\"packages?.length\"\n            [packages]=\"packages\"\n            [selectedPackageIndex]=\"selectedPackageIndex\"\n            (changeSelectedPackageIndex)=\"onSelectPackage($event.pkgIndex)\"\n        >\n        </tz-flight-item-desc-packages>\n        <tz-service-booking-confirmation\n            (cancelSelection)=\"onCancelFLightPackageChange()\"\n            (submitBooking)=\"onSubmitFlightPackageChange()\"\n        ></tz-service-booking-confirmation>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { Facility } from '@schemas/modules/trains/train-class';\nimport { TrainTermsComponent } from '../terms/terms.component';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-facilities-list',\n    templateUrl: './facilities-list.component.html',\n    styleUrls: ['./facilities-list.component.scss'],\n})\nexport class FacilitiesListComponent implements OnInit {\n    @Input() public train: TRAIN | undefined;\n    public facilities!: Facility[] | undefined;\n    public fareCondition: any;\n\n    constructor(private dialogService: DialogService) {}\n\n    public ngOnInit(): void {\n        this.formatData();\n    }\n\n    public openTrainTerms(event: Event): void {\n        event.stopPropagation();\n\n        this.dialogService.openServiceDialog(TrainTermsComponent, {\n            width: undefined,\n            maxHeight: '90vh',\n            panelClass: 'tz-terms-dialog-large',\n            maxWidth: '940px',\n            data: {\n                operator: this.train?.operator,\n                terms: this.train?.trainClass.ClassDescription.termsandConditionsList,\n            },\n        });\n    }\n\n    private formatData(): void {\n        this.facilities = this.train?.trainClass?.ClassDescription?.facilities;\n        this.fareCondition = this.train?.trainClass?.ClassDescription.fareCondition;\n    }\n}\n","<div *ngIf=\"facilities\">\n    <p class=\"class-description\">{{ train?.classDescriptor }}</p>\n\n    <div class=\"facility\" *ngFor=\"let facility of facilities\">\n        <span class=\"upgrade-module-feat-icon align-self-baseline\">\n            <img\n                *ngIf=\"facility.available\"\n                src=\"/assets/icons/web/img/icons/checked_material_green.svg\"\n                alt=\"checked\"\n            />\n            <img\n                class=\"facility__close-icon\"\n                *ngIf=\"!facility.available\"\n                src=\"/assets/icons/web/img/icons/Close-Active.svg\"\n                alt=\"Close\"\n            />\n        </span>\n        <span>{{ facility.facility }}</span>\n    </div>\n\n    <div class=\"category-fare\">\n        <p class=\"category-fare__condition\" *ngIf=\"!!fareCondition\">\n            {{ fareCondition }}\n        </p>\n        <a (click)=\"openTrainTerms($event)\" class=\"tz-purple-link\">\n            {{ 'FLIGHT_TRAIN.TERMS_AND_CONDITIONS' | translate }}\n        </a>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\n\n@Component({\n    selector: 'tz-mob-selected-train-details-item',\n    templateUrl: './mob-selected-train-details-item.component.html',\n    styleUrls: ['./mob-selected-train-details-item.component.scss'],\n})\nexport class MobSelectedTrainDetailsItemComponent implements OnInit {\n    @Input() public train!: ICartItem;\n    @Input() public currentTripIndex = 0;\n    public optionTrain!: TRAIN;\n    public totalPassengers = 0;\n    public arrivalCityName = '';\n    public departureCityName = '';\n\n    public ngOnInit(): void {\n        this.prepareTrainData();\n    }\n\n    private prepareTrainData(): void {\n        this.optionTrain = this.train.selectedItem?.data?.onward;\n\n        const { adults, children } = this.train.searchReq.passengers;\n        const { from, to } = this.train.searchReq.searchData;\n\n        this.totalPassengers = adults + children;\n        this.departureCityName = from.cityName;\n        this.arrivalCityName = to.cityName;\n\n        if (this.currentTripIndex) {\n            this.departureCityName = to.cityName;\n            this.arrivalCityName = from.cityName;\n        }\n    }\n}\n","<div class=\"mob-selected-train-details-item\">\n    <div class=\"mob-selected-train-details-item__train-info\">\n        <tz-mob-trains-list-item [train]=\"optionTrain\" [totalPassengers]=\"totalPassengers\"></tz-mob-trains-list-item>\n    </div>\n\n    <div class=\"mob-selected-train-details-item__train-scheme-box train-scheme-box\" *ngIf=\"optionTrain\">\n        <tz-mob-train-route-scheme-header [train]=\"optionTrain\"></tz-mob-train-route-scheme-header>\n        <tz-mob-train-route-scheme [train]=\"optionTrain\"></tz-mob-train-route-scheme>\n    </div>\n\n    <div class=\"mob-selected-train-details-item__train-facilities\">\n        <tz-facilities-list [train]=\"optionTrain\"></tz-facilities-list>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    selector: 'tz-mob-selected-train-details',\n    templateUrl: './mob-selected-train-details.component.html',\n    styleUrls: ['./mob-selected-train-details.component.scss'],\n})\nexport class MobSelectedTrainDetailsComponent implements OnInit {\n    public isRoundTrip!: boolean;\n    public trains!: ICartItem[];\n    public transportRoute = '';\n\n    private data!: {\n        trains: ICartItem[];\n        isRoundTrip: boolean;\n    };\n\n    constructor(private translateService: TranslateService) {}\n\n    public ngOnInit(): void {\n        this.setTrainsData();\n        this.getTrainRoute();\n    }\n\n    private getTrainRoute(): void {\n        const { from, to } = this.trains[0]?.searchReq.searchData;\n\n        this.transportRoute = this.translateService.instant('TRAIN.SELECTED', {\n            transportRoute: `${from.cityName} – ${to.cityName}`,\n        });\n    }\n\n    private setTrainsData(): void {\n        this.isRoundTrip = this.data.isRoundTrip;\n        this.trains = this.data.trains;\n    }\n}\n","<div class=\"mob-selected-train-details\">\n    <tz-block-separator class=\"mob-selected-train-details__block-separator\">\n        {{ transportRoute }}\n    </tz-block-separator>\n\n    <tz-mob-selected-train-details-item\n        *ngFor=\"let train of trains; index as i\"\n        [currentTripIndex]=\"i\"\n        [train]=\"train\"\n    ></tz-mob-selected-train-details-item>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SupplierClass, TrainClass } from '@schemas/modules/trains/train-class';\nimport { TrainService } from '@services/modules/transport/trains/trains.service';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport {\n    SelectedOption,\n    SupplierClassMinPrice,\n    TrainSelection,\n} from '@schemas/modules/trains/train-search-query-params';\nimport { DialogService } from '@services/dialog.service';\nimport { ModalService } from '@services/modal.service';\nimport { MobTrainTermsModalComponent } from '../mob-train-terms-modal/mob-train-terms-modal.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ScrollService } from '@services/modules/core/scroll-service';\n\n@Component({\n    selector: 'tz-mob-train-class-details',\n    templateUrl: './mob-train-class-details.component.html',\n    styleUrls: ['./mob-train-class-details.component.scss'],\n})\nexport class MobTrainClassDetailsComponent implements OnInit {\n    @Input() train!: TRAIN;\n    @Input() supplierClass!: SupplierClass;\n    @Input() supplierClassMinPrice: SupplierClassMinPrice = {};\n    @Input() isSelected = false;\n    @Input() selectedSubClass: string | undefined;\n    @Input() selectedOption: SelectedOption | undefined;\n    @Output() selectTicket: EventEmitter<TrainClass> = new EventEmitter<TrainClass>();\n    @Output() selectedClassId: EventEmitter<string> = new EventEmitter<string>();\n\n    public trainClasses: TrainClass[] = [];\n    public unwrappedClass: string | undefined;\n    public isSubClasses!: boolean;\n    selectedTrain: TrainSelection | undefined;\n\n    constructor(\n        private trainService: TrainService,\n        private dialogService: DialogService,\n        private modalService: ModalService,\n        private translateService: TranslateService,\n        private scrollService: ScrollService\n    ) {}\n\n    get isValidTicket(): boolean {\n        return this.trainService.isValidTicket(this.train, this.supplierClass);\n    }\n\n    ngOnInit() {\n        this.loadTrainSubClasses(this.supplierClass.class);\n\n        if (this.selectedOption && this.train.journeyType === 'returnJourney' && this.selectedOption.return) {\n            this.selectedTrain = this.selectedOption.return;\n        }\n        if (this.selectedOption && this.train.journeyType === 'onwardJourney' && this.selectedOption.onward) {\n            this.selectedTrain = this.selectedOption.onward;\n        }\n\n        this.isSubClasses = this.checkTrainHasSubClasses();\n    }\n\n    public openTrainTerms() {\n        this.modalService.createMainModal(MobTrainTermsModalComponent, {\n            data: {\n                operator: this.trainClasses[0].operator,\n                terms: this.trainClasses[0].trainClass.ClassDescription.termsandConditionsList,\n            },\n            title: this.translateService.instant('FLIGHT_TRAIN.CONDITIONS'),\n            cssClass: 'mob-terms-modal',\n        });\n    }\n\n    public onSelectTicket(supplierClass: TrainClass, element: string): void {\n        setTimeout(() => {\n            requestAnimationFrame(() => {\n                this.scrollService.scrollToVisibleArea(element, 'trainDetailsFooter', {\n                    scrollMarginBottom: 30,\n                    scrollBlock: 'end',\n                });\n            });\n        }, 300);\n\n        if (this.selectedSubClass === supplierClass.id) {\n            this.selectedClassId.emit('');\n            return;\n        }\n\n        if (!this.isValidTicket) {\n            return;\n        }\n\n        this.selectTicket.emit(supplierClass);\n        this.selectedClassId.emit(supplierClass.id);\n    }\n\n    private loadTrainSubClasses(trainClass: string): void {\n        this.trainClasses = this.train.trainClasses.filter((tc) => tc.trainClass.tzClass === trainClass);\n    }\n\n    private checkTrainHasSubClasses(): boolean {\n        return this.train.supplierClasses.some((supplierClass: SupplierClass) => supplierClass.count > 1);\n    }\n}\n","<div class=\"ticket-category-container\" data-test=\"mob-train-ticket-category-container\">\n    <div\n        *ngFor=\"let class of trainClasses; index as i\"\n        [ngClass]=\"{\n            open: isSubClasses && (unwrappedClass === class.id || (!unwrappedClass && i === 0)),\n            'category-active': trainClasses.length > 1\n        }\"\n        class=\"category\"\n        (click)=\"unwrappedClass = class.id\"\n    >\n        <div class=\"category-header\">\n            <div class=\"category-header__title\" data-test=\"mob-train-ticket-category-name\">\n                {{ class.trainClass?.tzClass }}\n            </div>\n            <p class=\"category-header__price\" data-test=\"mob-train-ticket-category-price\">\n                {{ class.prices.listPrice | tzCurrency: class.prices.listPriceCur }}\n            </p>\n        </div>\n\n        <div class=\"category-info\" *ngIf=\"unwrappedClass === class.id || (!unwrappedClass && i === 0)\">\n            <div *ngIf=\"trainClasses.length > 0\" class=\"facilities\">\n                <div\n                    class=\"facility\"\n                    *ngFor=\"let facility of class.trainClass.ClassDescription.facilities\"\n                    data-test=\"mob-train-ticket-category-facilities\"\n                >\n                    <span class=\"facility-icon\">\n                        <img\n                            *ngIf=\"facility.available\"\n                            src=\"/assets/icons/web/img/icons/checked_material_green.svg\"\n                            alt=\"\"\n                        />\n                        <img\n                            class=\"facility-icon__close-icon\"\n                            *ngIf=\"!facility.available\"\n                            src=\"/assets/icons/web/img/icons/Close-Active.svg\"\n                            alt=\"\"\n                        />\n                    </span>\n                    <span class=\"facility-text\" [ngClass]=\"{ inaccessible: !facility.available }\">{{\n                        facility.facility\n                    }}</span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"category-fare\" data-test=\"mob-train-ticket-category-category-fare\">\n            <p class=\"\" *ngIf=\"class.trainClass.ClassDescription.fareCondition !== ''\">\n                {{ class.trainClass.ClassDescription.fareCondition }}\n            </p>\n            <a (click)=\"$event.stopPropagation(); openTrainTerms()\" tabindex=\"0\" class=\"tz-purple-link\">\n                {{ 'FLIGHT_TRAIN.CONDITIONS' | translate }}\n            </a>\n        </div>\n\n        <div class=\"category-select\" *ngIf=\"unwrappedClass === class.id || (!unwrappedClass && i === 0)\">\n            <button\n                data-test=\"mob-train-ticket-category-select-btn\"\n                class=\"tz-mob-select-btn\"\n                [ngClass]=\"{\n                    'mob-selected-btn': selectedSubClass && selectedSubClass === class.id,\n                    'tz-btn-primary-disable': !isValidTicket\n                }\"\n                [id]=\"'selectTrainId' + class.id\"\n                (click)=\"onSelectTicket(class, 'selectTrainId' + class.id)\"\n            >\n                {{\n                    selectedSubClass && selectedSubClass === class.id\n                        ? ('GENERAL.SELECTED' | translate)\n                        : ('GENERAL.SELECT' | translate)\n                }}\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { SupplierClass, TrainClass } from '@schemas/modules/trains/train-class';\nimport {\n    SelectedOption,\n    SupplierClassMinPrice,\n    TrainSelection,\n} from '@schemas/modules/trains/train-search-query-params';\nimport { ModalService } from '@services/modal.service';\nimport { TrainService } from '@services/modules/transport/trains/trains.service';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'tz-mob-train-details',\n    templateUrl: './mob-train-details.component.html',\n    styleUrls: ['./mob-train-details.component.scss'],\n})\nexport class MobTrainDetailsComponent implements OnInit, OnDestroy {\n    public data!: {\n        train: TRAIN;\n        selectedOption: SelectedOption;\n        onwardTrain: TRAIN;\n        isCartItems: boolean;\n        returnTrainChange$: Subject<TRAIN> | undefined;\n        passengersNumber: number | undefined;\n    };\n    public train!: TRAIN;\n    public availableTrainClasses!: SupplierClass[];\n    public supplierClassMinPrice: SupplierClassMinPrice = {};\n    public selectedTrain!: TrainSelection;\n    public selectedOption: SelectedOption = {};\n    public isOnwardSelected = false;\n    public isCartOnwardSelected = false;\n    public isCartReturnSelected = false;\n    public totalPrice: number | undefined;\n    public totalPriceCur: string | undefined;\n    public isSupplierClassSelected = false;\n    public selectedClassId: string | undefined;\n    public selectedTrainSubClass!: number;\n    public trainHasSubClass = false;\n    public accordionTrainValues: string[] = [];\n    public arrivalWaySeparatorInfo!: string;\n    public departureWaySeparatorInfo!: string;\n    private confirm = false;\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(private modalService: ModalService, private trainService: TrainService) {}\n\n    ngOnInit() {\n        this.train = this.data.train;\n\n        if (this.data.selectedOption) {\n            this.selectedOption = this.data.selectedOption;\n        }\n\n        this.fetchServicePrices();\n\n        if (this.data.returnTrainChange$) {\n            this.data.returnTrainChange$.pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n                this.train = data;\n                this.isSupplierClassSelected = false;\n            });\n        }\n\n        this.checkSubClasses();\n        this.setAccordionTrainValues();\n        this.trainClassesConfig(this.train);\n\n        this.arrivalWaySeparatorInfo = this.formatWaysSeparatorInfoString(this.data.train);\n        this.departureWaySeparatorInfo = this.formatWaysSeparatorInfoString(this.data.onwardTrain);\n    }\n\n    formatWaysSeparatorInfoString(train: TRAIN): string {\n        return train.arrival.location.city + ' - ' + train.departure.location.city;\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next(false);\n        this.destroy$.complete();\n    }\n\n    public selectTicket(supplierClass?: TrainClass): void {\n        if (supplierClass) {\n            this.isSupplierClassSelected = true;\n\n            this.selectedTrain = this.trainService.formTrainSelectionInfo(this.train, supplierClass, true, false);\n\n            if (this.selectedOption.onward?.id && this.data.onwardTrain) {\n                this.selectedOption = {\n                    ...this.selectedOption,\n                    return: this.selectedTrain,\n                };\n            }\n\n            this.updateTotalPrice();\n            this.selectedTrainSubClass = supplierClass.trainClass.ordinal;\n        }\n    }\n\n    public selectedClass(id: string): void {\n        if (!id) {\n            this.isSupplierClassSelected = false;\n        }\n\n        this.selectedClassId = id;\n    }\n\n    public onToggleAccordion($event: Event) {\n        if (!this.trainHasSubClass) {\n            $event.stopPropagation();\n        }\n    }\n\n    public onConfirm(): void {\n        this.confirm = true;\n        this.updateTotalPrice();\n        if (!this.isSupplierClassSelected) {\n            return;\n        }\n\n        if (this.data.isCartItems && !this.isCartOnwardSelected) {\n            if (!this.data.onwardTrain) {\n                this.modalService.dismiss({ selectedTrain: this.selectedTrain, isConfirmable: true });\n                return;\n            }\n\n            const train = ToolsService.deepCopy(this.train);\n            this.train = ToolsService.deepCopy(this.data.onwardTrain);\n            this.data.onwardTrain = ToolsService.deepCopy(train);\n            this.supplierClassMinPrice = {};\n            this.fetchServicePrices(true);\n            this.selectedOption = {\n                onward: ToolsService.deepCopy(this.selectedTrain),\n            };\n            if (this.selectedOption.onward) {\n                this.confirm = false;\n                this.trainService.updateTrainSelection.next(this.selectedOption.onward);\n            }\n            this.isCartOnwardSelected = true;\n            return;\n        }\n\n        if (this.isOnwardSelected && !this.data.isCartItems) {\n            this.modalService.dismiss({ selectedTrain: this.selectedTrain, isConfirmable: true });\n            return;\n        }\n\n        if (this.isCartOnwardSelected && this.data.isCartItems && this.isOnwardSelected) {\n            this.modalService.dismiss({ selectedOption: this.selectedOption, isConfirmable: true });\n            return;\n        }\n\n        if ((this.selectedOption.return && this.data.onwardTrain) || this.data.isCartItems) {\n            this.isOnwardSelected = true;\n            return;\n        }\n\n        this.modalService.dismiss({ selectedTrain: this.selectedTrain, isConfirmable: false });\n    }\n\n    private fetchServicePrices(selectedTrain = false): void {\n        this.supplierClassMinPrice = this.trainService.getServicePrices(\n            this.train,\n            selectedTrain ? null : this.selectedTrain\n        );\n    }\n\n    private updateTotalPrice(): void {\n        if (this.data.onwardTrain && this.selectedOption.return && this.selectedOption.onward) {\n            const onwardTrainPrices = this.trainService.getServicePrices(\n                this.data.onwardTrain,\n                this.selectedOption.onward\n            );\n            const returnTrainPrices = this.trainService.getServicePrices(this.train, this.selectedOption.return);\n\n            const returnPrice = returnTrainPrices[this.selectedOption.return?.tzClass].listPrice;\n            const onwardPrice = onwardTrainPrices[this.selectedOption.onward?.tzClass].listPrice;\n            this.totalPrice = this.confirm ? onwardPrice + returnPrice : returnPrice;\n            this.totalPriceCur = onwardTrainPrices[this.selectedOption.onward?.tzClass].listPriceCur;\n        } else if (this.data.isCartItems) {\n            const onwardTrainPrices = this.trainService.getServicePrices(this.train, this.selectedTrain);\n            this.totalPrice = onwardTrainPrices[this.selectedTrain.tzClass].listPrice;\n            this.totalPriceCur = onwardTrainPrices[this.selectedTrain.tzClass].listPriceCur;\n        }\n\n        if (!this.data.onwardTrain && this.selectedTrain) {\n            const onwardTrainPrices = this.trainService.getServicePrices(this.train, this.selectedTrain);\n            this.totalPrice = onwardTrainPrices[this.selectedTrain.tzClass].listPrice;\n            this.totalPriceCur = onwardTrainPrices[this.selectedTrain.tzClass].listPriceCur;\n        }\n    }\n\n    private checkSubClasses(): void {\n        this.trainHasSubClass = false;\n\n        const trainSubClassesObj: { [key: string]: TrainClass[] } = {};\n\n        this.train.supplierClasses.map((supplierClasses) => {\n            const key = supplierClasses.class;\n            trainSubClassesObj[key] = this.train.trainClasses.filter(\n                (tc) => tc.trainClass.tzClass === supplierClasses.class\n            );\n        });\n\n        for (const [key, value] of Object.entries(trainSubClassesObj)) {\n            if (value.length > 1) {\n                this.trainHasSubClass = true;\n            }\n        }\n    }\n\n    private setAccordionTrainValues(): void {\n        this.accordionTrainValues = [];\n\n        if (!this.trainHasSubClass) {\n            this.train.supplierClasses.map((element, index) => {\n                this.accordionTrainValues.push(index.toString());\n            });\n        } else {\n            this.accordionTrainValues.push('0');\n        }\n    }\n\n    private trainClassesConfig(train: TRAIN): void {\n        this.availableTrainClasses = train.supplierClasses.map((item: SupplierClass, index: number) => ({\n            ...item,\n            ...{ disabled: train.trainClasses[index].disabled },\n        }));\n    }\n}\n","<div\n    class=\"mob-train-details\"\n    data-test=\"mob-train-details\"\n    [ngClass]=\"{ 'train-details--selected-pb': selectedTrain && isSupplierClassSelected }\"\n>\n    <div *ngIf=\"!isOnwardSelected\" class=\"separator-line_small\"></div>\n    <div class=\"header\" id=\"trainDetailsHeader\" *ngIf=\"!isOnwardSelected\">\n        <p class=\"header-title\" data-test=\"mob-train-details-title\">\n            {{ 'TRAIN.TRAIN' | translate }}\n            {{ train?.departure?.location?.city }}\n            {{ 'TRAIN.TO' | translate }}\n            {{ train?.arrival?.location?.city }}\n        </p>\n\n        <p class=\"header-road-info\" data-test=\"mob-train-details-road-info\">\n            {{ train?.departure?.dateTzFormat | tzDate: 'tzFullShortDate' }}\n            -\n            <span\n                *ngIf=\"train.trainClasses[0].noOfDays === 1\"\n                class=\"header-road-info-red\"\n                data-test=\"mob-train-details-arrival-time\"\n            >\n                {{ 'FLIGHT.ARRIVING_NEXT_DAY' | translate }}\n                <span class=\"header-road-info\">-</span>\n            </span>\n            <span\n                *ngIf=\"train.trainClasses[0].noOfDays > 1\"\n                class=\"header-road-info-red\"\n                data-test=\"mob-train-details-arrival-time\"\n            >\n                {{ 'FLIGHT.ARRIVES' | translate }} {{ train.arrival.dateTzFormat | tzDate: 'mediumDate' }}\n                <span class=\"header-road-info\">-</span>\n            </span>\n            <span *ngIf=\"!!train.stops\">\n                {{ train?.stops }}\n                {{ train.stops > 1 ? ('stops' | translate) : ('stop' | translate) }}\n                -\n            </span>\n            {{ train?.durationFormatted }}\n        </p>\n        <tz-mob-train-route-scheme [train]=\"train\"></tz-mob-train-route-scheme>\n    </div>\n\n    <div *ngIf=\"!isOnwardSelected\" class=\"separator-line_large\"></div>\n\n    <div class=\"content\">\n        <div *ngIf=\"!isOnwardSelected\">\n            <ion-accordion-group [multiple]=\"!trainHasSubClass\" [value]=\"accordionTrainValues\">\n                <div\n                    class=\"content__item\"\n                    [ngClass]=\"{\n                        none: !supplierClassMinPrice[supplierClass.class] || supplierClass.disabled\n                    }\"\n                    *ngFor=\"let supplierClass of availableTrainClasses; index as i\"\n                >\n                    <div>\n                        <ion-accordion class=\"ion-accordion\" toggle-icon=\"''\" toggleIconSlot=\"'start'\" [value]=\"i\">\n                            <ion-item\n                                [ngClass]=\"{\n                                    'tz-mob-selected-inner-border': selectedTrainSubClass === supplierClass?.ordinal\n                                }\"\n                                slot=\"header\"\n                                color=\"red\"\n                                (click)=\"onToggleAccordion($event)\"\n                            >\n                                <ion-label>\n                                    <div class=\"class-item\">\n                                        <div class=\"class-item-name\" data-test=\"mob-train-details-class-name\">\n                                            {{ supplierClass?.class }}\n                                        </div>\n                                        <div class=\"class-item-price\">\n                                            <p class=\"class-item-price-label first-letter-uppercase\">\n                                                {{ 'HOTELS.FROM' | translate }}\n                                            </p>\n                                            <p data-test=\"mob-train-details-class-price\">\n                                                {{\n                                                    supplierClass.count === 0\n                                                        ? '-'\n                                                        : (supplierClassMinPrice[supplierClass.class].listPrice\n                                                          | tzCurrency\n                                                              : supplierClassMinPrice[supplierClass.class].listPriceCur)\n                                                }}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </ion-label>\n                            </ion-item>\n\n                            <div class=\"ion-padding\" slot=\"content\">\n                                <div class=\"content__details\">\n                                    <tz-mob-train-class-details\n                                        [train]=\"train\"\n                                        [isSelected]=\"\n                                            isSupplierClassSelected &&\n                                            selectedTrain &&\n                                            selectedTrain.tzClass === supplierClass.class\n                                        \"\n                                        [selectedSubClass]=\"selectedClassId\"\n                                        [supplierClass]=\"supplierClass\"\n                                        [supplierClassMinPrice]=\"supplierClassMinPrice\"\n                                        (selectTicket)=\"selectTicket($event)\"\n                                        (selectedClassId)=\"selectedClass($event)\"\n                                    ></tz-mob-train-class-details>\n                                </div>\n                            </div>\n                        </ion-accordion>\n                    </div>\n                </div>\n            </ion-accordion-group>\n        </div>\n\n        <div *ngIf=\"isOnwardSelected\">\n            <tz-block-separator>{{\n                'TRAIN.SELECTED_ONE_WAY' | translate: { transportRoute: arrivalWaySeparatorInfo }\n            }}</tz-block-separator>\n            <tz-mob-trains-list-item\n                [ngClass]=\"{ 'tz-mob-selected-inner-border': true }\"\n                [train]=\"data.onwardTrain\"\n                [isRoundTrip]=\"true\"\n                [selectedOption]=\"selectedOption\"\n                [totalPassengers]=\"data.passengersNumber || 0\"\n            ></tz-mob-trains-list-item>\n            <!--add item type reeturn-->\n            <tz-block-separator>{{\n                'TRAIN.SELECTED_ONE_WAY' | translate: { transportRoute: departureWaySeparatorInfo }\n            }}</tz-block-separator>\n            <tz-mob-trains-list-item\n                [ngClass]=\"{ 'tz-mob-selected-inner-border': true }\"\n                [train]=\"train\"\n                [isRoundTrip]=\"true\"\n                [selectedOption]=\"selectedOption\"\n                trainType=\"return\"\n                [totalPassengers]=\"data.passengersNumber || 0\"\n            ></tz-mob-trains-list-item>\n        </div>\n    </div>\n\n    <div\n        *ngIf=\"selectedTrain && isSupplierClassSelected\"\n        id=\"trainDetailsFooter\"\n        class=\"confirm-container train-details-footer\"\n    >\n        <div class=\"confirm-container__total\" data-test=\"mob-train-details-total\" *ngIf=\"totalPrice && totalPriceCur\">\n            <p class=\"confirm-container__total-label\">{{ 'GENERAL.TOTAL' | translate }}</p>\n\n            <div class=\"confirm-container__total__price\">\n                <p class=\"confirm-container__total__price-total\" data-test=\"mob-train-details-total-price\">\n                    {{ totalPrice | tzCurrency: totalPriceCur }}\n                </p>\n                <p class=\"confirm-container__total__price-desc\" data-test=\"mob-train-details-total-price-desc\">\n                    {{ 'GENERAL.PRICE_FOR' | translate }} {{ data?.passengersNumber }}\n                    <span *ngIf=\"!!data?.passengersNumber\"\n                        >{{ (data!.passengersNumber! > 1 ? 'TRAVELLER.PEOPLE' : 'TRANSFER.PERSON') | translate\n                        }}<span class=\"confirm-container__vertical-text-divider\">&nbsp;|&nbsp;</span></span\n                    >\n                    <span class=\"confirm-container__total__price-desc_all-taxes inline-block first-letter-uppercase\">{{\n                        'TRAIN.ALL_TAXES' | translate\n                    }}</span>\n                </p>\n            </div>\n        </div>\n\n        <button\n            class=\"tz-btn tz-btn-primary full-width\"\n            (click)=\"onConfirm()\"\n            data-test=\"mob-train-details-confirm-btn\"\n        >\n            {{ 'GENERAL.CONFIRM' | translate }}\n        </button>\n    </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-train-direction',\n    templateUrl: './mob-train-direction.component.html',\n    styleUrls: ['./mob-train-direction.component.scss'],\n})\nexport class MobTrainDirectionComponent {\n    @Input() stops!: number[];\n}\n","<div class=\"train-direction\">\n    <div class=\"separator-line\">\n        <div class=\"separator-line__dot\"></div>\n        <div class=\"separator-line__line\"></div>\n    </div>\n    <div *ngFor=\"let stop of stops\" class=\"separator-line\">\n        <div class=\"separator-line__dot-circle\"></div>\n        <div class=\"separator-line__line\"></div>\n    </div>\n    <div class=\"separator-line__dot\"></div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { TRAIN } from '@schemas/modules/trains/train';\n\n@Component({\n    selector: 'tz-mob-train-route-scheme-header',\n    templateUrl: './mob-train-route-scheme-header.component.html',\n    styleUrls: ['./mob-train-route-scheme-header.component.scss'],\n})\nexport class MobTrainRouteSchemeHeaderComponent {\n    @Input() public train!: TRAIN;\n}\n","<div class=\"scheme-header\">\n    <p class=\"scheme-header_title\">\n        {{ 'TRAIN.TRAIN' | translate }}\n        {{ train?.departure?.location?.city }}\n        {{ 'TRAIN.TO' | translate }}\n        {{ train?.arrival?.location?.city }}\n    </p>\n\n    <p class=\"scheme-header_road-info\">\n        {{ train!.departure?.dateTzFormat | tzDate: 'tzFullShortDate' }}\n        <span *ngIf=\"!!train!.stops\">\n            -\n            {{ train!.stops }}\n            {{ train!.stops > 1 ? ('stops' | translate) : ('stop' | translate) }}\n        </span>\n        -\n        {{ train!.durationFormatted }}\n    </p>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { TrainClass } from '@schemas/modules/trains/train-class';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { Route } from '@schemas/modules/trains/train-route';\n\n@Component({\n    selector: 'tz-mob-train-route-scheme',\n    templateUrl: './mob-train-route-scheme.component.html',\n    styleUrls: ['./mob-train-route-scheme.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobTrainRouteSchemeComponent implements OnInit {\n    @Input() train!: TRAIN;\n\n    public trainSummary!: TrainClass | TRAIN;\n    public numberOfDays!: number;\n    public routes: Route[] = [];\n\n    public ngOnInit(): void {\n        this.initData();\n    }\n\n    private initData(): void {\n        this.numberOfDays = this.train.trainClasses[0]?.noOfDays;\n        this.routes = this.train.trainClasses[0]?.route;\n        this.setLayover(this.routes);\n    }\n\n    private setLayover(routes: Route[]): void {\n        routes.forEach((route: Route) => {\n            if (routes.length > 1 && !route.layoverIn) {\n                route.layoverIn = routes[routes.indexOf(route) + 1].layoverIn;\n                route.layoverDuration = routes[routes.indexOf(route) + 1].layoverDuration;\n            }\n        });\n    }\n}\n","<div *ngFor=\"let route of routes; let last = last\" class=\"scheme-item\">\n    <div class=\"scheme-item__top\">\n        <div class=\"scheme-item__top__left\">\n            <div class=\"scheme-item__top__left-time\">\n                <p class=\"scheme-item__text-time\">\n                    {{ route?.departure?.dateTzFormat | tzDate: 'shortTime' }}\n                </p>\n                <div class=\"scheme-item__top__left-circle\"></div>\n            </div>\n            <div class=\"scheme-item__top__left-separator scheme-item__top__left-separator-solid\"></div>\n        </div>\n        <div class=\"scheme-item__top__right\">\n            <p class=\"scheme-item__text-name\">\n                {{ route?.departure?.location?.name }}\n            </p>\n            <div class=\"scheme-item__text-description\">\n                <p>\n                    <span class=\"scheme-item__text-description_text description_text\"\n                        >{{ 'FLIGHT_TRAIN.DURATION' | translate }}&nbsp;:&nbsp;</span\n                    >{{ route?.durationFormatted }}\n                </p>\n                <p>|</p>\n                <p>{{ route?.operator }}</p>\n                <p>|</p>\n                <p>{{ 'TRAIN.TRAIN' | translate }}</p>\n                <p>#{{ route?.trainNumber }}</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"scheme-item__bottom\">\n        <div class=\"scheme-item__top__left\">\n            <div class=\"scheme-item__top__left-time\">\n                <p class=\"scheme-item__text-time\">\n                    {{ route?.arrival?.dateTzFormat | tzDate: 'shortTime' }}\n                    <span *ngIf=\"last && numberOfDays && numberOfDays > 0\" class=\"scheme-item__text-time-days\">\n                        +{{ numberOfDays }}\n                    </span>\n                </p>\n                <div class=\"scheme-item__top__left-circle\"></div>\n            </div>\n            <div *ngIf=\"!last\" class=\"scheme-item__top__left-separator scheme-item__top__left-separator-dashed\"></div>\n        </div>\n        <div class=\"scheme-item__top__left-info\">\n            <p class=\"scheme-item__text-name\">\n                {{ route?.arrival?.location?.name }}\n            </p>\n            <p\n                *ngIf=\"!last && route?.layoverIn\"\n                class=\"scheme-item__top__right-layover\"\n                data-test=\"mob-train-route-scheme-layover-info\"\n            >\n                {{ 'TRAIN.INTERCHANGE' | translate }} {{ route?.layoverDuration }}\n            </p>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { TermsAndConditions } from '@schemas/modules/trains/train-terms';\n\n@Component({\n    selector: 'tz-mob-train-terms-modal',\n    templateUrl: './mob-train-terms-modal.component.html',\n    styleUrls: ['./mob-train-terms-modal.component.scss'],\n})\nexport class MobTrainTermsModalComponent implements OnInit {\n    @Input() data!: { terms: any; operator: any };\n    public terms: TermsAndConditions[] = [];\n    public operator!: string;\n    public showViaRailTerms = false;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        this.operator = ToolsService.deepCopy(this.data.operator);\n        this.terms = ToolsService.deepCopy(this.data.terms);\n    }\n\n    public trackByFn(index: number) {\n        return index;\n    }\n}\n","<div class=\"terms-conditions-container\">\n    <div *ngFor=\"let term of terms; trackBy: trackByFn\">\n        <div class=\"terms-conditions__title\">\n            {{ term.dataTitle }}\n        </div>\n        <div class=\"terms-conditions__block\" *ngFor=\"let dataContent of term.dataContentList; trackBy: trackByFn\">\n            <div\n                *ngIf=\"dataContent.title !== ''\"\n                class=\"terms-conditions__title\"\n                [ngClass]=\"{\n                    baggage: dataContent.title === 'Checked baggage' || dataContent.title === 'Carry-on bags'\n                }\"\n            >\n                {{ dataContent.title }}\n            </div>\n            <div class=\"terms-conditions__content\" *ngFor=\"let desc of dataContent.description; trackBy: trackByFn\">\n                {{ desc }}\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showViaRailTerms\">\n        <h6 class=\"color-4a via-rail-terms-title\">Infants</h6>\n        <div>\n            <div>\n                <span>{{ 'TRAIN.VIARail_Infant_info' | translate }}</span>\n                <span>{{ 'TRAIN.VIARail_contact_info' | translate }}</span>\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { TrainClass } from '@schemas/modules/trains/train-class';\n\n@Component({\n    selector: 'tz-mob-trains-list-item-info-block',\n    templateUrl: './mob-trains-list-item-info-block.component.html',\n    styleUrls: ['./mob-trains-list-item-info-block.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobTrainsListItemInfoBlockComponent implements OnInit {\n    @Input() train: TRAIN | undefined;\n    @Input() totalPassengers = 0;\n    @Input() trainClass: TrainClass | undefined;\n    @Input() trainType: 'depart' | 'return' = 'depart';\n    public directionFrom: 'departure' | 'arrival' = 'departure';\n    public directionTo: 'departure' | 'arrival' = 'arrival';\n    public isReturnWay = false;\n    public stops: number[] = [];\n    public data: TRAIN | TrainClass | undefined;\n\n    get arrivalSameDay(): boolean {\n        return this.data?.arrival.dateTzFormat.split('T')[0] === this.data?.departure.dateTzFormat.split('T')[0];\n    }\n\n    public ngOnInit(): void {\n        this.prepareData();\n    }\n\n    private fixAssetsPath(): void {\n        const oldPath = '/web/assets/img/trainSupplierLogos/';\n        const newPath = '/assets/icons/web/img/trainSupplierLogos/';\n        if (this.data) {\n            this.data.operatorImage = this.data.operatorImage.replace(oldPath, newPath);\n        }\n    }\n\n    private prepareData(): void {\n        this.isReturnWay = this.trainType === 'return';\n\n        if (this.train) {\n            this.data = this.train;\n        }\n\n        if (this.trainClass) {\n            this.data = this.trainClass;\n        }\n\n        if (this.trainType !== 'depart') {\n            this.directionFrom = 'arrival';\n            this.directionTo = 'departure';\n        }\n\n        this.stops = typeof this.data?.stops === 'number' ? Array(this.data?.stops).fill(1) : [];\n\n        this.fixAssetsPath();\n    }\n}\n","<div class=\"train-item-info\" *ngIf=\"data\" data-test=\"mob-train-item-info\">\n    <div class=\"train-item-info__icon\">\n        <div class=\"ticket-company-logo\" data-test=\"mob-train-item-info-icon\">\n            <img [src]=\"data?.operatorImage\" alt=\"operator img\" />\n        </div>\n    </div>\n    <div class=\"information\">\n        <div class=\"information__wrapper\" [ngClass]=\"{ 'return-wayy': isReturnWay }\">\n            <div class=\"train-item-info__text\">\n                <div class=\"information__timeline\">\n                    <p class=\"information__timeline-time\" data-test=\"mob-train-item-departure-time\">\n                        {{ data?.departure?.dateTzFormat | tzDate: 'shortTime' }}\n                    </p>\n                </div>\n                <div class=\"direction\">\n                    <tz-mob-train-direction [stops]=\"stops\"></tz-mob-train-direction>\n                </div>\n                <div class=\"information__timeline\">\n                    <p\n                        class=\"information__timeline-time information__timeline-time_end\"\n                        data-test=\"mob-train-item-arrival-time\"\n                    >\n                        {{ data?.arrival?.dateTzFormat | tzDate: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n            <div class=\"train-item-info__text\">\n                <div class=\"information__timeline\">\n                    <p class=\"information__city\" data-test=\"mob-train-item-departure-city\">\n                        {{ isReturnWay ? data?.[directionTo]?.location?.city : data?.[directionFrom]?.location?.city }}\n                    </p>\n                </div>\n                <div class=\"information__timeline\">\n                    <p class=\"information__city\" data-test=\"mob-train-item-arrival-city\">\n                        {{ isReturnWay ? data?.[directionFrom]?.location?.city : data?.[directionTo]?.location?.city }}\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"information-summary\">\n            <div class=\"information-summary__departureInfo\">\n                <p class=\"flight__day-item\" data-test=\"mob-train-item-departure-date\">\n                    {{ data.departure.dateTzFormat | tzDate: 'shortDateMonth'\n                    }}<span class=\"vertical-text-divider\">&nbsp;|&nbsp;</span>\n                </p>\n                <p data-test=\"mob-train-item-duration\">\n                    {{ data?.durationFormatted }}\n                </p>\n                <p data-test=\"mob-train-item-stops\">\n                    <span class=\"vertical-text-divider\">&nbsp;|&nbsp;</span\n                    >{{\n                        data.stops === 0\n                            ? ('Non-stop' | translate)\n                            : data.stops > 1\n                            ? data.stops + ('stops' | translate)\n                            : data.stops + ('stop' | translate)\n                    }}\n                </p>\n            </div>\n            <p *ngIf=\"!arrivalSameDay\" class=\"information-summary__arrivalInfo-red\">\n                {{ data.departure.dateTzFormat | tzDate: 'shortDateMonth' }}\n            </p>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { TrainClass } from '@schemas/modules/trains/train-class';\nimport {\n    SelectedOption,\n    SupplierClassMinPrice,\n    TrainSelection,\n} from '@schemas/modules/trains/train-search-query-params';\nimport { TrainService } from '@services/modules/transport/trains/trains.service';\nimport { TzServiceTabs } from '../../../../tabsUtils/tz-tabs-service';\n\n@Component({\n    selector: 'tz-mob-trains-list-item',\n    templateUrl: './mob-trains-list-item.component.html',\n    styleUrls: ['./mob-trains-list-item.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobTrainsListItemComponent implements OnInit {\n    @Input() train: TRAIN | undefined;\n    @Input() trainClass: TrainClass | undefined;\n    @Input() selectedOption!: SelectedOption;\n    @Input() isRoundTrip!: boolean;\n    @Input() isSelected = false;\n    @Input() cartItem: any;\n    @Input() totalPassengers = 0;\n    @Input() trainType: 'depart' | 'return' = 'depart';\n    @Input() oldPrice = 0;\n    public supplierClassMinPrice: SupplierClassMinPrice = {};\n    public changedPriceDiff = '';\n\n    constructor(private trainService: TrainService, private serviceTabs: TzServiceTabs) {}\n\n    get price(): number {\n        let listPrice: number;\n        if (this.selectedOption?.onward && this.selectedOption.onward?.id === this.train?.id) {\n            listPrice = this.supplierClassMinPrice[this.selectedOption.onward.tzClass]?.listPrice;\n        } else if (this.selectedOption?.return && this.selectedOption.return?.id === this.train?.id) {\n            listPrice = this.supplierClassMinPrice[this.selectedOption.return.tzClass]?.listPrice;\n        } else {\n            listPrice = this.train?.prices?.listPrice ? this.train?.prices?.listPrice : 0;\n        }\n\n        return listPrice;\n    }\n\n    get selectedTrain(): TrainSelection | undefined {\n        if (this.selectedOption?.onward && this.selectedOption.onward?.id === this.train?.id) {\n            this.trainType = 'depart';\n            return this.selectedOption.onward;\n        }\n\n        if (this.selectedOption?.return && this.selectedOption.return?.id === this.train?.id) {\n            return this.selectedOption.return;\n        }\n\n        return undefined;\n    }\n\n    public ngOnInit(): void {\n        this.fetchServicePrices();\n        this.initData();\n    }\n\n    private fetchServicePrices(): void {\n        if (this.train && !!this.selectedTrain) {\n            this.supplierClassMinPrice = this.trainService.getServicePrices(this.train, this.selectedTrain);\n        }\n    }\n\n    private initData(): void {\n        const currentCartPrice = this.cartItem?.itemPrice?.listPrice;\n\n        if (this.oldPrice > 0 && currentCartPrice) {\n            this.changedPriceDiff = this.serviceTabs.updatePriceChanging(this.oldPrice, currentCartPrice);\n        }\n    }\n}\n","<div *ngIf=\"train\" class=\"mob-train-item\" data-test=\"mob-train-item\">\n    <tz-mob-trains-list-item-info-block [train]=\"train\" [totalPassengers]=\"totalPassengers\" [trainType]=\"trainType\">\n    </tz-mob-trains-list-item-info-block>\n    <div class=\"mob-train-item__price-block\">\n        <tz-svg-icon [stretch]=\"false\" icon=\"mob-train-service-tab\" className=\"trains-filter-icon\"></tz-svg-icon>\n        <div class=\"mob-train-item__price\" data-test=\"mob-train-item-price\">\n            <span class=\"mob-train-item__price\">{{ price | tzCurrency: train.prices.listPriceCur }}</span>\n            <p class=\"mob-train-item__passengers\" data-test=\"mob-train-item-passengers\">\n                {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }}\n                {{ totalPassengers > 1 ? ('TRAVELLER.PEOPLE' | translate) : ('TRAVELLER.PERSON' | translate) }}\n            </p>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"trainClass\" class=\"mob-train-item\">\n    <tz-mob-trains-list-item-info-block [totalPassengers]=\"totalPassengers\" [trainClass]=\"trainClass\">\n    </tz-mob-trains-list-item-info-block>\n    <!--    todo need more description-->\n    <!--    <div class=\"mob-train-item__price-block\">-->\n    <!--        <tz-svg-icon [stretch]=\"false\" icon=\"mob-train-service-tab\" className=\"trains-filter-icon\"></tz-svg-icon>-->\n    <!--        <div class=\"mob-train-item__price\" data-test=\"mob-train-item-price\">-->\n    <!--            {{ cartItem.itemPrice.listPrice | tzCurrency: cartItem.itemPrice.listPriceCur }}-->\n    <!--        </div>-->\n    <!--        <p class=\"mob-train-item__passengers\" data-test=\"mob-train-item-passengers\">-->\n    <!--            {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }} {{ 'TRANSFER.PERSON' | translate }}-->\n    <!--        </p>-->\n    <!--    </div>-->\n\n    <div class=\"mob-train-item__price-block\">\n        <tz-svg-icon [stretch]=\"false\" icon=\"mob-train-service-tab\" className=\"trains-filter-icon\"></tz-svg-icon>\n        <div class=\"mob-train-item__price\" data-test=\"mob-train-item-price\">\n            <tz-mob-price-changed-block\n                *ngIf=\"oldPrice > 0\"\n                class=\"mob-price-changed-block\"\n            ></tz-mob-price-changed-block>\n            <span class=\"mob-train-item__price_value\" data-test=\"mob-train-item-price\"\n                ><span class=\"mob-price-change-diff\" *ngIf=\"oldPrice > 0\">{{ changedPriceDiff }}</span\n                >{{ cartItem.itemPrice.listPrice | tzCurrency: cartItem.itemPrice.listPriceCur }}</span\n            >\n            <p class=\"mob-train-item__passengers\" data-test=\"mob-train-item-passengers\">\n                {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }}\n                {{ totalPassengers > 1 ? ('TRAVELLER.PEOPLE' | translate) : ('TRAVELLER.PERSON' | translate) }}\n            </p>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CartStatus, PaymentCaptureMode } from '@core/constants/cart-status';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { TzSelectedService } from '../../../../selectedUtils/tz-selected-service';\nimport { ModalService } from '@services/modal.service';\nimport { MobSelectedTrainDetailsComponent } from '../mob-selected-train-details/mob-selected-train-details.component';\nimport { PlatformService } from '@services/platform.service';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\n\n@Component({\n    selector: 'tz-selected-trains',\n    templateUrl: './selected-trains.component.html',\n    styleUrls: ['./selected-trains.component.scss'],\n})\nexport class SelectedTrainsComponent implements OnInit {\n    @Input() serviceList = false;\n    @Input() combId!: CombinationId;\n    @Input() trainItems!: ICartItem[];\n    @Input() fromBookings = false;\n    @Input() paymentCaptureMode = PaymentCaptureMode.NORMAL_MODE;\n    @Input() showActionBar!: boolean;\n    @Input() showTitle!: boolean;\n    @Output() removedItem: EventEmitter<string> = new EventEmitter<string>();\n    @Output() changeTickets: EventEmitter<void> = new EventEmitter();\n    @Output() changeOptions: EventEmitter<TRAIN> = new EventEmitter();\n    @Output() selectedId: EventEmitter<string> = new EventEmitter<string>();\n    @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n    public buttons: string[] = [];\n    public optionId!: string;\n    public invalidCartItem = false;\n\n    constructor(private platformService: PlatformService, private modalService: ModalService) {}\n\n    ngOnInit() {\n        this.initializeActionBarButtons();\n\n        this.invalidCartItem = !this.trainItems[0].selectedItem.bookingOptions.some(\n            (option: ICartSelectedItemBookingOption) =>\n                !(option.status >= CartStatus.STATUS_REJECTED && option.status !== CartStatus.STATUS_PRICE_CHANGED)\n        );\n    }\n\n    public onRemoveSelected(): void {\n        this.removedItem.emit(this.optionId);\n    }\n\n    public onChangeTickets(): void {\n        this.changeTickets.emit();\n    }\n\n    public onChangeOptions(): void {\n        this.changeOptions.emit();\n    }\n\n    public onCancelTicket(): void {\n        this.cancel.emit();\n    }\n\n    public onRemoveItem(): void {}\n\n    public setSelectedId(itemId: string): void {\n        this.selectedId.emit(itemId);\n    }\n\n    public onMobShowSelectedDetails(): void {\n        if (!this.platformService.isMobileDevice) {\n            return;\n        }\n\n        this.modalService.createDetailsPage(MobSelectedTrainDetailsComponent, {\n            data: {\n                trains: this.trainItems,\n                isRoundTrip: this.trainItems.length > 1,\n            },\n            title: 'TRAIN.SELECTED_TRAINS',\n        });\n    }\n\n    private initializeActionBarButtons() {\n        this.buttons = TzSelectedService.initializeActionBarButtons(\n            this.trainItems[0].selectedItem,\n            this.fromBookings,\n            this.serviceList,\n            this.paymentCaptureMode,\n            false\n        );\n\n        if (!this.fromBookings && !CartUtils.hasBooked(this.trainItems[0].selectedItem.bookingOptions)) {\n            const travellersData = CartUtils.getTravellersData([this.trainItems[0]]);\n            this.buttons.push(travellersData && travellersData.total > 1 ? 'changeTickets' : 'changeTicket');\n\n            if (!CartUtils.hasBookingStarted(this.trainItems[0].selectedItem.bookingOptions)) {\n                this.buttons.push('changeOptions');\n            } else if (CartUtils.hasUnavailable(this.trainItems[0].selectedItem.bookingOptions)) {\n                this.buttons.push('update');\n            }\n        }\n    }\n}\n","<div [ngClass]=\"{ 'tz-selected-service-list': serviceList && !invalidCartItem }\">\n    <tz-rejected-cart-item-banner\n        class=\"mb-0\"\n        *ngIf=\"invalidCartItem\"\n        [service]=\"'SERVICES.6' | translate\"\n    ></tz-rejected-cart-item-banner>\n    <div [ngClass]=\"{ 'tz-mob-rejected-cart-item': invalidCartItem }\" class=\"train-cart-item-wrapper\">\n        <ng-container *ngFor=\"let cartItem of trainItems\">\n            <div (click)=\"onMobShowSelectedDetails()\">\n                <tz-train-cart-item\n                    [cartItem]=\"cartItem\"\n                    [serviceList]=\"true\"\n                    [isRoundTrip]=\"trainItems.length > 1\"\n                    (removedItem)=\"onRemoveSelected()\"\n                    (changeOptions)=\"onChangeOptions()\"\n                    (changeTickets)=\"onChangeTickets()\"\n                    (selectedId)=\"setSelectedId($event)\"\n                ></tz-train-cart-item>\n            </div>\n        </ng-container>\n    </div>\n</div>\n<div class=\"accommodation-actions-bar-container\">\n    <tz-cart-item-actions-bar\n        (remove)=\"onRemoveSelected()\"\n        (changeTickets)=\"onChangeTickets()\"\n        (modify)=\"onChangeOptions()\"\n        (changeOptions)=\"onChangeOptions()\"\n        (cancel)=\"onCancelTicket()\"\n        [buttons]=\"buttons\"\n        [combId]=\"combId\"\n        [optionId]=\"optionId\"\n        [status]=\"trainItems[0].selectedItem.bookingOptions[0].status\"\n    ></tz-cart-item-actions-bar>\n</div>\n","import { Component, Input, OnInit, Inject } from '@angular/core';\n\nimport { TermsAndConditions } from '@schemas/modules/trains/train-terms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-train-terms',\n    templateUrl: './terms.component.html',\n    styleUrls: ['./terms.component.scss'],\n})\nexport class TrainTermsComponent implements OnInit {\n    public terms: TermsAndConditions[] = [];\n    public operator!: string;\n    public showViaRailTerms = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public dialogData: any,\n        private mdDialogRef: MatDialogRef<TrainTermsComponent>,\n        private dialogService: DialogService\n    ) {\n        const termsData = this.dialogData;\n        this.operator = ToolsService.deepCopy(termsData.operator);\n        this.terms = ToolsService.deepCopy(termsData.terms);\n    }\n\n    ngOnInit(): void {}\n\n    public closeDialog(): void {\n        this.dialogService.closeDialog(this.mdDialogRef);\n    }\n\n    public trackByFn(index: number) {\n        return index;\n    }\n}\n","<div class=\"tz-dialog-close-block\" (click)=\"closeDialog()\">\n    <tz-icon className=\"tz-popup-close-icon\" icon=\"popup-close\"></tz-icon>\n</div>\n<div class=\"tz-dialog-container tz-terms-dialog\">\n    <div class=\"tz-dialog-title\" data-test=\"flight-conditions-text\">{{ 'FLIGHT_TRAIN.CONDITIONS' | translate }}</div>\n    <div class=\"tz-dialog-multiple-content\">\n        <div class=\"terms-content\" *ngFor=\"let term of terms; trackBy: trackByFn\">\n            <div class=\"tz-terms-dialog__title terms-content-title\">\n                {{ term.dataTitle }}\n            </div>\n            <div *ngFor=\"let dataContent of term.dataContentList; trackBy: trackByFn\">\n                <div\n                    *ngIf=\"dataContent.title !== ''\"\n                    class=\"data-content-title\"\n                    [ngClass]=\"{\n                        baggage: dataContent.title === 'Checked baggage' || dataContent.title === 'Carry-on bags'\n                    }\"\n                >\n                    {{ dataContent.title }}\n                </div>\n                <div *ngFor=\"let desc of dataContent.description; trackBy: trackByFn\">\n                    {{ desc }}\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"showViaRailTerms\">\n            <h6 class=\"color-4a via-rail-terms-title\">Infants</h6>\n            <div>\n                <div>\n                    <span>{{ 'TRAIN.VIARail_Infant_info' | translate }}</span>\n                    <span>{{ 'TRAIN.VIARail_contact_info' | translate }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { TrainClass } from '@schemas/modules/trains/train-class';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { CartStatus, PaymentCaptureMode } from '@core/constants/cart-status';\nimport { PlatformService } from '@services/platform.service';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\n\n@Component({\n    selector: 'tz-train-cart-item',\n    templateUrl: './train-cart-item.component.html',\n    styleUrls: ['./train-cart-item.component.scss'],\n})\nexport class TrainCartItemComponent implements OnInit, OnChanges {\n    @Input() cartItem!: any; // Todo: need to change once search engine is cleaned up with data type\n    @Input() combId!: CombinationId;\n    @Input() serviceList = false;\n    @Input() fromBookings = false;\n    @Input() isRoundTrip = false;\n    @Input() paymentCaptureMode = PaymentCaptureMode.NORMAL_MODE;\n    @Output() removedItem: EventEmitter<string> = new EventEmitter<string>();\n    @Output() changeTickets: EventEmitter<void> = new EventEmitter();\n    @Output() changeOptions: EventEmitter<TRAIN> = new EventEmitter();\n    @Output() selectedId: EventEmitter<string> = new EventEmitter<string>();\n    @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    public buttons: string[] = [];\n    public train!: TrainClass;\n    public showDetails = false;\n    public trainClasses: TrainClass[] = [];\n    public optionId!: string;\n    public invalidCartItem = false;\n    public totalPassengers = 0;\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit() {\n        this.init();\n\n        // Todo: path needs to be done from server\n        const oldPath = '/web/assets/img/trainSupplierLogos/';\n        const newPath = '/assets/icons/web/img/trainSupplierLogos/';\n        this.train.operatorImage = this.train.operatorImage.replace(oldPath, newPath);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['cartItem']) {\n            const travellersData = CartUtils.getTravellersData([this.cartItem]);\n            if (travellersData) {\n                this.totalPassengers = travellersData.total;\n            }\n        }\n    }\n\n    public toggleDetails() {\n        this.showDetails = !this.showDetails;\n    }\n\n    public onRemoveSelected(): void {\n        this.removedItem.emit(this.optionId);\n    }\n\n    public onChangeTickets(): void {\n        this.changeTickets.emit();\n    }\n\n    public onChangeOptions(): void {\n        this.changeOptions.emit();\n    }\n\n    public onCancelTicket(): void {\n        this.cancel.emit();\n    }\n\n    public setSelectedId(itemId: string): void {\n        this.selectedId.emit(itemId);\n    }\n\n    private init(): void {\n        this.optionId = this.cartItem.selectedItem.bookingOptions[0].optionId;\n        this.train = this.cartItem.selectedItem.data.onward;\n        this.trainClasses = [this.train];\n\n        this.invalidCartItem = !this.cartItem.selectedItem.bookingOptions.some(\n            (option: ICartSelectedItemBookingOption) =>\n                !(option.status >= CartStatus.STATUS_REJECTED && option.status !== CartStatus.STATUS_PRICE_CHANGED)\n        );\n    }\n}\n","<div\n    *ngIf=\"!platformService.isMobileDevice\"\n    class=\"train-block-item tz-block-with-border\"\n    [ngClass]=\"{ 'rejected-cart-item': invalidCartItem }\"\n    (mouseenter)=\"setSelectedId(cartItem.selectedItem.id)\"\n    (mouseleave)=\"setSelectedId('')\"\n>\n    <div class=\"ticket-item-group\" (click)=\"toggleDetails()\">\n        <div class=\"train-block-item-info\">\n            <div class=\"ticket-info d-flex align-items-center train-ticket\">\n                <div class=\"train-checkbox-block\"></div>\n                <div class=\"ticket-company-logo\">\n                    <img [src]=\"train.operatorImage\" alt=\"operator img\" />\n                </div>\n                <div class=\"ticket-company-name\">\n                    <div class=\"text-overflow-hide\">\n                        {{ train.operator }}\n                    </div>\n                    <div class=\"text-overflow-hide class-name\">{{ train.trainClass.tzClass }}</div>\n                </div>\n                <tz-trains-list-item-info\n                    [departureDate]=\"train.departure.dateTzFormat\"\n                    [arrivalDate]=\"train.arrival.dateTzFormat\"\n                    [duration]=\"train.durationFormatted\"\n                    [departureLocation]=\"train.departure\"\n                    [arrivalLocation]=\"train.arrival\"\n                    [stops]=\"trainClasses[0].route\"\n                    [layoverName]=\"\n                        trainClasses.length > 0 && trainClasses[0]?.layoverName ? trainClasses[0].layoverName : ''\n                    \"\n                >\n                </tz-trains-list-item-info>\n            </div>\n        </div>\n\n        <div class=\"train-block-item-price\">\n            <div class=\"ticket-options d-flex justify-content-between\">\n                <div class=\"options-list\">\n                    <span class=\"service-icon-train icon-train\"></span>\n                </div>\n                <div>\n                    <div class=\"ticket-price text-right flex align-center justify-end\">\n                        <tz-price-change-tooltop *ngIf=\"cartItem.oldPrice > 0\"></tz-price-change-tooltop>\n                        <span *ngIf=\"cartItem.oldPrice > 0\" class=\"service-old-price\">\n                            +\n                            {{\n                                cartItem.itemPrice.listPrice - cartItem.oldPrice\n                                    | tzCurrency: cartItem.itemPrice.listPriceCur\n                            }}\n                        </span>\n                        {{ cartItem.itemPrice.listPrice | tzCurrency: cartItem.itemPrice.listPriceCur }}\n                    </div>\n                    <p class=\"train-adult\" data-test=\"train-adult-count\">\n                        <span style=\"text-align: right\">\n                            {{ 'GENERAL.PRICE_FOR' | translate }} {{ totalPassengers }}\n                            {{ 'TRAVELLER.' + (totalPassengers > 1 ? 'PERSONS' : 'PERSON') | translate }}\n                        </span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showDetails\">\n        <tz-trains-class\n            [toggle]=\"showDetails\"\n            (toggleChange)=\"toggleDetails()\"\n            [departure]=\"train.departure\"\n            [arrival]=\"train.arrival\"\n            [trainClasses]=\"trainClasses\"\n        >\n        </tz-trains-class>\n    </div>\n</div>\n\n<div *ngIf=\"platformService.isMobileDevice\">\n    <tz-mob-trains-list-item\n        [trainClass]=\"cartItem.selectedItem.data.onward\"\n        [isRoundTrip]=\"isRoundTrip\"\n        [isSelected]=\"true\"\n        [cartItem]=\"cartItem\"\n        [totalPassengers]=\"totalPassengers\"\n    ></tz-mob-trains-list-item>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TrainClass } from '@schemas/modules/trains/train-class';\nimport { DialogService } from '@services/dialog.service';\nimport { TrainTermsComponent } from '../terms/terms.component';\nimport { MainDialogSize } from '@shared/schemas/dialog.model';\n\n@Component({\n    selector: 'tz-trains-class-details',\n    templateUrl: './trains-class-details.component.html',\n    styleUrls: ['./trains-class-details.component.scss'],\n})\nexport class TrainsClassDetailsComponent implements OnInit {\n    @Input() trainClass!: TrainClass;\n    @Input() hideTitle = false;\n\n    constructor(private dialogService: DialogService) {}\n    ngOnInit(): void {}\n\n    public openTrainTerms() {\n        this.dialogService.openServiceDialog(TrainTermsComponent, {\n            width: undefined,\n            maxHeight: '90vh',\n            panelClass: 'tz-terms-dialog-large',\n            maxWidth: '940px',\n            data: {\n                operator: this.trainClass.operator,\n                terms: this.trainClass.trainClass.ClassDescription.termsandConditionsList,\n            },\n        });\n    }\n}\n","<div class=\"train-item-details-side-info\">\n    <div class=\"fs-14 single-subClass-title\" *ngIf=\"!hideTitle\">\n        <span class=\"strong\">\n            {{ trainClass.trainClass.tzSubClass }} •\n            {{ trainClass.prices.listPrice | tzCurrency: trainClass.prices.listPriceCur }}</span\n        >\n    </div>\n    <div class=\"flight-upgrade-module-feat\">\n        <div class=\"d-flex facility\" *ngFor=\"let facility of trainClass.trainClass.ClassDescription.facilities\">\n            <span class=\"upgrade-module-feat-icon align-self-baseline\">\n                <img *ngIf=\"facility.available\" src=\"/assets/icons/web/img/icons/checked_material_green.svg\" alt=\"\" />\n                <img *ngIf=\"!facility.available\" src=\"/assets/icons/web/img/icons/Close-Active.svg\" alt=\"\" />\n            </span>\n            <span>{{ facility.facility }}</span>\n        </div>\n        <div class=\"d-flex\" *ngIf=\"trainClass.showViaRailTerms\">\n            <span class=\"upgrade-module-feat-icon align-self-baseline\">\n                <img src=\"/assets/icons/web/img/icons/checked_material_green.svg\" alt=\"\" />\n            </span>\n            <span translate=\"TRAIN.VIARail_Infant_info\"></span>\n        </div>\n    </div>\n    <p class=\"fs-13 fare-conditions color-9b\" *ngIf=\"trainClass.trainClass.ClassDescription.fareCondition !== ''\">\n        <a (click)=\"$event.stopPropagation(); openTrainTerms()\" class=\"tz-purple-link\">{{\n            'FLIGHT_TRAIN.CONDITIONS' | translate\n        }}</a\n        >{{ 'GENERAL.COLUMN' | translate }}\n        {{ trainClass.trainClass.ClassDescription.fareCondition }}\n    </p>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { Route } from '@schemas/modules/trains/train-route';\nimport { TrainClass } from '@schemas/modules/trains/train-class';\nimport { TravelingLocationInfo } from '@schemas/modules/trains/train-location';\nimport { TrainSelection } from '@schemas/modules/trains/train-search-query-params';\n\n@Component({\n    selector: 'tz-trains-class',\n    templateUrl: './trains-class.component.html',\n    styleUrls: ['./trains-class.component.scss'],\n})\nexport class TrainsClassComponent implements OnChanges {\n    @Input() departure!: TravelingLocationInfo;\n    @Input() arrival!: TravelingLocationInfo;\n    @Input() trainClasses: TrainClass[] = [];\n    @Input() selectedClassId!: string;\n    @Input() toggle!: boolean;\n    @Input() selectedTrain!: TrainSelection;\n\n    @Output() toggleChange: EventEmitter<boolean> = new EventEmitter();\n    @Output() trainClassSelected: EventEmitter<TrainClass> = new EventEmitter();\n    @Output() trainClassToggle: EventEmitter<void> = new EventEmitter();\n\n    public stops: Route[] = [];\n\n    constructor() {}\n\n    get isSameStation() {\n        if (!this.stops.length) {\n            return true;\n        }\n\n        return this.stops[0].arrival.location.code === this.stops[1].departure.location.code;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['trainClasses']) {\n            this.setSelectedId();\n            this.stops = this.trainClasses[0].route;\n        }\n    }\n\n    public toggleTicket(event: any): void {\n        event.stopPropagation();\n        this.toggleChange.emit();\n    }\n\n    public toggleSubClass(event: any, selectedClass: TrainClass): void {\n        event.stopPropagation();\n        this.selectedClassId = selectedClass.id;\n    }\n\n    public openTrainTerms(event: any, trainSubClass: TrainClass[]): void {}\n\n    public selectTrainClass(trainClass: TrainClass): void {\n        if (trainClass.id !== this.selectedTrain.classId) {\n            this.trainClassSelected.emit(trainClass);\n        }\n    }\n\n    private setSelectedId(): void {\n        if (!this.selectedTrain) {\n            this.selectedClassId = this.trainClasses[0].id;\n            return;\n        }\n\n        const hasSelectedTrainClass = this.trainClasses.some((tc: TrainClass) => tc.id === this.selectedTrain.classId);\n        if (hasSelectedTrainClass) {\n            this.selectedClassId = this.selectedTrain.classId || '';\n        }\n    }\n}\n","<div class=\"train-item-details\">\n    <div class=\"train-item-details-side left\" (click)=\"toggleTicket($event)\">\n        <p>\n            <span class=\"loc-block\">\n                <span class=\"strong\">\n                    {{ departure.location.city }} {{ 'TRAIN.TO' | translate }} {{ arrival.location.city }}\n                </span>\n                <span class=\"color-9b\" data-test=\"train-ticket-date\">\n                    {{ departure.dateTzFormat | tzDate: 'mediumDate' }}\n                </span>\n            </span>\n        </p>\n        <div *ngFor=\"let route of stops\">\n            <p class=\"station-block\" *ngIf=\"route.layoverIn !== '' && route.layoverDuration\">\n                <span class=\"strong\">\n                    {{ isSameStation ? ('TRAIN.INTERCHANGE' | translate) : ('TRAIN.TRANSFER' | translate) }}\n                </span>\n                <span class=\"color-9b\">{{ route.layoverDuration }}</span>\n            </p>\n            <p>\n                <span class=\"loc-block strong\">\n                    {{ route.departure.dateTzFormat | tzDate: 'shortTime' }}\n                </span>\n                {{ route.departure.location.name }}\n            </p>\n            <p class=\"fs-13 color-9b\">\n                {{ 'FLIGHT_TRAIN.DURATION' | translate }}: {{ route.durationFormatted }} • {{ route.operator }} • Train\n                #{{ route.trainNumber }}\n            </p>\n\n            <p>\n                <span class=\"loc-block strong\">\n                    {{ route.arrival.dateTzFormat | tzDate: 'shortTime' }}\n                </span>\n                {{ route.arrival.location.name }}\n            </p>\n        </div>\n    </div>\n    <div class=\"train-item-details-side right\" *ngIf=\"trainClasses.length === 1\" (click)=\"toggleTicket($event)\">\n        <tz-trains-class-details class=\"no-subclass\" [trainClass]=\"trainClasses[0]\"></tz-trains-class-details>\n    </div>\n\n    <div class=\"train-item-details-side right\" *ngIf=\"trainClasses.length > 1\" (click)=\"$event.stopPropagation()\">\n        <ion-accordion-group toggle-icon=\"''\" [value]=\"selectedClassId\">\n            <mat-radio-group>\n                <ng-container *ngFor=\"let trainClass of trainClasses; index as i\">\n                    <ion-accordion\n                        [value]=\"trainClass.id\"\n                        [class.flight-list-item--is-open]=\"trainClass.id === selectedClassId\"\n                    >\n                        <ion-item slot=\"header\" class=\"title train-subclass ion-no-padding\">\n                            <mat-radio-button\n                                class=\"radio-btn\"\n                                [value]=\"trainClass.id\"\n                                [checked]=\"selectedClassId === trainClass.id\"\n                                (click)=\"toggleSubClass($event, trainClass); selectTrainClass(trainClass)\"\n                            >\n                                {{ trainClass.trainClass.tzSubClass }} •\n                                {{ trainClass.prices.listPrice | tzCurrency: trainClass.prices.listPriceCur }}\n                            </mat-radio-button>\n                            <div class=\"dummy-container\" (click)=\"$event.stopPropagation()\"></div>\n                            <div\n                                class=\"tz-icon-arrow\"\n                                (click)=\"trainClassToggle.emit()\"\n                                [ngClass]=\"{ selected: selectedClassId === trainClass.id }\"\n                            ></div>\n                        </ion-item>\n\n                        <ion-item slot=\"content\" class=\"ion-no-padding\">\n                            <tz-trains-class-details\n                                [trainClass]=\"trainClass\"\n                                [hideTitle]=\"true\"\n                            ></tz-trains-class-details>\n                        </ion-item>\n                    </ion-accordion>\n                </ng-container>\n            </mat-radio-group>\n        </ion-accordion-group>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { Route } from '@schemas/modules/trains/train-route';\nimport { Location, TravelingLocationInfo } from '@schemas/modules/trains/train-location';\n\n@Component({\n    selector: 'tz-trains-list-item-info',\n    templateUrl: './trains-list-item-info.component.html',\n    styleUrls: ['./trains-list-item-info.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrainsListItemInfoComponent implements OnInit {\n    @Input() departureDate!: string;\n    @Input() arrivalDate!: string;\n    @Input() duration!: string;\n    @Input() departureLocation!: TravelingLocationInfo;\n    @Input() arrivalLocation!: TravelingLocationInfo;\n    @Input() stops: Route[] = [];\n    @Input() layoverName!: string | undefined;\n\n    public origin = '';\n    public destination = '';\n\n    constructor() {}\n\n    get isSameStation() {\n        if (!this.stops.length) {\n            return true;\n        }\n\n        return this.stops[0].arrival.location.code === this.stops[1].departure.location.code;\n    }\n\n    ngOnInit() {\n        this.setOriginAndDestinationValues();\n    }\n\n    private setOriginAndDestinationValues(): void {\n        const departureLocation = this.departureLocation.location;\n        const arrivalLocation = this.arrivalLocation.location;\n        this.origin = departureLocation.name;\n        this.destination = arrivalLocation.name;\n    }\n}\n","<div class=\"middle-part\">\n    <div class=\"top-part\">\n        <div class=\"start-time\">\n            <p>{{ departureDate | tzDate: 'shortTime' }}</p>\n        </div>\n        <div class=\"duration\">\n            <p class=\"text-center\">{{ 'FLIGHT_TRAIN.DURATION' | translate }}:&nbsp;{{ duration }}</p>\n\n            <div class=\"steps\">\n                <div class=\"duration-line\"></div>\n                <div class=\"step-list d-flex justify-content-between relative\">\n                    <div class=\"tooltip-with-hover top\">\n                        <span class=\"step-item left\">\n                            <span class=\"step-item-stop step-item-stop-left\">\n                                <span\n                                    class=\"step-item-tooltip-stop\"\n                                    tooltipClass=\"tooltip-mb-1\"\n                                    container=\"body\"\n                                    [ngbTooltip]=\"departureLocation.location.name\"\n                                ></span>\n                            </span>\n                            <em class=\"text-overflow-hide\"></em>\n                        </span>\n                    </div>\n                    <span class=\"fs-14 color-9b absolute one-stop\" *ngIf=\"stops.length > 1\">\n                        <span class=\"text-overflow-hide\">\n                            {{\n                                isSameStation\n                                    ? ('TRAIN.INTERCHANGE_SHORT' | translate)\n                                    : ('TRAIN.TRANSFER_SHORT' | translate)\n                            }}\n                        </span>\n                        <span\n                            *ngIf=\"layoverName\"\n                            class=\"one-stop-tooltip-stop\"\n                            tooltipClass=\"tooltip-mb--3\"\n                            placement=\"top\"\n                            container=\"body\"\n                            [ngbTooltip]=\"\n                                layoverName ? ('FLIGHT_TRAIN.LAYOVER_IN' | translate: { name: layoverName }) : ''\n                            \"\n                        ></span>\n                    </span>\n                    <div class=\"tooltip-with-hover top\">\n                        <span class=\"step-item right\">\n                            <span class=\"step-item-stop step-item-stop-right\">\n                                <span\n                                    placement=\"top\"\n                                    class=\"step-item-tooltip-stop\"\n                                    tooltipClass=\"tooltip-mb-1\"\n                                    container=\"body\"\n                                    [ngbTooltip]=\"arrivalLocation.location.name\"\n                                ></span>\n                            </span>\n                            <em class=\"text-overflow-hide\"></em>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"end-time\">\n            <p>{{ arrivalDate | tzDate: 'shortTime' }}</p>\n        </div>\n    </div>\n    <div class=\"bottom-part\">\n        <div class=\"start-loc text-overflow-hide\" data-test=\"train-depart-destination\">\n            {{ origin }}\n        </div>\n        <div class=\"middle-part\" *ngIf=\"stops.length - 1 === 0\" translate=\"FILTER.TRAIN.DIRECT\"></div>\n        <div class=\"end-loc text-overflow-hide\" data-test=\"train-return-dastinatin\">\n            {{ destination }}\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-service-booking-confirmation',\n    templateUrl: './service-booking-confirmation.component.html',\n    styleUrls: ['./service-booking-confirmation.component.scss'],\n})\nexport class ServiceBookingConfirmationComponent implements OnInit {\n    @Input() hideCancelBtn = false;\n    @Output()\n    cancelSelection: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    submitBooking: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit() {}\n\n    public onCancelSelection(): void {\n        this.cancelSelection.emit();\n    }\n\n    public onSubmitBooking(): void {\n        this.submitBooking.emit();\n    }\n}\n","<div class=\"service-submission flex\">\n    <div class=\"buttons-container flex\">\n        <button\n            data-test=\"result-page-transfers-transfer-cancel-selection\"\n            *ngIf=\"!hideCancelBtn && !platformService.isMobileDevice\"\n            class=\"tz-btn tz-btn-secondary tz-btn--select cancel-selection-btn\"\n            (click)=\"onCancelSelection()\"\n        >\n            {{ 'GENERAL.CANCEL_SELECTION' | translate }}\n        </button>\n        <button\n            data-test=\"result-page-transfers-transfer-confirm-and-continue\"\n            class=\"tz-btn tz-btn-primary tz-btn--select selected\"\n            (click)=\"onSubmitBooking()\"\n        >\n            {{ 'GENERAL.CONFIRM_CONTINUE' | translate }}\n        </button>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ResultService } from '@services/modules/core/dataservices/result.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { Observable, pipe } from 'rxjs';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { HttpRequestType } from '@core/constants/http-request-type';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { IAccommodationsCartData } from '@schemas/modules/accommodations/accommodations-cart-data';\nimport { AccGalleryRes } from '@schemas/modules/accommodations/accommodation-gallery.model';\nimport { HttpContext } from '@angular/common/http';\nimport { SEARCH_RESULT_PROCESSING } from '@services/modules/core/loader.service';\nimport { AccommodationsUtilsService } from '../utils/accommodations.utils';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AccommodationsDataService extends ResultService {\n    public override readonly serviceId = ServiceId.ACC;\n\n    public getAccommodation(id: string): Observable<Accommodation> {\n        const params = {\n            entity: 'rateCheck',\n            id: this.searchDataService.getCombId(),\n            dataId: this.searchDataService.getDataId(this.serviceId),\n            serviceId: this.serviceId,\n            selected_id: id,\n            currency: this.settingsService.getCurrency(),\n            showLoader: true,\n            lang: this.settingsService.langCode,\n            sort_by: 'bestValue',\n        };\n        const httpOptions = {\n            context: new HttpContext().set(SEARCH_RESULT_PROCESSING, true),\n        };\n        return this.apiCallOptions(HttpRequestType.GET, params, httpOptions);\n    }\n\n    public getAccommodationReviews(accommodation: Accommodation) {\n        const params = {\n            entity: 'additionalDetails',\n            id: accommodation.oleryId,\n            lang: this.settingsService.langCode,\n            latitude: accommodation.location?.latitude,\n            longitude: accommodation.location?.longitude,\n            country: accommodation.country,\n        };\n\n        return this.apiCallObs(HttpRequestType.GET, params);\n    }\n\n    public addAccommodationToCart(accommodation: Accommodation): Observable<ICart> {\n        const cartData = this.getSelectedAccommodationsData();\n        const { bookedOptions } = AccommodationsUtilsService.getCartRoomSelections(cartData);\n\n        // form the selected room offers\n        const bookingOptions: any = [];\n        accommodation.rooms.forEach((room: Room) => {\n            room.roomOffers.forEach((offer: RoomOption) => {\n                offer.personCount -= bookedOptions[offer.id] ?? 0;\n                for (let i = 0; i < offer.personCount; i++) {\n                    bookingOptions.push({\n                        selectedRoom: {\n                            hotelId: accommodation.id,\n                            roomId: room.id,\n                            roomType: room.displayName,\n                            selectedOffer: {\n                                id: offer.id,\n                            },\n                            roomOfferId: offer.id,\n                        },\n                    });\n                }\n            });\n        });\n        const options = [\n            {\n                id: accommodation.id,\n                hotelCode: accommodation.giataID,\n                bookingOptions,\n            },\n        ];\n        return this.addToCart(options);\n    }\n\n    public getSelectedAccommodationsData(): IAccommodationsCartData {\n        return this.getServiceCartItems();\n    }\n\n    public getHotelImages(id: string, actionId: string, imageProvider: string): Observable<AccGalleryRes> {\n        const params = {\n            entity: 'accommodations',\n            action: 'searchhotel',\n            actionEntity: 'gallery',\n            id,\n            actionId,\n            imageProvider,\n        };\n        return this.apiCall(HttpRequestType.GET, params);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AccommodationListItem } from '@schemas/modules/accommodations/accommodation.model';\nimport { AccommodationListMetadata } from '@schemas/modules/accommodations/accommodation-list-metadata';\nimport { FilterReferenceItem } from '@schemas/modules/core/filters/service-filter';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { DataId } from '@schemas/modules/core/base-types';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { Observable } from 'rxjs';\nimport { take, tap } from 'rxjs/operators';\nimport { AccommodationsDataService } from '@services/modules/accommodations/dataservices/accommodations.data.service';\nimport { TzServiceTabs } from '../../../../modules/results/tabsUtils/tz-tabs-service';\nimport { IHotelNames } from '@schemas/modules/accommodations/accommodations-response';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AccommodationsService {\n    private accommodationsList: AccommodationListItem[] = [];\n    private nearestAccommodationsList: AccommodationListItem[] = [];\n    private hotelNames: IHotelNames[] = [];\n\n    private accommodationsListMetadata: AccommodationListMetadata | undefined;\n    private nearestAccommodationsListMetadata: AccommodationListMetadata | undefined;\n    private filter: FilterReferenceItem = [];\n    private mapHotel: AccommodationListItem | undefined;\n\n    private currentPageIndex = 0;\n    private currentItemIndexOnTheList = 0;\n\n    private defaultAccListMetaData = {\n        increment: 80,\n        section: 1,\n        destinationName: '',\n        total: 0,\n    };\n    private defaultNearestAccListMetaData = {\n        increment: 80,\n        section: 2,\n        destinationName: '',\n        total: 0,\n    };\n\n    private currentDataIdValue: DataId = '';\n\n    constructor(\n        private searchDataService: SearchDataService,\n        private accommodationDataService: AccommodationsDataService,\n        private tzServiceTabs: TzServiceTabs\n    ) {}\n\n    get currentPage(): number {\n        return this.currentPageIndex;\n    }\n\n    get currentItem(): number {\n        return this.currentItemIndexOnTheList;\n    }\n\n    get currentDataId(): DataId {\n        return this.currentDataIdValue;\n    }\n\n    public static getAccIndexFromTheList(list: AccommodationListItem[] = [], selectedId: string) {\n        return list.map((acc: AccommodationListItem) => acc.giataID).indexOf(selectedId);\n    }\n\n    public getAccommodation(id: string): Observable<Accommodation> {\n        this.tzServiceTabs.toggleForceLoader(ServiceId.ACC, true);\n        const rateCheckObserver = this.accommodationDataService.getAccommodation(id);\n        return rateCheckObserver.pipe(\n            take(1),\n            tap((accRes: Accommodation) => {\n                this.tzServiceTabs.toggleForceLoader(ServiceId.ACC, false);\n                // after recheck, prices and provider might have changed, update the whole list with\n                // new data if any\n                const list = accRes.sectionType === 1 ? this.accommodationsList : this.nearestAccommodationsList;\n                const index = AccommodationsService.getAccIndexFromTheList(list, accRes.giataID);\n                if (index !== -1 && index !== 0) {\n                    list[index] = accRes;\n                } else if (index === 0) {\n                    // list.map((value) => {\n                    //     if (value.recommended) {\n                    //         list[index] = {\n                    //             ...accRes,\n                    //             recommended: value.recommended,\n                    //         };\n                    //     }\n                    // });\n                }\n            })\n        );\n    }\n\n    public hasAvailableData(): boolean {\n        return this.accommodationsList.length !== 0 || this.nearestAccommodationsList.length !== 0;\n    }\n\n    public setAccommodationList(\n        list: AccommodationListItem[],\n        selectedId = '',\n        position: number,\n        hotelNames: IHotelNames[]\n    ): void {\n        this.accommodationsList = list;\n        this.hotelNames = hotelNames;\n        this.currentItemIndexOnTheList = position;\n        this.currentDataIdValue = this.searchDataService.getDataId(ServiceId.ACC);\n    }\n\n    public setNearestAccommodationList(list: AccommodationListItem[], selectedId = '', position: number): void {\n        this.nearestAccommodationsList = list;\n        const index = AccommodationsService.getAccIndexFromTheList(list, selectedId);\n        if (index !== -1) {\n            this.currentItemIndexOnTheList = position;\n        }\n    }\n\n    public updateAccInfoToList(updatedAcc: Accommodation): void {\n        if (!updatedAcc.noRoom) {\n            return;\n        }\n\n        for (const acc of this.accommodationsList) {\n            if (acc.id === updatedAcc.id) {\n                acc.noRoom = updatedAcc.noRoom;\n            }\n        }\n\n        for (const acc of this.nearestAccommodationsList) {\n            if (acc.id === updatedAcc.id) {\n                acc.noRoom = updatedAcc.noRoom;\n            }\n        }\n    }\n\n    public getAccommodationsList(): AccommodationListItem[] {\n        return this.accommodationsList;\n    }\n\n    public getNearestAccommodationsList(): AccommodationListItem[] {\n        return this.nearestAccommodationsList;\n    }\n\n    public getHotelNames(): IHotelNames[] {\n        return this.hotelNames;\n    }\n\n    public setMetadataOfTheAccommodation(page: number): void {\n        this.currentPageIndex = page;\n    }\n\n    public getNearestAccommodationListMetadata(): AccommodationListMetadata {\n        if (this.nearestAccommodationsListMetadata) {\n            return this.nearestAccommodationsListMetadata;\n        }\n        return this.defaultNearestAccListMetaData;\n    }\n\n    public getAccommodationListMetadata(): AccommodationListMetadata {\n        if (this.accommodationsListMetadata) {\n            return this.accommodationsListMetadata;\n        }\n        return this.defaultAccListMetaData;\n    }\n\n    public setAccommodationListMetadata(\n        accommodationsListMetadata: AccommodationListMetadata,\n        nearestAccommodationListMetadata: AccommodationListMetadata\n    ): void {\n        this.accommodationsListMetadata = accommodationsListMetadata;\n        this.nearestAccommodationsListMetadata = nearestAccommodationListMetadata;\n    }\n\n    public getFilter() {\n        return this.filter;\n    }\n\n    public setFilter(filter: FilterReferenceItem = []) {\n        this.filter = filter;\n    }\n\n    public clearMetadataOfTheAccommodation(): void {\n        this.currentPageIndex = 0;\n        this.currentItemIndexOnTheList = 0;\n    }\n\n    public getMapHotel(): AccommodationListItem | undefined {\n        return this.mapHotel;\n    }\n\n    public setMapHotel(hotel: AccommodationListItem | undefined) {\n        this.mapHotel = hotel;\n    }\n}\n","import { AccommodationsResponseSection } from '@schemas/modules/accommodations/accommodations-response';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { Room } from '@schemas/modules/accommodations/room';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { RoomOption } from '@schemas/modules/accommodations/room-option';\nimport { IAccommodationsCartData } from '@schemas/modules/accommodations/accommodations-cart-data';\nimport { ICartSelectedItem } from '@schemas/modules/cart/cart-selected-item';\nimport { ToolsService } from '@core/utils/tools-service';\n\nexport class AccommodationsUtilsService {\n    public static getCount(inCity: boolean, acc: AccommodationsResponseSection[]): number {\n        for (const accData of acc) {\n            if (accData.section === 1) {\n                if (inCity) {\n                    return accData.count;\n                }\n            } else if (!inCity) {\n                return accData.count;\n            }\n        }\n        return 0;\n    }\n\n    public static getMaxRoomSelectionNumber(\n        roomOption: { personCount: number; roomsLeft: number },\n        maxRoomSelectionNumber: number\n    ): number {\n        const value = roomOption.roomsLeft - roomOption.personCount;\n        return Math.min(value, maxRoomSelectionNumber);\n    }\n\n    public static getSelectedRoomQuantity(\n        rooms: Room[],\n        bookingOptions: ICartSelectedItemBookingOption[] = []\n    ): number {\n        let count = 0;\n        for (const room of rooms) {\n            for (const roomOption of room.roomOffers) {\n                count += roomOption.personCount;\n            }\n        }\n\n        for (const option of bookingOptions) {\n            if (CartUtils.isBooked(option.status)) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    public static checkShowTerms(roomOption: RoomOption, isUserLogged: boolean): boolean {\n        return (\n            roomOption.roomCancellation.otherPolicies.length > 0 ||\n            roomOption.roomCancellation.cancellationPolicy === 'Non-refundable' ||\n            (roomOption.roomCancellation.isFree && roomOption.roomCancellation.endDateTime !== '') ||\n            roomOption.payAt === 'Pay on arrival' ||\n            (roomOption.discounts.length > 0 && (roomOption.packaging ? isUserLogged : !roomOption.packaging))\n        );\n    }\n\n    public static getCartRoomSelections(cartData: IAccommodationsCartData): {\n        bookedOptions: { [key: string]: number };\n        validatedOption: { [key: string]: number };\n    } {\n        const bookedOptions: { [key: string]: number } = {};\n        const validatedOption: { [key: string]: number } = {};\n\n        const validCart = cartData?.items?.length;\n        if (!validCart) {\n            return { bookedOptions, validatedOption };\n        }\n\n        const bookingOptions = cartData.items[0].selectedItem.bookingOptions;\n\n        for (const option of bookingOptions) {\n            const roomOfferId = option.selectedRoom?.roomOfferId;\n            if (!roomOfferId) {\n                continue;\n            }\n\n            const isBookedOffer = CartUtils.isBooked(option.status);\n            if (isBookedOffer) {\n                const count = bookedOptions[roomOfferId];\n                bookedOptions[roomOfferId] = count ? count + 1 : 1;\n            }\n\n            if (!isBookedOffer && !CartUtils.isFailed(option.status)) {\n                const count = validatedOption[roomOfferId];\n                validatedOption[roomOfferId] = count ? count + 1 : 1;\n            }\n        }\n\n        return { bookedOptions, validatedOption };\n    }\n\n    public static getCartRooms(selectedItem: ICartSelectedItem): {\n        rooms: Room[];\n        options: { [key: number]: ICartSelectedItemBookingOption[] };\n    } {\n        const selectedRooms = {\n            rooms: [] as Room[],\n            options: [] as { [key: number]: ICartSelectedItemBookingOption[] },\n        };\n        const rooms = selectedItem.data.rooms as Room[];\n        const foundRooms: { [key: string]: number } = {};\n\n        for (const option of selectedItem.bookingOptions) {\n            let optionFound = false;\n\n            for (const room of rooms) {\n                let found = false;\n                const offers: RoomOption[] = [];\n\n                for (const offer of room.roomOffers) {\n                    if (option.selectedRoom?.roomOfferId === offer.id) {\n                        option.selectedRoom.selectedOffer = offer;\n                        option.selectedRoom.roomType = room.displayName;\n                        found = true;\n                        offers.push(offer);\n                    }\n                }\n                if (found) {\n                    let roomIdx = foundRooms[room.id];\n                    if (roomIdx === undefined) {\n                        const copyRoom = ToolsService.deepCopy(room);\n                        copyRoom.roomOffers = [];\n                        selectedRooms.rooms.push(copyRoom);\n                        roomIdx = selectedRooms.rooms.length - 1;\n                        selectedRooms.options[roomIdx] = [];\n                        foundRooms[room.id] = roomIdx;\n                    }\n                    selectedRooms.rooms[roomIdx].roomOffers = selectedRooms.rooms[roomIdx].roomOffers.concat(offers);\n                    selectedRooms.options[roomIdx].push(option);\n                    optionFound = true;\n                }\n            }\n            if (!optionFound && option.selectedRoom) {\n                // room was removed from list because not available anymore\n                // we create a fake room structure\n                let roomIdx = foundRooms[option.selectedRoom.roomId];\n                if (roomIdx === undefined) {\n                    selectedRooms.rooms.push({\n                        amenities: option.selectedRoom.amenities,\n                        facility1: option.selectedRoom.facility1,\n                        facility2: option.selectedRoom.facility2,\n                        taxInfo: option.selectedRoom.taxInfo,\n                        images: option.selectedRoom.images,\n                        broker: option.selectedRoom.selectedOffer.broker,\n                        displayName: option.selectedRoom.roomType,\n                        roomOffers: [] as RoomOption[],\n                    } as Room);\n                    roomIdx = selectedRooms.rooms.length - 1;\n                    selectedRooms.options[roomIdx] = [];\n                    foundRooms[option.selectedRoom.roomId] = roomIdx;\n                }\n                selectedRooms.rooms[roomIdx].roomOffers = selectedRooms.rooms[roomIdx].roomOffers.concat(\n                    option.selectedRoom.selectedOffer\n                );\n                selectedRooms.options[roomIdx].push(option);\n            }\n        }\n\n        return selectedRooms;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ResultService } from '@services/modules/core/dataservices/result.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { Observable, of } from 'rxjs';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { CarRental, RentalTerm } from '@schemas/modules/car-rentals/car-rental';\nimport { HttpRequestType } from '@core/constants/http-request-type';\nimport { CarRentalPackage } from '@schemas/modules/car-rentals/car-rental-package';\nimport { map, tap } from 'rxjs/operators';\nimport { CarRentalsResponse } from '@schemas/modules/car-rentals/car-rentals-response';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CarRentalDataService extends ResultService {\n    public override readonly serviceId = ServiceId.CAR_RENTAL;\n\n    private rentalTermsCache: {\n        en: {\n            [key: string]: RentalTerm[];\n        };\n        fr: {\n            [key: string]: RentalTerm[];\n        };\n    } = {\n        en: {},\n        fr: {},\n    };\n\n    private static getRentalCarReq(carRentals: CarRental[]) {\n        const carRentalRequest = carRentals.map((carRental: CarRental) => ({\n            id: carRental.id,\n            bookingOptions: [\n                {\n                    rentalPackageInfo: {\n                        name: carRental.currentPackage.name,\n                        packageKey: carRental.currentPackage.packageKey,\n                        extrasSelected: {},\n                        //extrasText: $scope.selectedRental.packageInfo.extrasText,\n                    },\n                },\n            ],\n        }));\n\n        return carRentalRequest;\n    }\n\n    public addCarRentalToCart(selectedCarRentals: CarRental[] = []): Observable<ICart> {\n        const carRentalCart = CarRentalDataService.getRentalCarReq(selectedCarRentals);\n        return this.addToCart(carRentalCart);\n    }\n\n    public getCarRentalTerms(carRental: CarRental, selectedPackage: CarRentalPackage): Observable<RentalTerm[]> {\n        const key = selectedPackage.rateQualifier + selectedPackage.productID;\n        const lang = this.settingsService.langCode;\n        if ((lang === 'en' || lang === 'fr') && this.rentalTermsCache[lang] && this.rentalTermsCache[lang][key]) {\n            return of(this.rentalTermsCache[lang][key]);\n        }\n\n        const params = {\n            entity: 'getRentalTerms',\n            lang,\n            rateQualifier: selectedPackage.rateQualifier,\n            productID: selectedPackage.productID,\n            fromLocationId: carRental.pickupLocation.locationId,\n            toLocationId: carRental.dropOffLocation.locationId,\n            closeLoader: true,\n        };\n        this.showLoader(true, 'LOADER_MESSAGES.TERMS_RENTAL');\n        return this.apiCall(HttpRequestType.POST, params, params).pipe(\n            tap((terms) => {\n                if (lang === 'en' || lang === 'fr') {\n                    this.rentalTermsCache[lang][key] = terms;\n                }\n            })\n        );\n    }\n\n    public getCarRentalPackages(carRental: CarRental): Observable<CarRentalPackage[]> {\n        const params = {\n            packageName: carRental.currentPackage.packageKey,\n            selected_id: carRental.id,\n        };\n        return this.searchServiceData(this.serviceId, params, false).pipe(\n            map((response: CarRentalsResponse) => response.rentals.data[0].packagesAvailable)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CarRental, RentalTerm } from '@schemas/modules/car-rentals/car-rental';\nimport { CarRentalPackage } from '@schemas/modules/car-rentals/car-rental-package';\nimport { DialogService } from '@services/dialog.service';\nimport { Observable } from 'rxjs';\n\nimport { CarRentalDataService } from '../dataservices/car-rental.data.service';\n// eslint-disable-next-line max-len\nimport { CarRentalTermsDialogComponent } from 'src/app/modules/results/car-rentals/components/car-rental-terms.dialog/car-rental-terms.dialog.component';\n// eslint-disable-next-line max-len\nimport { CarRentalLocationDialogComponent } from 'src/app/modules/results/car-rentals/components/car-rental-location-dialog/car-rental-location-dialog.component';\n// eslint-disable-next-line max-len\nimport { CarRentalPackageDialogComponent } from 'src/app/modules/results/car-rentals/components/car-rental-package-dialog/car-rental-package-dialog.component';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CarRentalService {\n    private termsModelRef!: MatDialogRef<CarRentalTermsDialogComponent>;\n    constructor(\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private carRentalService: CarRentalDataService\n    ) {}\n\n    public openPopupModel(rentalModel: { carRental: CarRental; modelType: string }): void {\n        const carRental = rentalModel.carRental;\n        const popupConf = {\n            width: '470px',\n            maxHeight: '90vh',\n            panelClass: 'tz-rental-dialog',\n            data: {} as any,\n        };\n        const selectedPackage = carRental?.packagesAvailable.find(\n            (availPackage) => availPackage.name === carRental?.currentPackage.name\n        );\n\n        switch (rentalModel.modelType) {\n            case 'terms':\n                if (carRental && selectedPackage) {\n                    this.opneRentalTerms(carRental, selectedPackage);\n                }\n                break;\n            case 'location':\n                this.dialogService.openServiceDialog(CarRentalLocationDialogComponent, {\n                    ...popupConf,\n                    data: { carRental },\n                });\n                break;\n            case 'package':\n                if (selectedPackage) {\n                    this.dialogService.openServiceDialog(CarRentalPackageDialogComponent, {\n                        ...popupConf,\n                        data: { selectedPackage },\n                    });\n                }\n                break;\n        }\n    }\n\n    private opneRentalTerms(carRental: CarRental, selectedPackage: CarRentalPackage): void {\n        const key = selectedPackage.rateQualifier + selectedPackage.productID;\n        const openTermsModel = (carRentalTrems: RentalTerm[]) => {\n            if (!carRentalTrems || carRentalTrems.length === 0) {\n                this.dialogService.openSnackBar({\n                    message: this.translateService.instant('NOTIFS.rentalNoTandcs'),\n                });\n                return;\n            }\n\n            if (this.termsModelRef && this.termsModelRef.getState() === 0) {\n                console.log('Skipped multiple click');\n                return;\n            }\n\n            this.termsModelRef = this.dialogService.openServiceDialog(CarRentalTermsDialogComponent, {\n                width: undefined,\n                maxHeight: '90vh',\n                panelClass: 'tz-terms-dialog-large',\n                maxWidth: '940px',\n                data: { carRentalTrems },\n            });\n        };\n\n        this.carRentalService.getCarRentalTerms(carRental, selectedPackage).subscribe(\n            (terms: RentalTerm[]) => {\n                openTermsModel(terms);\n            },\n            (err: any) => {\n                console.log('Terms error: ', err);\n                openTermsModel([]);\n            }\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { bestValTypeMapping, BestValType } from '@schemas/modules/search/search';\nimport { SearchUtilsService } from '@services/modules/search/utils/search.utils';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n// eslint-disable-next-line max-len\n@Injectable({\n    providedIn: 'root',\n})\nexport class ResultsTools {\n    public static getBestValType(bestValInfo: bestValTypeMapping, service: ServiceId): BestValType | undefined {\n        if (!bestValInfo) {\n            return undefined;\n        }\n\n        if (service !== ServiceId.INVALID) {\n            let sort = SearchUtilsService.getSortingValue(service);\n            if (!sort && (service === ServiceId.CAR_RENTAL || service === ServiceId.TRANSFER)) {\n                sort = 'cheapest';\n            }\n            switch (sort) {\n                case 'quickest':\n                    if (bestValInfo[BestValType.QUICKEST]) {\n                        return BestValType.QUICKEST;\n                    }\n                    break;\n                case 'cheapest':\n                    if (bestValInfo[BestValType.CHEAPEST]) {\n                        return BestValType.CHEAPEST;\n                    }\n                    break;\n                default:\n                    return this.getDefaultBestValType(bestValInfo);\n            }\n        }\n\n        return this.getDefaultBestValType(bestValInfo);\n    }\n\n    private static getDefaultBestValType(bestValInfo: bestValTypeMapping): BestValType | undefined {\n        if (bestValInfo[BestValType.RECOMMENDED]) {\n            return BestValType.RECOMMENDED;\n        }\n\n        if (bestValInfo[BestValType.CHEAPEST]) {\n            return BestValType.CHEAPEST;\n        }\n\n        if (bestValInfo[BestValType.QUICKEST]) {\n            return BestValType.QUICKEST;\n        }\n\n        return undefined;\n    }\n}\n"],"names":["EventEmitter","ToolsService","AccommodationGalleryComponent","MobAccommodationGalleryComponent","MobAccommodationImagesCaroselComponent","i0","ctx_r5","img_r4","ctx_r3","ctx_r15","ctx_r19","ctx_r22","image_r10","ctx_r9","TOPIMGCOUNT","MOBTOPIMGCOUNT","AccommodationImageComponent","constructor","dialogService","accommodationsService","changeDetectorRef","platformService","modalService","isMobileDevice","maxImgCount","ngOnInit","fetchImages","imgCallback","data","testedImagesCount","status","selectedImgIds","push","id","selectedImgs","url","length","formTopImages","images","testCount","testImages","openGallery","selectedIdx","createDetailsPage","name","hotelName","imageProvider","title","then","modal","showRooms","emit","hasOwnProperty","openMobImageSlider","imageId","galleryConf","height","width","maxWidth","panelClass","giataId","code","openAccommodationDialog","createMainModal","count","sort","a","b","ordinal","img","indexOf","Number","hotelTopImages","imagesCount","i","loading","initImages","deepCopy","slice","detectChanges","galleyRes$","getHotelImages","subscribe","accGalleryRes","gallery","_a","forEach","g","idx","err","console","log","selectors","inputs","outputs","decls","vars","consts","template","_r1","AccommodationsUtilsService","ServiceId","ctx_r8","MobAccommodationDetailsRoomOfferComponent","pickerCtrl","translateService","cartService","checkShowTerms","roomOffer","isUserLogged","ngOnChanges","changes","personCount","roomsLeft","maxValue","getMaxRoomSelectionNumber","maxRoomSelectionNumber","initData","roomPrice","prices","Math","min","_b","roomCapacity","capacity","Array","onSelectRoomOffer","openRoomPicker","roomCountChanged","getRoomPrice","price","listPrice","onOpenTermsModal","openTermsModal","options","text","value","picker","create","columns","buttons","instant","handler","parseInt","rooms","cssClass","present","visitorsEmptyArr","numberOfNights","getCartData","ACC","items","selectedItem","isSelected","stayNumber","actionsButtons","removeOption","features","MobAccommodationAmenitiesComponent","ctx_r1","MobSelectedAccommodationDetailsComponent","accommodationsDataService","showAmenities","accommodationCartData","amenityGroups","showPropertyPolicies","importantInformation","accommodationReviews$","getAccommodationReviews","selectedRoomsData","selectedRooms","cart","bookingSummary","selectedHotel","find","service","dataType","ctx","FlightLuggageOptionTypes","bag_r1","FlightListItemDescLuggageComponent","firstChange","orderLuggage","luggage","orderingBags","cabin","map","option","travelerTypes","includes","hide","icon","style","checkIn","luggageBlockCount","optionItem","type","PERSONALITEM","CABIN","CHECKIN","changeBlockCount","bags","luggageBlockCountChange","componentType","CartStatus","PaymentCaptureMode","TzSelectedService","CartUtils","MobFlightDetailsComponent","PageUtils","PagesUrls","ctx_r7","ctx_r13","ctx_r16","ctx_r17","ctx_r20","ctx_r21","ctx_r4","ctx_r24","ctx_r23","ctx_r26","ctx_r28","SelectedFlightsComponent","flightService","router","NORMAL_MODE","formSelectedFlight","initializeActionBarButtons","addSpaceInSelectedFlightsSummaryText","isBasketPage","checkIsBasketPage","ngAfterViewInit","handleExtraParams","toggleShowDetail","selectedFlightAccordionPanel","undefined","currentValue","getCurrentSelectedPackageIndex","onRemoveSelected","removedItem","selectedFlightOptionId","onDebugDialogOpened","onChangeOptions","selectedFlightAccordion","showPackages","showingPackage","changeOptions","selectedFlight","onChangeTickets","changeTickets","onCancelFLightPackageChange","selectedCartItem","onSubmitFlightPackageChange","flight","packages","selectedPackageIndex","newFlightSelected","onSelectPackage","index","confirmable","onCancelTicket","cancel","onOpenTransportTerms","showFlightTrems","onOpenCheckinAllowance","showFlightCheckinAllowance","checkinAllowance","onShowFlightDetails","flightsPackages","totalPassengers","state","history","extra","extraAction","flightCartData","bookingOptions","optionId","travellersData","getTravellersData","total","invalidCartItem","some","STATUS_REJECTED","STATUS_PRICE_CHANGED","findIndex","flightPackage","fromBookings","serviceList","paymentCaptureMode","hasBooked","hasUpgrades","hasBookingStarted","hasUnavailable","splitSummaryText","summaryTitle","split","is","BASKET","viewQuery"],"sourceRoot":"webpack:///"}