{"version":3,"file":"main.js","mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;ACrsources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/config/translation.config.ts","./src/app/modules/core/constants/call-types.const.ts","./src/app/modules/core/constants/cart-status.ts","./src/app/modules/core/constants/comb-service-ids.ts","./src/app/modules/core/constants/css-mapping.ts","./src/app/modules/core/constants/default-sort.ts","./src/app/modules/core/constants/general-settings.ts","./src/app/modules/core/constants/http-request-type.ts","./src/app/modules/core/constants/keyboard-key-types.const.ts","./src/app/modules/core/constants/languages.const.ts","./src/app/modules/core/constants/listener-id.const.ts","./src/app/modules/core/constants/modal.ts","./src/app/modules/core/constants/pages-urls.ts","./src/app/modules/core/constants/search-events.ts","./src/app/modules/core/constants/service-id.const.ts","./src/app/modules/core/constants/service-ids-name.const.ts","./src/app/modules/core/constants/state-from.const.ts","./src/app/modules/core/constants/stripe.const.ts","./src/app/modules/core/constants/toggle-content-pages.ts","./src/app/modules/core/constants/traveller-type.ts","./src/app/modules/core/constants/trip.ts","./src/app/modules/core/constants/validation-patterns.const.ts","./src/app/modules/core/initialize/app.initialize.ts","./src/app/modules/core/interceptors/check-results/check-results.interceptor.ts","./src/app/modules/core/interceptors/check-results/http-cancel.services.ts","./src/app/modules/core/interceptors/error-handler/error-handler.interceptor.ts","./src/app/modules/core/interceptors/index.ts","./src/app/modules/core/interceptors/xsrf/x-xsrf-token.interceptor.ts","./src/app/modules/core/resolvers/cart-item-recheck.resolver.ts","./src/app/modules/core/resolvers/device-id-force.resolver.ts","./src/app/modules/core/resolvers/device-id.resolver.ts","./src/app/modules/core/resolvers/reset-password-token.resolver.ts","./src/app/modules/core/resolvers/route-id.resolver.ts","./src/app/modules/core/resolvers/search-page.resolver.ts","./src/app/modules/core/resolvers/trip-id.resolver.ts","./src/app/modules/core/router-gaurds/login-user.guard.ts","./src/app/modules/core/schemas/modules/core/storage-keys.ts","./src/app/modules/core/schemas/modules/flights/flight-luggage.model.ts","./src/app/modules/core/schemas/modules/search/search.ts","./src/app/modules/core/utils/dates-utils.ts","./src/app/modules/core/utils/locales/en-us.ts","./src/app/modules/core/utils/locales/en.ts","./src/app/modules/core/utils/locales/fr.ts","./src/app/modules/core/utils/page-utils.ts","./src/app/modules/core/utils/storage-manager.util.ts","./src/app/modules/core/utils/tools-service.ts","./src/app/modules/core/utils/tz-passenger.util.ts","./src/app/modules/layout/footer/footer.component.ts","./src/app/modules/layout/footer/footer.component.html","./src/app/modules/layout/header/header.component.ts","./src/app/modules/layout/header/header.component.html","./src/app/modules/layout/layout.module.ts","./src/app/modules/layout/main-header/main-header.component.ts","./src/app/modules/layout/main-header/main-header.component.html","./src/app/modules/layout/main-mob-menu/main-mob-menu.component.ts","./src/app/modules/layout/main-mob-menu/main-mob-menu.component.html","./src/app/modules/layout/main/main.component.ts","./src/app/modules/layout/main/main.component.html","./src/app/modules/layout/mob-footer/mob-footer.component.ts","./src/app/modules/layout/mob-footer/mob-footer.component.html","./src/app/modules/layout/mob-header/mob-header.component.ts","./src/app/modules/layout/mob-header/mob-header.component.html","./src/app/modules/layout/mob-navbar/mob-navbar.component.ts","./src/app/modules/layout/mob-navbar/mob-navbar.component.html","./src/app/modules/layout/profile-mob-menu/profile-mob-menu.component.ts","./src/app/modules/layout/profile-mob-menu/profile-mob-menu.component.html","./src/app/modules/mob-landing-page/mob-landing-page.component.ts","./src/app/modules/mob-landing-page/mob-landing-page.component.html","./src/app/modules/mob-landing-page/mob-landing-page.module.ts","./src/app/modules/results/service-route.map.ts","./src/app/modules/results/transport/flights/components/flight-terms-dialog/flight-terms-dialog.component.ts","./src/app/modules/results/transport/flights/components/flight-terms-dialog/flight-terms-dialog.component.html","./src/app/modules/results/transport/flights/components/mob-flight-terms-conditions-modal/mob-flight-terms-conditions-modal.component.ts","./src/app/modules/results/transport/flights/components/mob-flight-terms-conditions-modal/mob-flight-terms-conditions-modal.component.html","./src/app/modules/shared/components/billing-info/billing-info.component.ts","./src/app/modules/shared/components/billing-info/billing-info.component.html","./src/app/modules/shared/components/block-separator/block-separator.component.ts","./src/app/modules/shared/components/block-separator/block-separator.component.html","./src/app/modules/shared/components/cart-item-actions-bar/cart-item-actions-bar.component.ts","./src/app/modules/shared/components/cart-item-actions-bar/cart-item-actions-bar.component.html","./src/app/modules/shared/components/cart-summary/cart-summary.component.ts","./src/app/modules/shared/components/cart-summary/cart-summary.component.html","./src/app/modules/shared/components/checkbox/checkbox.component.ts","./src/app/modules/shared/components/checkbox/checkbox.component.html","./src/app/modules/shared/components/cookie/cookie.component.ts","./src/app/modules/shared/components/cookie/cookie.component.html","./src/app/modules/shared/components/core/loader/loader.component.ts","./src/app/modules/shared/components/core/loader/loader.component.html","./src/app/modules/shared/components/core/loading-icon/loading-icon.component.ts","./src/app/modules/shared/components/core/loading-icon/loading-icon.component.html","./src/app/modules/shared/components/counter/counter.component.ts","./src/app/modules/shared/components/counter/counter.component.html","./src/app/modules/shared/components/debug-cart-item/debug-cart-item.component.ts","./src/app/modules/shared/components/debug-cart-item/debug-cart-item.component.html","./src/app/modules/shared/components/dialogs/app-dialog/app-dialog.component.ts","./src/app/modules/shared/components/dialogs/app-dialog/app-dialog.component.html","./src/app/modules/shared/components/dialogs/main-dialog/main-dialog.component.ts","./src/app/modules/shared/components/dialogs/main-dialog/main-dialog.component.html","./src/app/modules/shared/components/dialogs/stick-footer-dialog/stick-footer-dialog.component.ts","./src/app/modules/shared/components/dialogs/stick-footer-dialog/stick-footer-dialog.component.html","./src/app/modules/shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component.ts","./src/app/modules/shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component.html","./src/app/modules/shared/components/dialogs/tz-dialog/tz-dialog.component.ts","./src/app/modules/shared/components/dialogs/tz-dialog/tz-dialog.component.html","./src/app/modules/shared/components/dialogs/tz-snack-bar-dialog/tz-snack-bar-dialog.component.ts","./src/app/modules/shared/components/dialogs/tz-snack-bar-dialog/tz-snack-bar-dialog.component.html","./src/app/modules/shared/components/dialogs/tz-snack-bar/tz-snack-bar.component.ts","./src/app/modules/shared/components/dialogs/tz-snack-bar/tz-snack-bar.component.html","./src/app/modules/shared/components/dropdowns/dropdown/dropdown.component.ts","./src/app/modules/shared/components/dropdowns/dropdown/dropdown.component.html","./src/app/modules/shared/components/footer-pages/footer-page-contact-form/footer-page-contact-form.component.ts","./src/app/modules/shared/components/footer-pages/footer-page-contact-form/footer-page-contact-form.component.html","./src/app/modules/shared/components/footer-pages/footer-pages-header/footer-pages-header.component.ts","./src/app/modules/shared/components/footer-pages/footer-pages-header/footer-pages-header.component.html","./src/app/modules/shared/components/landing-page/form-error-messages/form-error-messages.component.ts","./src/app/modules/shared/components/landing-page/form-error-messages/form-error-messages.component.html","./src/app/modules/shared/components/landing-page/sign-up-form/sign-up-form.component.ts","./src/app/modules/shared/components/landing-page/sign-up-form/sign-up-form.component.html","./src/app/modules/shared/components/mob-accommodation-guest-rate/mob-accommodation-guest-rate.component.ts","./src/app/modules/shared/components/mob-accommodation-guest-rate/mob-accommodation-guest-rate.component.html","./src/app/modules/shared/components/mob-cookie-modal/mob-cookie-modal.component.ts","./src/app/modules/shared/components/mob-cookie-modal/mob-cookie-modal.component.html","./src/app/modules/shared/components/mob-cookie/mob-cookie.component.ts","./src/app/modules/shared/components/mob-dropdown/mob-dropdown.component.ts","./src/app/modules/shared/components/mob-dropdown/mob-dropdown.component.html","./src/app/modules/shared/components/mob-input/mob-input.component.ts","./src/app/modules/shared/components/mob-input/mob-input.component.html","./src/app/modules/shared/components/mob-price-changed-block/mob-price-changed-block.component.ts","./src/app/modules/shared/components/mob-price-changed-block/mob-price-changed-block.component.html","./src/app/modules/shared/components/mobile/mob-auth/mob-auth.component.ts","./src/app/modules/shared/components/mobile/mob-auth/mob-auth.component.html","./src/app/modules/shared/components/mobile/mob-button/mob-button.component.ts","./src/app/modules/shared/components/mobile/mob-button/mob-button.component.html","./src/app/modules/shared/components/mobile/mob-cart-summary-button/mob-cart-summary-button.component.ts","./src/app/modules/shared/components/mobile/mob-cart-summary-button/mob-cart-summary-button.component.html","./src/app/modules/shared/components/mobile/mob-forgot-password/mob-forgot-password.component.ts","./src/app/modules/shared/components/mobile/mob-forgot-password/mob-forgot-password.component.html","./src/app/modules/shared/components/mobile/mob-modal-page-link/mob-modal-page-link.component.ts","./src/app/modules/shared/components/mobile/mob-modal-page-link/mob-modal-page-link.component.html","./src/app/modules/shared/components/mobile/mob-picker/mob-picker.component.ts","./src/app/modules/shared/components/mobile/mob-picker/mob-picker.component.html","./src/app/modules/shared/components/mobile/mob-reset-password/mob-reset-password.component.ts","./src/app/modules/shared/components/mobile/mob-reset-password/mob-reset-password.component.html","./src/app/modules/shared/components/mobile/mob-sign-in/mob-sign-in.component.ts","./src/app/modules/shared/components/mobile/mob-sign-in/mob-sign-in.component.html","./src/app/modules/shared/components/mobile/mob-tab/mob-service-tab.component.ts","./src/app/modules/shared/components/mobile/mob-tab/mob-service-tab.component.html","./src/app/modules/shared/components/modals/mob-main-details-modal/mob-main-details-modal.component.ts","./src/app/modules/shared/components/modals/mob-main-details-modal/mob-main-details-modal.component.html","./src/app/modules/shared/components/modals/mob-main-modal-header/mob-main-modal-header.component.ts","./src/app/modules/shared/components/modals/mob-main-modal-header/mob-main-modal-header.component.html","./src/app/modules/shared/components/modals/mob-main-modal/mob-main-modal.component.ts","./src/app/modules/shared/components/modals/mob-main-modal/mob-main-modal.component.html","./src/app/modules/shared/components/modals/mob-picker-modal/mob-picker-modal.component.ts","./src/app/modules/shared/components/modals/mob-picker-modal/mob-picker-modal.component.html","./src/app/modules/shared/components/payment-address/payment-address.component.ts","./src/app/modules/shared/components/payment-address/payment-address.component.html","./src/app/modules/shared/components/price-range-filter/price-range-filter.component.ts","./src/app/modules/shared/components/price-range-filter/price-range-filter.component.html","./src/app/modules/shared/components/profile-info/profile-info.component.ts","./src/app/modules/shared/components/profile-info/profile-info.component.html","./src/app/modules/shared/components/recommended-list-tem-description/recommended-list-tem-description.component.ts","./src/app/modules/shared/components/recommended-list-tem-description/recommended-list-tem-description.component.html","./src/app/modules/shared/components/results-top-info-block/results-top-info-block.component.ts","./src/app/modules/shared/components/results-top-info-block/results-top-info-block.component.html","./src/app/modules/shared/components/search-hotel-name/search-hotel-name.component.ts","./src/app/modules/shared/components/search-hotel-name/search-hotel-name.component.html","./src/app/modules/shared/components/sign-in/sign-in.component.ts","./src/app/modules/shared/components/sign-in/sign-in.component.html","./src/app/modules/shared/components/stars/stars.component.ts","./src/app/modules/shared/components/stars/stars.component.html","./src/app/modules/shared/components/tz-country-field/tz-country-field.component.ts","./src/app/modules/shared/components/tz-country-field/tz-country-field.component.html","./src/app/modules/shared/components/tz-form-error/tz-form-error.component.ts","./src/app/modules/shared/components/tz-form-error/tz-form-error.component.html","./src/app/modules/shared/components/tz-icon/tz-icon.component.ts","./src/app/modules/shared/components/tz-icon/tz-icon.component.html","./src/app/modules/shared/components/tz-icon/tz-icons.ts","./src/app/modules/shared/components/tz-image-slider/tz-image-slider.component.ts","./src/app/modules/shared/components/tz-image-slider/tz-image-slider.component.html","./src/app/modules/shared/components/tz-phone/tz-phone.component.ts","./src/app/modules/shared/components/tz-phone/tz-phone.component.html","./src/app/modules/shared/components/tz-svg-icon/tz-svg-icon.component.ts","./src/app/modules/shared/components/tz-svg-icon/tz-svg-icon.component.html","./src/app/modules/shared/components/tz-traveller/tz-traveller.component.ts","./src/app/modules/shared/components/tz-traveller/tz-traveller.component.html","./src/app/modules/shared/directives/hotel-image.directive.ts","./src/app/modules/shared/directives/max-limit.directive.ts","./src/app/modules/shared/directives/on-focus.directive.ts","./src/app/modules/shared/directives/on-swipe.directive.ts","./src/app/modules/shared/pipes/date-range.pipe.ts","./src/app/modules/shared/pipes/distance.pipe.ts","./src/app/modules/shared/pipes/filter-array.pipe.ts","./src/app/modules/shared/pipes/layover-description.pipe.ts","./src/app/modules/shared/pipes/rating-to-text.pipe.ts","./src/app/modules/shared/pipes/replace.pipe.ts","./src/app/modules/shared/pipes/safe-html.pipe.ts","./src/app/modules/shared/pipes/sort-array.pipe.ts","./src/app/modules/shared/pipes/sort-summary.pipe.ts","./src/app/modules/shared/pipes/tz-currency.pipe.ts","./src/app/modules/shared/pipes/tz-date.pipe.ts","./src/app/modules/shared/schemas/dialog.model.ts","./src/app/modules/shared/shared.module.ts","./src/app/services/config.service.ts","./src/app/services/device.service.ts","./src/app/services/dialog.service.ts","./src/app/services/landing-page.service.ts","./src/app/services/modal.service.ts","./src/app/services/modules/cart/dataservices/cart.data.service.ts","./src/app/services/modules/cart/services/cart-remove-service.ts","./src/app/services/modules/cart/services/cart-routing.service.ts","./src/app/services/modules/cart/services/cart.service.ts","./src/app/services/modules/cart/utils/cart.utils.ts","./src/app/services/modules/checkout/utils/transport-luggages.utils.ts","./src/app/services/modules/core/dataservices/BaseService.ts","./src/app/services/modules/core/dataservices/app-config-data.service.ts","./src/app/services/modules/core/dataservices/pre-search.service.ts","./src/app/services/modules/core/dataservices/result.service.ts","./src/app/services/modules/core/general-service.ts","./src/app/services/modules/core/listeners-service.ts","./src/app/services/modules/core/loader.service.ts","./src/app/services/modules/core/poller.service.ts","./src/app/services/modules/core/scroll-service.ts","./src/app/services/modules/inactivity/inactivity-handler.ts","./src/app/services/modules/meta/search-metadata.service.ts","./src/app/services/modules/nightChoice/night-choice.service.ts","./src/app/services/modules/results/services/results.shared.services.ts","./src/app/services/modules/search/utils/dates.service.ts","./src/app/services/modules/search/utils/search.utils.ts","./src/app/services/modules/service-tab/tab.utils.ts","./src/app/services/modules/services/recent-search.service.ts","./src/app/services/modules/transfers/utils/TransferUtils.ts","./src/app/services/modules/transport/flights/flights.service.ts","./src/app/services/modules/transport/flights/services/flight.utils.ts","./src/app/services/modules/transport/trains/trains.service.ts","./src/app/services/modules/user/dataservices/user.data.service.ts","./src/app/services/modules/user/services/user.service.ts","./src/app/services/platform.service.ts","./src/app/services/searchEngine/services/acc-search.service.ts","./src/app/services/searchEngine/services/api-access.service.ts","./src/app/services/searchEngine/services/check-consistent-service.ts","./src/app/services/searchEngine/services/check-dep.service.ts","./src/app/services/searchEngine/services/engine-rule-service.ts","./src/app/services/searchEngine/services/rental-search-service.ts","./src/app/services/searchEngine/services/search-data.service.ts","./src/app/services/searchEngine/services/search-error-service.ts","./src/app/services/searchEngine/services/search-helpers.ts","./src/app/services/searchEngine/services/tab-routing.service.ts","./src/app/services/searchEngine/services/transfer-search-service.ts","./src/app/services/searchEngine/services/trip-planner.service.ts","./src/app/services/searchEngine/services/user-search-service.ts","./src/app/services/services/currency-service.ts","./src/app/services/services/flight-train-search.service.ts","./src/app/services/services/locale.provider.ts","./src/app/services/services/locale.service.ts","./src/app/services/services/log-in.service.ts","./src/app/services/services/settings-service.ts","./src/app/services/services/tzTraveller.service.ts","./src/app/services/stripe.service.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm|lazy|/^\\.\\/.*\\.entry\\.js$/|include: /\\.entry\\.js$/|exclude: /\\.system\\.entry\\.js$/|groupOptions: {}|namespace object","/opt/atlassian/pipelines/agent/build/trazler-app/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    NavigationExtras,\n    NavigationStart,\n    Router,\n    RouterModule,\n    RouterStateSnapshot,\n    Routes,\n    UrlSegment,\n} from '@angular/router';\nimport { DeviceIdResolver } from '@core/resolvers/device-id.resolver';\nimport { ReCheckCartItem } from '@core/resolvers/cart-item-recheck.resolver';\nimport { SearchPageResolver } from '@core/resolvers/search-page.resolver';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpCancelService } from '@core/interceptors/check-results/http-cancel.services';\nimport { PasswordTokenValidation } from '@core/resolvers/reset-password-token.resolver';\nimport { LoginUserGuard } from '@core/router-gaurds/login-user.guard';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { TripIdResolver } from '@core/resolvers/trip-id.resolver';\nimport { RouteIdResolver } from '@core/resolvers/route-id.resolver';\n\nenum MOVE_TYPE {\n    POP = 'popstate', // user press back or forward browser button\n    APP = 'imperative', // app navigation\n    ALL = '', // match both types of navigation (browser buttons or app)\n}\n\nenum ALLOWED_MOVE {\n    ALLOWED = 1,\n    DISALLOW = 0,\n    REQUEST_CONFIRMATION = 2,\n}\n\ninterface ITransition {\n    to: string;\n    moveType: MOVE_TYPE;\n    //checkFunc let you define a function which will handle the requested move.\n    // It returns ALLOWED_MOVE\n    checkFunc?: (navTrigger?: string, from?: string, to?: string) => ALLOWED_MOVE;\n    //confirmNav: Let you request user if he confirms that he want to execute\n    // current navigation action. If not confirmed we stay on current position\n    // otherwise the move is executed\n    confirmNav?: (navTrigger?: string, from?: string, to?: string) => boolean;\n}\n\nconst allowedLanguage: { [key: string]: boolean } = { 'fr-fr': true, 'en-gb': true };\n\nconst routes: Routes = [\n    {\n        //used by renderer, do not use for other usage and do not modify\n        path: 'trip',\n        loadChildren: () => import('./modules/results/results.module').then((m) => m.ResultsModule),\n        resolve: {\n            deviceId: TripIdResolver,\n        },\n    },\n    /*{\n        path: 'route',\n        loadChildren: () => import('./modules/results/results.module').then((m) => m.ResultsModule),\n        resolve: {\n            deviceId: RouteIdResolver,\n        },\n    },*/\n    {\n        path: 'customer',\n        loadChildren: () => import('./modules/customer/customer.module').then((m) => m.CustomerModule),\n        resolve: { deviceId: DeviceIdResolver },\n        canActivate: [LoginUserGuard],\n    },\n    {\n        path: 'forgot-password',\n        loadChildren: () =>\n            import('./modules/forgot-password/forgot-password.module').then((m) => m.ForgotPasswordModule),\n    },\n    {\n        path: 'get-started',\n        loadChildren: () =>\n            import('./modules/mob-get-started-page/mob-get-started-page.module').then(\n                (m) => m.MobGetStartedPageComponentModule\n            ),\n    },\n    {\n        path: 'reset-password/:token',\n        loadChildren: () => import('./modules/reset-password/reset-password.module').then((m) => m.ResetPasswordModule),\n        resolve: {\n            customerMail: PasswordTokenValidation,\n        },\n    },\n    {\n        path: 'search',\n        loadChildren: () => import('./modules/home/home.module').then((m) => m.HomeModule),\n        resolve: {\n            deviceId: SearchPageResolver,\n        },\n    },\n    {\n        path: 'checkout',\n        loadChildren: () => import('./modules/checkout/checkout.module').then((m) => m.CheckoutModule),\n        canActivate: [CartService],\n        resolve: {\n            cartData: ReCheckCartItem,\n            deviceId: DeviceIdResolver,\n        },\n    },\n    {\n        path: 'checkout-processed/:status/:bookingId',\n        loadChildren: () =>\n            import('./modules/checkout-processed/checkout-processed.module').then((m) => m.CheckoutProcessedModule),\n    },\n    {\n        path: 'checkout-processed/:status',\n        loadChildren: () =>\n            import('./modules/checkout-processed/checkout-processed.module').then((m) => m.CheckoutProcessedModule),\n    },\n    {\n        path: 'recover-booking/:combId/:deviceId/:xsfrToken',\n        loadChildren: () =>\n            import('./modules/recover-booking/recover-booking.module').then((m) => m.RecoverBookingModule),\n    },\n    {\n        path: 'verify-mail/:token',\n        loadChildren: () => import('./modules/verify-mail/verify-mail.module').then((m) => m.VerifyMailModule),\n    },\n    {\n        path: 'bookings',\n        loadChildren: () => import('./modules/my-trips/my-trips.module').then((m) => m.MyTripsModule),\n        canActivate: [LoginUserGuard],\n    },\n    {\n        path: 'unauthorized-bookings',\n        loadChildren: () =>\n            import('./modules/mob-unauthorized-bookings/mob-unauthorized-bookings.module').then(\n                (m) => m.MobUnauthorizedBookingsModule\n            ),\n    },\n    {\n        path: 'about',\n        loadChildren: () => import('./modules/footer-pages/footer-pages.module').then((m) => m.FooterPagesModule),\n    },\n    {\n        path: 'mob-test',\n        loadChildren: () => import('./modules/mob-test/mob-test.module').then((m) => m.MobTestModule),\n    },\n    {\n        //used for rendering\n        matcher: (segments: UrlSegment[]) =>\n            segments.length >= 1 && allowedLanguage[segments[0].path] ? { consumed: segments } : null,\n        loadChildren: () => import('./modules/results/results.module').then((m) => m.ResultsModule),\n        resolve: {\n            deviceId: RouteIdResolver,\n        },\n    },\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'search',\n    },\n    {\n        path: '', //'results'\n        loadChildren: () => import('./modules/results/results.module').then((m) => m.ResultsModule),\n        resolve: {\n            deviceId: DeviceIdResolver,\n        },\n    } /*,\n    {\n        path: '**',\n        redirectTo: 'search',\n    },*/,\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {\n    private readonly allowedTransitions: {\n        [key in string]: ITransition[];\n    };\n\n    constructor(\n        private router: Router,\n        private cartService: CartService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private httpCancelService: HttpCancelService\n    ) {\n        this.allowedTransitions = {\n            ['/']: [\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    // do not remove, used for rendering purpose\n                    to: '/trip',\n                    moveType: MOVE_TYPE.POP,\n                },\n                {\n                    // do not remove, used for rendering purpose\n                    to: '/en-',\n                    moveType: MOVE_TYPE.POP,\n                },\n                {\n                    // do not remove, used for rendering purpose\n                    to: '/gb-',\n                    moveType: MOVE_TYPE.POP,\n                },\n                {\n                    // do not remove, used for rendering purpose\n                    to: '/fr-',\n                    moveType: MOVE_TYPE.POP,\n                },\n                {\n                    to: '/recover-booking',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/verify-mail',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/reset-password',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/mob-test',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: this.allBooked.bind(this),\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/checkout-processed',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: this.allBooked.bind(this),\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.POP,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/forgot-password',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n            ],\n            ['/en-gb']: [\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n            ],\n            ['/fr-fr']: [\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.searchOngoing,\n                },\n            ],\n            ['/fake']: [\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/get-started']: [\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.POP,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n            ],\n            ['/search']: [\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n            ],\n            ['/hotel']: [\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/fake',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.denied,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/hotels']: [\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/fake',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.denied,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/travel']: [\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/fake',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.denied,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/travel/flights',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/travel/trains',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/transfers']: [\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/fake',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.denied,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/car-rentals']: [\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/fake',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.POP,\n                    checkFunc: AppRoutingModule.denied,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/results-summary']: [\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n            ],\n            ['/checkout-processed']: [\n                {\n                    to: '/checkout-processed',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/checkout']: [\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/travel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout-processed',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.POP,\n                    confirmNav: AppRoutingModule.confirmError,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.APP,\n                    checkFunc: this.resetSearch.bind(this),\n                },\n            ],\n            ['/forgot-password']: [\n                {\n                    to: '/forgot-password',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/about']: [\n                {\n                    to: '/get-started',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/about',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/travel/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n            ],\n            ['/bookings']: [\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/travel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/',\n                    moveType: MOVE_TYPE.ALL,\n                },\n            ],\n            ['/unauthorized-bookings']: [\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n            ],\n            ['/customer']: [\n                {\n                    to: '/customer',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/bookings',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotels',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/hotel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/travel',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/transfers',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/car-rentals',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/checkout',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/unauthorized-bookings',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/recover-booking']: [\n                {\n                    to: '/recover-booking',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/results-summary',\n                    moveType: MOVE_TYPE.APP,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/verify-mail']: [\n                {\n                    to: '/verify-mail',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n            ['/reset-password']: [\n                {\n                    to: '/reset-password',\n                    moveType: MOVE_TYPE.ALL,\n                },\n                {\n                    to: '/search',\n                    moveType: MOVE_TYPE.APP,\n                },\n            ],\n        };\n        this.listenNavChange();\n    }\n\n    private static isSame(curUrl: string, dstUrl: string): boolean {\n        return curUrl === dstUrl || (curUrl !== '/' && dstUrl.indexOf(curUrl) === 0);\n    }\n\n    private static confirmError(): boolean {\n        return false;\n    }\n\n    private static denied(): ALLOWED_MOVE {\n        console.log('denied move');\n        return ALLOWED_MOVE.DISALLOW;\n    }\n\n    private static searchOngoing(): ALLOWED_MOVE {\n        return StorageManagerUtil.get('searchInfos') ? ALLOWED_MOVE.ALLOWED : ALLOWED_MOVE.DISALLOW;\n    }\n\n    private static hasBookedItem(): ALLOWED_MOVE {\n        return ALLOWED_MOVE.DISALLOW;\n    }\n\n    private resetSearch(): ALLOWED_MOVE {\n        this.httpCancelService.cancelPendingRequests();\n        return ALLOWED_MOVE.ALLOWED;\n    }\n\n    private allBooked(): ALLOWED_MOVE {\n        if (this.cartService.canActivate({} as ActivatedRouteSnapshot, {} as RouterStateSnapshot) !== true) {\n            return ALLOWED_MOVE.DISALLOW;\n        }\n        return ALLOWED_MOVE.ALLOWED;\n    }\n\n    private navAllowed(event: NavigationStart): ALLOWED_MOVE {\n        let allowed = AppRoutingModule.isSame(this.router.url, event.url)\n            ? ALLOWED_MOVE.ALLOWED\n            : ALLOWED_MOVE.DISALLOW;\n        //allowed = ALLOWED_MOVE.ALLOWED;\n        if (!allowed) {\n            const urlStart = /^\\/[a-z-A-Z]*/.exec(this.router.url);\n            console.log('url start is:', urlStart);\n            // when doing a page refresh, navigationTrigger is 'imperative' but as it is a user browser\n            // action we will consider it as a pop event\n            const triggerEvent = event.id === 1 ? MOVE_TYPE.POP : event.navigationTrigger;\n\n            if (urlStart && this.allowedTransitions[urlStart[0]]) {\n                for (const allowedNav of this.allowedTransitions[urlStart[0]]) {\n                    if (\n                        (allowedNav.moveType === MOVE_TYPE.ALL || allowedNav.moveType === triggerEvent) &&\n                        AppRoutingModule.isSame(allowedNav.to, event.url)\n                    ) {\n                        if (allowedNav.checkFunc) {\n                            console.log('calling check function:', allowedNav.checkFunc.name);\n                            allowed = allowedNav.checkFunc(event.navigationTrigger, this.router.url, event.url);\n                        } else {\n                            allowed = ALLOWED_MOVE.ALLOWED;\n                        }\n                        if (allowed && allowedNav.confirmNav) {\n                            allowed = ALLOWED_MOVE.REQUEST_CONFIRMATION;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        return allowed;\n    }\n\n    private stayInPlace(replaceUrl: boolean): void {\n        let navParam: NavigationExtras;\n        const extras = this.router.getCurrentNavigation();\n\n        if (extras && extras.extras) {\n            navParam = extras.extras;\n            navParam.replaceUrl = replaceUrl;\n        } else {\n            navParam = { replaceUrl };\n        }\n        //navParam.skipLocationChange = true;\n\n        this.router.navigate([this.router.url], navParam);\n    }\n\n    /**\n     * Check if the current navigation request is valid. If not stay on current page\n     */\n    private listenNavChange(): void {\n        this.router.events.forEach((event) => {\n            if (event instanceof NavigationStart) {\n                console.log(event);\n                console.log('navigating from ', this.router.url, ' to ', event.url);\n\n                // handle case we are moving into same url (can occurs when we prevent navigation for instance)\n                const allowed = this.navAllowed(event);\n\n                if (allowed === ALLOWED_MOVE.ALLOWED) {\n                    console.log('transition allowed');\n                    if (event.navigationTrigger === MOVE_TYPE.POP) {\n                    }\n                } else {\n                    if (allowed === ALLOWED_MOVE.REQUEST_CONFIRMATION) {\n                        console.log('transition needs confirmation');\n                        const savedNavUrl = event.url;\n                        //let savedNavParams = event.params;\n                        this.dialogService\n                            .openConfirmationDialog({\n                                title: this.translateService.instant('POPUPS.BACK_TO_HOME.TITLE'),\n                                content: this.translateService.instant('POPUPS.BACK_TO_HOME.CONTENT'),\n                                confirmBtnTitle: this.translateService.instant('POPUPS.YES'),\n                                cancelBtnTitle: this.translateService.instant('POPUPS.NO'),\n                            })\n                            .afterClosed()\n                            .subscribe((confirmed: TzDialogReturn) => {\n                                if (confirmed === CONFIRM) {\n                                    console.log('navigating to', savedNavUrl);\n                                    if (savedNavUrl === '/search') {\n                                        this.resetSearch();\n                                    }\n                                    this.router.navigate([savedNavUrl]);\n                                }\n                            });\n                        this.stayInPlace(false);\n                    } else {\n                        console.log('transition not allowed');\n                        this.stayInPlace(true);\n                    }\n                }\n            }\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { StripeService } from '@services/stripe.service';\nimport { PlatformService } from '@services/platform.service';\nimport { ScrollService } from '@services/modules/core/scroll-service';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { ToggleContentPages } from '@core/constants/toggle-content-pages';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { PageUtils } from '@core/utils/page-utils';\n\n@Component({\n    selector: 'tz-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n    public showMobFooter = false;\n    public showMobNavBar = false;\n    public showMobAboutFooter = false;\n\n    private fitMainContent = false;\n    constructor(\n        private router: Router,\n        private scrollService: ScrollService,\n        private stripeService: StripeService,\n        public platformService: PlatformService,\n        public userService: UserService\n    ) {\n        this.router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd) {\n                this.onStateChange(event.url);\n                this.fitMainContent = PageUtils.is(event.url, ToggleContentPages.DESKTOP_SMALL_PAGES);\n            }\n        });\n    }\n\n    get minBodyHeight(): string {\n        if (!this.platformService.isMobileDevice) {\n            const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n            return !this.fitMainContent && vh < 1200 ? '100vh' : 'calc(100vh - 520px)';\n        }\n\n        return 'unset';\n    }\n\n    ngOnInit(): void {\n        const queryParams = new URLSearchParams(window.location.search);\n        const deviceId = queryParams.get('deviceId');\n        if (!deviceId) {\n            this.stripeService.loadStripeKey();\n        }\n    }\n\n    public onScroll(scrollElement: HTMLDivElement) {\n        this.scrollService.onScroll$.next(scrollElement);\n    }\n\n    private onStateChange(url: string): void {\n        //PageUtils.autoTest();\n        this.showMobAboutFooter =\n            this.platformService.isMobileDevice && PageUtils.is(url, ToggleContentPages.MOB_ABOUT_FOOTER);\n        this.showMobFooter =\n            this.platformService.isMobileDevice &&\n            (this.showMobAboutFooter || PageUtils.is(url, ToggleContentPages.MOB_FOOTER));\n        this.showMobNavBar =\n            this.platformService.isMobile &&\n            !this.platformService.isMobileBrowser &&\n            PageUtils.is(url, ToggleContentPages.MOB_NAV_BAR);\n    }\n}\n","<tz-mob-landing-page></tz-mob-landing-page>\n\n<ion-content id=\"main\" class=\"overflow-hidden\">\n    <div class=\"wrapper\" [class.mob-wrapper]=\"platformService.isMobileDevice\" #scrollEl (scroll)=\"onScroll(scrollEl)\">\n        <div class=\"wrapper-container\">\n            <tz-main-header></tz-main-header>\n\n            <div class=\"main-container flex\" scrollX=\"true\" [ngStyle]=\"{ minHeight: minBodyHeight }\">\n                <tz-main></tz-main>\n            </div>\n\n            <tz-footer *ngIf=\"!platformService.isMobileDevice\"></tz-footer>\n            <tz-mob-footer *ngIf=\"showMobFooter\" [showMobAboutFooter]=\"showMobAboutFooter\"></tz-mob-footer>\n        </div>\n    </div>\n</ion-content>\n<tz-loader></tz-loader>\n<tz-mob-navbar *ngIf=\"showMobNavBar\"></tz-mob-navbar>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { environment } from '@environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from './modules/layout/layout.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TRANSLATION_CONFIG } from './config/translation.config';\nimport { LayoutModule as CDKLayoutModule } from '@angular/cdk/layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { INTERCEPTORS } from '@core/interceptors';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { CurrencyPipe, DatePipe, registerLocaleData } from '@angular/common';\nimport { TzCurrencyPipe } from '@shared/pipes/tz-currency.pipe';\nimport { INITIALIZATION_PROVIDERS } from '@core/initialize/app.initialize';\nimport localeFr from '@angular/common/locales/fr';\nimport localeEnUs from '@angular/common/locales/en-US-POSIX';\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MobLandingPageModule } from './modules/mob-landing-page/mob-landing-page.module';\nimport { LocaleProvider } from '@services/services/locale.provider';\nimport { TzDatePipe } from '@shared/pipes/tz-date.pipe';\nimport { DeviceService } from '@services/device.service';\n\nregisterLocaleData(localeFr, 'fr');\nregisterLocaleData(localeEnUs, 'en-US');\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [\n        AppRoutingModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule.withConfig(DeviceService.animatedConfig()),\n        IonicModule.forRoot(),\n        CDKLayoutModule,\n        LayoutModule,\n        HttpClientModule,\n        MatDialogModule,\n        InfiniteScrollModule,\n        VirtualScrollerModule,\n        TranslateModule.forRoot(TRANSLATION_CONFIG),\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n            // Register the ServiceWorker as soon as the application is stable\n            // or after 30 seconds (whichever comes first).\n            registrationStrategy: 'registerWhenStable:30000',\n        }),\n        MobLandingPageModule,\n    ],\n    providers: [\n        CookieService,\n        CurrencyPipe,\n        DatePipe,\n        TzCurrencyPipe,\n        TzDatePipe,\n        INTERCEPTORS,\n        ...INITIALIZATION_PROVIDERS,\n        {\n            provide: MatDialogRef,\n            useValue: {},\n        },\n        {\n            provide: RouteReuseStrategy,\n            useClass: IonicRouteStrategy,\n        },\n        LocaleProvider,\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { TranslateLoader } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MissingTranslationHandler, MissingTranslationHandlerParams } from '@ngx-translate/core';\n\nexport const httpLoaderFactory = (http: HttpClient) => new TranslateHttpLoader(http, './assets/i18n/', '.json');\n\nexport class MyMissingTranslationHandler implements MissingTranslationHandler {\n    handle(params: MissingTranslationHandlerParams) {\n        //console.log('MISSING TRANSLATION KEY: ', params.key);\n        if (params.key !== '') {\n            const keysList = params.key.split('.');\n            const keyValue = keysList[keysList.length - 1];\n            return keyValue.replace(/\\s/g, '') !== '' ? keyValue : params.key;\n        }\n\n        return params.key;\n    }\n}\n\nexport const TRANSLATION_CONFIG = {\n    isolate: false,\n    missingTranslationHandler: { provide: MissingTranslationHandler, useClass: MyMissingTranslationHandler },\n    loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient],\n        defaultLanguage: 'en',\n    },\n};\n","export const CalTypes = {\n    CAL_RENTAL_TYPE: 'rentalCal',\n    CAL_TRANSFER_TYPE: 'transferCal',\n    CAL_TRIP_TYPE: 'tripCal',\n    CAL_MEETING_TYPE: 'meetingCal',\n    CAL_RANGE_FREE: 'free', //date range is independent from other settings\n    CAL_RANGE_ONE_DATE: false, //only one date to select\n    CAL_RANGE_TWO_DATES: true, // user is asked to select a range dates\n    //date range is automatically set based on travelOption field\n    //(oneWay = false/roundTrip = true)\n    CAL_RANGE_TRAVEL: null,\n};\n","export enum CartStatus {\n    STATUS_PLACED = -1,\n    STATUS_CREATED = 0,\n    STATUS_PROGRESS = 1,\n    STATUS_CONFIRMED = 2,\n    STATUS_COMPLETED = 3,\n    STATUS_CPROGRESS = 4,\n    STATUS_CANCELLED = 5,\n    STATUS_HOLD = 6,\n    STATUS_REJECTED = 7,\n    STATUS_PRICE_CHANGED = 8,\n    STATUS_INVALID = 9,\n}\n\nexport const STATUS_COLORS: {\n    [key in CartStatus]?: string;\n} = {};\nSTATUS_COLORS[CartStatus.STATUS_PLACED] = 'status-progress';\nSTATUS_COLORS[CartStatus.STATUS_CREATED] = 'status-progress';\nSTATUS_COLORS[CartStatus.STATUS_PROGRESS] = 'status-progress';\nSTATUS_COLORS[CartStatus.STATUS_CONFIRMED] = 'status-confirmed';\nSTATUS_COLORS[CartStatus.STATUS_COMPLETED] = 'status-confirmed';\nSTATUS_COLORS[CartStatus.STATUS_CPROGRESS] = 'status-cancelling';\nSTATUS_COLORS[CartStatus.STATUS_CANCELLED] = 'status-canceled';\nSTATUS_COLORS[CartStatus.STATUS_REJECTED] = 'status-canceled';\nSTATUS_COLORS[CartStatus.STATUS_INVALID] = 'status-canceled';\n\n//WARNING: These values must stay in sync with server cache side values!\nexport enum PaymentCaptureMode {\n    NOT_DONE = -1,\n    NORMAL_MODE = 0,\n    AUTO_MODE = 1,\n    MANUAL_MODE = 2,\n}\n\n/*\nangular.module(\"trazler.constants\").constant(\"CartStatus\", {\n    //WARNING: These values must stay in sync with server cache side values!\n\n    get Colors() {\n        let _colors = {};\n        _colors[this.StatusPlaced] = \"status-progress\";\n        _colors[this.StatusCreated] = \"status-progress\";\n        _colors[this.StatusProgress] = \"status-progress\";\n        _colors[this.StatusConfirmed] = \"status-confirmed\";\n        _colors[this.StatusCompleted] = \"status-confirmed\";\n        _colors[this.StatusCProgress] = \"status-cancelling\";\n        _colors[this.StatusCancelled] = \"status-canceled\";\n        _colors[this.StatusRejected] = \"status-canceled\";\n        _colors[this.StatusInvalid] = \"status-canceled\";\n\n        return _colors;\n    }\n\n});\nangular.module(\"trazler.constants\").constant(\"PayStatus\", {\n    //WARNING: These values must stay in sync with server cache side values!\n    NotPaid: 0,\n    Paid: 1,\n    PartiallyRefunded: 2,\n    Refunded: 3,\n    PaidFailure: 900,\n    RefundFailure: 901,\n    get Colors() {\n        let _colors = {};\n        _colors[this.NotPaid] = \"status-progress\";\n        _colors[this.Paid] = \"status-confirmed\";\n        _colors[this.PaidFailure] = \"status-canceled\";\n\n        _colors[this.PartiallyRefunded] = \"status-confirmed\";\n        _colors[this.Refunded] = \"status-confirmed\";\n        _colors[this.RefundFailure] = \"status-canceled\";\n        return _colors;\n    }\n\n});\nangular.module(\"trazler.constants\").constant(\"PaymentCaptureModes\", {\n    //WARNING: These values must stay in sync with server cache side values!\n    PCNotDone: -1,\n    PCNormalMode: 0,\n    PCAutoMode: 1,\n    PCManualMode: 2\n});*/\n","export enum CombServiceIds {\n    // WARNING: These values must stay in sync with server cache side values!\n    INVALID = 0,\n    FLIGHT_TRAIN = 1,\n    HOTEL = 2,\n    TRANSFER = 4,\n    RENTAL = 8,\n    FLIGHT = 16,\n    TRAIN = 32,\n}\n\nexport enum InconsistentIds {\n    NOT_SPECIFIC = 0,\n    ADD_TRANSFER_TO_1001 = 1,\n    ADD_TRANSFER_TO_1101 = 2,\n}\n","export const CSS_MAPPING = {\n    flight: {\n        icon: 'tz-icon-service-flight',\n        color: '#298AFF',\n        serviceId: 5,\n        timelineIcons: {\n            start: 'icon-flight-takeoff',\n            end: 'icon-flight-land',\n        },\n        iconClass: 'tz-icon-service-flight',\n    },\n    train: {\n        icon: 'tz-icon-service-train',\n        color: '#298AFF',\n        serviceId: 6,\n        iconClass: 'tz-icon-service-train',\n    },\n    hotel: {\n        icon: 'tz-icon-service-hotel',\n        color: '#FFA500',\n        serviceId: 0,\n        iconClass: 'tz-icon-service-hotel',\n    },\n    transfer: {\n        icon: 'tz-icon-service-transfer',\n        color: '#FF6767',\n        serviceId: 3,\n        iconClass: 'tz-icon-service-transfer',\n    },\n    rentcar: {\n        icon: 'tz-icon-service-rental',\n        color: '#6CBF10',\n        serviceId: 2,\n        iconClass: 'tz-icon-service-rental',\n    },\n    activity: {\n        icon: 'icon-activities',\n        color: '#E340E9',\n        serviceId: 4,\n        iconClass: 'icon-activities',\n    },\n    generalIcons: {\n        search: 'icon-search_txt',\n        location: 'icon-location',\n    },\n};\n","import { ServiceId } from '@core/constants/service-id.const';\n\nexport const SERVICE_DEFAULT_SORT: {\n    [key in ServiceId]?: string;\n} = {};\nSERVICE_DEFAULT_SORT[ServiceId.FLIGHT] = 'bestValue';\nSERVICE_DEFAULT_SORT[ServiceId.TRAIN] = 'cheapest';\nSERVICE_DEFAULT_SORT[ServiceId.ACC] = '1';\nSERVICE_DEFAULT_SORT[ServiceId.TRANSFER] = 'cheapest';\nSERVICE_DEFAULT_SORT[ServiceId.CAR_RENTAL] = 'cheapest';\n","import { GeneralSettingsModel } from '@schemas/modules/settings/general-settings';\n\nexport const GeneralSettings: GeneralSettingsModel = {\n    availableServices: [\n        {\n            label: 'SEARCH.TAB.FLIGHT_TRAINS',\n            tabletLabel: 'SEARCH.TAB.FLIGHT_TRAINS_TABLET',\n            mobLabel: 'SEARCH.TAB.FLIGHT_TRAINS_MOB',\n            cssKey: 'service-flight',\n            serviceKey: 'transport',\n            mobIcon: 'mob-flight-service-tab',\n        },\n        {\n            label: 'SEARCH.TAB.HOTELS_RESIDENCES',\n            tabletLabel: 'SEARCH.TAB.HOTELS_RESIDENCES_TABLET',\n            mobLabel: 'SEARCH.TAB.HOTELS_RESIDENCES_MOB',\n            cssKey: 'service-hotel',\n            serviceKey: 'accommodation',\n            mobIcon: 'mob-hotels-service-tab',\n        },\n        {\n            label: 'SEARCH.TAB.TRANSFERS',\n            tabletLabel: 'SEARCH.TAB.TRANSFERS_TABLET',\n            mobLabel: 'SEARCH.TAB.TRANSFERS_MOB',\n            cssKey: 'service-transfer',\n            serviceKey: 'transfer',\n            mobIcon: 'mob-transfer-service-tab',\n        },\n        {\n            label: 'SEARCH.TAB.CAR_RENTALS',\n            tabletLabel: 'SEARCH.TAB.CAR_RENTALS_TABLET',\n            mobLabel: 'SEARCH.TAB.CAR_RENTALS_MOB',\n            cssKey: 'service-rental',\n            serviceKey: 'rentCar',\n            mobIcon: 'mob-car-service-tab',\n        },\n        /*{\n            label: 'SEARCH.TAB.ACTIVITIES',\n            tabletLabel: 'SEARCH.TAB.ACTIVITIES_TABLET',\n            mobLabel: 'SEARCH.TAB.ACTIVITIES_MOB',\n            cssKey: 'activity',\n            serviceKey: 'activity',\n            mobIcon: 'mob-activity-service-tab',\n        },*/\n    ],\n    defaultSelectedServices: {\n        transport: true,\n        accommodation: true,\n        transfer: true,\n        rentCar: false,\n        // activity: false,\n        train: false, // for internal use\n    },\n    mapbox: {\n        placesURL: 'https://api.mapbox.com/geocoding/v5/mapbox.places/',\n        mapStyle: 'mapbox://styles/mapbox/streets-v11',\n    },\n    passengerRules: {\n        maxAllowedPersons: 8,\n        minChild: 0,\n        maxChild: 4,\n        minAdult: 1,\n        minRoom: 1,\n        maxRoom: 4,\n        childMinAge: 2,\n        childMaxAge: 17,\n        infantAge: 2,\n        minDriverAge: 21,\n        maxDriverAge: 80,\n    },\n};\n","export enum HttpRequestType {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT',\n    DELETE = 'DELETE',\n}\n","export enum KeyType {\n    UP_ARROW = 'ArrowUp',\n    DOWN_ARROW = 'ArrowDown',\n    LEFT_ARROW = 'ArrowLeft',\n    RIGHT_ARROW = 'ArrowRight',\n    ENTER = 'Enter',\n    TAB = 'Tab',\n    ESCAPE = 'Escape',\n}\n\nexport enum TzFocusType {\n    MOVE_NEXT = 999,\n    MOVE_TO_INVALID = 111,\n}\n","export const LANGUAGES = {\n    /**\n     * If don't want to translate some names from providers\n     * they should be listed here, with refId we will skip whole section,\n     * with name we can skip specific text\n     */\n    doNotTranslate: {\n        refIds: [\n            'ACC_HOTEL_CHAIN',\n            'FLIGHT_AIRLINES',\n            'PROVIDERS',\n            'TRANSFER_VEHICLE_TYPE',\n            'TRANSFER_SERVICE_CLASS',\n            'ACC_ACC_TYPE',\n        ],\n        names: ['FILTER.HOTELBEDS'],\n        translationScopes: ['VEHICLE.CLASS', 'VEHICLE.TYPE'],\n    },\n    default: 'en',\n    list: [\n        {\n            displayName: 'En',\n            code: 'en',\n            name: 'English',\n            flagCode: 'gb',\n            i18nCode: 'en-gb',\n            icon: 'united-kingdom-flag',\n        },\n        {\n            displayName: 'Fr',\n            code: 'fr',\n            name: 'Francais',\n            flagCode: 'fr',\n            i18nCode: 'fr-fr',\n            icon: 'france-flag',\n        },\n        {\n            displayName: 'Us',\n            code: 'en',\n            name: 'English',\n            flagCode: 'us',\n            i18nCode: 'en-us',\n            icon: 'us-flag',\n        },\n    ],\n};\n","export enum ListenerId {\n    LISTEN_INVALID = -1,\n    LISTEN_SERVICES = 0,\n    LISTEN_TRAVEL_OPTION = 1,\n    LISTEN_ACC_REPRICED = 2,\n    LISTEN_EDIT_RENT_CAR = 3,\n    LISTEN_EDIT_TRAIN = 4,\n    LISTEN_EDIT_TRANSFER = 5,\n    LISTEN_LANG = 6,\n    LISTEN_CAL_REFRESH = 7,\n    LISTEN_SEARCH_ERR = 8,\n    LISTEN_CUR = 9,\n    LISTEN_FILTER = 10,\n    LISTEN_EDIT_FLIGHT = 11,\n    LISTEN_EDIT_EXT_CHANGE = 12,\n    LISTEN_SEARCH_REINIT = 13,\n    LISTEN_EDIT_TRAVEL = 14,\n    LISTEN_SERVICE_REINIT = 15,\n    LISTEN_FOCUS_NEXT = 16,\n    LISTEN_REPRICED = 17,\n    LISTEN_TRIGGER_EXT_EDIT_SEARCH = 19,\n    LISTEN_CART_DATA = 20,\n    LISTEN_TMP_PRICE = 21,\n    LISTEN_LOADER = 22,\n    LISTEN_NO_RESULT = 23,\n    LISTEN_PASSENGER_RESET = 24,\n    CREATE_SEARCH_FROM_EVENT = 25,\n    LISTEN_SEARCH_EDIT_UPDATE = 26,\n    LISTEN_GET_TRANSFERS = 27,\n    LISTEN_INIT_TRANSFER_CONTROLLER_INFO = 28,\n    LISTEN_UPDATE_TRANSFER_SEARCH = 29,\n    LISTEN_MAIN_SCROLL = 30,\n    RESET_SEARCH_DATA = 31,\n    LISTEN_PROGRESS_BAR = 32,\n    LISTENER_CLOSE_PUSH_MENU = 34,\n    LISTEN_RATE_CHECK = 35,\n    LISTEN_CONSISTENCIES = 36,\n    LISTEN_ENABLE_EDIT = 37,\n    LISTEN_ACC_FIRST_LOADED = 38,\n    LISTEN_CART_CHANGED = 39,\n    LISTEN_TAB_CHANGED = 40,\n    LISTENER_CLEAR_MAP_VIEWED_POINTS = 41,\n    LISTEN_CONF_CHANGE = 42,\n    LISTENER_CURRENT_TAB = 43,\n    SET_RESULTS_MARGIN = 44,\n    CLOSE_EXPANDED_SUMMARY = 45,\n    TOGGLE_RESULTS_SUMMARY = 46,\n    CHANGE_SERVIE_ITEM = 47,\n    SOCIAL_LOGIN = 48,\n    LISTENER_CLOSE_MOB_FORM = 49,\n    LISTENER_UPDATE_RENTAL_CAL = 50,\n    LISTEN_RESULT_UPDATE = 51,\n    LISTENER_SHOW_COOKIE = 52,\n    CUSTOMER_INFO_UPDATED = 53,\n    LISTEN_UPDATE_SEARCH = 54,\n    LISTEN_EDIT_SEARCH = 55,\n}\n","export enum ModalOpenOptions {\n    LEFT = 'left',\n    RIGHT = 'right',\n    TOP = 'top',\n    BOTTOM = 'bottom',\n}\n","import { ILandingPagesUrls } from '@schemas/modules/component-schemas/urls/landing-pages-urls';\nimport { PageUtils } from '@core/utils/page-utils';\n\nexport enum PagesUrls {\n    HOME = '/',\n    SEARCH = 'search',\n    ABOUT_PPC = 'about/ppc',\n    ABOUT_ABOUT = 'about/about',\n    ABOUT_TERMS = 'about/terms',\n    ABOUT_CONTACTS = 'about/contacts',\n    ABOUT_HELP = 'about/help',\n    BASKET = 'results-summary',\n    GET_STARTED = 'get-started',\n    UNAUTHORIZED_BOOKINGS = 'unauthorized-bookings',\n    BOOKING_LIST = 'bookings/bookings-list',\n    RESULT_HOTEL_DETAILS = 'hotel/...',\n    RESULT_CAR_RENTALS = 'car-rentals/...',\n    RESULT_TRANSFERS = 'transfers/...',\n    RESULT_HOTELS = 'hotels',\n    HOTEL_DETAILS_ID = 'hotel/:id',\n    BOOKINGS = 'bookings',\n    CUSTOMER = 'customer',\n    CHECKOUT = 'checkout',\n    CUSTOMER_PROFILE = '/customer/profile',\n    CUSTOMER_TRAVELLERS = '/customer/travellers',\n    CUSTOMER_PASSWORD = '/customer/password',\n    RESULTS_FLIGHTS = 'travel/flights/...',\n    RESULTS_TRAINS = 'travel/trains/...',\n    CHECKOUT_SUCCESS = '/checkout-processed',\n    FORGOT_PASSWORD = '/forgot-password',\n    RESET_PASSWORD = '/reset-password',\n}\n\nexport const LandingPagesUrls: ILandingPagesUrls = [\n    { url: PagesUrls.ABOUT_ABOUT, title: 'PAGES.ABOUT', textAfter: 'trazler.com', class: 'trazler' },\n    { url: PagesUrls.ABOUT_PPC, title: 'PAGES.PRIVACY_AND_COOKIES_POLICY' },\n    { url: PagesUrls.ABOUT_TERMS, title: 'PAGES.GENERAL_CONDITIONS' },\n    { url: PagesUrls.ABOUT_CONTACTS, title: 'PAGES.CONTACT_US' },\n    { url: PagesUrls.ABOUT_HELP, title: 'FOOTER.FAQ' },\n];\n","export enum SearchEvents {\n    EVENT_SEARCH_EDIT = 0, // search triggered by edit page search\n    EVENT_SEARCH = 1, // search triggered by home page search\n    EVENT_SEARCH_WEB = 2, // web search results received\n    EVENT_FILTER = 3,\n    EVENT_TRIP_PLANNER = 4, // filter results received\n}\n","export enum ServiceId {\n    ACC = 0,\n    FLIGHT_TRAIN = 1,\n    CAR_RENTAL = 2,\n    TRANSFER = 3,\n    ACTIVITIES = 4,\n    FLIGHT = 5,\n    TRAIN = 6,\n    BOOKING = 7,\n    SUMMARY = 8,\n    ACC_DETAILS = 101,\n    INVALID = 999,\n}\n\nexport enum ServiceIdStr {\n    ACC = '0',\n    FLIGHT_TRAIN = '1',\n    CAR_RENTAL = '2',\n    TRANSFER = '3',\n    ACTIVITIES = '4',\n    FLIGHT = '5',\n    TRAIN = '6',\n    BOOKING = '7',\n    SUMMARY = '8',\n    ACC_DETAILS = '101',\n    INVALID = '999',\n}\n","import { ServiceId } from '@core/constants/service-id.const';\n\nexport const ServiceIdToName: {\n    [key in ServiceId]?: string;\n} = {};\n\nServiceIdToName[ServiceId.FLIGHT] = 'flight';\nServiceIdToName[ServiceId.TRAIN] = 'train';\nServiceIdToName[ServiceId.ACC] = 'hotel';\nServiceIdToName[ServiceId.TRANSFER] = 'transfer';\nServiceIdToName[ServiceId.CAR_RENTAL] = 'car rental';\nServiceIdToName[ServiceId.FLIGHT_TRAIN] = 'transport';\n","export enum StateFrom {\n    TAB = 0,\n    SUMMARY = 1,\n    SEARCH = 2,\n    CHECKOUT = 3,\n    ACC_LIST = 4,\n    ACC_DETAILS = 4,\n    NONE = 99,\n}\n","export enum StripeKeys {\n    PROD = 'pk_live_51Chft8BpEpY0k6KqFG712LlCuhGa3j5apC2wRc7Y9mxhMPAZ15P5wJRcr3u1pwkzTYdmNpzHeoSNkqur2VDa8onO00JMbcRJmJ',\n    TEST = 'pk_test_3WqMgMGJREhW4UI29iiZyNZx',\n}\n\nexport enum StripeElementsKeys {\n    CARDNO = 'cardNumber',\n    CARDEXP = 'cardExpiry',\n    CARDCVC = 'cardCvc',\n}\n\nexport enum StripeElementContainer {\n    CARDNO = 'cardNo',\n    CARDEXP = 'cardExp',\n    CARDCVC = 'cardCvc',\n}\n","import { PagesUrls } from '@core/constants/pages-urls';\n\nconst {\n    GET_STARTED,\n    UNAUTHORIZED_BOOKINGS,\n    BOOKING_LIST,\n    CUSTOMER,\n    CUSTOMER_PROFILE,\n    ABOUT_PPC,\n    ABOUT_ABOUT,\n    ABOUT_TERMS,\n    ABOUT_CONTACTS,\n    ABOUT_HELP,\n    CHECKOUT,\n    HOME,\n    SEARCH,\n    CHECKOUT_SUCCESS,\n    FORGOT_PASSWORD,\n    RESET_PASSWORD,\n    RESULTS_FLIGHTS,\n    RESULTS_TRAINS,\n    RESULT_HOTELS,\n    RESULT_HOTEL_DETAILS,\n    RESULT_CAR_RENTALS,\n    RESULT_TRANSFERS,\n    BASKET,\n} = PagesUrls;\n\nexport const ToggleContentPages: IToggleContentPages = {\n    MOB_FOOTER: [UNAUTHORIZED_BOOKINGS, BOOKING_LIST, CUSTOMER, HOME, SEARCH],\n    MOB_NAV_BAR: [\n        GET_STARTED,\n        CUSTOMER_PROFILE,\n        ABOUT_ABOUT,\n        ABOUT_PPC,\n        ABOUT_TERMS,\n        ABOUT_CONTACTS,\n        ABOUT_HELP,\n        CHECKOUT,\n    ],\n    MOB_ABOUT_FOOTER: [ABOUT_ABOUT, ABOUT_PPC, ABOUT_TERMS, ABOUT_CONTACTS, ABOUT_HELP],\n    DESKTOP_SMALL_PAGES: [FORGOT_PASSWORD, RESET_PASSWORD, CHECKOUT_SUCCESS],\n    RESULT_PAGES: [\n        RESULTS_FLIGHTS,\n        RESULTS_TRAINS,\n        RESULT_HOTELS,\n        RESULT_HOTEL_DETAILS,\n        RESULT_CAR_RENTALS,\n        RESULT_TRANSFERS,\n        BASKET,\n        CHECKOUT,\n    ],\n};\n\nexport enum ToggleContentKeys {\n    MOB_FOOTER = 'MOB_FOOTER',\n    MOB_NAV_BAR = 'MOB_NAV_BAR',\n    MOB_ABOUT_FOOTER = 'MOB_ABOUT_FOOTER',\n    DESKTOP_SMALL_PAGES = 'DESKTOP_SMALL_PAGES',\n    RESULT_PAGES = 'RESULT_PAGES',\n}\n\nexport type IToggleContentPages = {\n    [key in ToggleContentKeys]: PagesUrls[];\n};\n","export enum TravellerType {\n    ADULT = 'Adult',\n    YOUNG = 'Young',\n    CHILD = 'Child',\n    INFANT = 'Infant',\n}\n","export enum Trip {\n    ROUND_TRIP = 'roundTrip',\n    ONE_WAY = 'oneWay',\n    MULTI_CITY = 'multiCity',\n}\n\nexport const TRIPTYPES = {\n    LIST: [\n        { label: 'SEARCH.ROUND_TRIP', tripType: Trip.ROUND_TRIP },\n        { label: 'SEARCH.ONE_WAY', tripType: Trip.ONE_WAY },\n    ],\n    DEFAULT: { label: 'SEARCH.ROUND_TRIP', tripType: Trip.ROUND_TRIP },\n};\n","export enum ValidatorPatterns {\n    NAME = '^([a-zA-ZÀ-ÿ]+\\\\s?)+$',\n    ZIPCODE = '^([a-zA-ZÀ-ÿ0-9]+\\\\s?)+$',\n    TRAVELLERID = '^([a-zA-ZÀ-ÿ0-9]+\\\\s?)+$',\n    PASSWORD = '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$',\n    EMAIL = '^[a-z0-9A-Z._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$',\n    STRING = `^([a-zA-ZÀ-ÿ0-9!@#$%^&*()_+\\-=\\[\\\\]{};':\"\\\\|,.<>\\/?]\\\\s?)+$`,\n}\n","import { APP_INITIALIZER } from '@angular/core';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { AppConfigDataService } from '@services/modules/core/dataservices/app-config-data.service';\n\nconst initializeCartData = (cartService: CartService) => () => cartService.reInit();\n\nconst initializeDeviceId = (appConfigDataService: AppConfigDataService) => () =>\n    appConfigDataService.initDeviceId(false);\n\nexport const INITIALIZATION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: initializeDeviceId,\n        deps: [AppConfigDataService],\n        multi: true,\n    },\n    {\n        provide: APP_INITIALIZER,\n        useFactory: initializeCartData,\n        deps: [CartService],\n        multi: true,\n    },\n];\n","import { Injectable } from '@angular/core';\nimport {\n    HttpErrorResponse,\n    HttpEvent,\n    HttpHandler,\n    HttpInterceptor,\n    HttpRequest,\n    HttpResponse,\n} from '@angular/common/http';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { LoaderService, SEARCH_RESULT_PROCESSING } from '@services/modules/core/loader.service';\nimport { catchError, tap, map, takeUntil } from 'rxjs/operators';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\nimport { HttpCancelService } from '@core/interceptors/check-results/http-cancel.services';\n\n@Injectable()\nexport class CheckResultsInterceptor implements HttpInterceptor {\n    private counter = 0;\n\n    constructor(\n        private loaderService: LoaderService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private httpCancelService: HttpCancelService,\n        private router: Router\n    ) {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.context.get(SEARCH_RESULT_PROCESSING)) {\n            this.counter++;\n        }\n        if (this.counter > 0) {\n            this.loaderService.triggerCheckResults.next(true);\n        }\n        return next.handle(req).pipe(\n            takeUntil(this.httpCancelService.onCancelPendingRequests().pipe(tap(() => this.resetCounter()))),\n            map((event: HttpEvent<any>) => {\n                if (event instanceof HttpResponse) {\n                    this.handleResponse(req);\n                }\n                return event;\n            }),\n            catchError((error: HttpErrorResponse) => {\n                console.log('http failure on:' + req.urlWithParams);\n                this.handleResponse(req);\n                if (req.params.get('handleRedisError')) {\n                    this.handleRedisError(error);\n                }\n\n                return throwError(error);\n            })\n        );\n    }\n\n    public resetCounter() {\n        console.log('ending counter of:', this.counter);\n        this.counter = 0;\n    }\n\n    private handleResponse(req: HttpRequest<any>) {\n        if (req.context.get(SEARCH_RESULT_PROCESSING)) {\n            this.counter--;\n        }\n        if (this.counter <= 0) {\n            this.loaderService.triggerCheckResults.next(false);\n        }\n\n        if (req.params.get('closeLoader')) {\n            this.loaderService.triggerLoading.emit({ loading: false });\n        }\n    }\n\n    private handleRedisError(error: HttpErrorResponse) {\n        if (!error || error.status !== 410) {\n            return;\n        }\n\n        this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant('POPUPS.INACTIVITY.TITLE'),\n                multipleContent: [this.translateService.instant('POPUPS.INACTIVITY.BODY')],\n                confirmBtnTitle: this.translateService.instant('POPUPS.INACTIVITY.1_NEW_SEARCH'),\n                icon: { name: 'inactivity-dialog', iconStyle: { 'width.px': 80, 'height.px': 54 } },\n            })\n            .afterClosed()\n            .subscribe(() => {\n                this.router.navigate(['search']);\n                return;\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class HttpCancelService {\n    private pendingHTTPRequests$ = new Subject<void>();\n\n    constructor() {}\n\n    // Cancel Pending HTTP calls\n    public cancelPendingRequests(): void {\n        console.log('cancelling http requests');\n        this.pendingHTTPRequests$.next();\n    }\n\n    public onCancelPendingRequests(): Observable<void> {\n        return this.pendingHTTPRequests$.asObservable();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n    constructor() {}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(catchError((error: HttpErrorResponse) => throwError(error)));\n    }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { XXsrfTokenInterceptor } from '@core/interceptors/xsrf/x-xsrf-token.interceptor';\nimport { ErrorHandlerInterceptor } from '@core/interceptors/error-handler/error-handler.interceptor';\nimport { CheckResultsInterceptor } from '@core/interceptors/check-results/check-results.interceptor';\nimport { HttpCancelService } from '@core/interceptors/check-results/http-cancel.services';\n\nexport const INTERCEPTORS = [\n    HttpCancelService,\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: XXsrfTokenInterceptor,\n        multi: true,\n    },\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: ErrorHandlerInterceptor,\n        multi: true,\n    },\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: CheckResultsInterceptor,\n        multi: true,\n    },\n];\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\n@Injectable()\nexport class XXsrfTokenInterceptor implements HttpInterceptor {\n    constructor() {}\n\n    private static forceString(val: string | null): string {\n        if (!val) {\n            return '';\n        }\n        return val;\n    }\n\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n        const headers = {\n            'x-xsrf-token': XXsrfTokenInterceptor.forceString(StorageManagerUtil.get('xsfrToken', true)), // ? xsrfToken : '5oD9Lx8g',\n            Authorization: XXsrfTokenInterceptor.forceString(StorageManagerUtil.get('trazler_customer_token', true)),\n            DeviceId: XXsrfTokenInterceptor.forceString(StorageManagerUtil.get('deviceId', true)),\n        };\n        const req = request.clone({\n            headers: new HttpHeaders(headers),\n        });\n\n        return next.handle(req);\n    }\n}\n","import { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ServiceIdToName } from '@core/constants/service-ids-name.const';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { CartStatus } from '@core/constants/cart-status';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { DialogService } from '@services/dialog.service';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ListenersService } from '@services/modules/core/listeners-service';\n\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { LoaderService } from '@services/modules/core/loader.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ReCheckCartItem implements Resolve<ICart> {\n    constructor(\n        private cartService: CartService,\n        private router: Router,\n        private trazlerAPI: ApiAccessService,\n        private cartRoutingService: CartRoutingService,\n        private dialogService: DialogService,\n        private toolsService: ToolsService,\n        private translateService: TranslateService,\n        protected listenersService: ListenersService,\n        private searchDataService: SearchDataService,\n        private loaderService: LoaderService\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ICart> | Promise<ICart> | ICart {\n        return this.cartService.reInit().then((cartData: any) => {\n            if (!cartData || !cartData.items || Object.keys(cartData.items).length === 0) {\n                this.router.navigate(['results-summary']);\n                return {} as ICart;\n            }\n\n            return this.beforeCheckout(cartData).then(\n                (value: ICart) => value,\n                () => {\n                    this.router.navigate(['results-summary']);\n                    return {} as ICart;\n                }\n            );\n        });\n    }\n\n    private validCart(cartData: any): boolean {\n        if (!cartData.items || cartData.items.length === 0) {\n            return false;\n        }\n\n        return !cartData.items.some((ci: any) => CartUtils.isInvalidItem(ci.selectedItem));\n    }\n\n    private getInvalidItems(cartData: any): ICartItem[] {\n        return cartData.items.filter((ci: ICartItem) =>\n            ci.selectedItem.bookingOptions.some((option) => CartUtils.isFailed(option.status))\n        );\n    }\n\n    private recheckCart(cartData: any, combId: CombinationId, deviceId: string, deferred: any): void {\n        this.cartService.recheckCartItem(combId, deviceId, false).then(\n            (success: ICart) => {\n                // this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, false);\n                let i = 0;\n                let needsACCRateCheck = false;\n                for (; i < success.items.length; i++) {\n                    if (\n                        success.items[i].serviceId === ServiceId.ACC &&\n                        success.items[i].selectedItem.recheckBefore === '0001-01-01T00:00:00Z'\n                    ) {\n                        needsACCRateCheck = true;\n                    }\n\n                    if (success.items[i].serviceId === ServiceId.FLIGHT) {\n                        this.listenersService.NotifyListeners(\n                            ListenerId.LISTEN_RATE_CHECK,\n                            success.items[i].selectedItem.data\n                        );\n                    }\n                }\n\n                if (needsACCRateCheck) {\n                    this.cartRoutingService.changeState(ServiceId.ACC_DETAILS, success.items[i], false, StateFrom.NONE);\n                    this.dialogService.openSnackBar({ message: this.translateService.instant('NOTIFS.RECHECK') });\n                }\n\n                this.cartService.setCart(success);\n                if (success.bookingStatus === CartStatus.STATUS_PRICE_CHANGED) {\n                    this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, true);\n                    deferred.reject();\n                    return;\n                }\n\n                deferred.resolve(success as ICart);\n            },\n            (error: any) => {\n                // this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, false);\n                /*                let msg = '';\n\n                const showError = error.error.showError ? error.error.showError : false;\n                if (error.error.showError) {\n                    msg = error.error.message + '. ' + error.error.error;\n                }\n\n                if (error.error.errors === 275) {\n                    error.error.errors = ServiceId.TRAIN;\n                }*/\n                if (ServiceIdToName[error.error.errors as ServiceId]) {\n                    const serviceId = error.error.errors as ServiceId;\n                    const invalidItems = cartData.items.filter((ci: any) => ci.serviceId === serviceId);\n                    if (invalidItems.length > 0) {\n                        this.cartService.reprice(combId).then(\n                            (cartDataRepriced: any) => {\n                                this.showInvalidCartDialog(\n                                    cartDataRepriced,\n                                    invalidItems,\n                                    invalidItems[0],\n                                    ServiceIdToName[serviceId]\n                                );\n                            },\n                            () => {}\n                        );\n                    }\n                }\n\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, true);\n                this.loaderService.triggerLoading.emit({ loading: false });\n                deferred.reject();\n            }\n        );\n    }\n\n    private showPriceChangeDialog(\n        priceChangeServId: ServiceId,\n        priceChangeId: string,\n        serviceName: string | undefined\n    ): void {\n        this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant('POPUPS.PRICE_CHANGED.TITLE'),\n                multipleContent: [this.translateService.instant('POPUPS.PRICE_CHANGED.BODY', { service: serviceName })],\n                cancelBtnTitle: this.translateService.instant('POPUPS.PRICE_CHANGED.2_CANCEL'),\n                confirmBtnTitle: this.translateService.instant('POPUPS.PRICE_CHANGED.1_ACCEPT'),\n                icon: { name: 'decision-required-dialog', iconStyle: { 'width.px': 64, 'height.px': 61.53 } },\n            })\n            .afterClosed()\n            .subscribe((acceptPriceChange: TzDialogReturn) => {\n                if (acceptPriceChange !== CONFIRM) {\n                    return;\n                }\n\n                this.cartService.applyPriceChange(priceChangeId).subscribe((success) => {\n                    this.router.navigate(['/checkout']);\n                });\n            });\n    }\n\n    private showInvalidCartDialog(\n        cartData: any,\n        invalidItems: ICartItem[],\n        cartItem: ICartItem,\n        serviceName: string | undefined\n    ) {\n        const showSkip =\n            cartData.items.length > invalidItems.length &&\n            cartItem.serviceId !== ServiceId.FLIGHT &&\n            cartItem.serviceId !== ServiceId.TRAIN &&\n            cartItem.serviceId !== ServiceId.ACC;\n\n        const messageKey = 'POPUPS.' + (showSkip ? 'INVALID_ITEM.BODY' : 'INVALID_ITEM.UPDATE_ONLY');\n        const { showPriceChange, priceChangeServId, priceChangeId } = CartUtils.checkPriceChangeOnly(invalidItems);\n\n        if (showPriceChange) {\n            this.showPriceChangeDialog(priceChangeServId, priceChangeId, serviceName);\n            return;\n        }\n\n        this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant('POPUPS.INVALID_ITEM.TITLE'),\n                multipleContent: [this.translateService.instant(messageKey, { service: serviceName })],\n                cancelBtnTitle: showSkip ? this.translateService.instant('POPUPS.INVALID_ITEM.SKIP') : undefined,\n                confirmBtnTitle: this.translateService.instant('POPUPS.INVALID_ITEM.UPDATE'),\n                icon: { name: 'decision-required-dialog', iconStyle: { 'width.px': 64, 'height.px': 61.53 } },\n            })\n            .afterClosed()\n            .subscribe((removeCart: TzDialogReturn) => {\n                if (removeCart === CONFIRM) {\n                    this.cartRoutingService.changeState(cartItem.serviceId, cartItem, false, StateFrom.NONE);\n                    return;\n                }\n\n                if (!showSkip) {\n                    return;\n                }\n\n                let optionId = '';\n                if (cartItem.serviceId === ServiceId.TRANSFER) {\n                    optionId = cartItem.selectedItem.bookingOptions[0].optionId;\n                }\n\n                this.cartService.removeCartData(cartItem.serviceId, optionId).subscribe((success) => {\n                    this.router.navigate(['/checkout']);\n                });\n            });\n    }\n\n    private beforeCheckout(cartData: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (!cartData || !cartData.items) {\n                return reject('cart empty');\n            }\n\n            if (!this.validCart(cartData)) {\n                let invalidItems = this.getInvalidItems(cartData);\n                invalidItems = invalidItems.filter((v, i, a) => a.findIndex((t) => t.serviceId === v.serviceId) === i);\n                if (invalidItems.length > 0) {\n                    const serviceName = invalidItems.reduce(\n                        (servicesTxt, item) =>\n                            servicesTxt + (servicesTxt !== '' ? ', ' : '') + ServiceIdToName[item.serviceId],\n                        ''\n                    );\n                    this.showInvalidCartDialog(cartData, invalidItems, invalidItems[0], serviceName);\n                }\n                return reject('invalid cart');\n            }\n\n            this.recheckCart(cartData, cartData.combId, cartData.deviceId, {\n                resolve,\n                reject,\n            });\n        });\n    }\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AppConfigDataService } from '@services/modules/core/dataservices/app-config-data.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DeviceIdForceResolver implements Resolve<string> {\n    constructor(private appConfigDataService: AppConfigDataService) {}\n\n    async resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<string> {\n        return await this.appConfigDataService.initDeviceId(true).catch(() => '');\n    }\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AppConfigDataService } from '@services/modules/core/dataservices/app-config-data.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DeviceIdResolver implements Resolve<string> {\n    constructor(private appConfigDataService: AppConfigDataService) {}\n\n    async resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<string> {\n        return await this.appConfigDataService.initDeviceId(false).catch(() => '');\n    }\n}\n","import { Resolve, Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable, Subscriber } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\nimport { UserDataService } from '@services/modules/user/dataservices/user.data.service';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PlatformService } from '@services/platform.service';\nimport { ModalService } from '@services/modal.service';\nimport { MobResetPasswordComponent } from '@shared/components/mobile/mob-reset-password/mob-reset-password.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PasswordTokenValidation implements Resolve<string> {\n    constructor(\n        private userDataService: UserDataService,\n        private router: Router,\n        private translateService: TranslateService,\n        private dialogService: DialogService,\n        private platformService: PlatformService,\n        private modalService: ModalService\n    ) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string> {\n        return new Observable<string>((subscriber: Subscriber<string>) => {\n            const token = route.params['token'];\n            const invalidToken = () => {\n                this.router.navigate(['search']).then(() => {\n                    this.dialogService.openSnackBarDialog(this.translateService.instant('NOTIFS.INVALID_TOKEN'));\n                });\n                subscriber.error('Invalid token');\n                subscriber.complete();\n            };\n\n            if (!token || token === '') {\n                invalidToken();\n                return;\n            }\n\n            this.userDataService.checkPasswordToken(token).subscribe(\n                (response) => {\n                    if (this.platformService.isMobileDevice) {\n                        this.router.navigate(['search']).then(() => {\n                            this.modalService.createMainModal(MobResetPasswordComponent, {\n                                data: { token },\n                                title: 'ACCOUNT.PASSWORD_',\n                            });\n                        });\n                    } else {\n                        subscriber.next(response.customerMail);\n                    }\n                    subscriber.complete();\n                },\n                () => invalidToken()\n            );\n        });\n    }\n}\n","import { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { ISearchStatus, UserSearchService } from '@services/searchEngine/services/user-search-service';\nimport { AppConfigDataService } from '@services/modules/core/dataservices/app-config-data.service';\nimport { LANGUAGES } from '@core/constants/languages.const';\nimport { SettingsService } from '@services/services/settings-service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RouteIdResolver implements Resolve<string> {\n    constructor(\n        private userSearchService: UserSearchService,\n        private appConfigDataService: AppConfigDataService,\n        private settingsService: SettingsService\n    ) {}\n\n    async resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<string> {\n        for (const langEntry of LANGUAGES.list) {\n            if (langEntry.i18nCode === route.url[0].path) {\n                this.settingsService.setLanguage(langEntry);\n                break;\n            }\n        }\n        console.log('****** resolve route id called', this.settingsService.langCode);\n        return await this.appConfigDataService.initDeviceId(true).then(\n            (deviceId) =>\n                this.userSearchService.searchFromRoute().then(\n                    (searchStatus: ISearchStatus) => deviceId,\n                    (searchStatus: ISearchStatus) => deviceId\n                ),\n            () => ''\n        );\n    }\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AppConfigDataService } from '@services/modules/core/dataservices/app-config-data.service';\nimport { take } from 'rxjs/operators';\nimport { DeviceIdForceResolver } from '@core/resolvers/device-id-force.resolver';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SearchPageResolver implements Resolve<void> {\n    constructor(\n        protected appConfigDataService: AppConfigDataService,\n        protected deviceIdForceResolver: DeviceIdForceResolver\n    ) {}\n\n    async resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<void> {\n        const deviceId = await this.deviceIdForceResolver.resolve(route, state);\n        if (deviceId) {\n            await this.appConfigDataService.setCountryIP(deviceId).pipe(take(1)).subscribe();\n        }\n    }\n}\n","import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { SettingsService } from '@services/services/settings-service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { LANGUAGES } from '@core/constants/languages.const';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TripIdResolver implements Resolve<string> {\n    constructor(private settingsService: SettingsService, private searchMetadataService: SearchMetadataService) {}\n\n    async resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<string> {\n        const tripQuery = this.searchMetadataService.parseTripUrl(window.location.search);\n        for (const langEntry of LANGUAGES.list) {\n            if (langEntry.code === tripQuery.lang) {\n                this.settingsService.setLanguage(langEntry);\n                break;\n            }\n        }\n        this.settingsService.setDeviceId(tripQuery.deviceId);\n        return await this.searchMetadataService.openTrip(tripQuery).then(\n            () => tripQuery.deviceId,\n            () => tripQuery.deviceId\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { Observable, Subscriber } from 'rxjs';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LoginUserGuard implements CanActivate {\n    constructor(private userService: UserService, private router: Router) {}\n    canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n        return new Observable<boolean>((subscriber: Subscriber<boolean>) => {\n            const askToLogin = () => {\n                this.userService.openLoginModel().then(\n                    () => subscriber.next(true),\n                    () => {\n                        this.router.navigate(['search']);\n                        subscriber.next(false);\n                    }\n                );\n            };\n\n            if (this.userService.IsLogged()) {\n                subscriber.next(true);\n            } else if (StorageManagerUtil.get('trazler_customer_token', true)) {\n                this.userService.getCustomer(false).then(\n                    () => subscriber.next(true),\n                    () => {\n                        askToLogin();\n                    }\n                );\n            } else {\n                askToLogin();\n            }\n        });\n    }\n}\n","export enum StorageKeys {\n    LANG = 'selected_language',\n    COOKIE = 'cookie_accept',\n    CURRENCY_CODE = 'selected_currency',\n    WALK_THROUGH = '_walk_through',\n    RECOMMENDED = '_recommended',\n    RECENT_ADDR = 'recentAddr',\n    MOB_LANDING_PAGE_SHOWN = 'mob_landing_page_shown',\n}\n","export enum FlightLuggageOptionTypes {\n    PERSONALITEM = 'personalItem',\n    CABIN = 'cabin',\n    CHECKIN = 'checkIn',\n}\n\nexport interface LuggagePrices {\n    additionalCharge: number;\n    additionalChargeNow: number;\n    conversionRate: number;\n    dueOnArrival: number;\n    listPrice: number;\n    listPriceCur: string;\n    originalPrice: {\n        ChargeAmt: number;\n        chargeCur: string;\n        chargeNowAmt: number;\n        chargeNowCur: string;\n        commission: {\n            amt: number;\n            strategy: number;\n            type: number;\n            value: number;\n        };\n        curCode: string;\n        isPayLater: false;\n        originalPrice: number;\n        providerPrice: number;\n    };\n    payLaterAmt: number;\n    payableAmt: number;\n}\n\nexport interface FlightLuggageOption {\n    byTotalWeight: boolean;\n    dimensions: string;\n    maxQuantity: number;\n    maxWeight: number;\n    prices: LuggagePrices;\n    quantity: number;\n    travelerTypes: string[];\n    type: FlightLuggageOptionTypes;\n    weightText: string;\n    weightTexts: string[];\n    combinationText: string;\n    index: string;\n    outwardIndex: string;\n    returnIndex: string;\n    weights: number[];\n}\n\nexport interface FlightLuggage {\n    cabin: {\n        combinable: boolean;\n        options: FlightLuggageOption[];\n        replaceIncluded: boolean;\n    };\n    checkIn: {\n        combinable: boolean;\n        options: FlightLuggageOption[];\n        replaceIncluded: boolean;\n    };\n}\n","import { CombinationId, DataId, Date, Time, TzDateTime } from '@schemas/modules/core/base-types';\nimport { CombServiceIds } from '@core/constants/comb-service-ids';\nimport { ILocation } from '@schemas/modules/core/location.model';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { MetaDataExt } from '@schemas/modules/search/meta';\nimport { CurCode } from '@schemas/modules/core/currency';\nimport { LangCode } from '@schemas/modules/core/ILanguage';\nimport { Trip } from '@core/constants/trip';\n\nexport enum NightChoices {\n    NIGHT_CHOICE_UNDEFINED = 0,\n    NIGHT_CHOICE_PREV_DAY = 1,\n    NIGHT_CHOICE_CUR_DAY = 2,\n}\n\nexport interface ICode {\n    Code: string;\n    IsCity: boolean;\n}\n\nexport interface ITrainDistanceRoute {\n    CodeInfo: ICode[];\n    Distance: number;\n}\n\nexport interface ISearchData {\n    from: ILocation | void;\n    to: ILocation | void;\n    address: ILocation | void;\n    tripType: Trip;\n    meetingCal: ICalendar | void;\n    tripCal: ICalendar | void;\n    transferCal: ICalendar | void;\n    rentalCal: ICalendar | void;\n    retainSearch: boolean;\n    hotelCode: string | void;\n    activeTransfer: string | void;\n    nightChoice: NightChoices | void;\n    journeyToUpdate: string;\n    transferDataID: DataId | void;\n    trainSupplierList: string[];\n    trainDistanceRoute: ITrainDistanceRoute[];\n}\n\nexport interface IEndUserInfos {\n    ip: string;\n    agent: string;\n    host: string;\n}\n\nexport interface IPartialUserSettings {\n    userCurReq: CurCode;\n    lang: LangCode;\n}\n\nexport interface ILangSettings {\n    code: LangCode;\n    i18nCode: LangCode;\n}\n\nexport interface IUserSettings extends IEndUserInfos, IPartialUserSettings {\n    langSettings: ILangSettings;\n    ctryCode: string;\n}\n\nexport interface IPassengers {\n    adults: number;\n    children: number;\n    childrenAges: number[];\n    infants: number;\n    infantAges: number[];\n    youth: number;\n    youthAges: number[];\n    rooms: number;\n    driversAge: number;\n    childSeat: boolean;\n    boosterSeat: boolean;\n    total?: number; //not sent by server\n    showBoosterSeat?: boolean; //not sent by server\n    showChildSeat?: boolean; //not sent by server\n}\n\nexport enum RunMode {\n    RUN_NORMAL = 0, // services are chosen one by one by customer\n    RUN_FAST = 1, // we automatically get for all selected service the best value and provide a direct booking capacity to user\n    RUN_FAMILY = 2, // to be defined - unused\n    RUN_BUSINESS = 3, // to be defined - unused\n}\n\nexport interface IContext {\n    runningMode: RunMode;\n    services: CombServiceIds;\n    travelType: Trip;\n}\n\nexport interface ISSIBase {\n    searchData: ISearchData;\n    settings?: IUserSettings;\n    dataId?: DataId;\n    combID?: CombinationId;\n    servId?: ServiceId;\n    passengers: IPassengers;\n    context: IContext;\n}\n\nexport interface IPreSearchResult {\n    metaData: MetaDataExt;\n    serviceSearch: ISSIBase;\n}\n\nexport interface ICalendar {\n    fromDate: Date; //2006-01-02\n    fromTime: Time;\n    toDate: Date; //2006-01-02\n    toTime: Time;\n    twoDates: boolean; // when true the calendar has the fromDate activated (round trip)\n    computeTransferTime: CombServiceIds; // internal field, contains a single service\n    arrival: TzDateTime; //Arrival date time on intermediary place (typically rental arrival in hotel)\n    departure: TzDateTime; //Departure date time from intermediary place (typically rental departure from hotel)\n    resultSet?: boolean;\n}\n\nexport interface SearchInfoInterface {\n    to: string;\n    from?: string;\n    adults: number;\n    children: number;\n    people: number;\n    dateRange?: string | null;\n    date?: string | null;\n    totalPersons?: number;\n    rooms?: number;\n}\n\nexport enum BestValType {\n    RECOMMENDED = '0',\n    CHEAPEST = '1',\n    QUICKEST = '2',\n}\n\nexport type bestValTypeMapping = {\n    [key in BestValType]?: boolean;\n};\n","import * as moment from 'moment';\n\nexport class DatesUtils {\n    public static readonly savedTzTravelerFormat = 'DD/MM/YYYY';\n    public static readonly updateTzTravelerFormat = 'DD-MM-YYYY';\n\n    public static getTZFormatDate(tzDate: string): string {\n        return tzDate.split('T')[0];\n    }\n\n    public static getTZFormatTime(tzDate: string) {\n        return tzDate.split('T')[1];\n    }\n\n    public static getDateFromTzDate(tzDate: string): null | Date {\n        if (!tzDate) {\n            console.error('invalidate date received');\n            return null;\n        }\n        const dateParts = tzDate.split(/[\\-|T:]/);\n        if (dateParts.length < 3) {\n            console.error('invalidate date received:' + tzDate);\n            return null;\n        }\n        return new Date(\n            +dateParts[0],\n            +dateParts[1] - 1,\n            +dateParts[2],\n            dateParts.length > 3 ? +dateParts[3] : 0,\n            dateParts.length > 4 ? +dateParts[4] : 0,\n            0,\n            0\n        );\n    }\n\n    public static getNewDate(date: string | Date): Date {\n        let nd;\n        if (date instanceof Date) {\n            nd = new Date(date);\n        } else {\n            const res = date.split('-');\n            if (res.length === 3) {\n                // to avoid timezone conversion\n                nd = new Date(parseInt(res[0], 10), parseInt(res[1], 10) - 1, parseInt(res[2], 10));\n            } else {\n                nd = new Date(date);\n            }\n        }\n        return nd;\n    }\n\n    public static formCalDatesControlObj(calData: any): any {\n        if (!calData || !calData.fromDate) {\n            return '';\n        }\n\n        const selected = { startDate: moment(), endDate: moment() };\n        selected.startDate = this.formMoment(calData.fromDate, calData.fromTime);\n        if (calData.toDate) {\n            selected.endDate = this.formMoment(calData.toDate, calData.toTime);\n        }\n        return selected;\n    }\n\n    // getAgeDiff gets the diff between two dates sent\n    public static getAgeDiff(birthDate: Date, ageAt: Date) {\n        let age = ageAt.getFullYear() - birthDate.getFullYear();\n        const m = ageAt.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && ageAt.getDate() < birthDate.getDate())) {\n            age--;\n        }\n        return age;\n    }\n\n    public static hourDiff(endDate: Date, startDate: Date): number {\n        let diff = (endDate.getTime() - startDate.getTime()) / 1000;\n        diff /= 60 * 60;\n        return Math.abs(Math.round(diff));\n    }\n\n    public static formatDate(dateStr: string | Date, strFormat: string, fotmatTo: string): string {\n        if (!dateStr || dateStr === '') {\n            return '';\n        }\n\n        return moment(dateStr, strFormat).format(fotmatTo);\n    }\n\n    public static updateTzFormDate(date: string | Date, dateFormat?: string): string {\n        if (!date || date === '') {\n            return '';\n        }\n\n        return moment(date, dateFormat).format(this.updateTzTravelerFormat);\n    }\n\n    private static setTime(date: Date, timeStr: string): void {\n        const time = timeStr.split(':');\n        if (time.length !== 2) {\n            return;\n        }\n\n        date.setHours(parseInt(time[0], 10), parseInt(time[1], 10));\n    }\n\n    private static formMoment(dateStr: string | Date, timeStr: string): moment.Moment {\n        const date = this.getNewDate(dateStr);\n        DatesUtils.setTime(date, timeStr);\n        return moment(date);\n    }\n}\n\n/*\n\nangular.module('trazler.services.DatesService', []).service('DatesService', [\"$rootScope\", \"$locale\", \"$filter\", \"ListenersService\",\n  function ($rootScope, $locale, $filter, ListenersService) {\n    // defining formats for date formatting by using the predefined formats that we get from locale\n    let tzDateTime;\n    let tzTimeDate;\n    let tzMonthDay;\n    // we extract d MMM format ( result can be 'MMM d', 'd MMM', ... depending on lang\n    let monthDateFmt;\n    let monthDateTimeFmt;\n    let mapLocaleDayNum = [];\n    let listenerId;\n\n    // build a mapping map between day number (starting on Sunday) and day number in locale format (starting as locales defined it)\n    // for instance when date.getDay() returns 0 (meaining sunday) the mapping table returns 6 if first day of week is 0 (monday)\n    function buildLocalDayMap() {\n      let firstDay = $locale.DATETIME_FORMATS.FIRSTDAYOFWEEK;\n\n      for (let i = 0; i < 7; i++) {\n        if (6 - firstDay + i < 7) {\n          mapLocaleDayNum[i] = 6 - firstDay + i;\n        } else {\n          mapLocaleDayNum[i] = firstDay + i - 1;\n        }\n      }\n    }\n\n    function init() {\n      const regex1 = /(MMM.*d)|(d.*MMM)/gm;\n      tzDateTime = $locale.DATETIME_FORMATS.mediumDate + ' ' + $locale.DATETIME_FORMATS.shortTime; //\"d MMM y HH:mm\"\n      tzTimeDate = $locale.DATETIME_FORMATS.shortTime + ' ' + $locale.DATETIME_FORMATS.mediumDate; //\"HH:mm d MMM y\"\n      tzMonthDay = $locale.DATETIME_FORMATS.medium.substring(0, 5); //\"d MMM\"\n      // we extract d MMM format ( result can be 'MMM d', 'd MMM', ... depending on lang\n      let m = regex1.exec($locale.DATETIME_FORMATS.mediumDate);\n      if (m.length) {\n        monthDateFmt = m[0];\n      }\n      monthDateTimeFmt = monthDateFmt + ' HH:mm';\n\n      $rootScope.tzShortFullDate = $locale.DATETIME_FORMATS.fullDate.replace(', y', '').replace(' y', ''); //\"EEEE, d MMMM\"\n      $rootScope.tzDateTime = tzDateTime;\n      $rootScope.tzTimeDate = tzTimeDate;\n      $rootScope.tzMonthDay = tzMonthDay;\n      $rootScope.tzTrainDate = \"EEE MMMM d, y\";\n      $rootScope.tzMonthDate = monthDateFmt; //\"d MMM\"\n      $rootScope.tzMonthDateTimeFmt = monthDateTimeFmt;\n      //\"dd/MM/yyyy\"\n      $rootScope.tzPlaceholderFormat = $locale.DATETIME_FORMATS.shortDate.replace(/m+/i, 'MM').replace(/d+/i, 'dd').replace(/y+/i, 'yyyy');\n      buildLocalDayMap();\n      if (!listenerId) {\n        listenerId = ListenersService.RegisterListener(ListenersService.LISTEN_LANG, init);\n      }\n    }\n\n\n    function getPlaceHolderDateFormat() {\n      return $rootScope.tzPlaceholderFormat;\n    }\n\n    init();\n\n    // getAgeDiff gets the diff between two dates sent\n    function getAgeDiff(d1, d2) {\n      if (!d1) {\n        return 0\n      }\n\n      var ageAt = d2 ? new Date(d2) : new Date();\n      var birthDate = new Date(d1);\n      var age = ageAt.getFullYear() - birthDate.getFullYear();\n      var m = ageAt.getMonth() - birthDate.getMonth();\n      if (m < 0 || (m === 0 && ageAt.getDate() < birthDate.getDate())) {\n        age--;\n      }\n      return age;\n    }\n\n    function getAge(dob, ageAt) {\n      let monthDiff = (ageAt ? new Date(ageAt) : new Date()) - dob;\n      let ageDT = new Date(monthDiff);\n      let year = ageDT.getUTCFullYear();\n      return Math.abs(year - 1970);\n    }\n\n    function getProfileDate(dateStr) {\n      if (!dateStr) return;\n\n      if (dateStr === \"01/01/0001\") return;\n\n      let parts = dateStr.split(\"/\") || [];\n      if (parts.length !== 3) return;\n\n      let dd = parts[0];\n      let mm = parseInt(parts[1]);\n      let yyyy = parts[2];\n\n      // In js month starts at 0\n      mm = mm - 1;\n      return new Date(yyyy, mm, dd);\n    }\n\n    function getWeekHeads() {\n      console.log($locale.DATETIME_FORMATS);\n      let localesDays = $locale.DATETIME_FORMATS.SHORTDAY.slice(1);\n      localesDays.push($locale.DATETIME_FORMATS.SHORTDAY[0]);\n      let res = localesDays.slice($locale.DATETIME_FORMATS.FIRSTDAYOFWEEK);\n      return [...res, ...localesDays.slice(0, $locale.DATETIME_FORMATS.FIRSTDAYOFWEEK)];\n    }\n\n    // return the day using locale configuration for first day of week\n    function getDay(date) {\n      return mapLocaleDayNum[date.getDay()];\n    }\n\n    function getDateInMilliSeconds(dateStr) {\n      if (dateStr === \"\") return;\n      return Date.parse(dateStr);\n    }\n\n    function getDateNoTimeFromStr(date) {\n      let newDate = new Date(date);\n      return getDateNoTime(newDate);\n    }\n\n    function getDateNoTime(date) {\n      if (typeof date === 'object') {\n        return date.getUTCFullYear() + \"-\" + (\"0\" + (date.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + date.getUTCDate()).slice(-2);\n      }\n      return getDateNoTimeFromStr(date);\n    }\n\n    function getDateNoTimeFrom(year, month, day) {\n      return year + \"-\" + (\"0\" + (month + 1)).slice(-2) + \"-\" + (\"0\" + day).slice(-2);\n    }\n\n\n\n\n    function setTime(date, time) {\n      let dateObj = new Date(date);\n      if (!time) return dateObj;\n\n      let timeArr = time.split(':');\n      if (timeArr.length !== 2) return dateObj;\n\n      dateObj.setHours(timeArr[0]);\n      dateObj.setMinutes(timeArr[1]);\n      return dateObj;\n    }\n\n    return {\n      init,\n      getAge,\n      getAgeDiff,\n      getDateFromTzDate,\n      getDateNoTime,\n      getDateNoTimeFrom,\n      getWeekHeads,\n      getDay,\n      setTime,\n      get monthDateTimeFmt() {\n        return monthDateTimeFmt;\n      },\n      get monthDateFmt() {\n        return monthDateFmt;\n      },\n      get tzDateTime() {\n        return tzDateTime;\n      },\n      get tzTimeDate() {\n        return tzTimeDate;\n      },\n      get tzMonthDay() {\n        return tzMonthDay;\n      },\n      getProfileDate,\n      getDateInMilliSeconds,\n      getPlaceHolderDateFormat,\n      getTZFormatDate,\n      getTZFormatTime\n    };\n  }\n]);\n*/\n","export const EN_US_LOCALE = {\n    DATETIME_FORMATS: {\n        AMPMS: ['AM', 'PM'],\n        DAY: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ERANAMES: ['Before Christ', 'Anno Domini'],\n        ERAS: ['BC', 'AD'],\n        FIRSTDAYOFWEEK: 6,\n        MONTH: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        SHORTDAY: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        SHORTMONTH: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        STANDALONEMONTH: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        WEEKENDRANGE: [5, 6],\n        fullDate: 'EEEE, MMMM d, y',\n        longDate: 'MMMM d, y',\n        medium: 'MMM d, y h:mm:ss a',\n        mediumDate: 'MMM d, y',\n        mediumTime: 'h:mm:ss a',\n        short: 'M/d/yy h:mm a',\n        shortDate: 'M/d/yy',\n        shortTime: 'h:mm a',\n        shortDateMonth: 'MMM d',\n        tzDay: 'EEEE',\n        tzFullShortDate: 'EEEE, MMM d',\n        tzDoubleDatePart1: 'MMM d – ',\n        tzDoubleDatePart2: 'MMM d, y',\n        tzDoubleDatePart1SameMonth: 'MMM d – ',\n        tzDoubleDatePart2SameMonth: 'd, y',\n        tzTravelerShortDate: 'MM/DD/YYYY',\n    },\n    NUMBER_FORMATS: {\n        CURRENCY_SYM: '$',\n        DECIMAL_SEP: '.',\n        GROUP_SEP: ',',\n        PATTERNS: [\n            {\n                gSize: 3,\n                lgSize: 3,\n                maxFrac: 3,\n                minFrac: 0,\n                minInt: 1,\n                negPre: '-',\n                negSuf: '',\n                posPre: '',\n                posSuf: '',\n            },\n            {\n                gSize: 3,\n                lgSize: 3,\n                maxFrac: 2,\n                minFrac: 2,\n                minInt: 1,\n                negPre: '-¤',\n                negSuf: '',\n                posPre: '¤',\n                posSuf: '',\n            },\n        ],\n    },\n    id: 'en-us',\n    localeID: 'en_US',\n};\n","export const EN_LOCALE = {\n    DATETIME_FORMATS: {\n        AMPMS: ['am', 'pm'],\n        DAY: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ERANAMES: ['Before Christ', 'Anno Domini'],\n        ERAS: ['BC', 'AD'],\n        FIRSTDAYOFWEEK: 0,\n        MONTH: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        SHORTDAY: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        SHORTMONTH: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        STANDALONEMONTH: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        WEEKENDRANGE: [5, 6],\n        fullDate: 'EEEE, d MMMM y',\n        longDate: 'd MMMM y',\n        medium: 'd MMM y HH:mm:ss',\n        mediumDate: 'd MMM y',\n        mediumTime: 'HH:mm:ss',\n        short: 'dd/MM/y HH:mm',\n        shortDate: 'dd/MM/y',\n        shortTime: 'HH:mm',\n        shortDateMonth: 'd MMM',\n        tzDay: 'EEEE',\n        tzFullShortDate: 'EEEE, d MMM',\n        tzDoubleDatePart1: 'd MMM – ',\n        tzDoubleDatePart2: 'd MMM y',\n        tzDoubleDatePart1SameMonth: 'd – ',\n        tzDoubleDatePart2SameMonth: 'd MMM y',\n        tzTravelerShortDate: 'DD/MM/YYYY',\n    },\n    NUMBER_FORMATS: {\n        CURRENCY_SYM: '£',\n        DECIMAL_SEP: '.',\n        GROUP_SEP: ',',\n        PATTERNS: [\n            {\n                gSize: 3,\n                lgSize: 3,\n                maxFrac: 3,\n                minFrac: 0,\n                minInt: 1,\n                negPre: '-',\n                negSuf: '',\n                posPre: '',\n                posSuf: '',\n            },\n            {\n                gSize: 3,\n                lgSize: 3,\n                maxFrac: 2,\n                minFrac: 2,\n                minInt: 1,\n                negPre: '-¤',\n                negSuf: '',\n                posPre: '¤',\n                posSuf: '',\n            },\n        ],\n    },\n    id: 'en-gb',\n    localeID: 'en_GB',\n};\n","export const FR_LOCALE = {\n    DATETIME_FORMATS: {\n        AMPMS: ['AM', 'PM'],\n        DAY: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n        ERANAMES: ['avant Jésus-Christ', 'après Jésus-Christ'],\n        ERAS: ['av. J.-C.', 'ap. J.-C.'],\n        FIRSTDAYOFWEEK: 0,\n        MONTH: [\n            'janvier',\n            'février',\n            'mars',\n            'avril',\n            'mai',\n            'juin',\n            'juillet',\n            'août',\n            'septembre',\n            'octobre',\n            'novembre',\n            'décembre',\n        ],\n        SHORTDAY: ['di', 'lu', 'ma', 'me', 'je', 've', 'sa'],\n        SHORTMONTH: ['janv', 'févr', 'mars', 'avr', 'mai', 'juin', 'juil', 'août', 'sept', 'oct', 'nov', 'déc'],\n        STANDALONEMONTH: [\n            'janvier',\n            'février',\n            'mars',\n            'avril',\n            'mai',\n            'juin',\n            'juillet',\n            'août',\n            'septembre',\n            'octobre',\n            'novembre',\n            'décembre',\n        ],\n        WEEKENDRANGE: [5, 6],\n        fullDate: 'EEEE d MMMM y',\n        longDate: 'd MMMM y',\n        medium: 'd MMM y HH:mm:ss',\n        mediumDate: 'd MMM y',\n        mediumTime: 'HH:mm:ss',\n        short: 'dd/MM/y HH:mm',\n        shortDate: 'dd/MM/y',\n        shortTime: 'HH:mm',\n        shortDateMonth: 'd MMM',\n        tzDay: 'EEEE',\n        tzFullShortDate: 'EEEE d MMM',\n        tzDoubleDatePart1: 'd MMM – ',\n        tzDoubleDatePart2: 'd MMM y',\n        tzDoubleDatePart1SameMonth: 'd – ',\n        tzDoubleDatePart2SameMonth: 'd MMM y',\n        tzTravelerShortDate: 'DD/MM/YYYY',\n    },\n    NUMBER_FORMATS: {\n        CURRENCY_SYM: '€',\n        DECIMAL_SEP: ',',\n        GROUP_SEP: ' ',\n        PATTERNS: [\n            {\n                gSize: 3,\n                lgSize: 3,\n                maxFrac: 3,\n                minFrac: 0,\n                minInt: 1,\n                negPre: '-',\n                negSuf: '',\n                posPre: '',\n                posSuf: '',\n            },\n            {\n                gSize: 3,\n                lgSize: 3,\n                maxFrac: 2,\n                minFrac: 2,\n                minInt: 1,\n                negPre: '-',\n                negSuf: ' ¤',\n                posPre: '',\n                posSuf: ' ¤',\n            },\n        ],\n    },\n    id: 'fr',\n    localeID: 'fr',\n};\n","import { PagesUrls } from '@core/constants/pages-urls';\n\nexport class PageUtils {\n    public static is(url: string, pages: PagesUrls | PagesUrls[]): boolean {\n        if (Array.isArray(pages)) {\n            return this.checkUrlInPages(url, pages);\n        }\n\n        if (pages === '/') {\n            return url === '/';\n        }\n\n        const urlSegments = this.splitUrl(url);\n        const pageUrlSegments = this.splitUrl(pages);\n        const noDiffLength =\n            this.checkSegmentsForDots(pageUrlSegments) || urlSegments.length === pageUrlSegments.length;\n\n        return noDiffLength && this.checkUrlSegments(urlSegments, pageUrlSegments);\n    }\n\n    private static checkUrlInPages(url: string, hidePages: PagesUrls[]): boolean {\n        return hidePages.map((page) => this.is(url, page)).some((value) => value);\n    }\n\n    private static splitUrl(url: string): string[] {\n        return url.split('/').filter(Boolean);\n    }\n\n    private static checkUrlSegments(urlSegments: string[], pageUrlSegments: string[]): boolean {\n        if (this.checkSegmentsForDots(pageUrlSegments)) {\n            return this.checkUrlSegmentsWithDots(urlSegments, pageUrlSegments);\n        }\n\n        const checkEvery = (value: string, index: number) => value === ':id' || value === urlSegments[index];\n\n        return pageUrlSegments.every(checkEvery);\n    }\n\n    private static checkUrlSegmentsWithDots(urlSegments: string[], pageUrlSegments: string[]): boolean {\n        const checkAll = urlSegments.reduce(\n            (acc, value, index) => {\n                if (!acc.checkNext) {\n                    return acc;\n                }\n\n                const checkNext = pageUrlSegments[index] !== '...' || !acc.result;\n\n                return {\n                    result: !checkNext || pageUrlSegments[index] === ':id' || value === pageUrlSegments[index],\n                    checkNext,\n                };\n            },\n            { checkNext: true, result: true }\n        );\n\n        return checkAll.result;\n    }\n\n    private static checkSegmentsForDots(segments: string[]): boolean {\n        return segments.includes('...');\n    }\n\n    /*public static autoTest(){\n        console.log('starting url auto test');\n\n        this.is('/hotels/zejkdkjh', PagesUrls.RESULT_HOTELS) && console.error('wrong url check 1');\n        !PageUtils.is('/hotels', PagesUrls.RESULT_HOTELS)&& console.error('wrong url check 2');\n        PageUtils.is('/hotelssss/zejkdkjh', PagesUrls.RESULT_HOTELS)&& console.error('wrong url check 3');\n        PageUtils.is('/hotel/zejkdkjh', PagesUrls.RESULT_HOTELS)&& console.error('wrong url check 4');\n        !PageUtils.is('/hotel/zejkdkjh', PagesUrls.RESULT_HOTEL_DETAILS)&& console.error('wrong url check 5');\n        PageUtils.is('/travel/flight', PagesUrls.RESULTS_FLIGHTS)&& console.error('wrong url check 6');\n        !PageUtils.is('/travel/flights', PagesUrls.RESULTS_FLIGHTS)&& console.error('wrong url check 6b');\n        PageUtils.is('/travel/flightss', PagesUrls.RESULTS_FLIGHTS)&& console.error('wrong url check 7');\n        PageUtils.is('/travel/flight/fff', PagesUrls.RESULTS_FLIGHTS)&& console.error('wrong url check 8');\n        !PageUtils.is('/travel/flights/fff', PagesUrls.RESULTS_FLIGHTS)&& console.error('wrong url check 8b');\n        !PageUtils.is('/travel/trains/sss', PagesUrls.RESULTS_TRAINS)&& console.error('wrong url check 9');\n        PageUtils.is('/travel/car-rentals', PagesUrls.RESULTS_FLIGHTS)&& console.error('wrong url check 10');\n        !PageUtils.is('/car-rentals', PagesUrls.RESULT_CAR_RENTALS)&& console.error('wrong url check 11');\n        !PageUtils.is('/car-rentals/sss', PagesUrls.RESULT_CAR_RENTALS)&& console.error('wrong url check 12');\n        !PageUtils.is('/transfers', PagesUrls.RESULT_TRANSFERS)&& console.error('wrong url check 13');\n        !PageUtils.is('/transfers/jjj/ddd', PagesUrls.RESULT_TRANSFERS)&& console.error('wrong url check 14');\n        !PageUtils.is('/', PagesUrls.HOME)&& console.error('wrong url check 16');\n        PageUtils.is('/ss', PagesUrls.HOME)&& console.error('wrong url check 17');\n        !PageUtils.is('/', [PagesUrls.HOME,PagesUrls.SEARCH])&& console.error('wrong url check 18');\n        !PageUtils.is('/search', [PagesUrls.HOME,PagesUrls.SEARCH])&& console.error('wrong url check 19');\n    }*/\n}\n","import { LANGUAGES } from '@core/constants/languages.const';\nimport { StorageKeys } from '@schemas/modules/core/storage-keys';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageManagerUtil {\n    public static readonly LOCAL = 0;\n    public static readonly SESSION = 1;\n    public static readonly ACCEPT_UNDEFINED = null;\n    public static readonly ACCEPT_REQUIRED = 1;\n    public static readonly ACCEPT_ALL = 2;\n    private static readonly languages = LANGUAGES;\n    private static readonly getHooks: any = {\n        selected_language: (language: any) => {\n            if (language === null) {\n                if (window.location.host !== 'trazler.com') {\n                    const browserLanguages = StorageManagerUtil.getBrowserLocales({ languageCodeOnly: true });\n                    language = StorageManagerUtil.languages.list.find((lang: any) =>\n                        browserLanguages ? lang.code === browserLanguages[0] : false\n                    );\n                    console.log({ language });\n                }\n                if (!language) {\n                    language = StorageManagerUtil.languages.list[0];\n                }\n            }\n            return language;\n        },\n    };\n    private static readonly cookieMap: { [key in string]: { p?: number; s?: number; r: boolean; d?: string } } = {\n        searchInfos: { p: StorageManagerUtil.SESSION, r: true }, // r true when required, false when optional\n        searchInfosLocal: { p: StorageManagerUtil.LOCAL, r: true },\n        trazler_customer_token: { p: StorageManagerUtil.LOCAL, r: true },\n        deviceId: { p: StorageManagerUtil.SESSION, r: true },\n        xsfrToken: { p: StorageManagerUtil.SESSION, r: true },\n        cookie_accept: { p: StorageManagerUtil.LOCAL, r: true },\n        //'XSRF-TOKEN': {p: cookie, r: true}, handled by Angular\n        selected_currency: { p: StorageManagerUtil.LOCAL, r: true },\n        verifiedMail: { p: StorageManagerUtil.SESSION, r: true },\n        cartCurrency: { p: StorageManagerUtil.SESSION, r: true },\n        bookingId: { p: StorageManagerUtil.SESSION, r: true },\n        booking_DetailID: { s: StorageManagerUtil.LOCAL, r: true },\n        _prevState: { p: StorageManagerUtil.SESSION, r: true },\n        latestBookingId: { p: StorageManagerUtil.SESSION, r: true },\n        skipSignIn: { p: StorageManagerUtil.SESSION, r: true },\n        cardMiniInfo: { p: StorageManagerUtil.SESSION, r: true },\n        preSearchInfos: { p: StorageManagerUtil.SESSION, r: true },\n        searchServiceInfos: { p: StorageManagerUtil.SESSION, r: true },\n        searchResults: { p: StorageManagerUtil.SESSION, r: true },\n        sessionEndTime: { p: StorageManagerUtil.SESSION, r: true },\n        pwdPrevPath: { p: StorageManagerUtil.SESSION, r: true },\n        _login_redirect: { p: StorageManagerUtil.SESSION, r: true },\n        trazler_admin_token: { p: StorageManagerUtil.LOCAL, r: true },\n        trazler_socialLogin: { p: StorageManagerUtil.LOCAL, r: true },\n        trazler_socialLogin_token: { p: StorageManagerUtil.LOCAL, r: true },\n        trazler_socialLogin_close_window: { p: StorageManagerUtil.LOCAL, r: true },\n        rental_map_center: { p: StorageManagerUtil.SESSION, r: true },\n        hotel_map_center: { p: StorageManagerUtil.SESSION, r: true },\n        activeTransfer: { p: StorageManagerUtil.SESSION, r: true },\n        searchInfos_l: { p: StorageManagerUtil.LOCAL, r: true },\n        _walk_through: { p: StorageManagerUtil.LOCAL, r: true },\n        selected_language: { p: StorageManagerUtil.LOCAL, r: true, d: 'EUR' }, //d : default value when cookie rejected\n        recentAddr: { p: StorageManagerUtil.LOCAL, r: true, d: '{}' },\n        _recommended: { p: StorageManagerUtil.LOCAL, r: true, d: '{}' },\n        ip_country: { p: StorageManagerUtil.LOCAL, r: true, d: '{}' },\n        installTzAlertShown: { p: StorageManagerUtil.SESSION, r: true },\n        checkoutFormData: { p: StorageManagerUtil.LOCAL, r: true },\n        resultSortBy0: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy1: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy2: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy3: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy4: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy5: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy6: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy7: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy8: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy101: { p: StorageManagerUtil.SESSION, r: true },\n        resultSortBy999: { p: StorageManagerUtil.SESSION, r: true },\n        mob_landing_page_shown: { p: StorageManagerUtil.LOCAL, r: true },\n        destination: { p: StorageManagerUtil.SESSION, r: true }, // store current destination data (for page refresh)\n    };\n    public cookieAcceptStatus: number | null = StorageManagerUtil.ACCEPT_UNDEFINED;\n\n    constructor() {\n        this.cookieAcceptStatus = StorageManagerUtil.get(StorageKeys.COOKIE, true);\n    }\n\n    public static clear(storageType: number) {\n        switch (storageType) {\n            case StorageManagerUtil.LOCAL:\n                localStorage.clear();\n                break;\n            case StorageManagerUtil.SESSION:\n                sessionStorage.clear();\n                break;\n            default:\n                console.error('unknown storage type to clear');\n        }\n    }\n\n    public static remove(key: string) {\n        switch (StorageManagerUtil.cookieMap[key].p) {\n            case StorageManagerUtil.SESSION:\n                return window.sessionStorage.removeItem(key);\n            case StorageManagerUtil.LOCAL:\n                return window.localStorage.removeItem(key);\n            /*case cookie:\n                return $cookies.remove(key);*/\n            default:\n                console.error('unknown cookie key ' + key);\n        }\n    }\n\n    public static set(key: string, value: any, noJson?: boolean): void {\n        const cookSetting = StorageManagerUtil.cookieMap[key];\n        if (!cookSetting) {\n            console.error('invalid cookie key:' + key);\n        }\n        if (!cookSetting.r) {\n            return;\n        }\n        return StorageManagerUtil.setInternal(key, value, cookSetting, noJson);\n    }\n\n    public static setInternal(key: string, value: any, cookSetting: any, noJson?: boolean): void {\n        const decodeFunc = noJson ? StorageManagerUtil.noop : JSON.stringify;\n        switch (cookSetting.p) {\n            case StorageManagerUtil.SESSION:\n                return window.sessionStorage.setItem(key, decodeFunc(value));\n            case StorageManagerUtil.LOCAL:\n                return window.localStorage.setItem(key, decodeFunc(value));\n            /*case cookie:\n                return $cookies.put(key, value);*/\n            default:\n                console.error('unknown cookie key ' + key);\n        }\n    }\n\n    public static getCookie(): any | null {\n        if (window.location.search) {\n            return this.ACCEPT_ALL;\n        }\n        return StorageManagerUtil.get(StorageKeys.COOKIE, true);\n    }\n\n    public static get(key: string, noJson?: boolean): any | null {\n        const cookSetting = StorageManagerUtil.cookieMap[key];\n\n        if (!cookSetting) {\n            console.error('invalid cookie key:' + key);\n        }\n        if (!cookSetting.r) {\n            return cookSetting.d ? cookSetting.d : null;\n        }\n\n        return StorageManagerUtil.getInternal(key, cookSetting, noJson);\n    }\n\n    public static getMobLandingPageIsShown(): any | null {\n        return StorageManagerUtil.get(StorageKeys.MOB_LANDING_PAGE_SHOWN, true);\n    }\n\n    public static setLandingPageIsShown(): void {\n        return StorageManagerUtil.set(StorageKeys.MOB_LANDING_PAGE_SHOWN, 1, true);\n    }\n\n    private static getBrowserLocales(options = {}) {\n        const defaultOptions = {\n            languageCodeOnly: false,\n        };\n\n        const opt = {\n            ...defaultOptions,\n            ...options,\n        };\n\n        const browserLocales = navigator.languages === undefined ? [navigator.language] : navigator.languages;\n\n        if (!browserLocales) {\n            return undefined;\n        }\n\n        return browserLocales.map((locale) => {\n            const trimmedLocale = locale.trim();\n\n            return opt.languageCodeOnly ? trimmedLocale.split(/-|_/)[0] : trimmedLocale;\n        });\n    }\n\n    private static getInternal(key: string, cookSetting: any, noJson?: boolean): any | string | null {\n        let val: string | null = null;\n\n        switch (cookSetting.p) {\n            case StorageManagerUtil.SESSION:\n                val = window.sessionStorage.getItem(key);\n                break;\n            case StorageManagerUtil.LOCAL:\n                val = window.localStorage.getItem(key);\n                break;\n            /*case cookie:\n                return $cookies.get(key);*/\n            default:\n                console.error('unknown cookie key ' + key);\n        }\n\n        if (val && !noJson) {\n            val = JSON.parse(val);\n        }\n        if (StorageManagerUtil.getHooks[key] && typeof StorageManagerUtil.getHooks[key] === 'function') {\n            return StorageManagerUtil.getHooks[key](val);\n        } else {\n            return val;\n        }\n    }\n\n    private static noop = (val: any): any => val;\n\n    public setCookie(value: any): void {\n        this.cookieAcceptStatus = value;\n\n        return StorageManagerUtil.set(StorageKeys.COOKIE, value, true);\n    }\n\n    //setOptional and getOptional are checking the cookie acceptance\n    // use these functions to access cookie values which are not required\n    public setOptional(key: string, value: any, noJson?: boolean): void {\n        const cookSetting = StorageManagerUtil.cookieMap[key];\n\n        if (!cookSetting) {\n            console.error('invalid cookie key:' + key);\n        }\n        if (!cookSetting.r && this.cookieAcceptStatus !== StorageManagerUtil.ACCEPT_ALL) {\n            return;\n        }\n\n        return StorageManagerUtil.setInternal(key, value, cookSetting, noJson);\n    }\n\n    public getOptional(key: string, noJson?: boolean): any {\n        const cookSetting = StorageManagerUtil.cookieMap[key];\n\n        if (!cookSetting) {\n            console.error('invalid cookie key:' + key);\n        }\n        if (!cookSetting.r && this.cookieAcceptStatus !== StorageManagerUtil.ACCEPT_ALL) {\n            return cookSetting.d;\n        }\n\n        return StorageManagerUtil.getInternal(key, cookSetting, noJson);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { window } from 'ngx-bootstrap/utils';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ToolsService {\n    constructor() {}\n\n    public static distance(lat1: number, lon1: number, lat2: number, lon2: number): number {\n        // return distance in km\n\n        if (lat1 === lat2 && lon1 === lon2) {\n            return 0;\n        } else {\n            const radlat1 = (Math.PI * lat1) / 180;\n            const radlat2 = (Math.PI * lat2) / 180;\n            const theta = lon1 - lon2;\n            const radtheta = (Math.PI * theta) / 180;\n            let dist =\n                Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n            if (dist > 1) {\n                dist = 1;\n            }\n            dist = Math.acos(dist);\n            dist = (dist * 180) / Math.PI;\n            dist = dist * 60 * 1.1515;\n            dist = dist * 1.609344;\n            return dist;\n        }\n    }\n\n    public static deepCopy(data: any): any {\n        if (data) {\n            return JSON.parse(JSON.stringify(data));\n        } else {\n            return null;\n        }\n    }\n\n    public static hasSomeParentTheClass(element: HTMLElement, classname: string): boolean {\n        if (element.className.split(' ').indexOf(classname) >= 0) {\n            return true;\n        }\n\n        if (!element.parentNode) {\n            return false;\n        }\n\n        return ToolsService.hasSomeParentTheClass(element.parentElement as HTMLElement, classname);\n    }\n\n    // check for empty object, return true if not empty\n\n    public static isSet(object: object): boolean {\n        return (\n            object && // 👈 null and undefined check\n            Object.keys(object).length !== 0 &&\n            Object.getPrototypeOf(object) === Object.prototype\n        );\n    }\n\n    public static getTransFormTranslateOfElement(myElement: any, direction = 'y') {\n        const identifier = direction === 'y' ? 'm22' : 'm41';\n        const style = window.getComputedStyle(myElement);\n        const matrix = new WebKitCSSMatrix(style.transform);\n        return matrix[identifier];\n    }\n\n    // used to debug who changed a field in a structure\n    // display a stack when all value is set\n    // pass obj and field name to monitor\n    public debugSetter(debugObj: any, debugField: string | number): void {\n        const val = debugObj[debugField];\n        delete debugObj[debugField];\n\n        Object.defineProperty(debugObj, debugField, {\n            get() {\n                const self = this;\n                //console.log(self['_'+debugField]);\n                return self['_' + debugField];\n            },\n            set(value) {\n                const self = this;\n                self['_' + debugField] = value;\n                console.error(self['_' + debugField]);\n            },\n        });\n        debugObj[debugField] = val;\n    }\n}\n","import { DefaultPassenger, PassengerReq } from '@shared/schemas/tz-service-search-data';\nimport { TranslateService } from '@ngx-translate/core';\n\ninterface SelectedServices {\n    [key: string]: boolean;\n}\n\nexport class TzPassengerUtil {\n    public static rentalOnly(selectedServices: SelectedServices): boolean {\n        let showRental = selectedServices['rentCar'];\n\n        for (const key in selectedServices) {\n            if (key !== 'activity' && key !== 'rentCar' && selectedServices[key]) {\n                showRental = false;\n            }\n        }\n        return showRental;\n    }\n\n    public static formPaxDisplayStr(\n        selectedServices: SelectedServices,\n        pax: DefaultPassenger,\n        translateService: TranslateService,\n        forCheckout: boolean\n    ): string {\n        let displayStr =\n            pax.adults <= 0\n                ? ''\n                : `${pax.adults} ${translateService.instant('TRAVELLER.' + (pax.adults > 1 ? 'ADULTS' : 'ADULT'))}`;\n\n        if (forCheckout) {\n            const children = pax.children + pax.youth;\n            if (children > 0) {\n                const childText = translateService.instant(children > 1 ? 'SEARCH.CHILDREN' : 'SEARCH.CHILD');\n                displayStr = `${displayStr}, ${children} ${childText}`;\n            }\n\n            if (pax.infants > 0) {\n                const cSuffix = translateService.instant(pax.infants < 2 ? 'SEARCH.INFANT' : 'SEARCH.INFANTS');\n                displayStr = `${displayStr}, ${pax.infants} ${cSuffix}`;\n            }\n\n            return displayStr;\n        }\n\n        if (selectedServices && selectedServices['accommodation']) {\n            //do not use pax.total, it can be undefined in some case (when data comes from server)\n            const total = pax.adults + pax.child;\n            const pSuffix = !total ? '' : translateService.instant('TRAVELLER.' + (total > 1 ? 'PEOPLE' : 'PERSON'));\n            const rSuffix =\n                pax.rooms === 0\n                    ? ''\n                    : (!total ? '' : ', ') +\n                      pax.rooms +\n                      ' ' +\n                      translateService.instant(pax.rooms > 1 ? 'HOTELS.ROOMS' : 'HOTELS.ROOM');\n            displayStr = '' + (!total ? '' : total + ' ') + `${pSuffix}${rSuffix}`.toLocaleLowerCase();\n            return displayStr;\n        }\n\n        if (pax.child > 0) {\n            const childText = translateService.instant(pax.child > 1 ? 'SEARCH.CHILDREN' : 'SEARCH.CHILD');\n            displayStr = `${displayStr}, ${pax.child} ${childText.toLowerCase()}`;\n        }\n\n        if (this.rentalOnly(selectedServices)) {\n            const driverAgeSelected = pax.driversAge && pax.driversAge !== 0 && pax.driversAge !== -1;\n            if (driverAgeSelected) {\n                displayStr = translateService.instant('CAR_RENTAL.DRIVER_AGE', { age: pax.driversAge });\n            } else {\n                displayStr = translateService.instant('CAR_RENTAL.DRIVERS_AGE_LABEL');\n            }\n        }\n\n        return displayStr;\n    }\n\n    public static MakePassengerReq(\n        selectedServices: SelectedServices,\n        pax: DefaultPassenger,\n        translateService: TranslateService\n    ): PassengerReq {\n        const req = {\n            adults: pax.adults,\n            children: 0,\n            child: 0,\n            infants: 0,\n            youth: 0,\n            childrenAges: [] as number[],\n            infantAges: [] as number[],\n            youthAges: [] as number[],\n            total: pax.total,\n            rooms: pax.rooms,\n            driversAge: pax.driversAge,\n            displayStr: this.formPaxDisplayStr(selectedServices, pax, translateService, false),\n            isDefault: pax.isDefault,\n            isRental: this.rentalOnly(selectedServices),\n        } as PassengerReq;\n\n        pax.infants = 0;\n        pax.infantAges = [] as number[];\n        pax.childrenAges = [] as number[];\n        if (!pax.childAges || !Array.isArray(pax.childAges) || req.isRental) {\n            return req;\n        }\n\n        pax.childAges.forEach((childAge: number) => {\n            switch (true) {\n                case childAge !== -1 && childAge < 2:\n                    req.infants += 1;\n                    req.infantAges.push(childAge);\n                    break;\n                case childAge >= 2 && childAge <= 17:\n                    req.children += 1;\n                    req.childrenAges.push(childAge);\n                    break;\n                default:\n                    req.youth += 1;\n                    req.youthAges.push(childAge);\n                    break;\n            }\n        });\n        req.child = req.youth + req.infants + req.children;\n        return req;\n    }\n\n    public static FormPax(\n        selectedServices: SelectedServices,\n        options: PassengerReq,\n        translateService: TranslateService\n    ): DefaultPassenger {\n        const pax = options.isDefault ? TzPassengerUtil.DefaultPassengerIns() : (options as DefaultPassenger);\n        if (TzPassengerUtil.rentalOnly(selectedServices)) {\n            //set number of adults to 0 to trigger number of persons requests when\n            //services are added to car rental only\n            pax.adults = 0;\n        } else if (!pax.adults && window.location.pathname.indexOf('/search') === 0) {\n            pax.adults = 1;\n        }\n        // For accommodation default pax count is 2\n        if ((!options || options.isDefault) && selectedServices['accommodation']) {\n            pax.adults = 2;\n            pax.total = 2;\n            pax.rooms = 1;\n        }\n\n        pax.child = pax.infants + pax.children + (pax.youth ? pax.youth : 0);\n        pax.childAges = [...pax.infantAges, ...pax.childrenAges, ...pax.youthAges];\n        pax.displayStr = TzPassengerUtil.formPaxDisplayStr(selectedServices, pax, translateService, false);\n        pax.driversAge = options.driversAge > 0 ? options.driversAge : -1;\n        return pax;\n    }\n\n    private static DefaultPassengerIns(): DefaultPassenger {\n        return {\n            adults: 1,\n            children: 0,\n            infants: 0,\n            childrenAges: [] as number[],\n            infantAges: [] as number[],\n            youthAges: [] as number[],\n            youth: 0,\n            rooms: 1,\n            child: 0,\n            total: 1,\n            driversAge: -1,\n            childAges: [] as number[],\n            displayStr: '',\n            isDefault: true,\n            openPassengers: false,\n            openDriverAge: false,\n            openChildrenAge: false,\n        } as DefaultPassenger;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '@environments/environment';\nimport { NavigationEnd, Router, RouterEvent } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { ScrollService } from '@services/modules/core/scroll-service';\n\n@Component({\n    selector: 'tz-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n    public version = '';\n    public isSearchDropDownOpen = false;\n    private urlFirstSegment = '';\n\n    constructor(\n        private router: Router,\n        private searchDataService: SearchDataService,\n        private userService: UserService,\n        private scrollService: ScrollService\n    ) {\n        this.pageUrl();\n    }\n\n    ngOnInit(): void {\n        this.version = environment.version;\n\n        this.searchDataService.isSearchDropDownOpen$.subscribe((val: boolean) => {\n            this.isSearchDropDownOpen = val;\n        });\n    }\n\n    public onGoToFooterPage(url: string): void {\n        if (this.urlFirstSegment === 'about') {\n            this.router.navigateByUrl(url);\n            return;\n        }\n\n        const targetUrl = this.router.serializeUrl(this.router.createUrlTree([url]));\n        window.open(targetUrl, '_blank');\n    }\n\n    public loginRedirect(path: string): void {\n        this.scrollService.scrollToTop();\n        this.router.navigate([path]);\n    }\n\n    public onFooterClick(): void {\n        if (!this.isSearchDropDownOpen) {\n            this.searchDataService.closeSearchEditingMode$.next();\n        }\n    }\n\n    private pageUrl(): void {\n        this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe((event) => {\n            let urlSegments: string[] = [];\n            if (event instanceof RouterEvent) {\n                urlSegments = event.url.split('/');\n            }\n\n            if (urlSegments.length > 0) {\n                this.urlFirstSegment = urlSegments[1];\n            }\n        });\n    }\n}\n","<tz-cookie></tz-cookie>\n<div class=\"tz-footer-container\" [class.pointer-events-none]=\"isSearchDropDownOpen\" (click)=\"onFooterClick()\">\n    <div class=\"tz-container\">\n        <div class=\"tz-footer-menu-container\">\n            <div class=\"tz-footer-menu\">\n                <div class=\"tz-footer-menu__title\">{{ 'PAGES.HELP_AND_SUPPORT' | translate }}</div>\n                <div class=\"tz-footer-menu__option\" (click)=\"onGoToFooterPage('/about/about')\">\n                    {{ 'PAGES.ABOUT_TRAZLER' | translate }}\n                </div>\n                <div class=\"tz-footer-menu__option\" (click)=\"onGoToFooterPage('/about/contacts')\">\n                    {{ 'PAGES.CUSTOMER_SUPPORT' | translate }}\n                </div>\n                <div class=\"tz-footer-menu__option\" (click)=\"onGoToFooterPage('/about/help')\">\n                    {{ 'PAGES.FAQ' | translate }}\n                </div>\n            </div>\n            <div class=\"tz-footer-menu\">\n                <div class=\"tz-footer-menu__title\">{{ 'PAGES.LEGAL' | translate }}</div>\n                <div class=\"tz-footer-menu__option\" (click)=\"onGoToFooterPage('/about/terms')\">\n                    {{ 'PAGES.GENERAL_TERMS' | translate }}\n                </div>\n                <div class=\"tz-footer-menu__option\" (click)=\"onGoToFooterPage('/about/ppc')\">\n                    {{ 'PAGES.PRIVACY_POLICY' | translate }}\n                </div>\n                <div class=\"tz-footer-menu__option\" (click)=\"onGoToFooterPage('/about/terms')\">\n                    {{ 'PAGES.TERMS_OF_USE' | translate }}\n                </div>\n            </div>\n            <div class=\"tz-footer-menu\">\n                <div class=\"tz-footer-menu__title\">{{ 'PAGES.ACCOUNT' | translate }}</div>\n                <div class=\"tz-footer-menu__option\" (click)=\"loginRedirect('customer/profile')\">\n                    {{ 'PAGES.PROFILE' | translate }}\n                </div>\n                <div class=\"tz-footer-menu__option\" (click)=\"loginRedirect('bookings')\">\n                    {{ 'PAGES.MY_TRIPS' | translate }}\n                </div>\n            </div>\n            <div class=\"tz-footer-menu\">\n                <div class=\"tz-footer-menu__title\">{{ 'PAGES.CONTACTS' | translate }}</div>\n                <a href=\"tel:800 85 8888 44\" class=\"tz-footer-menu__option\"\n                    ><tz-icon icon=\"add_call\"></tz-icon> 800 85 8888 444</a\n                >\n                <a href=\"mailto:info@trazler.com\" class=\"tz-footer-menu__option\"\n                    ><tz-icon icon=\"mail_outline\"></tz-icon> info@trazler.com</a\n                >\n            </div>\n        </div>\n        <div class=\"tz-app-support\">\n            <div class=\"tz-app-support__payments\">\n                <div class=\"secure-payment\">{{ 'PAGES.SECURE_PAYMENT' | translate }}</div>\n                <tz-icon icon=\"payments\"></tz-icon>\n            </div>\n            <div class=\"tz-app-support__platforms\">\n                <div class=\"app-stores\">\n                    <tz-icon icon=\"playstore\"></tz-icon>\n                    <tz-icon icon=\"appstore\"></tz-icon>\n                </div>\n                <tz-icon class=\"app-qr-code\" icon=\"app_qr\"></tz-icon>\n            </div>\n        </div>\n        <div class=\"tz-rights\">\n            <div class=\"tz-rights__description\">{{ 'PAGES.RIGHTS_DESCRIPTION' | translate }}</div>\n            <div class=\"tz-rights__container\">\n                <div class=\"copy-rights\" data-test=\"copy-rights\">\n                    &copy; 2020 {{ version }} &nbsp; Trazler B.V. Netherlands.\n                    {{ 'FOOTER.ALL_RIGHTS_RESERVED' | translate }}\n                </div>\n                <div class=\"social-media\">\n                    <a\n                        tabindex=\"-1\"\n                        href=\"https://www.facebook.com/trazler\"\n                        data-test=\"footer-bar-facebook\"\n                        target=\"_blank\"\n                        ><tz-icon [icon]=\"'facebook_footer'\"></tz-icon\n                    ></a>\n                    <a\n                        tabindex=\"-1\"\n                        href=\"https://www.instagram.com/trazler_com/\"\n                        data-test=\"footer-bar-instagram\"\n                        target=\"_blank\"\n                        ><tz-icon [icon]=\"'instagram_footer'\"></tz-icon\n                    ></a>\n                    <a\n                        tabindex=\"-1\"\n                        href=\"https://twitter.com/trazler_com\"\n                        data-test=\"footer-bar-twitter\"\n                        target=\"_blank\"\n                        ><tz-icon [icon]=\"'twitter_footer'\"></tz-icon\n                    ></a>\n                    <a\n                        tabindex=\"-1\"\n                        href=\"https://www.linkedin.com/company/trazler\"\n                        data-test=\"footer-bar-linkedin\"\n                        target=\"_blank\"\n                        ><tz-icon [icon]=\"'linkedin_footer'\"></tz-icon\n                    ></a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n} from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\n\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { CustomerInfo } from '@shared/schemas/tz-customer-info';\nimport { SettingsService } from '@services/services/settings-service';\nimport { CurrencyService } from '@services/services/currency-service';\nimport { ILanguage } from '@schemas/modules/core/ILanguage';\nimport { LANGUAGES } from '@core/constants/languages.const';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { SearchErrorService } from '@services/searchEngine/services/search-error-service';\nimport { PlatformService } from '@services/platform.service';\nimport { ScrollService } from '@services/modules/core/scroll-service';\n\n@Component({\n    selector: 'tz-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent implements OnInit {\n    @Output() signOut: EventEmitter<void> = new EventEmitter<void>();\n    @Output() reloadAccDetails: EventEmitter<void> = new EventEmitter<void>();\n\n    public currentState = '';\n    public currencies = this.currencyService.currencies;\n    public selectedCurCode = this.currencyService.currencyCode;\n    public hideCurrency$ = new BehaviorSubject<boolean>(false);\n    public languages: ILanguage[] = LANGUAGES.list;\n    public selectedLanguage: ILanguage;\n    public isSearchDropDownOpen = false;\n\n    constructor(\n        private router: Router,\n        public userService: UserService,\n        private settingsService: SettingsService,\n        private currencyService: CurrencyService,\n        private searchDataService: SearchDataService,\n        private listenersService: ListenersService,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        private cartService: CartService,\n        private searchErrorService: SearchErrorService,\n        private renderer: Renderer2,\n        private scrollService: ScrollService,\n        public platformService: PlatformService\n    ) {\n        this.router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd) {\n                this.scrollService.scrollToTop();\n                this.onStateChange(event.url);\n            }\n        });\n        this.selectedLanguage = this.settingsService.selectedLanguageObject;\n    }\n\n    ngOnInit(): void {\n        this.searchDataService.isSearchDropDownOpen$.subscribe((val: boolean) => {\n            this.isSearchDropDownOpen = val;\n            this.changeDetectorRef.detectChanges();\n        });\n    }\n\n    public gotoRoute(path: string): void {\n        if (path.includes('/about') && !this.currentState.includes('/about')) {\n            const targetUrl = this.router.serializeUrl(this.router.createUrlTree([path]));\n            window.open(targetUrl, '_blank');\n            return;\n        }\n\n        this.router.navigate([path]);\n    }\n\n    public onTrazlerLogoClicked($event: MouseEvent): boolean {\n        if (this.router.url === '/search') {\n            this.listenersService.NotifyListeners(ListenerId.LISTEN_SERVICE_REINIT);\n        } else {\n            this.searchErrorService.unsetErrorFlag();\n            this.router.navigate(['/search'], { skipLocationChange: false });\n        }\n        $event.stopPropagation();\n        $event.preventDefault();\n        this.renderer.removeClass(document.body, 'body-lock-scroll');\n\n        return true;\n    }\n\n    public onLanguageChange(language: ILanguage): void {\n        this.settingsService.setLanguage(language);\n    }\n\n    public onHeaderClick(): void {\n        if (!this.isSearchDropDownOpen) {\n            this.searchDataService.closeSearchEditingMode$.next();\n        }\n    }\n\n    public onCurrencyChange(currency: { code: string }): void {\n        this.currencyService.setCurrency(currency.code);\n    }\n\n    public onSignOut(): void {\n        this.signOut.emit();\n    }\n\n    public logIn(): void {\n        this.userService.openLoginModel().then(\n            (result) => {\n                this.changeDetectorRef.detectChanges();\n                this.reloadAccDetails.emit();\n            },\n            (reason) => {\n                console.log(reason);\n            }\n        );\n    }\n\n    private onStateChange(url: string): void {\n        this.currentState = url;\n\n        const isInMyTripOrCheckout = url.includes('/bookings') || url.includes('/checkout');\n        const cartData = this.cartService.getCartData() as ICart;\n        const cartCur = StorageManagerUtil.get('cartCurrency');\n        const isCartFinalised =\n            (cartData !== undefined && cartData.cartCurrency !== undefined && cartData.cartCurrency !== '') ||\n            (cartCur !== null && cartCur !== '');\n\n        this.hideCurrency$.next(isInMyTripOrCheckout || isCartFinalised);\n    }\n}\n","<header [class.pointer-events-none]=\"isSearchDropDownOpen\" (click)=\"onHeaderClick()\">\n    <div class=\"header-container flex space-between align-center tz-container\">\n        <img\n            class=\"tz-brand-logo\"\n            data-test=\"navbar-trazler-logo\"\n            src=\"/assets/icons/web/img/TzLogoMain.svg\"\n            alt=\"\"\n            (click)=\"onTrazlerLogoClicked($event)\"\n        />\n\n        <nav>\n            <ul class=\"flex align-center\">\n                <li>\n                    <a data-test=\"navbar-help\" (click)=\"gotoRoute('/about/contacts')\">\n                        {{ 'HEADERS.HELP_AND_SUPPORT' | translate }}\n                    </a>\n                </li>\n                <li>\n                    <tz-dropdown\n                        optionKey=\"i18nCode\"\n                        labelKey=\"name\"\n                        labelSelectKey=\"name\"\n                        class=\"language-dropdown-block\"\n                        data-test=\"navbar-language-change\"\n                        placement=\"bottom-right\"\n                        labelIconKey=\"icon\"\n                        [selectedOptionKey]=\"selectedLanguage.i18nCode\"\n                        [options]=\"languages\"\n                        [svgStyle]=\"{ 'width.px': '20' }\"\n                        (selectChange)=\"onLanguageChange($event)\"\n                    ></tz-dropdown>\n                </li>\n                <li\n                    class=\"currency-li-item\"\n                    *ngIf=\"currentState.includes('/search') || (hideCurrency$ | async) === false\"\n                >\n                    <tz-dropdown\n                        optionKey=\"code\"\n                        labelKey=\"name\"\n                        labelStartKey=\"trazlerSymbol\"\n                        labelSelectKey=\"selectedLable\"\n                        class=\"currency-dropdown-block\"\n                        data-test=\"navbar-currency-change\"\n                        placement=\"bottom-right\"\n                        [selectedOptionKey]=\"selectedCurCode\"\n                        [options]=\"currencies\"\n                        (selectChange)=\"onCurrencyChange($event)\"\n                    ></tz-dropdown>\n                </li>\n                <li>\n                    <a (click)=\"gotoRoute('bookings')\">{{ 'HEADERS.MY_TRIPS' | translate }}</a>\n                </li>\n                <li\n                    *ngIf=\"userService.IsLogged()\"\n                    ngbDropdown\n                    #profileMenu=\"ngbDropdown\"\n                    placement=\"bottom-right\"\n                    class=\"tz-dropdown\"\n                >\n                    <a data-test=\"navbar-username\" ngbDropdownToggle>\n                        {{ userService.formProfileName }}\n                        <div class=\"tz-icon-filled-arrow arrow\" data-test=\"navbar-username-arrow\"></div>\n                    </a>\n                    <div class=\"\" data-test=\"navbar-username-dropdown-menu\" ngbDropdownMenu>\n                        <a\n                            class=\"dropdown-menu-item\"\n                            data-test=\"navbar-user-profile\"\n                            (click)=\"gotoRoute('customer/profile'); profileMenu.close()\"\n                        >\n                            {{ 'PROFILE.PROFILE' | translate }}\n                        </a>\n                        <a\n                            class=\"dropdown-menu-item\"\n                            data-test=\"navbar-user-travellers\"\n                            (click)=\"gotoRoute('customer/travellers'); profileMenu.close()\"\n                        >\n                            {{ 'TRAVELLER.TRAVELERS' | translate }}\n                        </a>\n\n                        <a\n                            class=\"dropdown-menu-item\"\n                            data-test=\"navbar-user-sign-out\"\n                            (click)=\"onSignOut(); profileMenu.close()\"\n                        >\n                            {{ 'HEADERS.SIGN_OUT' | translate }}\n                        </a>\n                        <a\n                            data-test=\"navbar-user-home\"\n                            *ngIf=\"currentState !== '/search'\"\n                            class=\"dropdown-menu-item\"\n                            (click)=\"gotoRoute('search'); profileMenu.close()\"\n                        >\n                            {{ 'PAGES.HOME' | translate }}\n                        </a>\n                    </div>\n                </li>\n                <li *ngIf=\"!userService.IsLogged()\" (click)=\"logIn()\">\n                    <a data-test=\"navbar-sign-in-sign-up\">{{ 'HEADERS.SIGNIN' | translate }}</a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</header>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MainComponent } from './main/main.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { FooterComponent } from './footer/footer.component';\nimport { SharedModule } from '@shared/shared.module';\nimport { MobHeaderComponent } from './mob-header/mob-header.component';\nimport { MobNavbarComponent } from './mob-navbar/mob-navbar.component';\nimport { MobFooterComponent } from './mob-footer/mob-footer.component';\nimport { MainHeaderComponent } from './main-header/main-header.component';\nimport { MainMobMenuComponent } from './main-mob-menu/main-mob-menu.component';\nimport { ProfileMobMenuComponent } from './profile-mob-menu/profile-mob-menu.component';\nimport { TzLoaderComponent } from '@shared/components/core/loader/loader.component';\nimport { LoadingIconComponent } from '@shared/components/core/loading-icon/loading-icon.component';\n\n@NgModule({\n    declarations: [\n        MainComponent,\n        HeaderComponent,\n        FooterComponent,\n        MobHeaderComponent,\n        MobNavbarComponent,\n        MobFooterComponent,\n        MainHeaderComponent,\n        MainMobMenuComponent,\n        ProfileMobMenuComponent,\n        TzLoaderComponent,\n        LoadingIconComponent,\n    ],\n    exports: [\n        MainComponent,\n        HeaderComponent,\n        FooterComponent,\n        MobHeaderComponent,\n        MobNavbarComponent,\n        MobFooterComponent,\n        MainHeaderComponent,\n        MainMobMenuComponent,\n        ProfileMobMenuComponent,\n        TzLoaderComponent,\n        LoadingIconComponent,\n    ],\n    imports: [RouterModule, CommonModule, SharedModule],\n})\nexport class LayoutModule {}\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { PlatformService } from '@services/platform.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { CustomerInfo } from '@shared/schemas/tz-customer-info';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'tz-main-header',\n    templateUrl: './main-header.component.html',\n    styleUrls: ['./main-header.component.scss'],\n})\nexport class MainHeaderComponent implements OnInit, OnDestroy {\n    public loggedInInfo!: CustomerInfo;\n\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private router: Router,\n        private cartRoutingService: CartRoutingService,\n        public userService: UserService,\n        public platformService: PlatformService\n    ) {}\n\n    ngOnInit() {\n        this.getLoggedInCustomer();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public logOut(): void {\n        this.userService.SignOut();\n\n        if (this.router.url.includes('/customer') || this.router.url.includes('/bookings')) {\n            this.router.navigate(['/search'], { skipLocationChange: false });\n        } else {\n            this.reloadAccDetails();\n        }\n    }\n\n    public reloadAccDetails() {\n        if (this.router.url.includes('/hotel/')) {\n            this.cartRoutingService.reload(\n                {\n                    ...window.history.state,\n                    name: '/hotel',\n                    params: { id: this.router.url.split('/')[3] },\n                },\n                ServiceId.ACC_DETAILS,\n                undefined\n            );\n        }\n    }\n\n    private getLoggedInCustomer(): void {\n        if (this.userService.IsLogged()) {\n            this.loggedInInfo = this.userService.getCustomerInformation();\n        } else if (StorageManagerUtil.get('trazler_customer_token', true)) {\n            this.userService.getCustomer(true).then(\n                (customer: CustomerInfo) => {\n                    this.loggedInInfo = customer;\n                },\n                (err: any) => {\n                    this.loggedInInfo = {} as CustomerInfo;\n                    console.log('Error fetching customer info: ', err);\n                }\n            );\n        } else {\n            this.loggedInInfo = {} as CustomerInfo;\n        }\n\n        this.userService.loggedIn$.pipe(takeUntil(this.destroy$)).subscribe((isLogged) => {\n            if (isLogged) {\n                this.loggedInInfo = this.userService.getCustomerInformation();\n            }\n        });\n    }\n}\n","<tz-header\n    *ngIf=\"!platformService.isMobileDevice\"\n    (signOut)=\"logOut()\"\n    (reloadAccDetails)=\"reloadAccDetails()\"\n></tz-header>\n\n<tz-mob-header *ngIf=\"platformService.isMobileDevice\" (signOut)=\"logOut()\"></tz-mob-header>\n","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '@services/services/settings-service';\nimport { ILanguage } from '@schemas/modules/core/ILanguage';\nimport { LANGUAGES } from '@core/constants/languages.const';\nimport { CurrencyService } from '@services/services/currency-service';\nimport { MenuController } from '@ionic/angular';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ILandingPagesUrls } from '@schemas/modules/component-schemas/urls/landing-pages-urls';\nimport { LandingPagesUrls } from '@core/constants/pages-urls';\nimport { ModalService } from '@services/modal.service';\nimport { Currency } from '@schemas/modules/core/currency';\nimport { MobPickerWheels } from '@schemas/modules/picker/mob-picker';\n\n@Component({\n    selector: 'tz-main-mob-menu',\n    templateUrl: './main-mob-menu.component.html',\n    styleUrls: ['./main-mob-menu.component.scss'],\n})\nexport class MainMobMenuComponent implements OnInit {\n    public languages: ILanguage[] = LANGUAGES.list;\n    public currencies!: Currency[];\n    public selectedLanguage!: ILanguage;\n    public selectedCurrency!: Currency;\n    public destroy$: Subject<boolean> = new Subject<boolean>();\n    public isLogged = false;\n    public landingPagesUrls: ILandingPagesUrls = LandingPagesUrls;\n    public userLogoInfo: string | null = null;\n\n    constructor(\n        private settingsService: SettingsService,\n        private currencyService: CurrencyService,\n        private menu: MenuController,\n        private router: Router,\n        public userService: UserService,\n        private modalService: ModalService\n    ) {\n        this.userService.loggedIn$.pipe(takeUntil(this.destroy$)).subscribe((isLogged) => {\n            this.isLogged = isLogged;\n            console.log('isLogged', isLogged);\n        });\n\n        this.settingsService.selectedLanguageSubject.subscribe((selectedLanguage) => {\n            this.selectedLanguage = selectedLanguage;\n        });\n\n        this.currencyService.selectedCurrencySubject.subscribe((selectedLanguage) => {\n            this.selectedCurrency = selectedLanguage;\n        });\n    }\n\n    ngOnInit() {\n        this.currencies = this.currencyService.currencies;\n    }\n\n    public onOpenProfileMenu(): void {\n        if (this.userService.IsLogged()) {\n            this.menu.enable(true, 'profileMobMenu').then(() => {});\n            this.menu.open('profileMobMenu').then(() => {});\n        } else {\n            this.navToGetStarted();\n        }\n    }\n\n    public onCloseMenu(): void {\n        this.menu.close('mainMobMenu').then(() => {});\n    }\n\n    public navToGetStarted(): void {\n        this.router.navigate(['get-started']);\n    }\n\n    public onOpenLangPicker(): void {\n        const wheels: MobPickerWheels[] = [];\n\n        this.languages.map((lang) => {\n            wheels.push({ display: lang.name, value: lang.i18nCode });\n        });\n\n        const selected = this.selectedLanguage.i18nCode;\n\n        this.modalService.openPickerModal({ wheels, selected: [selected] }, {}).then((modal) => {\n            if (modal.data?.selected) {\n                this.languages.map((lang) => {\n                    if (modal.data?.selected && modal.data.selected[0] === lang.i18nCode) {\n                        this.settingsService.setLanguage(lang);\n                    }\n                });\n            }\n        });\n    }\n\n    public onOpenCurrencyPicker(): void {\n        const wheels: MobPickerWheels[] = [];\n\n        this.currencies.map((lang) => {\n            wheels.push({ display: lang.name, value: lang.code });\n        });\n\n        const selected = this.selectedCurrency.code;\n\n        this.modalService.openPickerModal({ wheels, selected: [selected] }, {}).then((modal) => {\n            if (modal.data?.selected) {\n                this.currencyService.setCurrency(modal.data.selected[0]);\n            }\n        });\n    }\n}\n","<ion-menu\n    class=\"main-menu\"\n    side=\"end\"\n    menuId=\"mainMobMenu\"\n    contentId=\"main\"\n    swipeGesture=\"true\"\n    data-mob=\"main-mob-menu\"\n>\n    <ion-header class=\"main-menu__header mob-header-secondary ion-no-border\">\n        <div routerLink=\"/\" data-mob=\"main-mob-menu-logo-link\">\n            <tz-svg-icon icon=\"trazler-mobile-logo\" [stretch]=\"true\" className=\"mob-header__logo\"></tz-svg-icon>\n        </div>\n\n        <div\n            *ngIf=\"isLogged && userService.firstLettersFromName\"\n            class=\"main-menu__profile-icon\"\n            (click)=\"onOpenProfileMenu()\"\n            data-mob=\"main-mob-menu-logo-names\"\n        >\n            {{ userService.firstLettersFromName }}\n        </div>\n        <div\n            *ngIf=\"isLogged && !userService.firstLettersFromName\"\n            class=\"mob-header__menu-profile-icon\"\n            (click)=\"onOpenProfileMenu()\"\n            data-mob=\"main-mob-menu-profile-logo\"\n        >\n            <tz-svg-icon icon=\"profile-mobile-icon\" className=\"mob-header__profile-icon\"></tz-svg-icon>\n        </div>\n        <div class=\"mob-menu-close-btn\" data-mob=\"main-mob-menu-close\" (click)=\"onCloseMenu()\">\n            <tz-svg-icon icon=\"mob-menu-close-btn\"></tz-svg-icon>\n        </div>\n    </ion-header>\n    <ion-content class=\"main-menu__content\">\n        <div *ngIf=\"!isLogged\" class=\"main-menu__signin-info\">\n            <p>{{ 'MAIN_MENU.SIGN_IN_INFO' | translate }}</p>\n            <button\n                translate=\"ACCOUNT.SIGN.SIGN_IN_OR_CREATE_ACCOUNT\"\n                class=\"tz-btn auth-btn\"\n                (click)=\"navToGetStarted()\"\n                data-mob=\"main-mob-menu-sign-in-or-create-account\"\n            ></button>\n        </div>\n        <div class=\"main-menu__settings\">\n            <p class=\"main-menu__title\">{{ 'MAIN_MENU.SETTINGS' | translate }}</p>\n\n            <div class=\"main-menu__settings-lang\">\n                <p class=\"main-menu__subtitle\">{{ 'MAIN_MENU.LANGUAGE' | translate }}</p>\n                <button class=\"mob-picker__label\" data-mob=\"mob-picker-label\" (click)=\"onOpenLangPicker()\">\n                    <p data-mob=\"mob-picker-selected-label\">{{ selectedLanguage.name }}</p>\n                    <tz-svg-icon icon=\"arrow-down-black\" [mobile]=\"true\"></tz-svg-icon>\n                </button>\n            </div>\n\n            <div class=\"main-menu__settings-cur\">\n                <p class=\"main-menu__subtitle\">{{ 'MAIN_MENU.CURRENCY' | translate }}</p>\n                <button class=\"mob-picker__label\" data-mob=\"mob-picker-label\" (click)=\"onOpenCurrencyPicker()\">\n                    <p data-mob=\"mob-picker-selected-label\">{{ selectedCurrency.name }}</p>\n                    <tz-svg-icon icon=\"arrow-down-black\" [mobile]=\"true\"></tz-svg-icon>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"main-menu__links\">\n            <p class=\"main-menu__title\">{{ 'MAIN_MENU.LEGAL' | translate }}</p>\n            <ion-menu-toggle *ngFor=\"let landingPage of landingPagesUrls\">\n                <a [routerLink]=\"landingPage.url\" data-mob=\"main-mob-menu-link\">\n                    {{ landingPage.textBefore ? landingPage.textBefore + ' ' : '' }}\n                    {{ landingPage.title | translate }}\n                    {{ landingPage.textAfter ? ' ' + landingPage.textAfter : '' }}\n                </a>\n            </ion-menu-toggle>\n        </div>\n    </ion-content>\n</ion-menu>\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'tz-main',\n    templateUrl: './main.component.html',\n    styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent {\n    constructor() {}\n}\n","<router-outlet></router-outlet>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ILandingPagesUrls } from '@schemas/modules/component-schemas/urls/landing-pages-urls';\nimport { LandingPagesUrls } from '@core/constants/pages-urls';\n\n@Component({\n    selector: 'tz-mob-footer',\n    templateUrl: './mob-footer.component.html',\n    styleUrls: ['./mob-footer.component.scss'],\n})\nexport class MobFooterComponent implements OnInit {\n    @Input() showMobAboutFooter = false;\n    public landingPagesUrls: ILandingPagesUrls = LandingPagesUrls;\n\n    public dateNow = new Date();\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<tz-cookie-modal></tz-cookie-modal>\n<div class=\"mob-footer\">\n    <div *ngIf=\"showMobAboutFooter\" class=\"mob-footer__about\">\n        <a\n            *ngFor=\"let landingPage of landingPagesUrls\"\n            [routerLink]=\"landingPage.url\"\n            data-mob=\"main-mob-menu-link\"\n            [class]=\"landingPage.class || ''\"\n        >\n            {{ landingPage.textBefore ? landingPage.textBefore + ' ' : '' }}\n            {{ landingPage.title | translate }}\n            {{ landingPage.textAfter ? ' ' + landingPage.textAfter : '' }}\n        </a>\n    </div>\n\n    <div class=\"mob-footer__link\">\n        <a href=\"https://www.facebook.com/trazler\" data-test=\"footer-bar-facebook\" target=\"_blank\">\n            <tz-icon class=\"mob-footer__icon\" [icon]=\"'facebook-grey'\"></tz-icon>\n        </a>\n        <a href=\"https://www.instagram.com/trazler_com/\" data-test=\"footer-bar-instagram\" target=\"_blank\">\n            <tz-icon class=\"mob-footer__icon\" [icon]=\"'instagram-grey'\"></tz-icon>\n        </a>\n        <a href=\"https://twitter.com/trazler_com\" data-test=\"footer-bar-twitter\" target=\"_blank\">\n            <tz-icon class=\"mob-footer__icon\" [icon]=\"'twitter-grey'\"></tz-icon>\n        </a>\n        <a href=\"https://www.linkedin.com/company/trazler\" data-test=\"footer-bar-linkedin\" target=\"_blank\">\n            <tz-icon class=\"mob-footer__icon\" [icon]=\"'linkedin-grey'\"></tz-icon>\n        </a>\n    </div>\n    <p>\n        &copy; {{ dateNow | date: 'y' }} Trazler B.V. Netherlands.\n        {{ 'FOOTER.ALL_RIGHTS_RESERVED' | translate }}\n    </p>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { PlatformService } from '@services/platform.service';\nimport { PageUtils } from '@core/utils/page-utils';\nimport { PagesUrls } from '@core/constants/pages-urls';\nimport { UserService } from '@services/modules/user/services/user.service';\n\ntype IHeaderType = 'transparent' | 'primary' | 'secondary' | 'hide';\n\n@Component({\n    selector: 'tz-mob-header',\n    templateUrl: './mob-header.component.html',\n    styleUrls: ['./mob-header.component.scss'],\n})\nexport class MobHeaderComponent implements OnInit {\n    @Output() signOut: EventEmitter<void> = new EventEmitter<void>();\n\n    public headerType: IHeaderType = 'primary';\n\n    constructor(\n        public platformService: PlatformService,\n        private menu: MenuController,\n        private router: Router,\n        public userService: UserService\n    ) {\n        this.router.events.subscribe((event: Event) => {\n            if (event instanceof NavigationEnd) {\n                this.onStateChange(event.url);\n            }\n        });\n    }\n\n    ngOnInit() {}\n\n    public onOpenMenu(): void {\n        this.menu.enable(true, 'mainMobMenu').then(() => {});\n        this.menu.open('mainMobMenu').then(() => {});\n    }\n\n    public onOpenProfileMenu(): void {\n        if (this.userService.IsLogged()) {\n            this.menu.enable(true, 'profileMobMenu').then(() => {});\n            this.menu.open('profileMobMenu').then(() => {});\n        } else {\n            this.menu.enable(true, 'authMenu').then(() => {});\n            this.menu.open('authMenu').then(() => {});\n        }\n    }\n\n    public onSignOut(): void {\n        this.signOut.emit();\n    }\n\n    private onStateChange(url: string): void {\n        if (PageUtils.is(url, [PagesUrls.HOME, PagesUrls.SEARCH])) {\n            this.headerType = 'transparent';\n        } else if (PageUtils.is(url, PagesUrls.ABOUT_ABOUT)) {\n            this.headerType = 'secondary';\n        } else if (PageUtils.is(url, [PagesUrls.GET_STARTED])) {\n            this.headerType = 'hide';\n        } else {\n            this.headerType = 'primary';\n        }\n    }\n}\n","<header [class]=\"'mob-header mob-header-with-bg mob-header-' + headerType\">\n    <div routerLink=\"/\">\n        <tz-svg-icon icon=\"trazler-mobile-logo\" [stretch]=\"true\" className=\"mob-header__logo\"></tz-svg-icon>\n    </div>\n\n    <div *ngIf=\"platformService.isMobileDevice\" class=\"mob-header__menu\">\n        <div class=\"mob-header__menu-profile-icon\" (click)=\"onOpenProfileMenu()\">\n            <tz-svg-icon icon=\"profile-mobile-icon\" className=\"mob-header__profile-icon\"></tz-svg-icon>\n        </div>\n\n        <div class=\"mob-header__menu-icon\" (click)=\"onOpenMenu()\">\n            <div class=\"mob-header__menu-icon-item\"></div>\n            <div class=\"mob-header__menu-icon-item\"></div>\n            <div class=\"mob-header__menu-icon-item\"></div>\n        </div>\n    </div>\n</header>\n\n<tz-main-mob-menu></tz-main-mob-menu>\n<tz-profile-mob-menu (signOut)=\"onSignOut()\"></tz-profile-mob-menu>\n\n<ion-menu class=\"main-menu\" side=\"end\" menuId=\"authMenu\" contentId=\"main\" swipeGesture=\"true\">\n    <tz-mob-auth></tz-mob-auth>\n</ion-menu>\n","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '@services/modules/user/services/user.service';\n\n@Component({\n    selector: 'tz-mob-navbar',\n    templateUrl: './mob-navbar.component.html',\n    styleUrls: ['./mob-navbar.component.scss'],\n})\nexport class MobNavbarComponent implements OnInit {\n    constructor(public userService: UserService) {}\n\n    ngOnInit() {}\n\n    public signIn(): void {\n        this.userService.openLoginModel().then(\n            () => {},\n            () => {}\n        );\n    }\n}\n","<div class=\"mob-navbar\">\n    <div routerLink=\"/search\" routerLinkActive=\"mob-navbar__item--active\" class=\"mob-navbar__item\">\n        <div class=\"mob-navbar__item-icon\">\n            <tz-svg-icon icon=\"mob-navbar-search\" [stretch]=\"true\"></tz-svg-icon>\n        </div>\n        <div class=\"mob-navbar__item-text\">{{ 'SEARCH.SEARCH' | translate }}</div>\n    </div>\n\n    <ng-container *ngIf=\"userService.IsLogged()\">\n        <div routerLink=\"/bookings/bookings-list\" routerLinkActive=\"mob-navbar__item--active\" class=\"mob-navbar__item\">\n            <div class=\"mob-navbar__item-icon\">\n                <tz-svg-icon icon=\"mob-navbar-my-trips\" [stretch]=\"true\"></tz-svg-icon>\n            </div>\n            <div class=\"mob-navbar__item-text\">{{ 'HEADERS.MY_TRIPS' | translate }}</div>\n        </div>\n\n        <div routerLink=\"/customer/profile\" routerLinkActive=\"mob-navbar__item--active\" class=\"mob-navbar__item\">\n            <div class=\"mob-navbar__item-icon\">\n                <tz-svg-icon icon=\"mob-navbar-profile\" [stretch]=\"true\"></tz-svg-icon>\n            </div>\n            <div class=\"mob-navbar__item-text\">\n                {{ 'PROFILE.PROFILE' | translate }}\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!userService.IsLogged()\">\n        <div routerLink=\"/unauthorized-bookings\" routerLinkActive=\"mob-navbar__item--active\" class=\"mob-navbar__item\">\n            <div class=\"mob-navbar__item-icon\">\n                <tz-svg-icon icon=\"mob-navbar-my-trips\" [stretch]=\"true\"></tz-svg-icon>\n            </div>\n            <div class=\"mob-navbar__item-text\">{{ 'HEADERS.MY_TRIPS' | translate }}</div>\n        </div>\n\n        <div (click)=\"signIn()\" routerLinkActive=\"mob-navbar__item--active\" class=\"mob-navbar__item\">\n            <div class=\"mob-navbar__item-icon\">\n                <tz-svg-icon icon=\"mob-navbar-profile\" [stretch]=\"true\"></tz-svg-icon>\n            </div>\n            <div class=\"mob-navbar__item-text\">\n                {{ 'HEADERS.SIGNIN' | translate }}\n            </div>\n        </div>\n    </ng-container>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector: 'tz-profile-mob-menu',\n    templateUrl: './profile-mob-menu.component.html',\n    styleUrls: ['./profile-mob-menu.component.scss'],\n})\nexport class ProfileMobMenuComponent implements OnInit {\n    @Output() signOut: EventEmitter<void> = new EventEmitter<void>();\n    public isLogged = false;\n    public destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(private menu: MenuController, public userService: UserService) {\n        this.userService.loggedIn$.pipe(takeUntil(this.destroy$)).subscribe((isLogged) => {\n            this.isLogged = isLogged;\n        });\n    }\n\n    ngOnInit() {}\n\n    public onCloseProfileMenu(): void {\n        this.menu.close('profileMobMenu').then(() => {});\n    }\n\n    public onSignOut(): void {\n        this.signOut.emit();\n    }\n}\n","<ion-menu class=\"profile-menu\" side=\"end\" menuId=\"profileMobMenu\" contentId=\"main\" swipeGesture=\"false\">\n    <ion-header class=\"profile-menu__header mob-header-secondary ion-no-border\">\n        <div routerLink=\"/\">\n            <tz-svg-icon icon=\"trazler-mobile-logo\" [stretch]=\"true\" className=\"mob-header__logo\"></tz-svg-icon>\n        </div>\n\n        <div class=\"mob-menu-close-btn\" (click)=\"onCloseProfileMenu()\">\n            <tz-svg-icon icon=\"mob-menu-close-btn\"></tz-svg-icon>\n        </div>\n    </ion-header>\n    <ion-content>\n        <div class=\"profile-menu__info\">\n            <p class=\"profile-menu__info__hello\">Hello!</p>\n            <div class=\"profile-menu__info__user\">\n                <div\n                    *ngIf=\"userService.firstLettersFromName\"\n                    class=\"profile-menu__profile-icon\"\n                    data-mob=\"main-mob-menu-logo-names\"\n                >\n                    {{ userService.firstLettersFromName }}\n                </div>\n                <h2>{{ userService.formProfileName }}</h2>\n            </div>\n            <p class=\"profile-menu__info__sign-in\">{{ 'MAIN_MENU.SIGN_IN_INFO_GENIUS' | translate }}</p>\n        </div>\n        <div class=\"profile-menu__links\">\n            <p>{{ 'PAGES.ACCOUNT' | translate }}</p>\n            <div>\n                <ion-menu-toggle>\n                    <a routerLink=\"/customer/profile\">{{ 'PROFILE.PROFILE' | translate }}</a>\n                </ion-menu-toggle>\n            </div>\n            <div>\n                <ion-menu-toggle>\n                    <a routerLink=\"/customer/travellers\">{{ 'TRAVELLER.TRAVELERS' | translate }}</a>\n                </ion-menu-toggle>\n            </div>\n            <div>\n                <ion-menu-toggle>\n                    <a routerLink=\"/customer/password\">{{ 'ACCOUNT.PASSWORD_' | translate }}</a>\n                </ion-menu-toggle>\n            </div>\n            <div>\n                <ion-menu-toggle>\n                    <a routerLink=\"bookings\">{{ 'PAGES.MY_TRIPS' | translate }}</a>\n                </ion-menu-toggle>\n            </div>\n        </div>\n        <div class=\"profile-menu__logout\">\n            <ion-menu-toggle>\n                <a (click)=\"onSignOut()\">\n                    {{ 'PROFILE.LOGOUT' | translate }}\n                </a>\n            </ion-menu-toggle>\n        </div>\n    </ion-content>\n</ion-menu>\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { LandingPageService } from '@services/landing-page.service';\nimport { PlatformService } from '@services/platform.service';\nimport { GeneralSettings } from '@core/constants/general-settings';\nimport { SelectedServices } from '@schemas/modules/services/selected-services';\nimport { PageUtils } from '@core/utils/page-utils';\nimport { PagesUrls } from '@core/constants/pages-urls';\nimport { Location } from '@angular/common';\nimport { GeneralServiceTab } from '@schemas/modules/service-tabs/service-tab';\nimport { AnimationController, Animation } from '@ionic/angular';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\n@Component({\n    selector: 'tz-mob-landing-page',\n    templateUrl: './mob-landing-page.component.html',\n    styleUrls: ['./mob-landing-page.component.scss'],\n})\nexport class MobLandingPageComponent implements OnInit {\n    public availableServices: GeneralServiceTab[] = GeneralSettings.availableServices;\n    public isServicesSelected = false;\n    public isValid = false;\n    public selectedServices: SelectedServices = {\n        transport: false,\n        accommodation: false,\n        transfer: false,\n        rentCar: false,\n        // activity: false,\n    };\n    public validAnimation?: Animation;\n    public isLandingPageShown = false;\n\n    constructor(\n        public platformService: PlatformService,\n        private landingPageService: LandingPageService,\n        private location: Location,\n        private animationCtrl: AnimationController\n    ) {}\n\n    get isHomePage(): boolean {\n        const url = this.location.path();\n        return PageUtils.is(url, [PagesUrls.HOME, PagesUrls.SEARCH]);\n    }\n\n    ngOnInit() {\n        this.isLandingPageShown = !!StorageManagerUtil.getMobLandingPageIsShown();\n        // this.availableServices = GeneralSettings.availableServices.filter((el) => el.serviceKey !== 'activity');\n    }\n\n    public onToggleService(serviceKey: string): void {\n        this.validAnimation?.stop();\n\n        if (serviceKey === 'activity') {\n            return;\n        }\n\n        if (serviceKey === 'rentCar') {\n            this.selectedServices.transfer = false;\n        }\n\n        if (serviceKey === 'transfer') {\n            this.selectedServices.rentCar = false;\n        }\n\n        this.selectedServices[serviceKey as keyof SelectedServices] =\n            !this.selectedServices[serviceKey as keyof SelectedServices];\n    }\n\n    public onNextClick(): void {\n        if (Object.values(this.selectedServices).every((value) => !value)) {\n            this.runValidAnimation();\n            return;\n        }\n\n        StorageManagerUtil.setLandingPageIsShown();\n\n        this.landingPageService.landingPageClosed$.next(this.selectedServices);\n        this.isServicesSelected = true;\n    }\n\n    private runValidAnimation(): void {\n        if (!this.validAnimation) {\n            this.validAnimation = this.createAnimation();\n        }\n\n        this.validAnimation.play();\n    }\n\n    private createAnimation(): Animation {\n        return this.animationCtrl\n            .create()\n            .addElement(document.querySelectorAll('.service'))\n            .duration(500)\n            .keyframes([\n                { offset: 0 },\n                { offset: 0.5, background: 'var(--color-main-mob-blink)', borderColor: 'var(--color-main-purple)' },\n                { offset: 1 },\n            ]);\n    }\n}\n","<div\n    *ngIf=\"platformService.isMobileDevice && !isServicesSelected && isHomePage && !isLandingPageShown\"\n    class=\"mob-landing-page\"\n>\n    <div class=\"mob-landing-page__container\">\n        <div>\n            <div class=\"d-flex justify-center logo\">\n                <tz-svg-icon icon=\"landing-logo\" [mobile]=\"true\"></tz-svg-icon>\n            </div>\n            <div class=\"title mob\" [innerHTML]=\"'HOME.WELCOME_TRIP_PLANNER' | translate\"></div>\n\n            <div\n                class=\"subtitle\"\n                [innerHTML]=\"\n                    'HOME.SELECT_ONE_OR_MULTIPLE'\n                        | translate\n                            : {\n                                  class1: 'landing-green-text',\n                                  class2: 'landing-green-text',\n                                  class3: 'landing-green-text'\n                              }\n                \"\n            ></div>\n\n            <div class=\"services\">\n                <div class=\"service-container\" *ngFor=\"let availableService of availableServices; let i = index\">\n                    <div\n                        class=\"service\"\n                        data-test=\"mob-landing-page-service\"\n                        [class.selected]=\"selectedServices[availableService.serviceKey]\"\n                        (click)=\"onToggleService(availableService.serviceKey)\"\n                    >\n                        <tz-svg-icon [icon]=\"availableService.mobIcon\" [mobile]=\"true\"></tz-svg-icon>\n                        <div class=\"service-title\">{{ availableService.mobLabel | translate }}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"bottom-block\">\n            <div class=\"right\" (click)=\"onNextClick()\" data-test=\"mob-landing-page-next\">\n                <span>NEXT</span>\n                <div class=\"mob-landing-page__next-btn\">\n                    <tz-svg-icon icon=\"arrow_right_white\"></tz-svg-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MobLandingPageComponent } from './mob-landing-page.component';\n\nimport { SharedModule } from '@shared/shared.module';\n\n@NgModule({\n    declarations: [MobLandingPageComponent],\n    imports: [CommonModule, SharedModule],\n    exports: [MobLandingPageComponent],\n})\nexport class MobLandingPageModule {}\n","import { ServiceId } from '@core/constants/service-id.const';\n\nexport const SERVICE_ROUTE_MAP: {\n    [key in ServiceId]?: string;\n} = {};\n\nSERVICE_ROUTE_MAP[ServiceId.FLIGHT] = 'flights';\nSERVICE_ROUTE_MAP[ServiceId.TRAIN] = 'trains';\nSERVICE_ROUTE_MAP[ServiceId.ACC] = 'hotels'; //keep hotels before hotel\nSERVICE_ROUTE_MAP[ServiceId.ACC_DETAILS] = 'hotel';\nSERVICE_ROUTE_MAP[ServiceId.TRANSFER] = 'transfers';\nSERVICE_ROUTE_MAP[ServiceId.CAR_RENTAL] = 'car-rentals';\nSERVICE_ROUTE_MAP[ServiceId.FLIGHT_TRAIN] = 'travel';\nSERVICE_ROUTE_MAP[ServiceId.SUMMARY] = 'results-summary';\n","import { Component, Inject } from '@angular/core';\nimport { FlightTerm } from '@schemas/modules/flights/flight';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-flight-terms-dialog',\n    templateUrl: './flight-terms-dialog.component.html',\n    styleUrls: ['./flight-terms-dialog.component.scss'],\n})\nexport class FlightTermsDialogComponent {\n    public flightTerms: FlightTerm[] = [];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private mdDialogRef: MatDialogRef<FlightTermsDialogComponent>,\n        private dialogService: DialogService\n    ) {\n        this.flightTerms = ToolsService.deepCopy(data.terms);\n    }\n\n    public close(): void {\n        this.dialogService.closeDialog(this.mdDialogRef);\n    }\n}\n","<div class=\"tz-dialog-close-block\" (click)=\"close()\">\n    <tz-icon className=\"tz-popup-close-icon\" icon=\"popup-close\"></tz-icon>\n</div>\n\n<div *ngIf=\"flightTerms.length > 0; else noTermsFound\" class=\"tz-dialog-container tz-terms-dialog\">\n    <div class=\"tz-dialog-title\" data-test=\"flight-conditions-text\">{{ 'FLIGHT_TRAIN.CONDITIONS' | translate }}</div>\n    <div class=\"tz-dialog-multiple-content\">\n        <ng-container *ngFor=\"let term of flightTerms\">\n            <ng-container *ngIf=\"term.info && term.info !== ''\">\n                <div class=\"tz-terms-dialog__title\">\n                    {{ term.displayName }}\n                </div>\n\n                <a\n                    *ngIf=\"term.infoType === 'url'\"\n                    [href]=\"term.info\"\n                    target=\"_blank\"\n                    class=\"tz-terms-dialog__content tz-purple-link\"\n                >\n                    {{ term.info }}\n                </a>\n                <div *ngIf=\"term.infoType !== 'url'\" class=\"tz-terms-dialog__content\" [innerHTML]=\"term.info\"></div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n\n<ng-template #noTermsFound>\n    <div class=\"tz-dialog-container tz-terms-dialog\">\n        <div class=\"tz-dialog-multiple-content\">\n            <div class=\"tz-terms-dialog__content pb-0\" translate=\"FLIGHT_TRAIN.TERMS_NOT_FOUND\"></div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { FlightTerm } from '@schemas/modules/flights/flight';\n\n@Component({\n    selector: 'tz-mob-flight-terms-conditions-modal',\n    templateUrl: './mob-flight-terms-conditions-modal.component.html',\n    styleUrls: ['./mob-flight-terms-conditions-modal.component.scss'],\n})\nexport class MobFlightTermsConditionsModalComponent implements OnInit {\n    @Input() data!: { terms: any };\n\n    public flightTerms: FlightTerm[] = [];\n\n    constructor() {}\n\n    ngOnInit(): void {\n        this.flightTerms = ToolsService.deepCopy(this.data.terms);\n    }\n}\n","<div *ngIf=\"flightTerms.length > 0; else noTermsFound\" class=\"tz-dialog-container tz-terms-dialog\">\n    <div class=\"terms-conditions-container\">\n        <ng-container *ngFor=\"let term of flightTerms\">\n            <ng-container *ngIf=\"term.info && term.info !== ''\">\n                <div class=\"terms-conditions__title\">\n                    {{ term.displayName }}\n                </div>\n                <div *ngIf=\"term.infoType === 'url'\" class=\"terms-conditions__content\">\n                    <a [href]=\"term.info\" target=\"_blank\" class=\"terms-conditions__link\">\n                        {{ term.info }}\n                    </a>\n                </div>\n                <div *ngIf=\"term.infoType !== 'url'\" class=\"terms-conditions__content\" [innerHTML]=\"term.info\"></div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n\n<ng-template #noTermsFound>\n    <div class=\"tz-dialog-container tz-terms-dialog\">\n        <div class=\"tz-dialog-multiple-content\">\n            <div class=\"tz-terms-dialog__content pb-0\" translate=\"FLIGHT_TRAIN.TERMS_NOT_FOUND\"></div>\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\nimport { CustomerInfo } from '@shared/schemas/tz-customer-info';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { BillingAddress } from '@shared/schemas/tz-customer-info';\nimport { ValidatorPatterns } from '@core/constants/validation-patterns.const';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-billing-info',\n    templateUrl: './billing-info.component.html',\n    styleUrls: ['./billing-info.component.scss'],\n})\nexport class BillingInfoComponent implements OnInit {\n    @Input() customerInformation!: CustomerInfo;\n    @Input() isProfile = false;\n    @Input() formGroup = new FormGroup({});\n\n    @Output() updateCustomerInfo = new EventEmitter<{ customer: CustomerInfo }>();\n    @Output() loadForm = new EventEmitter<FormGroup>();\n\n    public billingAddress!: BillingAddress;\n    public formReadonly = false;\n\n    constructor(private fb: FormBuilder, private userService: UserService, public platformService: PlatformService) {}\n\n    ngOnInit() {\n        if (this.isProfile) {\n            this.billingAddress = this.customerInformation.billingAddress;\n            this.formReadonly = this.billingAddress.addressUpdated && !this.platformService.isMobileDevice;\n            this.buildBillingForm();\n        }\n        this.loadForm.emit(this.formGroup);\n    }\n\n    public toggoleEdit(): void {\n        this.formReadonly = !this.formReadonly;\n        this.setDefaultFormValues();\n        this.formGroup.markAsPristine();\n    }\n\n    public updateBilling(): void {\n        const values = this.formGroup.value;\n        const billingAddress = {\n            companyName: values.companyName,\n            vatNo: values.vatNo,\n            address: values.address,\n            zipCode: values.zipCode,\n            city: values.city,\n            country: values.country.name,\n            countryCode: values.country.code,\n            updateBillingAddress: true,\n        } as BillingAddress;\n        this.customerInformation.billingAddress = billingAddress;\n\n        this.updateCustomerInfo.emit({ customer: this.customerInformation });\n        this.formReadonly = !this.platformService.isMobileDevice;\n        this.billingAddress.addressUpdated = true;\n        this.formGroup.markAsPristine();\n    }\n\n    private setFieldOptions(controlStr: string, value: any): void {\n        const fieldCtrl = this.formGroup.controls[controlStr];\n\n        if (!value || value === '' || !fieldCtrl) {\n            return;\n        }\n\n        fieldCtrl.setValue(value);\n    }\n\n    private setDefaultFormValues(): void {\n        if (this.userService.IsLogged()) {\n            this.setFieldOptions('companyName', this.billingAddress.companyName);\n            this.setFieldOptions('vatNo', this.billingAddress.vatNo);\n            this.setFieldOptions('address', this.billingAddress.address);\n            this.setFieldOptions('zipCode', this.billingAddress.zipCode);\n            this.setFieldOptions('city', this.billingAddress.city);\n\n            if (this.billingAddress.countryCode && this.billingAddress.countryCode !== '') {\n                this.setFieldOptions('country', this.billingAddress.country);\n            }\n        }\n    }\n\n    private buildBillingForm(): void {\n        this.formGroup = this.fb.group({\n            companyName: new FormControl('', [Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(100)]),\n            vatNo: new FormControl('', [Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(20)]),\n            address: new FormControl('', [Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(100)]),\n            zipCode: new FormControl('', [Validators.pattern(ValidatorPatterns.ZIPCODE), Validators.maxLength(10)]),\n            city: new FormControl('', [Validators.pattern(ValidatorPatterns.STRING), Validators.maxLength(100)]),\n            country: new FormControl(''),\n        });\n        this.setDefaultFormValues();\n    }\n}\n","<div class=\"tz-form-container\" data-test=\"profile-billing-information-container\">\n    <div\n        class=\"tz-form-container__title\"\n        data-test=\"profile-billing-information\"\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false && isProfile\"\n    >\n        {{ 'BOOKINGS.BILLING.BILLING_ADDRESS' | translate }}\n    </div>\n    <div *ngIf=\"formGroup.get('companyName')\">\n        <form class=\"form-group-container\" [formGroup]=\"formGroup\">\n            <div class=\"tz-form-container__form\">\n                <div class=\"field-row\">\n                    <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field company-name\">\n                        <input\n                            class=\"field\"\n                            data-test=\"billing-company-name\"\n                            type=\"text\"\n                            formControlName=\"companyName\"\n                            autocomplete=\"off\"\n                            autocorrect=\"off\"\n                            autocapitalize=\"off\"\n                            placeholder=\" \"\n                            [readonly]=\"formReadonly\"\n                        />\n                        <span class=\"tz-field__name\">{{ 'BOOKINGS.BILLING.COMPANY_NAME' | translate }}</span>\n                        <span class=\"valid-check\"></span>\n                        <tz-form-error [form]=\"formGroup\" key=\"companyName\" fieldType=\"COMPANY_NAME\"></tz-form-error>\n                    </div>\n                    <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'companyName'\"\n                            [fieldType]=\"'COMPANY_NAME'\"\n                            [title]=\"'BOOKINGS.BILLING.COMPANY_NAME'\"\n                            ngDefaultControl\n                        >\n                        </tz-mob-input>\n                    </div>\n                    <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field vat\">\n                        <input\n                            class=\"field\"\n                            data-test=\"billing-vat\"\n                            type=\"text\"\n                            formControlName=\"vatNo\"\n                            autocomplete=\"off\"\n                            autocorrect=\"off\"\n                            autocapitalize=\"off\"\n                            placeholder=\" \"\n                            [readonly]=\"formReadonly\"\n                        />\n                        <span class=\"tz-field__name\">{{ 'BOOKINGS.SUMMARY.VAT' | translate }}</span>\n                        <span class=\"valid-check\"></span>\n                        <tz-form-error [form]=\"formGroup\" key=\"vatNo\" fieldType=\"VAT_NO\"></tz-form-error>\n                    </div>\n                    <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'vatNo'\"\n                            [fieldType]=\"'VAT_NO'\"\n                            [title]=\"'BOOKINGS.SUMMARY.VAT'\"\n                            ngDefaultControl\n                        >\n                        </tz-mob-input>\n                    </div>\n                </div>\n                <div class=\"field-row address-zip\">\n                    <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field address\">\n                        <input\n                            class=\"field\"\n                            data-test=\"billing-address\"\n                            type=\"text\"\n                            formControlName=\"address\"\n                            autocomplete=\"off\"\n                            autocorrect=\"off\"\n                            autocapitalize=\"off\"\n                            placeholder=\" \"\n                            [readonly]=\"formReadonly\"\n                        />\n                        <span class=\"tz-field__name\">{{ 'BOOKINGS.BILLING.ADDRESS' | translate }}</span>\n                        <span class=\"valid-check\"></span>\n                        <tz-form-error [form]=\"formGroup\" key=\"address\" fieldType=\"ADDRESS\"></tz-form-error>\n                    </div>\n                    <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'address'\"\n                            [fieldType]=\"'ADDRESS'\"\n                            [title]=\"'BOOKINGS.BILLING.ADDRESS'\"\n                            ngDefaultControl\n                        >\n                        </tz-mob-input>\n                    </div>\n                    <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field zip-code\">\n                        <input\n                            class=\"field\"\n                            data-test=\"billing-zip\"\n                            type=\"text\"\n                            formControlName=\"zipCode\"\n                            autocomplete=\"off\"\n                            autocorrect=\"off\"\n                            autocapitalize=\"off\"\n                            placeholder=\" \"\n                            [readonly]=\"formReadonly\"\n                        />\n                        <span class=\"tz-field__name\">{{ 'BOOKINGS.BILLING.ZIP' | translate }}</span>\n                        <span class=\"valid-check\"></span>\n                        <tz-form-error [form]=\"formGroup\" key=\"zipCode\" fieldType=\"ZIP_CODE\"></tz-form-error>\n                    </div>\n                    <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'zipCode'\"\n                            [fieldType]=\"'ZIP_CODE'\"\n                            [title]=\"'BOOKINGS.BILLING.ZIP'\"\n                            ngDefaultControl\n                        >\n                        </tz-mob-input>\n                    </div>\n                </div>\n                <div class=\"field-row loc-field\">\n                    <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field\">\n                        <input\n                            class=\"field\"\n                            data-test=\"billing-city\"\n                            type=\"text\"\n                            formControlName=\"city\"\n                            autocomplete=\"off\"\n                            autocorrect=\"off\"\n                            autocapitalize=\"off\"\n                            placeholder=\" \"\n                            [readonly]=\"formReadonly\"\n                        />\n                        <span class=\"tz-field__name\">{{ 'BOOKINGS.BILLING.CITY' | translate }}</span>\n                        <span class=\"valid-check\"></span>\n                        <tz-form-error [form]=\"formGroup\" key=\"city\" fieldType=\"CITY_NAME\"></tz-form-error>\n                    </div>\n                    <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'city'\"\n                            [fieldType]=\"'CITY_NAME'\"\n                            [title]=\"'BOOKINGS.BILLING.CITY'\"\n                            ngDefaultControl\n                        >\n                        </tz-mob-input>\n                    </div>\n                    <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field\">\n                        <tz-country-field\n                            class=\"field\"\n                            [formGroup]=\"formGroup\"\n                            data-test=\"billing-country\"\n                            [formCtrl]=\"'country'\"\n                            [readonly]=\"formReadonly\"\n                        >\n                        </tz-country-field>\n                        <span class=\"tz-field__name\">{{ 'BOOKINGS.BILLING.COUNTRY' | translate }}</span>\n                        <tz-form-error [form]=\"formGroup\" key=\"country\"></tz-form-error>\n                    </div>\n                    <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                        <tz-mob-dropdown\n                            leftIcon=\"france-flag\"\n                            [title]=\"'BOOKINGS.BILLING.COUNTRY'\"\n                            [text]=\"'BOOKINGS.BILLING.COUNTRY'\"\n                        ></tz-mob-dropdown>\n                    </div>\n                </div>\n            </div>\n            <div class=\"delete-container\">\n                <button\n                    *ngIf=\"platformService.isMobileDevice$ | async\"\n                    class=\"mob-delete-account\"\n                    data-test=\"profile-billing-reset-information\"\n                    type=\"reset\"\n                >\n                    {{ 'PROFILE.DELETE' | translate }}\n                </button>\n            </div>\n            <div\n                class=\"field-row mb-0 mt-3 form-btn-container\"\n                *ngIf=\"(platformService.isMobileDevice$ | async) === false && isProfile\"\n            >\n                <button\n                    class=\"tz-btn tz-btn-secondary\"\n                    data-test=\"profile-billing-edit-btn\"\n                    *ngIf=\"formReadonly\"\n                    (click)=\"toggoleEdit()\"\n                >\n                    {{ 'PROFILE.Edit' | translate }}\n                </button>\n                <button\n                    class=\"tz-btn tz-btn-primary save-btn\"\n                    data-test=\"profile-billing-save-btn\"\n                    *ngIf=\"!formReadonly\"\n                    (click)=\"updateBilling()\"\n                >\n                    {{ 'GENERAL.SAVE' | translate }}\n                </button>\n                <button\n                    data-test=\"profile-billing-cancel-btn\"\n                    class=\"tz-btn tz-btn-secondary\"\n                    *ngIf=\"!formReadonly && billingAddress.addressUpdated\"\n                    (click)=\"toggoleEdit()\"\n                >\n                    {{ 'GENERAL.CANCEL' | translate }}\n                </button>\n            </div>\n            <div class=\"bottom-container\" *ngIf=\"(platformService.isMobileDevice$ | async) && isProfile\">\n                <button\n                    class=\"btn select-btn selected save-btn\"\n                    data-test=\"profile-billing-save-btn\"\n                    (click)=\"updateBilling()\"\n                >\n                    {{ 'GENERAL.SAVE' | translate }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-block-separator',\n    templateUrl: './block-separator.component.html',\n    styleUrls: ['./block-separator.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BlockSeparatorComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"block-separator\">\n    <div class=\"block-separator__line\"></div>\n\n    <div class=\"block-separator__title\" data-test=\"result-page-round-trip-flights\">\n        <ng-content></ng-content>\n    </div>\n\n    <div class=\"block-separator__line\"></div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { DialogService } from '@services/dialog.service';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { DebugCartItemComponent } from '@shared/components/debug-cart-item/debug-cart-item.component';\nimport { CartStatus, STATUS_COLORS } from '@core/constants/cart-status';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { Transfer } from '@schemas/modules/transfers/transfer';\nimport { PlatformService } from '@services/platform.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'tz-cart-item-actions-bar',\n    templateUrl: './cart-item-actions-bar.component.html',\n    styleUrls: ['./cart-item-actions-bar.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartItemActionsBarComponent implements OnInit, OnChanges {\n    @Input() buttons: string[] = [];\n    @Input() combId: CombinationId | undefined;\n    @Input() optionId: string | undefined;\n    @Input() status!: CartStatus;\n    @Output() changeHotel: EventEmitter<void> = new EventEmitter<void>();\n    @Output() changeOptions: EventEmitter<void> = new EventEmitter<void>();\n    @Output() changeRooms: EventEmitter<void> = new EventEmitter<void>();\n    @Output() changeTickets: EventEmitter<void> = new EventEmitter<void>();\n    @Output() changeTransfer: EventEmitter<Transfer> = new EventEmitter<Transfer>();\n    @Output() changeCarRental: EventEmitter<void> = new EventEmitter<void>();\n    @Output() debug: EventEmitter<void> = new EventEmitter<void>();\n    @Output() modify: EventEmitter<void> = new EventEmitter<void>();\n    @Output() remove: EventEmitter<void> = new EventEmitter<void>();\n    @Output() removeOption: EventEmitter<void> = new EventEmitter<void>();\n    @Output() cancel: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n    public hasButton = false;\n    public debugButton = false;\n    public changeButton = false;\n    public changeHotelButton = false;\n    public changeOptionsButton = false;\n    public changeRoomsButton = false;\n    public changeRoomButton = false;\n    public changeTicketButton = false;\n    public changeTicketsButton = false;\n    public changeTransferButton = false;\n    public changeCarRentalButton = false;\n    public modifyButton = false;\n    public removeOptionButton = false;\n    public removeButton = false;\n    public removeAllButton = false;\n    public updateButton = false;\n    public cancelButton = false;\n    public cancelAllButton = false;\n    public cartStatusStr = '';\n    public statusColor = '';\n    public acceptNewPriceButton = false;\n\n    constructor(\n        private dialogService: DialogService,\n        private cartService: CartService,\n        public platformService: PlatformService,\n        private router: Router\n    ) {}\n\n    ngOnInit(): void {\n        this.initializeButtons();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['status'] || changes['buttons']) {\n            this.initializeButtons();\n        }\n    }\n\n    public onChangeOptions(): void {\n        this.changeOptions.emit();\n    }\n\n    public onChangeRooms(): void {\n        this.changeRooms.emit();\n    }\n\n    public onChangeTickets(): void {\n        this.changeTickets.emit();\n    }\n\n    public onChangeHotel(): void {\n        this.changeHotel.emit();\n    }\n\n    public onCancel(cancelAll = false): void {\n        this.cancel.emit(cancelAll);\n    }\n\n    public onDebug(): void {\n        this.dialogService\n            .open(DebugCartItemComponent, {\n                combId: this.combId,\n                optionId: this.optionId,\n            })\n            .afterClosed()\n            .subscribe((result) => {\n                console.log(`Dialog result: ${result}`);\n                this.debug.emit();\n            });\n    }\n\n    public onRemove(): void {\n        this.remove.emit();\n    }\n\n    public onRemoveOption(): void {\n        this.removeOption.emit();\n    }\n\n    public onChangeTransfer(): void {\n        this.changeTransfer.emit();\n    }\n\n    public onChangeCarRental(): void {\n        this.changeCarRental.emit();\n    }\n\n    public onModify(): void {\n        this.modify.emit();\n    }\n\n    public acceptPriceChange(): void {\n        if (this.optionId === undefined) {\n            return;\n        }\n\n        this.cartService.applyPriceChange(this.optionId).subscribe();\n\n        if (this.platformService.isMobileDevice) {\n            this.router.navigate(['/checkout']);\n        }\n    }\n\n    private initializeButtons() {\n        this.hasButton = false;\n        if (this.buttons) {\n            this.changeOptionsButton = this.buttons.includes('changeOptions') && (this.hasButton = true);\n            this.changeButton = this.buttons.includes('change') && (this.hasButton = true);\n            this.debugButton = this.buttons.includes('debug') && (this.hasButton = true);\n            this.removeOptionButton = this.buttons.includes('removeOption') && (this.hasButton = true);\n            this.removeButton = this.buttons.includes('remove') && (this.hasButton = true);\n            this.removeAllButton = this.buttons.includes('removeAll') && (this.hasButton = true);\n            this.changeTicketButton = this.buttons.includes('changeTicket') && (this.hasButton = true);\n            this.changeTicketsButton = this.buttons.includes('changeTickets') && (this.hasButton = true);\n            this.changeHotelButton = this.buttons.includes('changeHotel') && (this.hasButton = true);\n            this.changeRoomsButton = this.buttons.includes('changeRooms') && (this.hasButton = true);\n            this.changeRoomButton = this.buttons.includes('changeRoom') && (this.hasButton = true);\n            this.changeTransferButton = this.buttons.includes('changeTransfer') && (this.hasButton = true);\n            this.changeCarRentalButton = this.buttons.includes('changeCarRental') && (this.hasButton = true);\n            this.modifyButton = this.buttons.includes('modify') && (this.hasButton = true);\n            this.cancelButton = this.buttons.includes('cancel') && (this.hasButton = true);\n            this.cancelAllButton = this.buttons.includes('cancelAll') && (this.hasButton = true);\n            this.updateButton = this.buttons.includes('update') && (this.hasButton = true);\n        }\n        this.cartStatusStr = '';\n        this.acceptNewPriceButton = this.status === CartStatus.STATUS_PRICE_CHANGED;\n        if (this.status && this.status !== CartStatus.STATUS_PLACED && !this.acceptNewPriceButton) {\n            this.cartStatusStr = 'BOOKINGS.STATUS.' + this.status;\n            const color = STATUS_COLORS[this.status];\n            if (color) {\n                this.statusColor = color;\n            }\n        }\n    }\n}\n","<div class=\"action-buttons-container flex flex-row\" *ngIf=\"hasButton || cartStatusStr !== ''\">\n    <div class=\"action-button\" *ngIf=\"changeTicketButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-flight\" (click)=\"onChangeTickets()\">{{\n            'ACTION_BAR.FLIGHT.CHANGE' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"changeTicketsButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-flight\" (click)=\"onChangeTickets()\">{{\n            'ACTION_BAR.FLIGHT.CHANGES' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"changeTransferButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-transfer\" (click)=\"onChangeTransfer()\">{{\n            'ACTION_BAR.TRANSFER.CHANGE' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"changeCarRentalButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-car-rental\" (click)=\"onChangeCarRental()\">{{\n            'ACTION_BAR.CAR_RENTAL.CHANGE' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"changeOptionsButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-flight-options\" (click)=\"onChangeOptions()\">{{\n            'ACTION_BAR.FLIGHT.OPTIONS' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"changeHotelButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-acc\" (click)=\"onChangeHotel()\">{{\n            'ACTION_BAR.ACC.CHANGE' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"changeRoomsButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-acc-options\" (click)=\"onChangeRooms()\">{{\n            'ACTION_BAR.ACC.OPTIONS' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"changeRoomButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-acc-option\" (click)=\"onChangeRooms()\">{{\n            'ACTION_BAR.ACC.OPTION' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"updateButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-update-selection\" (click)=\"onModify()\">{{\n            'BOOKINGS.UPDATE_SELECTION' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"removeAllButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-remove-all\" (click)=\"onRemove()\">{{\n            'BOOKINGS.REMOVE_ALL' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"removeButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-remove\" (click)=\"onRemove()\">{{\n            'BOOKINGS.REMOVE' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"removeOptionButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-remove-option\" (click)=\"onRemoveOption()\">{{\n            'BOOKINGS.REMOVE' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"modifyButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-modify\" (click)=\"onModify()\">{{\n            'BOOKINGS.MODIFY' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"cancelButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-cancel\" (click)=\"onCancel()\">{{\n            'BOOKINGS.CANCEL' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"cancelAllButton\">\n        <a class=\"links-primary\" data-test=\"change-ticket-cancel-all\" (click)=\"onCancel(true)\">{{\n            'BOOKINGS.CANCEL_ALL' | translate\n        }}</a>\n    </div>\n    <div class=\"action-button\" *ngIf=\"debugButton\">\n        <a class=\"links-primary\" data-test=\"debug\" (click)=\"onDebug()\">Debug</a>\n    </div>\n    <div\n        *ngIf=\"acceptNewPriceButton\"\n        class=\"accept-button\"\n        data-test=\"change-ticket-accept\"\n        (click)=\"acceptPriceChange()\"\n    >\n        {{ 'ACTION_BAR.ACCEPT' | translate }}\n    </div>\n    <div class=\"booking-status\" data-test=\"cart-status\" [ngClass]=\"statusColor\" *ngIf=\"cartStatusStr !== ''\">\n        {{ cartStatusStr | translate }}\n    </div>\n</div>\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { CheckoutCartServiceSummary } from '@schemas/modules/checkout/cart-summary';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { SelectedLuggageAmount } from '@schemas/modules/checkout/transport-luggage';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { SelectedInsurance } from '@schemas/modules/checkout/travel-insurance';\n\n@Component({\n    selector: 'tz-cart-summary',\n    templateUrl: './cart-summary.component.html',\n    styleUrls: ['./cart-summary.component.scss'],\n})\nexport class CartSummaryComponent {\n    @Input() cartSummary: CheckoutCartServiceSummary[] = [];\n    @Input() cartData!: ICart;\n    @Input() luggageAmount!: SelectedLuggageAmount;\n    @Input() selectedInsurance!: SelectedInsurance;\n    @Input() additionalLuggages: { type: string; luggageText: string }[] = [];\n    @Input() hideImprintInfo = false;\n\n    public serviceIDs = ServiceId;\n\n    constructor() {}\n}\n","<div class=\"cart-summary-container\" data-test=\"basket-summary-container\" *ngIf=\"cartSummary.length > 0\">\n    <div class=\"summary-container-name\" data-test=\"basket-summary-container-name\">\n        {{ 'GENERAL.SUMMARY' | translate }}\n    </div>\n    <div class=\"summary-info-container\" data-test=\"basket-summary-info-container\">\n        <ng-container *ngFor=\"let summary of cartSummary; let first = first\">\n            <ng-container [ngSwitch]=\"summary.serviceId\">\n                <div *ngSwitchCase=\"serviceIDs.FLIGHT\" class=\"service-container\" [ngClass]=\"{ 'service-sep': !first }\">\n                    <div class=\"service-name\">\n                        <div class=\"transport name\" data-test=\"basket-summary-transport\">\n                            <tz-icon class=\"icon\" className=\"tz-icon-service-flight\"></tz-icon>\n                            {{ 'FLIGHT.FLIGHT' | translate }}\n                        </div>\n                        <div class=\"price-text\" data-test=\"basket-summary-transport-price\">\n                            {{ summary.totalPrice | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                    <div class=\"service-info\" data-test=\"basket-summary-transport-info\">\n                        {{ summary.originCity }}, {{ summary.originCode }} <br />\n                        {{ summary.destinationCity }}, {{ summary.destinationCode }}\n                        <div class=\"travel-infos\">\n                            {{\n                                summary.flyType === 'roundTrip'\n                                    ? (summary.departureTzFormat | dateRange: summary.arrivalTzFormat)\n                                    : (summary.departureTzFormat | tzDate: 'mediumDate')\n                            }}\n                        </div>\n                        <div class=\"search-infos\">\n                            {{\n                                summary.flyType === 'roundTrip'\n                                    ? ('GENERAL.Round_trip' | translate)\n                                    : ('GENERAL.One_way' | translate)\n                            }}\n                            | {{ summary.paxInfo }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"additional-charges\"\n                        data-test=\"additional-luggage\"\n                        *ngIf=\"luggageAmount && luggageAmount.listPrice > 0\"\n                    >\n                        <div class=\"charge-type\">\n                            {{ 'FLIGHT.LUGGAGE.ADDITIONAL_BAGGAGES' | translate }}\n                            <ng-container *ngIf=\"additionalLuggages.length !== 0\">\n                                <div\n                                    class=\"additional-luggage tz-luggages\"\n                                    *ngFor=\"let luggageStr of additionalLuggages\"\n                                >\n                                    <span class=\"tz-luggages__type\"> {{ luggageStr.type }}:&nbsp;</span>\n                                    <span class=\"tz-luggages__weight\"> {{ luggageStr.luggageText }} </span>\n                                </div>\n                            </ng-container>\n                        </div>\n                        <div class=\"price-text\">\n                            {{ luggageAmount.listPrice | tzCurrency: luggageAmount.listPriceCur }}\n                        </div>\n                    </div>\n                    <div class=\"additional-charges refund-amt\" *ngIf=\"summary.refundAmt > 0\">\n                        <div class=\"charge-type\">{{ 'BOOKINGS.CANCELLED_AMT' | translate }}</div>\n                        <div class=\"price-text\">\n                            {{ summary.refundAmt | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                </div>\n                <div *ngSwitchCase=\"serviceIDs.TRAIN\" class=\"service-container\" [ngClass]=\"{ 'service-sep': !first }\">\n                    <div class=\"service-name\">\n                        <div class=\"transport name\" data-test=\"basket-summary-train\">\n                            <tz-icon class=\"icon\" className=\"service-icon-train\"></tz-icon>\n                            {{ 'TRAIN.TRAIN' | translate }}\n                        </div>\n                        <div class=\"price-text\" data-test=\"basket-summary-train-price\">\n                            {{ summary.totalPrice | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                    <div class=\"service-info\" data-test=\"basket-summary-train-info\">\n                        {{ summary.originName }} <br />\n                        {{ summary.destinationName }}\n                        <div class=\"travel-infos\">\n                            {{ summary.departureTzFormat | dateRange: summary.arrivalTzFormat:true }}<br />\n                        </div>\n                        <div class=\"search-infos\">\n                            <ng-container *ngIf=\"summary.flyType === 'oneWay'\">\n                                {{ 'GENERAL.One_way' | translate }} |\n                            </ng-container>\n                            {{ summary.paxInfo }}\n                        </div>\n                    </div>\n                    <div class=\"additional-charges refund-amt\" *ngIf=\"summary.refundAmt > 0\">\n                        <div class=\"charge-type\">{{ 'BOOKINGS.CANCELLED_AMT' | translate }}</div>\n                        <div class=\"price-text\">\n                            {{ summary.refundAmt | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                </div>\n                <div *ngSwitchCase=\"serviceIDs.ACC\" class=\"service-container\" [ngClass]=\"{ 'service-sep': !first }\">\n                    <div class=\"service-name\">\n                        <div class=\"hotel name\" data-test=\"basket-summary-hotel\">\n                            <tz-icon class=\"icon\" className=\"tz-icon-service-hotel\"></tz-icon>\n                            {{ 'HOTELS.HOTEL' | translate }}\n                            <span class=\"pay-later-icon\" *ngIf=\"summary.payLater && summary.totalPrice > 0\"> * </span>\n                        </div>\n                        <div class=\"price-text\" data-test=\"basket-summary-hotel-price\">\n                            {{ summary.totalPrice | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                    <div class=\"service-info\" data-test=\"basket-summary-hotel-info\">\n                        {{ summary.hotelName }} <br />\n                        {{ summary.selectedRoomNames }}\n                        <div class=\"travel-infos\">\n                            {{ summary.checkIn | dateRange: summary.checkOut }}\n                        </div>\n                        <div class=\"search-infos\">\n                            {{ summary.numberOfNights }}\n                            {{\n                                summary.numberOfNights > 1\n                                    ? ('GENERAL.nights' | translate)\n                                    : ('GENERAL.night' | translate)\n                            }}\n                            |\n                            {{ summary.paxInfo }}\n                        </div>\n                    </div>\n\n                    <div class=\"additional-charges refund-amt\" *ngIf=\"summary.payLater\">\n                        <div class=\"charge-type\">{{ 'BOOKINGS.SUMMARY.SHOULD_BE_PAID_LATER' | translate }}</div>\n                    </div>\n                    <div class=\"additional-charges\" *ngIf=\"summary.extraBedCharge > 0\">\n                        <div class=\"charge-type\">{{ 'HOTELS.EXTRA_BED.3' | translate }} *</div>\n                        <div class=\"price-text\">\n                            {{ summary.extraBedCharge | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                    <div class=\"additional-charges\" *ngIf=\"summary.additionalCharge > 0\">\n                        <div class=\"charge-type\" data-test=\"basket-summary-hotel-charge-type\">\n                            {{ 'BOOKINGS.SUMMARY.ADDITIONAL_TAXES' | translate }} *\n                        </div>\n                        <div class=\"price-text\" data-test=\"basket-summary-hotel-charge-price\">\n                            {{ summary.additionalCharge | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                    <div class=\"additional-charges refund-amt\" *ngIf=\"summary.refundAmt > 0\">\n                        <div class=\"charge-type\">{{ 'BOOKINGS.CANCELLED_AMT' | translate }}</div>\n                        <div class=\"price-text\">\n                            {{ summary.refundAmt | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    *ngSwitchCase=\"serviceIDs.TRANSFER\"\n                    class=\"service-container\"\n                    [ngClass]=\"{ 'service-sep': !first }\"\n                >\n                    <div class=\"service-name\">\n                        <div class=\"transfer name\" data-test=\"basket-summary-transfer\">\n                            <tz-icon class=\"icon\" className=\"tz-icon-service-transfer\"></tz-icon>\n                            {{ 'TRANSFER.TRANSFER' | translate }}\n                        </div>\n                        <div class=\"price-text\" data-test=\"basket-summary-transfer-price\">\n                            {{ summary.totalPrice | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                    <div class=\"service-info\" data-test=\"basket-summary-transfer-info\">\n                        {{ summary.pickup }} <br />\n                        {{ summary.drop }}\n                        <div class=\"travel-infos\">{{ summary.pickupTzDate | tzDate: 'mediumDate' }}</div>\n                        <div class=\"search-infos\">{{ summary.description }}</div>\n                    </div>\n                    <div class=\"additional-charges refund-amt\" *ngIf=\"summary.refundAmt > 0\">\n                        <div class=\"charge-type\">{{ 'BOOKINGS.CANCELLED_AMT' | translate }}</div>\n                        <div class=\"price-text\">\n                            {{ summary.refundAmt | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    *ngSwitchCase=\"serviceIDs.CAR_RENTAL\"\n                    class=\"service-container\"\n                    [ngClass]=\"{ 'service-sep': !first }\"\n                >\n                    <div class=\"service-name\">\n                        <div class=\"rental name\">\n                            <tz-icon class=\"icon\" className=\"service-icon-car\"></tz-icon>\n                            {{ 'CAR_RENTAL.CAR_RENTAL' | translate }}\n                        </div>\n                        <div class=\"price-text\">\n                            {{ summary.totalPrice | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                    <div class=\"service-info\">\n                        {{ summary.name }}\n                        <div class=\"travel-infos\">{{ summary.pickupTzDate | dateRange: summary.dropOffTzDate }}</div>\n                        <div class=\"search-infos\">{{ summary.class }}</div>\n                    </div>\n                    <div\n                        class=\"additional-charges\"\n                        *ngIf=\"summary.mandatoryCharges && summary.mandatoryCharges.value > 0\"\n                    >\n                        <div class=\"charge-type\">{{ 'CAR_RENTAL.INFOS.MANDATORY_FEES' | translate }} *</div>\n                        <div class=\"price-text\">\n                            {{ summary.mandatoryCharges.value | tzCurrency: summary.mandatoryCharges.curCode }}\n                        </div>\n                    </div>\n                    <div class=\"additional-charges\" *ngIf=\"summary.extraPrice && summary.extraPrice.listPrice > 0\">\n                        <div class=\"charge-type\">{{ 'CAR_RENTAL.INFOS.EXTRA' | translate }} *</div>\n                        <div class=\"price-text\">\n                            {{ summary.extraPrice.listPrice | tzCurrency: summary.extraPrice.listPriceCur }}\n                        </div>\n                    </div>\n                    <div class=\"additional-charges refund-amt\" *ngIf=\"summary.refundAmt > 0\">\n                        <div class=\"charge-type\">{{ 'BOOKINGS.CANCELLED_AMT' | translate }}</div>\n                        <div class=\"price-text\">\n                            {{ summary.refundAmt | tzCurrency: summary.currency }}\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n        <div\n            *ngIf=\"selectedInsurance?.selectedIdx !== null && selectedInsurance?.selectedIdx !== -1\"\n            class=\"service-container insurance-block service-sep\"\n        >\n            <div class=\"service-name\">\n                <div class=\"insurance\">\n                    <tz-icon [icon]=\"'insurance'\"></tz-icon>\n                    {{ 'INSURANCE.INSURANCE' | translate }}\n                </div>\n                <div class=\"price-text\">\n                    {{\n                        selectedInsurance.selected.net.listPrice\n                            | tzCurrency: selectedInsurance.selected.net.listPriceCur\n                    }}\n                </div>\n            </div>\n            <div class=\"service-info\">\n                {{ selectedInsurance.selected.name }}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"summary-bottom-block\" *ngIf=\"cartData && cartData.helpers\">\n        <div class=\"total-price\">\n            <div data-test=\"basket-summary-total\">{{ 'GENERAL.TOTAL' | translate }}</div>\n            <div data-test=\"basket-summary-total-price\">\n                {{ cartData.helpers.total | tzCurrency: cartData.helpers.currency }}\n            </div>\n        </div>\n        <ng-container *ngIf=\"!hideImprintInfo\">\n            <div\n                class=\"summary-price-info color-main-06\"\n                *ngIf=\"!cartData.helpers.paidInt && cartData.itemPrice.dueOnArrival\"\n            >\n                <div data-test=\"basket-summary-pay-now\">\n                    {{ 'BOOKINGS.SUMMARY.SHOULD_BE_PAID_NOW' | translate }}\n                </div>\n                <div data-test=\"basket-summary-pay-now-price\">\n                    {{ cartData.helpers.payNow }}\n                </div>\n            </div>\n            <div class=\"summary-price-info color-main-06\" *ngIf=\"cartData.helpers.paidInt > 0\">\n                <div data-test=\"basket-summary-due-upon-arrival\">\n                    {{ 'BOOKINGS.SUMMARY.ALREADY_CAPTURED' | translate }}\n                </div>\n                <div data-test=\"basket-summary-due-upon-arrival-price\">\n                    {{ cartData.helpers.totalImprintAmt }}\n                </div>\n            </div>\n            <div\n                class=\"summary-price-info color-main-06\"\n                *ngIf=\"cartData.helpers.paidInt > 0 && cartData.helpers.payNowInt > 0\"\n            >\n                <div data-test=\"basket-summary-due-upon-arrival\">\n                    {{ 'BOOKINGS.SUMMARY.LEFT_TO_PAY' | translate }}\n                </div>\n                <div data-test=\"basket-summary-due-upon-arrival-price\">\n                    {{ cartData.helpers.payNow }}\n                </div>\n            </div>\n        </ng-container>\n\n        <div class=\"summary-price-info color-main-06\" *ngIf=\"cartData.itemPrice.dueOnArrival > 0\">\n            <div data-test=\"basket-summary-due-upon-arrival\">\n                {{ 'BOOKINGS.SUMMARY.DUE_UPON_ARRIVAL' | translate }} *\n            </div>\n            <div data-test=\"basket-summary-due-upon-arrival-price\">\n                {{ cartData.itemPrice.dueOnArrival | tzCurrency: cartData.itemPrice.listPriceCur }}\n            </div>\n        </div>\n        <div class=\"summary-price-info\" *ngIf=\"cartData.refundAmt\">\n            <div>{{ 'BOOKINGS.REFUND_AMT' | translate }}</div>\n            <div>\n                {{ +cartData.refundAmt | tzCurrency: cartData.itemPrice.listPriceCur }}\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'tz-checkbox',\n    templateUrl: './checkbox.component.html',\n    styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent implements OnInit {\n    @Input() count?: number;\n    @Input() label?: string;\n    @Input() selected? = false;\n    @Input() showCount = true;\n    @Input() disabled = false;\n    @Input() className = '';\n    @Input() stopPropagation = false;\n    @Output() selectedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n    public onChange($event: Event): void {\n        this.selectedChange.emit(($event.target as HTMLInputElement).checked);\n    }\n\n    public onClick($event: Event): void {\n        if (this.stopPropagation) {\n            $event.stopPropagation();\n        }\n    }\n}\n","<div [class]=\"'checkbox-container ' + className\" [ngClass]=\"{ disabled: disabled }\">\n    <div class=\"checkbox-block\">\n        <label (click)=\"onClick($event)\" class=\"checkbox-label\">\n            <span class=\"checkbox-label-text\">\n                {{ label }}\n                <ng-content></ng-content>\n            </span>\n\n            <input\n                class=\"checkbox-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"selected\"\n                (change)=\"onChange($event)\"\n                [disabled]=\"disabled\"\n                data-test=\"for-checkbox-status\"\n            />\n            <span\n                class=\"checkbox-icon\"\n                [ngClass]=\"{ disabled: disabled }\"\n                data-test=\"result-page-flight-containers-checkbox\"\n            ></span>\n        </label>\n    </div>\n    <div class=\"count\" *ngIf=\"showCount\">{{ count }}</div>\n</div>\n","import { Injector } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { NavigationStart, Router } from '@angular/router';\n@Component({\n    selector: 'tz-cookie',\n    templateUrl: './cookie.component.html',\n    styleUrls: ['./cookie.component.scss'],\n})\nexport class CookieComponent {\n    public cookie: any = {};\n    public showCookie: boolean;\n    public storageManagerUtil: StorageManagerUtil;\n    public st: any;\n    private router?: Router;\n\n    constructor(injector: Injector) {\n        // needed to access static values of StorageManagerUtil in html\n        this.st = StorageManagerUtil;\n\n        this.storageManagerUtil = injector.get(StorageManagerUtil);\n        this.showCookie = !StorageManagerUtil.getCookie();\n        if (this.showCookie) {\n            this.router = injector.get(Router);\n            this.listenCookieChange();\n        }\n    }\n\n    public acceptCookie(value: number | null): void {\n        this.storageManagerUtil.setCookie(value);\n        this.showCookie = false;\n    }\n\n    public rejectCookie(value: number | null): void {\n        this.storageManagerUtil.setCookie(value);\n        this.showCookie = false;\n    }\n\n    private listenCookieChange() {\n        this.router?.events.forEach((event) => {\n            if (!this.showCookie) {\n                return;\n            }\n            if (event instanceof NavigationStart) {\n                if (StorageManagerUtil.getCookie() !== StorageManagerUtil.ACCEPT_UNDEFINED) {\n                    this.showCookie = false;\n                    return;\n                }\n            }\n        });\n    }\n}\n","<div class=\"cookie-container\" *ngIf=\"showCookie\">\n    <div class=\"tz-container\">\n        <div class=\"cookie-container__title\" translate=\"COOKIES.MANAGE\"></div>\n        <div class=\"cookie-container__info\">\n            {{ 'COOKIES.MSG' | translate }}\n            <a target=\"_blank\" href=\"/about/ppc\" class=\"tz-purple-link\" translate=\"COOKIES.POLICY\"></a>.\n        </div>\n        <div class=\"cookie-btn-container\">\n            <button\n                class=\"tz-btn tz-btn-secondary\"\n                (click)=\"rejectCookie(cookie.showCookieDetails ? st.ACCEPT_ALL : st.ACCEPT_REQUIRED)\"\n            >\n                {{ cookie.showCookieDetails ? 'COOKIES.AGREE_ALL' : ('COOKIES.AGREE_MIN' | translate) }}\n            </button>\n            <button\n                class=\"tz-btn tz-btn-primary\"\n                (click)=\"\n                    acceptCookie(\n                        cookie.showCookieDetails\n                            ? cookie.marketingAccept\n                                ? st.ACCEPT_ALL\n                                : st.ACCEPT_REQUIRED\n                            : st.ACCEPT_ALL\n                    )\n                \"\n            >\n                {{ cookie.showCookieDetails ? 'COOKIES.AGREE_SELECTED' : ('COOKIES.AGREE' | translate) }}\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { LoaderModel, LoaderType } from '@shared/schemas/loader.model';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-loader',\n    templateUrl: './loader.component.html',\n    styleUrls: ['./loader.component.scss'],\n})\nexport class TzLoaderComponent implements OnInit, OnDestroy {\n    public loading = false;\n    public loaderType: LoaderType = 'default';\n    public loaderTitle = '';\n    public loaderText = '';\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        public platformService: PlatformService,\n        private loaderService: LoaderService,\n        private renderer: Renderer2\n    ) {\n        this.triggerLoading();\n    }\n\n    ngOnInit(): void {}\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    private triggerLoading(): void {\n        this.loaderService.triggerLoading.pipe(takeUntil(this.destroy$)).subscribe((loader: LoaderModel) => {\n            this.loading = loader.loading;\n            this.loaderType = 'default';\n            this.loaderTitle = '';\n            this.loaderText = '';\n\n            this.lockScroll();\n\n            if (loader.type) {\n                this.loaderType = loader.type;\n            }\n\n            if (loader.title) {\n                this.loaderTitle = loader.title;\n            }\n\n            if (loader.textKey) {\n                this.loaderText = loader.textKey;\n            }\n        });\n    }\n\n    private lockScroll(): void {\n        if (this.loading) {\n            this.renderer.addClass(document.body, 'body-lock-scroll');\n        } else {\n            this.renderer.removeClass(document.body, 'body-lock-scroll');\n        }\n    }\n}\n","<div *ngIf=\"loading\" [ngClass]=\"{ 'loader-wrapper': loaderType === 'default' }\">\n    <tz-header *ngIf=\"loaderType === 'default'\"></tz-header>\n\n    <div\n        [ngClass]=\"{\n            'loader-wrapper-default': loaderType === 'default',\n            'loader-wrapper-small': loaderType === 'small',\n            'mob-wrapper-default': platformService.isMobileDevice\n        }\"\n        *ngIf=\"loaderText !== ''\"\n    >\n        <div class=\"loader-container flex flex-column\">\n            <div *ngIf=\"loaderType !== 'default' || platformService.isMobileDevice\" class=\"loader-icon-block\">\n                <tz-loading-icon></tz-loading-icon>\n            </div>\n\n            <div class=\"loader-title\">\n                {{ (loaderTitle && loaderTitle !== '' ? loaderTitle : 'LOADER_MESSAGES.LOADING') | translate }}\n            </div>\n\n            <div *ngIf=\"loaderType === 'default' && !platformService.isMobileDevice\" class=\"loading-block\">\n                <div class=\"loading-block-item\"></div>\n            </div>\n\n            <div class=\"loader-text\">\n                {{ loaderText | translate }}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"loader-backdrop\" [class.loader-backdrop--small-loader]=\"loaderType === 'small'\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-loading-icon',\n    templateUrl: './loading-icon.component.html',\n    styleUrls: ['./loading-icon.component.scss'],\n})\nexport class LoadingIconComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"loading-icon-block\">\n    <div>\n        <tz-svg-icon icon=\"loading\"></tz-svg-icon>\n    </div>\n\n    <div class=\"loading-icon-loader\">\n        <tz-svg-icon icon=\"loading-loader\"></tz-svg-icon>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'tz-counter',\n    templateUrl: './counter.component.html',\n    styleUrls: ['./counter.component.scss'],\n})\nexport class CounterComponent implements OnInit {\n    @Input() count = 0;\n    @Input() maxValue: number | undefined;\n    @Input() minValue = 0;\n    @Input() className = '';\n    @Input() disabled = false;\n    @Output() countChange: EventEmitter<number> = new EventEmitter<number>();\n    @Output() maxValueLimitReached: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    public add(): void {\n        if (this.maxValue === undefined || this.maxValue > 0) {\n            this.count++;\n            this.emitCounterValue();\n        } else {\n            this.maxValueLimitReached.emit();\n        }\n    }\n\n    public substract() {\n        if (this.minValue === this.count) {\n            return;\n        }\n\n        if (this.count > 0) {\n            this.count--;\n            this.emitCounterValue();\n        }\n    }\n\n    private emitCounterValue(): void {\n        this.countChange.emit(this.count);\n    }\n}\n","<div [class]=\"'counter-container flex flex-row ' + className\">\n    <div\n        [class.counter-btn--disable]=\"minValue === count || !count\"\n        class=\"minus counter-btn\"\n        data-test=\"hotel-room-minus-counter-btn\"\n        (click)=\"substract()\"\n    >\n        <tz-svg-icon\n            [stretch]=\"true\"\n            icon=\"inactive-minus\"\n            className=\"counter-svg\"\n            [styles]=\"{ 'width.px': 14 }\"\n        ></tz-svg-icon>\n    </div>\n\n    <div class=\"counter\" data-test=\"hotel-room-counter\">\n        {{ count }}\n    </div>\n    <div\n        [class.counter-btn--disable]=\"maxValue === 0\"\n        class=\"plus counter-btn\"\n        data-test=\"hotel-room-plus-counter-btn\"\n        (click)=\"add()\"\n    >\n        <tz-svg-icon [stretch]=\"true\" icon=\"plus\" className=\"counter-svg\" [styles]=\"{ 'width.px': 14 }\"></tz-svg-icon>\n    </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\n\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DebugInfo } from '@schemas/modules/cart/debug-cart-item';\nimport { CartStatus } from '@core/constants/cart-status';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-debug-cart-item',\n    templateUrl: './debug-cart-item.component.html',\n    styleUrls: ['./debug-cart-item.component.scss'],\n})\nexport class DebugCartItemComponent implements OnInit {\n    public combId!: CombinationId;\n    public optionId!: string;\n    public allowedStatuses: { id: CartStatus; name: string }[] = [\n        { id: CartStatus.STATUS_REJECTED, name: 'Reject' },\n        { id: CartStatus.STATUS_PRICE_CHANGED, name: 'Price Changed' },\n        { id: CartStatus.STATUS_INVALID, name: 'Invalid' },\n    ];\n    public debugInfo: DebugInfo = {\n        enabled: true,\n        status: CartStatus.STATUS_REJECTED,\n        newPrice: {\n            value: null,\n            cur: '',\n        },\n        imprint: true,\n    };\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        public data: {\n            data: {\n                combId: CombinationId;\n                optionId: string;\n            };\n        },\n        private mdDialogRef: MatDialogRef<DebugCartItemComponent>,\n        private trazlerAPI: ApiAccessService,\n        private dialogService: DialogService\n    ) {}\n\n    ngOnInit(): void {\n        this.combId = this.data.data.combId;\n        this.optionId = this.data.data.optionId;\n    }\n\n    public setDebugInfo() {\n        this.trazlerAPI.setCartDebugInfo(this.combId, this.optionId, this.debugInfo).then(\n            () => {\n                this.closeDialog(true);\n            },\n            (failure: any) => {\n                alert(failure.error.message);\n            }\n        );\n    }\n\n    public closeDialog(value: boolean | null): void {\n        this.dialogService.closeDialog(this.mdDialogRef, value);\n    }\n}\n","<h4>Debug</h4>\n<div>\n    <div class=\"checkbox-item\">\n        <label class=\"body-2\">\n            <input type=\"checkbox\" [(ngModel)]=\"debugInfo.enabled\" />\n            <span></span>\n            <div>Enable</div>\n        </label>\n    </div>\n    <br />\n    <div class=\"\">\n        <label for=\"status\">Status (Failure Status)</label>\n        <select class=\"form-control\" [(ngModel)]=\"debugInfo.status\">\n            <option *ngFor=\"let opt of allowedStatuses\" [ngValue]=\"opt.id\">{{ opt.name }}</option>\n        </select>\n    </div>\n    <br />\n    <div class=\"\">\n        <label for=\"price\">NewPrice (provider price)</label>\n        <input type=\"number\" class=\"form-control\" [(ngModel)]=\"debugInfo.newPrice.value\" id=\"price\" />\n    </div>\n    <br />\n    <div class=\"checkbox-item\">\n        <label class=\"body-2\">\n            <input type=\"checkbox\" [(ngModel)]=\"debugInfo.imprint\" />\n            <span></span>\n            <div>Imprint (fail after imprint)</div>\n        </label>\n    </div>\n    <br />\n</div>\n<div class=\"action-bar\">\n    <button (click)=\"closeDialog(false)\">Cancel</button>\n    <button class=\"submit-btn\" color=\"primary\" (click)=\"setDebugInfo()\">Submit</button>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'tz-app-app-dialog',\n    templateUrl: './app-dialog.component.html',\n    styleUrls: ['./app-dialog.component.scss'],\n})\nexport class AppDialogComponent implements OnInit, OnDestroy {\n    @ViewChild('dialogContent', {\n        static: true,\n        read: ViewContainerRef,\n    })\n    public dialogClass = 'trazler-dialog';\n    public isWithHeader = true;\n\n    viewContainerRef: any;\n    componentRef: ComponentRef<any> | null = null;\n\n    constructor(\n        private resolver: ComponentFactoryResolver,\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {\n        // set main dialog class\n        if (data?.data?.isDefaultDialog === true) {\n            this.dialogClass = 'default-dialog';\n        }\n        // set isWithHeader\n        if (data?.data?.isWithHeader === false) {\n            this.isWithHeader = false;\n        }\n    }\n\n    public ngOnInit(): void {\n        const factory = this.resolver.resolveComponentFactory(this.data.component);\n        this.componentRef = this.viewContainerRef.createComponent(factory);\n    }\n\n    public ngOnDestroy(): void {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n    }\n}\n","<header *ngIf=\"isWithHeader\" class=\"dialog-header\" [ngClass]=\"dialogClass\"></header>\n<mat-dialog-content>\n    <ng-template #dialogContent></ng-template>\n</mat-dialog-content>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Inject,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MainDialogOptions } from '@shared/schemas/main-dialog-options.model';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { DialogButtonsStyles } from '@shared/schemas/dialog.model';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-main-dialog',\n    templateUrl: './main-dialog.component.html',\n    styleUrls: ['./main-dialog.component.scss'],\n})\nexport class MainDialogComponent implements OnInit {\n    @ViewChild('dialogContent', {\n        static: true,\n        read: ViewContainerRef,\n    })\n    viewContainerRef: any;\n    componentRef: ComponentRef<any> | null = null;\n\n    public dialogData!: MainDialogOptions;\n    public dialogButtonsStyles = DialogButtonsStyles;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        public data: {\n            component: ComponentType<any>;\n            data: MainDialogOptions;\n        },\n        private mdDialogRef: MatDialogRef<MainDialogComponent>,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private dialogService: DialogService\n    ) {}\n\n    ngOnInit(): void {\n        this.dialogData = this.data.data;\n\n        if (this.dialogData.component) {\n            const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.dialogData.component);\n            this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n\n            if (this.componentRef) {\n                this.componentRef.instance.data = this.dialogData.data;\n            }\n        }\n    }\n\n    public onCancel(): void {\n        this.closeDialog(false);\n    }\n\n    private closeDialog(value: boolean): void {\n        this.dialogService.closeDialog(this.mdDialogRef, value);\n    }\n}\n","<div *ngIf=\"dialogData.showCloseBtn\" class=\"tz-dialog-close-block\" (click)=\"onCancel()\">\n    <tz-icon className=\"tz-popup-close-icon\" icon=\"popup-close\"></tz-icon>\n</div>\n\n<div class=\"tz-dialog-container confirmation-dialog-container\">\n    <div *ngIf=\"dialogData.title\" class=\"tz-dialog-title\" data-test=\"dialog-data-title\">\n        {{ dialogData.title | translate }}\n    </div>\n\n    <div class=\"tz-dialog-content\">\n        {{ dialogData.content }}\n\n        <ng-template #dialogContent></ng-template>\n    </div>\n</div>\n","import { Component, HostListener, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { StickFooterDialogOptions } from '@shared/schemas/stick-footer-dialog-options.model';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-stick-footer-dialog',\n    templateUrl: './stick-footer-dialog.component.html',\n    styleUrls: ['./stick-footer-dialog.component.scss'],\n})\nexport class StickyFooterDialogComponent implements OnInit {\n    public dialogData!: StickFooterDialogOptions;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        public data: {\n            component: ComponentType<any>;\n            data: StickFooterDialogOptions;\n        },\n        private mdDialogRef: MatDialogRef<StickyFooterDialogComponent>,\n        private dialogService: DialogService\n    ) {}\n\n    @HostListener('keydown.esc')\n    public onEsc(): void {\n        this.close(false);\n    }\n\n    ngOnInit(): void {\n        this.dialogData = this.data.data;\n        this.addWrapperClass();\n    }\n\n    public addWrapperClass(): void {\n        const dialogRefKey = '_overlayRef';\n        const overlayEl = this.mdDialogRef[dialogRefKey].overlayElement;\n        overlayEl.parentElement.className += ' tz-stick-footer-dialog-wrapper';\n        overlayEl.parentElement.insertBefore(overlayEl.parentElement.previousElementSibling, overlayEl);\n    }\n\n    public close(value: any): void {\n        this.dialogService.closeDialog(this.mdDialogRef, value);\n    }\n\n    public cancel(): void {\n        this.close(false);\n    }\n\n    public confirm(): void {\n        this.close(true);\n    }\n}\n","<div class=\"tz-stick-footer-container\">\n    <div class=\"tz-dialog-title\" data-test=\"dialog-data-title\">{{ dialogData.title }}</div>\n\n    <div class=\"tz-dialog-content\" data-test=\"dialog-data-content\">\n        {{ dialogData.content }}\n    </div>\n\n    <div *ngIf=\"dialogData.cancelBtnTitle || dialogData.confirmBtnTitle\" class=\"tz-dialog-actions-block\">\n        <button *ngIf=\"dialogData.cancelBtnTitle\" class=\"tz-popup-btn tz-popup-btn-secondary\" (click)=\"cancel()\">\n            {{ dialogData.cancelBtnTitle }}\n        </button>\n\n        <button *ngIf=\"dialogData.confirmBtnTitle\" class=\"tz-popup-btn tz-popup-btn-primary\" (click)=\"confirm()\">\n            {{ dialogData.confirmBtnTitle }}\n        </button>\n    </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\nimport { ConfirmationDialogOptions } from '@shared/schemas/confirmation-dialog-options.model';\nimport { DialogButtonsStyles } from '@shared/schemas/dialog.model';\nimport { DialogService } from '@services/dialog.service';\nimport { PlatformService } from '@services/platform.service';\n\nexport type TzDialogReturn = boolean | null;\nexport const CLOSE: TzDialogReturn = null;\nexport const CONFIRM: TzDialogReturn = true;\nexport const CANCEL: TzDialogReturn = false;\n\n@Component({\n    selector: 'tz-trazler-confirmation-dialog',\n    templateUrl: './trazler-confirmation-dialog.component.html',\n    styleUrls: ['./trazler-confirmation-dialog.component.scss'],\n})\n\n//export interface IDialogReturn: DialogReturn\nexport class TrazlerConfirmationDialogComponent implements OnInit {\n    public dialogData!: ConfirmationDialogOptions;\n    public dialogButtonsStyles = DialogButtonsStyles;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        public data: {\n            component: ComponentType<any>;\n            data: ConfirmationDialogOptions;\n        },\n        public platformService: PlatformService,\n        private mdDialogRef: MatDialogRef<TrazlerConfirmationDialogComponent>,\n        private dialogService: DialogService\n    ) {}\n\n    ngOnInit(): void {\n        this.dialogData = this.data.data;\n    }\n\n    public onClose(): void {\n        this.closeDialog(CLOSE);\n    }\n\n    public onCancel(): void {\n        this.closeDialog(CANCEL);\n    }\n\n    public onConfirm(): void {\n        this.closeDialog(CONFIRM);\n    }\n\n    private closeDialog(value: TzDialogReturn): void {\n        this.dialogService.closeDialog(this.mdDialogRef, value);\n    }\n}\n","<div *ngIf=\"dialogData.showCloseBtn\" class=\"tz-dialog-close-block\" (click)=\"onCancel()\">\n    <tz-icon className=\"tz-popup-close-icon\" icon=\"popup-close\"></tz-icon>\n</div>\n\n<div\n    class=\"tz-dialog-container confirmation-dialog-container\"\n    data-test=\"confirm-dialog-container\"\n    [ngClass]=\"dialogData.containerClass ? dialogData.containerClass : ''\"\n>\n    <div\n        class=\"tz-dialog-top-img\"\n        *ngIf=\"(platformService.isMobileDevice$ | async) && dialogData.icon && dialogData.icon?.name !== ''\"\n    >\n        <tz-svg-icon [icon]=\"dialogData.icon.name\" [styles]=\"dialogData.icon.iconStyle\"></tz-svg-icon>\n    </div>\n    <div class=\"tz-dialog-title\" data-test=\"confirm-dialog-title\" [innerHTML]=\"dialogData.title ?? '' | safeHtml\"></div>\n\n    <div class=\"tz-dialog-content\" data-test=\"confirm-dialog-text\" *ngIf=\"dialogData.content\">\n        {{ dialogData.content }}\n    </div>\n\n    <div class=\"tz-dialog-multiple-content\" *ngIf=\"dialogData.multipleContent && dialogData.multipleContent.length\">\n        <ng-container *ngFor=\"let content of dialogData.multipleContent\">\n            <div [innerHTML]=\"content | safeHtml\"></div>\n        </ng-container>\n    </div>\n\n    <div\n        data-test=\"dialog-actions-block\"\n        *ngIf=\"dialogData.closeBtnTitle || dialogData.cancelBtnTitle || dialogData.confirmBtnTitle\"\n        class=\"tz-dialog-actions-block\"\n    >\n        <button\n            *ngIf=\"dialogData.closeBtnTitle\"\n            [ngClass]=\"{\n                'tz-popup-btn-primary': dialogData.closeBtnStyle === dialogButtonsStyles.PRIMARY,\n                'tz-popup-btn-secondary':\n                    dialogData.closeBtnStyle === dialogButtonsStyles.SECONDARY || !dialogData.closeBtnStyle\n            }\"\n            class=\"tz-popup-btn tz-popup-btn-close\"\n            (click)=\"onClose()\"\n        >\n            {{ dialogData.closeBtnTitle }}\n        </button>\n\n        <button\n            *ngIf=\"dialogData.cancelBtnTitle\"\n            [ngClass]=\"{\n                'tz-popup-btn-primary': dialogData.cancelBtnStyle === dialogButtonsStyles.PRIMARY,\n                'tz-popup-btn-secondary':\n                    dialogData.cancelBtnStyle === dialogButtonsStyles.SECONDARY || !dialogData.cancelBtnStyle\n            }\"\n            class=\"tz-popup-btn\"\n            (click)=\"onCancel()\"\n            [attr.data-test]=\"'confirm-container-' + dialogData.cancelBtnTitle\"\n        >\n            {{ dialogData.cancelBtnTitle }}\n        </button>\n\n        <button\n            *ngIf=\"dialogData.confirmBtnTitle\"\n            [ngClass]=\"{\n                'tz-popup-btn-primary':\n                    dialogData.confirmBtnStyle === dialogButtonsStyles.PRIMARY || !dialogData.confirmBtnStyle,\n                'tz-popup-btn-secondary': dialogData.confirmBtnStyle === dialogButtonsStyles.SECONDARY\n            }\"\n            class=\"tz-popup-btn\"\n            (click)=\"onConfirm()\"\n            [attr.data-test]=\"'confirm-container-' + dialogData.confirmBtnTitle\"\n        >\n            {{ dialogData.confirmBtnTitle }}\n        </button>\n    </div>\n</div>\n","import { Component, HostListener, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DialogService } from '@services/dialog.service';\n\nimport { ConfirmationDialogOptions } from '@shared/schemas/confirmation-dialog-options.model';\n\n@Component({\n    selector: 'tz-dialog',\n    templateUrl: './tz-dialog.component.html',\n    styleUrls: ['./tz-dialog.component.scss'],\n})\nexport class TzDialogComponent implements OnInit {\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        public data: ConfirmationDialogOptions,\n        private mdDialogRef: MatDialogRef<TzDialogComponent>,\n        private dialogService: DialogService\n    ) {}\n\n    @HostListener('keydown.esc')\n    public onEsc(): void {\n        this.close(false);\n    }\n    ngOnInit(): void {}\n\n    public close(value: any): void {\n        this.dialogService.closeDialog(this.mdDialogRef, value);\n    }\n\n    public cancel(): void {\n        this.close(false);\n    }\n\n    public confirm(): void {\n        this.close(true);\n    }\n}\n","<div class=\"detailpagepopup\">\n    <i class=\"material-icons\" (click)=\"close(false)\">x</i>\n\n    <div class=\"detailpageBody\">\n        <div class=\"detailpageBodyinner\">\n            <div class=\"title-info\">\n                <h3>\n                    {{ data.title }}\n                </h3>\n                <!-- <ng-container *ngFor=\"let msg of data.messages\">\n                    <p [innerHTML]=\"msg\"></p>\n                </ng-container>-->\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { SnackBarDialogModel } from '@shared/schemas/snack-bar-dialog.model';\nimport { DialogButtonsStyles } from '@shared/schemas/dialog.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { timer } from 'rxjs';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-tz-snack-bar-dialog',\n    templateUrl: './tz-snack-bar-dialog.component.html',\n    styleUrls: ['./tz-snack-bar-dialog.component.scss'],\n})\nexport class TzSnackBarDialogComponent implements OnInit {\n    public dialogData!: SnackBarDialogModel;\n    public dialogButtonsStyles = DialogButtonsStyles;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        public data: {\n            component: ComponentType<any>;\n            data: SnackBarDialogModel;\n        },\n        private mdDialogRef: MatDialogRef<TzSnackBarDialogComponent>,\n        private dialogService: DialogService\n    ) {}\n\n    ngOnInit(): void {\n        this.dialogData = this.data.data;\n\n        // const timger = timer(this.dialogData.time);\n        // const subscribe = timger.subscribe(val => {\n        //   this.closeDialog();\n        // });\n    }\n\n    public onClose(): void {\n        this.closeDialog();\n    }\n\n    private closeDialog(): void {\n        this.dialogService.closeDialog(this.mdDialogRef);\n    }\n}\n","<div class=\"info-snack-bar\">\n    <div class=\"info-message\">\n        <div>\n            {{ dialogData.message }}\n        </div>\n        <tz-icon icon=\"Info\" (click)=\"onClose()\"></tz-icon>\n    </div>\n    <div class=\"done-btn\" (click)=\"onClose()\">{{ 'GENERAL.GOT_IT' | translate }}</div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { SnackBarDialogModel } from '@shared/schemas/snack-bar-dialog.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { timer } from 'rxjs';\nimport { DialogService } from '@services/dialog.service';\n\n@Component({\n    selector: 'tz-tz-snack-bar',\n    templateUrl: './tz-snack-bar.component.html',\n    styleUrls: ['./tz-snack-bar.component.scss'],\n})\nexport class TzSnackBarComponent implements OnInit {\n    public dialogData!: SnackBarDialogModel;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        public data: {\n            component: ComponentType<any>;\n            data: SnackBarDialogModel;\n        },\n        private mdDialogRef: MatDialogRef<TzSnackBarComponent>,\n        private dialogService: DialogService\n    ) {}\n\n    ngOnInit(): void {\n        this.dialogData = this.data.data;\n\n        if (this.dialogData.time > 0) {\n            const timger = timer(this.dialogData.time);\n            const subscribe = timger.subscribe((val) => {\n                this.close();\n                subscribe.unsubscribe();\n            });\n        }\n    }\n\n    public close(): void {\n        this.dialogService.closeDialog(this.mdDialogRef);\n    }\n}\n","<div class=\"tz-snack-bar\">\n    <div class=\"tz-snack-bar__message\">\n        {{ dialogData.message }}\n    </div>\n    <div class=\"tz-icon-clear\" (click)=\"close()\"></div>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\n\n@Component({\n    selector: 'tz-dropdown',\n    templateUrl: './dropdown.component.html',\n    styleUrls: ['./dropdown.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DropdownComponent implements OnInit, OnChanges {\n    @Input() label = '';\n    @Input() selectedOptionKey = '';\n    @Input() options: any[] = [];\n    @Input() optionKey = '';\n    @Input() labelKey = '';\n    @Input() labelSelectKey = '';\n    @Input() labelStartKey = '';\n    @Input() labelIconKey = '';\n    @Input() dropArrowDownIcon = 'drop-arrow-down-fill';\n    @Input() dropArrowUpIcon = 'drop-arrow-up-fill';\n    @Input() dropdownType: 'text' | 'block' = 'text';\n    @Input() placement = 'bottom-left';\n    @Input() className = '';\n    @Input() svgStyle: { [key: string]: string | number } = {};\n    @Output() selectChange: EventEmitter<any> = new EventEmitter<any>();\n\n    public selectedOptionsLabel = '';\n\n    ngOnInit(): void {\n        if (!this.labelSelectKey) {\n            this.labelSelectKey = this.labelKey;\n        }\n\n        this.setSelectedValue();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['selectedOptionKey']) {\n            this.setSelectedValue();\n        }\n    }\n\n    public onSelectChange(option: any): void {\n        this.selectedOptionKey = option[this.optionKey];\n        this.selectedOptionsLabel = option[this.labelSelectKey];\n        this.selectChange.emit(option);\n    }\n\n    public setSelectedValue(): void {\n        this.options.map((option) => {\n            if (option[this.optionKey] === this.selectedOptionKey) {\n                this.selectedOptionsLabel = option[this.labelSelectKey];\n            }\n        });\n    }\n}\n","<div\n    [class]=\"'flex align-center ' + className\"\n    [ngClass]=\"{\n        'tz-dropdown--block-style': dropdownType === 'block',\n        'tz-dropdown--text-style': dropdownType === 'text'\n    }\"\n>\n    <div ngbDropdown #dropdownManu=\"ngbDropdown\" class=\"tz-dropdown\" [placement]=\"placement\">\n        <div class=\"dropdown-label\" data-test=\"dropdown-toggle\" ngbDropdownToggle>\n            <span class=\"dropdown-label-text\">\n                <span class=\"label\" *ngIf=\"label\">{{ label }} | </span>{{ selectedOptionsLabel | translate }}\n            </span>\n\n            <span class=\"dropdown-label-icon dropdown-label-icon--down\">\n                <tz-svg-icon [icon]=\"dropArrowDownIcon\" [styles]=\"{ 'width.px': 10 }\"></tz-svg-icon>\n            </span>\n\n            <span class=\"dropdown-label-icon dropdown-label-icon--up\">\n                <tz-svg-icon [icon]=\"dropArrowUpIcon\" [styles]=\"{ 'width.px': 10 }\"></tz-svg-icon>\n            </span>\n        </div>\n\n        <div ngbDropdownMenu>\n            <div\n                *ngFor=\"let option of options\"\n                (click)=\"onSelectChange(option); dropdownManu.close()\"\n                class=\"dropdown-menu-item\"\n                [attr.data-test]=\"option[labelKey] | translate\"\n                [class.dropdown-menu-item--selected]=\"option[optionKey] === selectedOptionKey\"\n            >\n                <span *ngIf=\"option[labelStartKey]\" class=\"dropdown-menu-item-label-start-text\">{{\n                    option[labelStartKey] | translate\n                }}</span>\n\n                <span *ngIf=\"option[labelIconKey]\" class=\"dropdown-menu-item-label-icon\">\n                    <tz-svg-icon [icon]=\"option[labelIconKey]\" [styles]=\"svgStyle\"></tz-svg-icon>\n                </span>\n\n                <span class=\"dropdown-menu-item-label-text\">{{ option[labelKey] | translate }}</span>\n\n                <span class=\"dropdown-menu-item-icon\">\n                    <tz-svg-icon icon=\"dropdown-checked\"></tz-svg-icon>\n                </span>\n            </div>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-footer-page-contact-form',\n    templateUrl: './footer-page-contact-form.component.html',\n    styleUrls: ['./footer-page-contact-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterPageContactFormComponent implements OnInit {\n    @Input() signUpSuccessfully = false;\n    @Input() formProcessing = false;\n    @Input() hideFileUpload = false;\n    @Output() formSubmit: EventEmitter<{ [key: string]: string }> = new EventEmitter<{ [key: string]: string }>();\n\n    public form!: FormGroup;\n    public files: { names: string[]; error: boolean } = { names: [], error: false };\n    public formSubmitted = false;\n\n    constructor(private formBuilder: FormBuilder, public platformService: PlatformService) {}\n\n    public get email() {\n        return this.form.get('emailID');\n    }\n\n    public get firstName() {\n        return this.form.get('firstName');\n    }\n\n    public get feedBack() {\n        return this.form.get('feedBack');\n    }\n\n    ngOnInit() {\n        this.initForm();\n    }\n\n    public initForm(): void {\n        this.form = this.formBuilder.group({\n            emailID: ['', [Validators.required, Validators.pattern('^[a-z0-9A-Z._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n            firstName: ['', [Validators.required, Validators.pattern('^[a-zA-ZÀ-ÿ-s]+$')]],\n            feedBack: ['', [Validators.required, Validators.minLength(40)]],\n            files: [],\n            firstnameLeft: [true],\n            mailLeft: [true],\n            messageLeft: [true],\n        });\n    }\n\n    public onFormSubmit(): void {\n        this.formSubmitted = true;\n\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.formSubmit.emit(this.form.value);\n    }\n\n    public onChooseFile(event: Event): void {\n        const target = event.target as HTMLInputElement;\n\n        if (target && target.files && !target.files?.length) {\n            return;\n        }\n\n        const files: FileList | null = target.files;\n\n        if (files) {\n            this.files = { names: [], error: false };\n\n            const filesArr: File[] = [];\n            let fileData: File;\n            let key: string;\n            for ([key, fileData] of Object.entries(files)) {\n                filesArr.push(fileData);\n            }\n\n            const filesSize = filesArr.reduce((total: any, file: any) => total + file.size / (1000 * 1000), 0);\n            if (files.length > 4 || filesSize > 20) {\n                this.files.error = true;\n                return;\n            }\n\n            const newFiles: { name: string; fileStr: string }[] = [];\n            const filesName: string[] = [];\n\n            filesArr.map((file: File) => {\n                filesName.push(fileData.name);\n                this.getFileBuffer(file).subscribe((fileBuffer: string) => {\n                    newFiles.push({ fileStr: fileBuffer, name: file.name });\n                });\n            });\n\n            this.files.names = filesName;\n\n            this.form.patchValue({ files: newFiles });\n        }\n    }\n\n    public onClickFile(event: Event): void {\n        const target = event.target as HTMLInputElement;\n        target.value = '';\n    }\n\n    public resetFileUploadData(): void {\n        this.files = { names: [], error: false };\n        this.form.patchValue({ files: [] });\n    }\n\n    private getFileBuffer(file: File): Observable<string> {\n        return new Observable((subscriber) => {\n            const reader = new FileReader();\n            reader.onloadend = (e: ProgressEvent<FileReader>) => {\n                if (e.target && typeof e.target.result === 'string') {\n                    subscriber.next(e.target.result);\n                }\n            };\n            reader.readAsDataURL(file);\n        });\n    }\n}\n","<div *ngIf=\"!signUpSuccessfully\" (submit)=\"onFormSubmit()\" class=\"footer-page-contact\">\n    <form [formGroup]=\"form\">\n        <div class=\"form\">\n            <div class=\"flex form__first-line\">\n                <div class=\"form__email\">\n                    <input\n                        tzOnFocus\n                        formControlName=\"emailID\"\n                        class=\"landing-input\"\n                        type=\"text\"\n                        placeholder=\"{{ 'GENERAL.EMAIL' | translate }}\"\n                        [class.landing-error]=\"\n                            (formSubmitted && email?.invalid) || (!email?.pristine && email?.invalid)\n                        \"\n                    />\n                    <span *ngIf=\"(formSubmitted && email?.invalid) || (!email?.pristine && email?.invalid)\">\n                        <tz-form-error-messages key=\"emailID\" [form]=\"form\" [isEmail]=\"true\"></tz-form-error-messages>\n                    </span>\n                </div>\n\n                <div class=\"form__full-name\">\n                    <input\n                        tzOnFocus\n                        formControlName=\"firstName\"\n                        class=\"landing-input\"\n                        type=\"text\"\n                        placeholder=\"{{ 'FOOTER.FULL_NAME' | translate }}\"\n                        [class.landing-error]=\"\n                            (formSubmitted && firstName?.invalid) || (!firstName?.pristine && firstName?.invalid)\n                        \"\n                    />\n                    <span *ngIf=\"(formSubmitted && firstName?.invalid) || (!firstName?.pristine && firstName?.invalid)\">\n                        <tz-form-error-messages key=\"firstName\" [form]=\"form\"></tz-form-error-messages>\n                    </span>\n                </div>\n            </div>\n\n            <div class=\"form__row flex flex-column\">\n                <textarea\n                    tzOnFocus\n                    formControlName=\"feedBack\"\n                    class=\"landing-textarea\"\n                    cols=\"30\"\n                    rows=\"10\"\n                    placeholder=\"{{ 'FOOTER.MESSAGE' | translate }}\"\n                    [class.landing-error]=\"\n                        (formSubmitted && feedBack?.invalid) || (!feedBack?.pristine && feedBack?.invalid)\n                    \"\n                ></textarea>\n\n                <span *ngIf=\"(formSubmitted && feedBack?.invalid) || (!feedBack?.pristine && feedBack?.invalid)\">\n                    <tz-form-error-messages key=\"feedBack\" [form]=\"form\"></tz-form-error-messages>\n                </span>\n\n                <div *ngIf=\"!hideFileUpload && platformService.isMobileDevice\" class=\"form__upload-info-block\">\n                    {{ 'FOOTER.MAX_FILE_TEXT' | translate }}\n                </div>\n            </div>\n\n            <div class=\"form__buttons\" [class.justify-center]=\"hideFileUpload\">\n                <div class=\"form__buttons-upload overflow-hidden\" *ngIf=\"!hideFileUpload\">\n                    <label\n                        class=\"form__file-upload-label\"\n                        [class.form__file-upload-label-error]=\"files.error\"\n                        (click)=\"resetFileUploadData()\"\n                    >\n                        <span *ngIf=\"files.names.length\" class=\"form__file-upload-label-text\">\n                            +\n                            <span *ngFor=\"let name of files.names; let index = index; let last = last\"\n                                >{{ name.trim()\n                                }}{{ index === files.names.length - 2 ? ' ' + ('GENERAL.AND' | translate) + ' ' : ''\n                                }}{{ index === files.names.length - 2 || last ? '' : ', ' }}</span\n                            >\n                        </span>\n                        <span *ngIf=\"!files.names.length\">+ {{ 'FOOTER.ADD_FILE' | translate }}</span>\n                        <input\n                            id=\"file-upload\"\n                            type=\"file\"\n                            (change)=\"onChooseFile($event)\"\n                            (click)=\"onClickFile($event)\"\n                            multiple\n                        />\n                    </label>\n                </div>\n\n                <button type=\"submit\" class=\"tz-btn tz-btn-yellow\" [class.tz-landing-selected]=\"formProcessing\">\n                    {{ 'FOOTER.SEND' | translate }}\n                </button>\n            </div>\n\n            <div *ngIf=\"!hideFileUpload && !platformService.isMobileDevice\" class=\"form__upload-info-block\">\n                {{ 'FOOTER.MAX_FILE_TEXT' | translate }}\n            </div>\n        </div>\n    </form>\n</div>\n\n<div *ngIf=\"signUpSuccessfully\">\n    <div class=\"contacts-thank-you-title\">{{ 'FOOTER.Thank You!' | translate }}</div>\n    <div class=\"contacts-thank-you-text\" [innerHTML]=\"'FOOTER.ContactFormSuccess' | translate\"></div>\n</div>\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'tz-footer-pages-header',\n    templateUrl: './footer-pages-header.component.html',\n    styleUrls: ['./footer-pages-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class FooterPagesHeaderComponent implements OnInit {\n    @Input() public content: string | undefined;\n    @Input() public className = '';\n    public isAboutRoute = false;\n\n    constructor(private router: Router) {}\n\n    public ngOnInit(): void {\n        this.isAboutRoute = this.router.url.split('/').pop()?.toLowerCase() === 'about';\n    }\n}\n","<div class=\"footer-pages-header\" [ngClass]=\"{ about: isAboutRoute }\">\n    <img class=\"footer-pages-header__mob-img\" src=\"/assets/icons/web/images/about-us-img.png\" />\n\n    <div class=\"landing-wrapper__container footer-pages-header__container {{ className }}\">\n        <div *ngIf=\"content\" [innerHTML]=\"content | replace: '\\\\&nbsp\\\\;':''\"></div>\n    </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'tz-form-error-messages',\n    templateUrl: './form-error-messages.component.html',\n    styleUrls: ['./form-error-messages.component.scss'],\n})\nexport class FormErrorMessagesComponent implements OnInit {\n    @Input() key!: string;\n    @Input() form!: FormGroup;\n    @Input() isEmail: undefined | boolean;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<span class=\"landing-error-text\">\n    <span *ngIf=\"form.get(key)?.hasError('required')\">\n        {{ 'GENERAL.Required' | translate }}\n    </span>\n\n    <span *ngIf=\"form.get(key)?.hasError('pattern') && isEmail\">\n        {{ 'VALIDATION.INVALID_EMAIL_FORMAT' | translate }}\n    </span>\n\n    <span *ngIf=\"form.get(key)?.hasError('pattern') && !isEmail\">\n        {{ 'GENERAL.Invalid' | translate }}\n    </span>\n\n    <span *ngIf=\"form.get(key)?.hasError('minlength')\">\n        {{ 'FOOTER.MSG_MIN_40_CHARACTERS' | translate }}\n    </span>\n</span>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidatorPatterns } from '@core/constants/validation-patterns.const';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-sign-up-form',\n    templateUrl: './sign-up-form.component.html',\n    styleUrls: ['./sign-up-form.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SignUpFormComponent implements OnInit {\n    @Input() formProcessing = false;\n    @Input() buttonTxt = 'FOOTER.SUBSCRIBE';\n    @Output() formSubmit: EventEmitter<string> = new EventEmitter<string>();\n\n    public form!: FormGroup;\n    public formSubmitted = false;\n\n    constructor(public platformService: PlatformService, private formBuilder: FormBuilder) {}\n\n    public get email() {\n        return this.form.get('email');\n    }\n\n    ngOnInit() {\n        this.initForm();\n    }\n\n    public onFormSubmit(): void {\n        this.formSubmitted = true;\n\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.formSubmit.emit(this.form.value.email);\n    }\n\n    private initForm(): void {\n        this.form = this.formBuilder.group({\n            email: ['', [Validators.required, Validators.pattern(ValidatorPatterns.EMAIL)]],\n        });\n    }\n}\n","<form (submit)=\"onFormSubmit()\" [formGroup]=\"form\">\n    <div class=\"flex justify-center sign-up\">\n        <div class=\"sign-up__input-item\">\n            <input\n                tzOnFocus\n                formControlName=\"email\"\n                class=\"landing-input\"\n                type=\"text\"\n                placeholder=\"{{ 'GENERAL.EMAIL' | translate }}\"\n                [class.landing-error]=\"\n                    (formSubmitted && email && email.invalid) || (email && !email.pristine && email.invalid)\n                \"\n            />\n\n            <span *ngIf=\"(formSubmitted && email && email.invalid) || (email && !email.pristine && email.invalid)\">\n                <tz-form-error-messages key=\"email\" [form]=\"form\" [isEmail]=\"true\"></tz-form-error-messages>\n            </span>\n        </div>\n\n        <div>\n            <button\n                type=\"submit\"\n                class=\"tz-btn\"\n                [ngClass]=\"platformService.isMobileDevice ? 'tz-btn-primary' : 'tz-btn-yellow'\"\n                [class.tz-landing-selected]=\"formProcessing\"\n            >\n                {{ buttonTxt | translate }}\n            </button>\n        </div>\n    </div>\n</form>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-accommodation-guest-rate',\n    templateUrl: './mob-accommodation-guest-rate.component.html',\n    styleUrls: ['./mob-accommodation-guest-rate.component.scss'],\n})\nexport class MobAccommodationGuestRateComponent {\n    @Input() public rate!: number;\n    @Input() public isHotelDetail = false;\n}\n","<div class=\"guest-rate flex-center\" [class.hotel]=\"isHotelDetail\">\n    {{ rate | number: '1.1-1' }}\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PagesUrls } from '@core/constants/pages-urls';\n\n@Component({\n    selector: 'tz-mob-cookie-modal',\n    templateUrl: './mob-cookie-modal.component.html',\n    styleUrls: ['./mob-cookie-modal.component.scss'],\n})\nexport class MobCookieModalComponent implements OnInit {\n    @Input() data: any;\n    public pagesUrls = PagesUrls;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<div class=\"mob-cookie-modal\">\n    <div>\n        <p class=\"mob-cookie-modal__title\">\n            {{ data.title }}\n        </p>\n        <p class=\"mob-cookie-modal__content\">\n            {{ data.content }}\n            <a target=\"_blank\" [href]=\"pagesUrls.ABOUT_PPC\" class=\"tz-purple-link\">{{ data.policy }}</a\n            >.\n        </p>\n    </div>\n</div>\n\n<div class=\"tz-dialog-actions-block\">\n    <button class=\"tz-popup-btn tz-popup-btn-secondary cancel\" (click)=\"data.cancel()\">\n        {{ data.cancelBtnTitle }}\n    </button>\n    <button class=\"tz-popup-btn tz-popup-btn-primary\" (click)=\"data.confirm()\">\n        {{ data.confirmBtnTitle }}\n    </button>\n</div>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { DialogService } from '@services/dialog.service';\nimport { CookieComponent } from '@shared/components/cookie/cookie.component';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { StorageKeys } from '@schemas/modules/core/storage-keys';\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalService } from '@services/modal.service';\nimport { PassengerComponent } from 'src/app/modules/search/passenger/passenger.component';\nimport { MobCookieModalComponent } from '../mob-cookie-modal/mob-cookie-modal.component';\n\n@Component({\n    selector: 'tz-cookie-modal',\n    templateUrl: './mob-cookie.component.html',\n    styleUrls: ['./mob-cookie.component.scss'],\n})\nexport class MobCookieComponent extends CookieComponent implements OnInit {\n    constructor(\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        injector: Injector,\n        private modalService: ModalService\n    ) {\n        super(injector);\n        const showCookieAlert = !StorageManagerUtil.get(StorageKeys.COOKIE, true);\n        if (showCookieAlert) {\n            this.modalService.createMainModal(MobCookieModalComponent, {\n                data: {\n                    title: translateService.instant('COOKIES.MANAGE'),\n                    content: translateService.instant('COOKIES.MSG'),\n                    policy: translateService.instant('COOKIES.POLICY'),\n                    cancelBtnTitle: translateService.instant('COOKIES.AGREE_MIN'),\n                    confirmBtnTitle: translateService.instant('COOKIES.AGREE'),\n                    confirm: () => this.confirmCookie(),\n                    cancel: () => this.cancelCookie(),\n                },\n                cssClass: 'mob-cookie-modal',\n                hideHeader: true,\n            });\n        }\n    }\n\n    confirmCookie() {\n        this.acceptCookie(StorageManagerUtil.ACCEPT_ALL);\n        this.modalService.dismiss();\n    }\n\n    cancelCookie() {\n        this.rejectCookie(StorageManagerUtil.ACCEPT_REQUIRED);\n        this.modalService.dismiss();\n    }\n\n    ngOnInit(): void {}\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-dropdown',\n    templateUrl: './mob-dropdown.component.html',\n})\nexport class MobDropdownComponent implements OnInit {\n    @Input() title: string | undefined;\n    @Input() leftIcon: string | undefined;\n    @Input() text!: string;\n\n    public open = false;\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    public dropDownClick(event: Event): void {\n        this.dropDownToggle();\n\n        console.log('dropDownClick');\n    }\n    public leftIconClick(event: Event): void {\n        event.stopPropagation();\n\n        console.log('leftIconClick');\n    }\n\n    public rightIconClick(event: Event): void {\n        event.stopPropagation();\n\n        this.dropDownToggle();\n        console.log('rightIconClick');\n    }\n\n    private dropDownToggle(): void {\n        this.open = !this.open;\n    }\n}\n","<div class=\"tz-mob-dropdown\" [class.active]=\"open\">\n    <span *ngIf=\"title\" class=\"tz-mob-dropdown__name\">{{ title | translate }}</span>\n    <button class=\"tz-mob-dropdown__button\" (click)=\"dropDownClick($event)\">\n        <div *ngIf=\"leftIcon\" class=\"tz-mob-dropdown__left-icon\" (click)=\"leftIconClick($event)\">\n            <tz-svg-icon [icon]=\"leftIcon\" [mobile]=\"true\"></tz-svg-icon>\n        </div>\n        <p class=\"tz-mob-dropdown__text\">{{ text | translate }}</p>\n        <div class=\"tz-mob-dropdown__right-icon\" (click)=\"rightIconClick($event)\">\n            <tz-svg-icon icon=\"arrow-down-grey\" [mobile]=\"true\"></tz-svg-icon>\n        </div>\n    </button>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ControlContainer, FormGroup } from '@angular/forms';\nimport { TzTravellerService } from '@services/services/tzTraveller.service';\nimport fa from '@mobiscroll/angular/dist/js/i18n/fa';\n\n@Component({\n    selector: '[formGroup] tz-mob-input, [formGroupName] tz-mob-input',\n    templateUrl: './mob-input.component.html',\n})\nexport class MobInputComponent implements OnInit {\n    @Input() formReadonly = false;\n    @Input() key!: string;\n    @Input() fieldType: string | undefined;\n    @Input() title: string | undefined;\n    @Input() icon: string | undefined;\n    @Input() checkValid = true;\n    @Input() placeholder = '';\n\n    @Input() autocomplete = 'off';\n    @Input() autocorrect = 'off';\n    @Input() autocapitalize = 'off';\n    @Input() type = 'text';\n\n    public form!: FormGroup;\n    public isInValid = false;\n\n    constructor(private controlContainer: ControlContainer) {}\n\n    ngOnInit() {\n        this.form = this.controlContainer.control as FormGroup;\n\n        this.checkValidInput();\n    }\n\n    public checkValidInput(): void {\n        this.isInValid =\n            !this.formReadonly && this.checkValid && TzTravellerService.invalidControl(this.form, this.key);\n    }\n}\n","<div class=\"tz-mob-input\">\n    <span *ngIf=\"title\" class=\"tz-mob-input__name\">{{ title | translate }}</span>\n    <div class=\"tz-mob-input__field\" [formGroup]=\"form\">\n        <input\n            [attr.data-mob]=\"'mob-input-' + key + '-field'\"\n            [type]=\"type\"\n            [formControlName]=\"key\"\n            [attr.autocomplete]=\"autocomplete\"\n            [attr.autocorrect]=\"autocorrect\"\n            [attr.autocapitalize]=\"autocapitalize\"\n            [readonly]=\"formReadonly\"\n            [placeholder]=\"placeholder\"\n            (keyup)=\"checkValidInput()\"\n        />\n        <tz-svg-icon *ngIf=\"icon\" class=\"tz-mob-input__status-icon\" [icon]=\"icon\" [mobile]=\"true\"></tz-svg-icon>\n    </div>\n\n    <span class=\"tz-mob-input__error-message\" *ngIf=\"fieldType && isInValid\">\n        <tz-form-error\n            [attr.data-mob]=\"'mob-input-' + key + '-error-message'\"\n            [form]=\"form\"\n            [key]=\"key\"\n            [fieldType]=\"fieldType || ''\"\n        ></tz-form-error>\n    </span>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-price-changed-block',\n    templateUrl: './mob-price-changed-block.component.html',\n    styleUrls: ['./mob-price-changed-block.component.scss'],\n})\nexport class MobPriceChangedBlockComponent {}\n","<div class=\"mob-price-changed-block-wrapper\">\n    <div class=\"mob-price-changed-block__info-part info-part\">\n        <div class=\"info-part__text\">\n            <p class=\"info-part__text_header\">{{ 'BOOKINGS.STATUS.8' | translate }}!</p>\n            <p class=\"info-part__text_main\">{{ 'BOOKINGS.SELECT_NEW_PRICE' | translate }}.</p>\n        </div>\n    </div>\n\n    <div class=\"mob-price-changed-block\">\n        <div class=\"mob-price-changed-block__support-line support-line\">\n            <div class=\"support-line__line\"></div>\n            <div class=\"support-line__circle\"></div>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { MenuController } from '@ionic/angular';\nimport { ModalService } from '@services/modal.service';\nimport { LogInService } from '@services/services/log-in.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { MobSignInComponent } from '@shared/components/mobile/mob-sign-in/mob-sign-in.component';\n\n@Component({\n    selector: 'tz-mob-auth',\n    templateUrl: './mob-auth.component.html',\n    styleUrls: ['./mob-auth.component.scss'],\n})\nexport class MobAuthComponent {\n    public showSignin = true;\n    public fromCheckout = false;\n    public errorMsg = '';\n\n    constructor(\n        private menu: MenuController,\n        private modalService: ModalService,\n        private logInService: LogInService,\n        private router: Router,\n        private userService: UserService\n    ) {}\n\n    public openSignIn(): void {\n        this.userService.openLoginModel().then((res) => {\n            if (res) {\n                this.closeSignInMenu();\n            }\n        });\n    }\n\n    public openSignUp(loginMailId?: string, fromCheckout?: boolean): void {\n        this.modalService\n            .createMainModal(MobSignInComponent, {\n                data: { loginMailId, showSignin: false, fromCheckout },\n                title: 'ACCOUNT.SIGN.SIGN_UP',\n            })\n            .then(() => {});\n    }\n\n    public loginWithSocialMedia = (media: string) => this.logInService.loginWithSocialMedia(media, this.modalService);\n\n    public onClosePage(): void {\n        this.closeSignInMenu();\n    }\n\n    private closeSignInMenu(): void {\n        this.menu.close('authMenu').then(() => {});\n    }\n}\n","<div class=\"text-center get-started-container h-100 d-flex\">\n    <div>\n        <div class=\"get-started-container__header\">\n            <div routerLink=\"/\">\n                <img\n                    class=\"tz-brand-logo\"\n                    data-test=\"navbar-trazler-logo\"\n                    src=\"/assets/icons/web/img/TzLogoMain.svg\"\n                    alt=\"\"\n                />\n            </div>\n\n            <div class=\"get-started-container__close-btn\" data-mob=\"get-started-close\" (click)=\"onClosePage()\">\n                <tz-svg-icon icon=\"close\" [mobile]=\"true\"></tz-svg-icon>\n            </div>\n        </div>\n        <h3 class=\"title\">{{ 'ACCOUNT.SIGN.GET_STARTED' | translate }}</h3>\n        <p class=\"subtitle\">{{ 'ACCOUNT.SIGN.SIGN_IN_NOTE' | translate }}</p>\n        <div class=\"d-grid social-login-options\">\n            <a (click)=\"openSignIn()\" data-test=\"signin-signup-google-login-button\" class=\"social-btn email-btn\">\n                <tz-svg-icon [icon]=\"'social-email'\"></tz-svg-icon>\n                <span> {{ 'ACCOUNT.SIGN.SIGN_IN_EMAIL' | translate }} </span>\n            </a>\n            <a\n                (click)=\"loginWithSocialMedia('facebook')\"\n                data-test=\"signin-signup-facebook-login-button\"\n                class=\"social-btn facebook-btn\"\n            >\n                <tz-svg-icon [icon]=\"'social-facebook'\"></tz-svg-icon>\n                <span> {{ 'ACCOUNT.SIGN.SIGN_IN_FACEBOOK' | translate }} </span>\n            </a>\n            <a\n                (click)=\"loginWithSocialMedia('googlePlus')\"\n                data-test=\"signin-signup-google-login-button\"\n                class=\"social-btn google-btn\"\n            >\n                <tz-svg-icon [icon]=\"'social-google'\"></tz-svg-icon>\n                <span> {{ 'ACCOUNT.SIGN.SIGN_IN_GOOGLE' | translate }} </span>\n            </a>\n            <a\n                (click)=\"loginWithSocialMedia('linkedin')\"\n                data-test=\"signin-signup-linkedin-login-button\"\n                class=\"social-btn linkedin-btn mb-0\"\n            >\n                <tz-svg-icon [icon]=\"'social-linkedin'\"></tz-svg-icon>\n                <span> {{ 'ACCOUNT.SIGN.SIGN_IN_LINKEDIN' | translate }} </span>\n            </a>\n        </div>\n        <div class=\"liner-block\">\n            <div class=\"line\"></div>\n            <p>or</p>\n            <div class=\"line\"></div>\n        </div>\n        <a\n            (click)=\"openSignUp()\"\n            data-test=\"signin-signup-google-login-button\"\n            class=\"social-btn d-flex align-center justify-center google-btn\"\n        >\n            <span> {{ 'ACCOUNT.SIGN.CREATE_AN_ACCOUNT' | translate }} </span>\n        </a>\n    </div>\n    <div class=\"text-left description\">\n        {{ 'ACCOUNT.SIGN.I_AGREE_WITH_STARTED' | translate }}\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-button',\n    templateUrl: './mob-button.component.html',\n    styleUrls: ['./mob-button.component.scss'],\n})\nexport class MobButtonComponent implements OnInit {\n    @Input() title = '';\n    @Input() selected = '';\n    @Input() btnType: 'purple' | 'yellow' | 'white' | 'dropdown' = 'purple';\n    @Input() disabled: 'gray-disabled' | 'yellow-disabled' | undefined;\n    @Input() isDropdownOpen = false;\n    @Output() clicked: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    public onClick(): void {\n        this.clicked.emit();\n    }\n}\n","<button\n    (click)=\"onClick()\"\n    [class]=\"'tz-mob-btn tz-mob-btn-' + btnType\"\n    [ngClass]=\"{\n        'tz-mob-btn-gray-disabled': disabled && disabled === 'gray-disabled',\n        'tz-mob-btn-yellow-disabled': disabled && disabled === 'yellow-disabled'\n    }\"\n>\n    <span *ngIf=\"btnType === 'dropdown'\" class=\"dropdown-selected\">\n        {{ selected }}\n    </span>\n\n    <span>\n        {{ title }}\n        <ng-content></ng-content>\n    </span>\n\n    <span *ngIf=\"btnType === 'dropdown'\">\n        <tz-svg-icon *ngIf=\"!isDropdownOpen\" icon=\"mob-btn-dropdown-down\"></tz-svg-icon>\n        <tz-svg-icon *ngIf=\"isDropdownOpen\" icon=\"mob-btn-dropdown-up\"></tz-svg-icon>\n    </span>\n</button>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ICart } from '@schemas/modules/cart/cart';\n\nconst serviceIcons = {\n    0: {\n        icon: 'tz-icon-service-hotel',\n        ordinal: 2,\n    },\n    2: {\n        icon: 'service-icon-car',\n        ordinal: 4,\n    },\n    3: {\n        icon: 'tz-icon-service-transfer',\n        ordinal: 3,\n    },\n    5: {\n        icon: 'tz-icon-service-flight',\n        ordinal: 1,\n    },\n    6: {\n        icon: 'service-icon-train',\n        ordinal: 1,\n    },\n};\n\n@Component({\n    selector: 'tz-mob-cart-summary-button',\n    templateUrl: './mob-cart-summary-button.component.html',\n    styleUrls: ['./mob-cart-summary-button.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobCartSummaryButtonComponent implements OnChanges {\n    @Input() cartData!: ICart;\n    @Input() summaryExpanded = false;\n\n    public services: { icon: string; ordinal: number }[] = [];\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['cartData'] && this.cartData) {\n            const serviceArr: { icon: string; ordinal: number }[] = [];\n            for (const item of this.cartData.items) {\n                const sid = item.serviceId;\n                if (sid !== 0 && sid !== 2 && sid !== 3 && sid !== 5 && sid !== 6) {\n                    continue;\n                }\n\n                serviceArr.push(serviceIcons[sid]);\n            }\n\n            serviceArr.sort((a, b) => a.ordinal - b.ordinal);\n            this.services = [...new Set(serviceArr)];\n        }\n    }\n}\n","<div class=\"cart-summary-btn\">\n    <div class=\"service-icons\">\n        <ng-container *ngFor=\"let sevice of services; let first = first\">\n            <span *ngIf=\"!first\">+</span>\n            <tz-icon class=\"icon\" [ngClass]=\"sevice.icon + '-icon'\" [className]=\"sevice.icon\"></tz-icon>\n        </ng-container>\n    </div>\n    <div class=\"cart-price\" *ngIf=\"cartData && cartData.helpers\">\n        {{ 'GENERAL.TOTAL' | translate }} {{ cartData.helpers.total }}\n    </div>\n    <div class=\"tz-icon-filled-arrow arrow\" [ngClass]=\"{ close: summaryExpanded }\"></div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalService } from '@services/modal.service';\nimport { UserDataService } from '@services/modules/user/dataservices/user.data.service';\n\n@Component({\n    selector: 'tz-mob-forgot-password',\n    templateUrl: './mob-forgot-password.component.html',\n    styleUrls: ['./mob-forgot-password.component.scss'],\n})\nexport class MobForgotPasswordComponent {\n    public passwordChanged = false;\n\n    constructor(private router: Router, private userDataService: UserDataService, private modalService: ModalService) {}\n\n    public changePassword(email: string): void {\n        this.passwordChanged = true;\n        this.userDataService.forgotPassword(email).subscribe(\n            () => {\n                this.modalService.dismiss();\n            },\n            (failure: any) => {\n                console.log('Forgot password failure: ', failure);\n            }\n        );\n    }\n\n    public gotoHome(): void {\n        this.router.navigate(['/search']);\n    }\n}\n","<div class=\"forgot-password-container\">\n    <p class=\"forgot-password-container__title\">{{ 'ACCOUNT.PASSWORD.CREATE_NEW_PASSWORD' | translate }}</p>\n    <p class=\"forgot-password-container__label\">{{ 'ACCOUNT.SIGN.EMAIL' | translate }}</p>\n    <tz-sign-up-form\n        *ngIf=\"!passwordChanged\"\n        (formSubmit)=\"changePassword($event)\"\n        [buttonTxt]=\"'ACCOUNT.FORGOT_PASSWORD.RESET_PASSWORD'\"\n    ></tz-sign-up-form>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-modal-page-link',\n    templateUrl: './mob-modal-page-link.component.html',\n    styleUrls: ['./mob-modal-page-link.component.scss'],\n})\nexport class MobModalPageLinkComponent implements OnInit {\n    @Input() isMobileIcon = false;\n    @Output() clicked: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit() {}\n\n    public onGoToPage(): void {\n        this.clicked.emit();\n    }\n}\n","<div class=\"mob-link-block\" (click)=\"onGoToPage()\">\n    <div class=\"mob-link-block__text\">\n        <ng-content></ng-content>\n    </div>\n\n    <div class=\"mob-link-block__icon-block\">\n        <tz-svg-icon icon=\"chevron_right\" [mobile]=\"isMobileIcon\"></tz-svg-icon>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PickerController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    selector: 'tz-mob-picker',\n    templateUrl: './mob-picker.component.html',\n    styleUrls: ['./mob-picker.component.scss'],\n})\nexport class MobPickerComponent implements OnInit {\n    @Input() options!: { text: string; value: string }[];\n    @Input() selectedOption: string | undefined;\n    @Output() pickerChange: EventEmitter<string> = new EventEmitter<string>();\n\n    public label!: string;\n    public selectedIndex = 0;\n    public openPicker = false;\n\n    constructor() {}\n\n    ngOnInit() {\n        this.setPickerData();\n    }\n\n    public togglePicker(): void {\n        this.openPicker = !this.openPicker;\n    }\n\n    public selectOption(value: string): void {\n        this.selectedOption = value;\n        this.pickerChange.emit(value);\n        this.setPickerData();\n        this.openPicker = false;\n    }\n\n    // public async openPickerOld(): Promise<void> {\n    //     const picker = await this.pickerCtrl.create({\n    //         columns: [\n    //             {\n    //                 name: 'language',\n    //                 options: this.options,\n    //                 selectedIndex: this.selectedIndex,\n    //             },\n    //         ],\n    //         buttons: [\n    //             {\n    //                 text: this.translateService.instant('GENERAL.CANCEL'),\n    //                 role: 'cancel',\n    //                 cssClass: 'tz-btn tz-btn-secondary',\n    //             },\n    //             {\n    //                 text: this.translateService.instant('GENERAL.SELECT'),\n    //                 handler: (option) => {\n    //                     this.selectedOption = option.language.value;\n    //                     this.pickerChange.emit(option.language.value);\n    //                     this.setPickerData();\n    //                 },\n    //                 cssClass: 'tz-btn tz-btn-primary',\n    //             },\n    //         ],\n    //         cssClass: 'mob-main-picker',\n    //     });\n    //\n    //     picker.columns[0].options.forEach((element) => {\n    //         delete element.selected;\n    //         delete element.duration;\n    //         delete element.transform;\n    //     });\n    //\n    //     await picker.present();\n    // }\n\n    private setPickerData(): void {\n        this.options.map((option, index) => {\n            if (option.value === this.selectedOption) {\n                this.selectedIndex = index;\n                this.label = option.text;\n            }\n        });\n\n        if (!this.label) {\n            this.label = this.options[0].text;\n        }\n    }\n}\n","<div class=\"mob-picker\" data-mob=\"mob-picker\">\n    <button class=\"mob-picker__label\" data-mob=\"mob-picker-label\" (click)=\"togglePicker()\" [class.open]=\"openPicker\">\n        <p data-mob=\"mob-picker-selected-label\">{{ label }}</p>\n        <tz-svg-icon [icon]=\"openPicker ? 'arrow-up-black' : 'arrow-down-black'\" [mobile]=\"true\"></tz-svg-icon>\n    </button>\n    <div class=\"mob-picker__list\" *ngIf=\"openPicker\">\n        <button\n            *ngFor=\"let option of options; let index = index\"\n            (click)=\"selectOption(option.value)\"\n            [class.selected]=\"index === selectedIndex\"\n            data-mob=\"mob-picker-list-item\"\n        >\n            {{ option.text }}\n        </button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ValidatorPatterns } from '@core/constants/validation-patterns.const';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DialogService } from '@services/dialog.service';\nimport { ModalService } from '@services/modal.service';\nimport { UserDataService } from '@services/modules/user/dataservices/user.data.service';\n\n@Component({\n    selector: 'tz-mob-reset-password',\n    templateUrl: './mob-reset-password.component.html',\n    styleUrls: ['./mob-reset-password.component.scss'],\n})\nexport class MobResetPasswordComponent implements OnInit {\n    public formGroup = new FormGroup({\n        newPassword: new FormControl('', [Validators.required, Validators.pattern(ValidatorPatterns.PASSWORD)]),\n        reEnteredNewPassword: new FormControl('', [\n            Validators.required,\n            Validators.pattern(ValidatorPatterns.PASSWORD),\n        ]),\n    });\n    public showPassword = {\n        newPassword: false,\n        confirmPassword: false,\n    };\n    public valid = false;\n    private data!: { token: string };\n\n    constructor(\n        private userDataService: UserDataService,\n        private router: Router,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private modalService: ModalService\n    ) {}\n\n    ngOnInit() {\n        this.formGroup.controls['newPassword'].addValidators([this.triggerEnteredPassword()]);\n        this.formGroup.controls['reEnteredNewPassword'].addValidators([this.updatereEnteredPassword()]);\n    }\n\n    public validatePassword(patternStr: string): boolean {\n        const pattern = new RegExp(patternStr);\n        return pattern.test(this.formGroup.controls['newPassword'].value);\n    }\n\n    public changeTzPassword(): void {\n        const formValue = this.formGroup.value;\n        const passwordData = {\n            token: this.data.token,\n            password: formValue.newPassword,\n            confirmPassword: formValue.reEnteredNewPassword,\n        };\n        this.userDataService.resetTzPassword(passwordData).subscribe(\n            () => {\n                this.valid = true;\n            },\n            (failure) => {\n                this.router.navigate(['search']).then(() => {\n                    this.dialogService.openSnackBarDialog(this.translateService.instant('NOTIFS.INVALID_TOKEN'));\n                });\n            }\n        );\n    }\n\n    private triggerEnteredPassword(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            control.parent?.get('reEnteredNewPassword')?.updateValueAndValidity();\n            return null;\n        };\n    }\n\n    private updatereEnteredPassword(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const newPassword = control.parent?.get('newPassword')?.value;\n\n            if (control.valid && newPassword && newPassword !== '' && control.value !== newPassword) {\n                return { NEW_PASSWORD_DID_NOT_MATCH: true };\n            }\n\n            return null;\n        };\n    }\n}\n","<form *ngIf=\"!valid; else success\" class=\"mob-modal-form\" [formGroup]=\"formGroup\">\n    <div class=\"mob-modal-form__note\" translate=\"ACCOUNT.PASSWORD.CREATE_NEW_PASSWORD\"></div>\n    <div class=\"mob-modal-form__field\">\n        <span class=\"field-name\">{{ 'ACCOUNT.PASSWORD.NEW_PASSWORD' | translate }}</span>\n        <input\n            #newPassword\n            type=\"{{ showPassword.newPassword ? 'text' : 'password' }}\"\n            formControlName=\"newPassword\"\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            placeholder=\" \"\n        />\n        <span\n            class=\"valid-check eye-icon\"\n            [ngClass]=\"{ 'eye-normal': showPassword.newPassword, 'eye-slash': !showPassword.newPassword }\"\n            (click)=\"showPassword.newPassword = !showPassword.newPassword; newPassword.focus()\"\n        ></span>\n    </div>\n    <div class=\"mob-modal-form__field\">\n        <span class=\"field-name\">{{ 'ACCOUNT.PASSWORD.REPEAT_NEW_PASSWORD' | translate }}</span>\n        <input\n            #reEnteredNewPassword\n            type=\"{{ showPassword.confirmPassword ? 'text' : 'password' }}\"\n            formControlName=\"reEnteredNewPassword\"\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            placeholder=\" \"\n        />\n        <span\n            class=\"valid-check eye-icon\"\n            [ngClass]=\"{\n                'eye-normal': showPassword.confirmPassword,\n                'eye-slash': !showPassword.confirmPassword\n            }\"\n            (click)=\"showPassword.confirmPassword = !showPassword.confirmPassword; reEnteredNewPassword.focus()\"\n        ></span>\n    </div>\n    <div class=\"mob-modal-form__validations\">\n        <p class=\"title\">{{ 'ACCOUNT.PASSWORD.ACCOUNT_PASSWORD_MUST' | translate }}</p>\n        <ul>\n            <li [class]=\"{ 'valid-check': validatePassword('.{8,}') }\">\n                <svg-icon class=\"check-icon\" [src]=\"'assets/icons/web/icons/check-icon.svg'\"></svg-icon>\n                {{ 'ACCOUNT.PASSWORD.BE_AT_LEAST_8_CHARACTERS' | translate }}\n            </li>\n            <li [class]=\"{ 'valid-check': validatePassword('(?=.*?[A-Z])(?=.*?[a-z])') }\">\n                <svg-icon class=\"check-icon\" [src]=\"'assets/icons/web/icons/check-icon.svg'\"></svg-icon>\n                {{ 'ACCOUNT.PASSWORD.USE_BOTH_UPPER_AND_LOWER_CASE_LETTERS' | translate }}\n            </li>\n            <li [class]=\"{ 'valid-check': validatePassword('(?=.*?[0-9])') }\">\n                <svg-icon class=\"check-icon\" [src]=\"'assets/icons/web/icons/check-icon.svg'\"></svg-icon>\n                {{ 'ACCOUNT.PASSWORD.INCLUDE_AT_LEAST_ONE_NUMBER' | translate }}\n            </li>\n        </ul>\n    </div>\n    <button class=\"mob-modal-form__submit\" (click)=\"changeTzPassword()\">\n        {{ 'ACCOUNT.PASSWORD.CHANGE' | translate }}\n    </button>\n</form>\n\n<ng-template #success>\n    <div class=\"mob-modal-form__succsess\">\n        <p class=\"mob-modal-form__succsess_message\">\n            {{ 'ACCOUNT.PASSWORD.CHANGED' | translate }}\n        </p>\n        <div class=\"mob-modal-form__succsess_icon\">\n            <img src=\"/assets/icons/web/icons/success-check.svg\" />\n        </div>\n    </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalService } from '@services/modal.service';\nimport { LogInService } from '@services/services/log-in.service';\nimport { MobForgotPasswordComponent } from '../mob-forgot-password/mob-forgot-password.component';\n\n@Component({\n    selector: 'tz-mob-sign-in',\n    templateUrl: './mob-sign-in.component.html',\n    styleUrls: ['./mob-sign-in.component.scss'],\n})\nexport class MobSignInComponent implements OnInit {\n    public showSignin = true;\n    public fromCheckout = false;\n    public errorMsg = '';\n    public logInForm;\n    public showPassword = {\n        currentPassword: false,\n    };\n\n    private data!: { loginMailId: string | undefined; showSignin: boolean; fromCheckout: boolean };\n\n    constructor(\n        private modalService: ModalService,\n        private logInService: LogInService,\n        private router: Router,\n        private translateService: TranslateService\n    ) {\n        this.logInForm = LogInService.createLoginForm();\n    }\n\n    ngOnInit() {\n        this.showSignin = this.data.showSignin;\n        this.fromCheckout = this.data.fromCheckout;\n        if (this.data.loginMailId && this.data.loginMailId !== '') {\n            this.logInForm.controls['emailID'].setValue(this.data.loginMailId);\n        }\n    }\n\n    public validatePassword(patternStr: string): boolean {\n        const pattern = new RegExp(patternStr);\n        return pattern.test(this.logInForm.value.password);\n    }\n\n    public goToPage(url: string): void {\n        const targetUrl = this.router.serializeUrl(this.router.createUrlTree([url]));\n        window.open(targetUrl, '_blank');\n    }\n\n    public proceedSignIn() {\n        if (!this.logInForm.valid) {\n            return;\n        }\n\n        this.logInService.proceedSignIn(this.showSignin, this.logInForm.value, this.modalService).then(\n            () => {\n                this.modalService.dismiss(true);\n            },\n            (err) => {\n                this.errorMsg = err.error.message;\n                console.log('Auth error: ', err);\n            }\n        );\n    }\n\n    public hello() {\n        console.log('sdfasdfajsidfasjdfiasjdfoajsiodfijasdjifajs');\n        this.logInService.proceedSignIn(this.showSignin, this.logInForm.value, this.modalService).then(\n            () => {},\n            (err) => {\n                this.errorMsg = err.error.message;\n                console.log('Auth error: ', err);\n            }\n        );\n    }\n\n    public loginWithSocialMedia = (media: string) => this.logInService.loginWithSocialMedia(media, this.modalService);\n\n    public closePopup(skipSignIn = false): void {\n        if (skipSignIn) {\n            StorageManagerUtil.set('skipSignIn', true);\n        }\n\n        this.modalService.dismiss();\n    }\n\n    public toggleSignIn(): void {\n        this.showSignin = !this.showSignin;\n        this.modalService.updateModelTitle$.next(\n            this.translateService.instant('ACCOUNT.SIGN.' + (this.showSignin ? 'SIGN_IN' : 'CREATE_AN_ACCOUNT'))\n        );\n    }\n\n    public forgotPassword(): void {\n        this.modalService.dismiss().then(() => {\n            this.modalService.createMainModal(MobForgotPasswordComponent, {\n                data: {},\n                title: 'ACCOUNT.FORGOT_PASSWORD.FORGOT_PASSWORD',\n            });\n        });\n    }\n}\n","<form class=\"mob-modal-form\" [formGroup]=\"logInForm\" data-test=\"sign-in-modal\">\n    <div class=\"mob-modal-form__note\" [ngClass]=\"{ error: errorMsg !== '' }\">\n        <ng-container *ngIf=\"errorMsg !== ''; else authNote\">\n            {{ errorMsg }}\n        </ng-container>\n\n        <ng-template #authNote>\n            {{ 'ACCOUNT.SIGN.' + (showSignin ? 'SIGN_IN_NOTE' : 'SIGN_UP_NOTE') | translate }}\n        </ng-template>\n    </div>\n    <div class=\"mob-modal-form__field\">\n        <span class=\"field-name\" translate=\"ACCOUNT.SIGN.EMAIL\"></span>\n        <input\n            type=\"mail\"\n            data-test=\"signin-signup-input-email-field\"\n            formControlName=\"emailID\"\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n        />\n    </div>\n    <div class=\"mob-modal-form__field\">\n        <span class=\"field-name\" translate=\"ACCOUNT.SIGN.PASSWORD\"></span>\n        <input\n            type=\"{{ showPassword.currentPassword ? 'text' : 'password' }}\"\n            data-test=\"signin-signup-input-password-field\"\n            class=\"password-dots\"\n            #currentPassword\n            formControlName=\"password\"\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n        />\n        <span\n            class=\"valid-check eye-icon\"\n            [ngClass]=\"{\n                'eye-normal': showPassword.currentPassword,\n                'eye-slash': !showPassword.currentPassword\n            }\"\n            (click)=\"showPassword.currentPassword = !showPassword.currentPassword; currentPassword.focus()\"\n        ></span>\n        <div\n            class=\"field-name forgot-password\"\n            (click)=\"forgotPassword()\"\n            *ngIf=\"showSignin\"\n            translate=\"ACCOUNT.SIGN.FORGOT_YOUR_PASSWORD\"\n        ></div>\n    </div>\n    <div class=\"mob-modal-form__validations\" *ngIf=\"!showSignin\">\n        <p class=\"title\">{{ 'ACCOUNT.PASSWORD.ACCOUNT_PASSWORD_MUST' | translate }}</p>\n        <ul>\n            <li\n                [class]=\"{ 'valid-check': validatePassword('.{8,}') }\"\n                data-test=\"sign-up-create-account-valid-password-8-characters\"\n            >\n                <span class=\"tz-icon-check-nobg\"></span>\n                {{ 'ACCOUNT.PASSWORD.BE_AT_LEAST_8_CHARACTERS' | translate }}\n            </li>\n            <li\n                [class]=\"{ 'valid-check': validatePassword('(?=.*?[A-Z])(?=.*?[a-z])') }\"\n                data-test=\"sign-up-create-account-valid-password-upper-lower-case\"\n            >\n                <span class=\"tz-icon-check-nobg\"></span>\n                {{ 'ACCOUNT.PASSWORD.USE_BOTH_UPPER_AND_LOWER_CASE_LETTERS' | translate }}\n            </li>\n            <li\n                [class]=\"{ 'valid-check': validatePassword('(?=.*?[0-9])') }\"\n                data-test=\"sign-up-create-account-valid-password-one-number\"\n            >\n                <span class=\"tz-icon-check-nobg\"></span>\n                {{ 'ACCOUNT.PASSWORD.INCLUDE_AT_LEAST_ONE_NUMBER' | translate }}\n            </li>\n        </ul>\n        <p class=\"terms-text text-d text-decoration-none\">\n            {{ 'ACCOUNT.SIGN.I_AGREE_WITH' | translate }}\n            <a target=\"_blank\" class=\"tz-purple-link\" (click)=\"goToPage('/about/terms')\">{{\n                'ACCOUNT.SIGN.GENERAL_CONDITIONS' | translate\n            }}</a>\n            {{ 'GENERAL.AND' | translate }}\n            <a target=\"_blank\" class=\"tz-purple-link\" (click)=\"goToPage('/about/ppc')\">{{\n                'ACCOUNT.SIGN.PRIVACY_POLICY_COOKIES' | translate\n            }}</a>\n        </p>\n    </div>\n    <a\n        class=\"mob-modal-form__submit\"\n        data-test=\"signin-signup-connect-button\"\n        [ngClass]=\"{ passive: !logInForm.valid }\"\n        (click)=\"proceedSignIn()\"\n    >\n        {{ (showSignin ? 'ACCOUNT.SIGN.CONNECT' : 'ACCOUNT.SIGN.CREATE_AN_ACCOUNT') | translate }}\n    </a>\n    <div class=\"login-separator\">\n        <span> {{ 'ACCOUNT.SIGN.OR' | translate }} </span>\n    </div>\n    <div class=\"d-flex social-login-options\">\n        <a\n            (click)=\"loginWithSocialMedia('googlePlus')\"\n            data-test=\"signin-signup-google-login-button\"\n            class=\"social-btn\"\n        >\n            <tz-icon [icon]=\"'google_login_mob'\"></tz-icon>\n        </a>\n        <a\n            (click)=\"loginWithSocialMedia('facebook')\"\n            data-test=\"signin-signup-facebook-login-button\"\n            class=\"social-btn\"\n        >\n            <tz-icon [icon]=\"'facebook_login_mob'\"></tz-icon>\n        </a>\n        <a\n            (click)=\"loginWithSocialMedia('linkedin')\"\n            data-test=\"signin-signup-linkedin-login-button\"\n            class=\"social-btn\"\n        >\n            <tz-icon [icon]=\"'linkedIn_login_mob'\"></tz-icon>\n        </a>\n    </div>\n\n    <div class=\"change-auth-type\">\n        <ng-container *ngIf=\"showSignin\">\n            <ng-container *ngIf=\"!fromCheckout\">\n                <span translate=\"ACCOUNT.SIGN.HAVE_NO_ACCOUNT\"></span>\n                <a\n                    (click)=\"toggleSignIn()\"\n                    data-test=\"signin-signup-create-an-account\"\n                    translate=\"ACCOUNT.SIGN.SIGN_UP\"\n                ></a>\n            </ng-container>\n            <a\n                *ngIf=\"fromCheckout\"\n                (click)=\"closePopup(true)\"\n                data-test=\"signin-signup-skip-login\"\n                translate=\"ACCOUNT.SIGN.SKIP_LOGIN\"\n            ></a>\n        </ng-container>\n        <ng-container *ngIf=\"!showSignin\">\n            <span translate=\"ACCOUNT.SIGN.HAVE_AN_ACCOUNT\"></span>\n            <a (click)=\"toggleSignIn()\" translate=\"ACCOUNT.SIGN.SIGN_IN\"></a>\n        </ng-container>\n    </div>\n</form>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { GeneralServiceTab, ServiceTab } from '@schemas/modules/service-tabs/service-tab';\nimport { TabUtils } from '@services/modules/service-tab/tab.utils';\nimport { Router } from '@angular/router';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CheckoutCartServiceSummary } from '@schemas/modules/checkout/cart-summary';\nimport { PagesUrls } from '@core/constants/pages-urls';\nimport { PageUtils } from '@core/utils/page-utils';\nimport { TrainService } from '@services/modules/transport/trains/trains.service';\nimport { Subscription } from 'rxjs';\nimport { FlightsService } from '@services/modules/transport/flights/flights.service';\n\n@Component({\n    selector: 'tz-mob-service-tab',\n    templateUrl: './mob-service-tab.component.html',\n    styleUrls: ['./mob-service-tab.component.scss'],\n})\nexport class MobServiceTabComponent implements OnInit, OnDestroy {\n    @Input() service: ServiceTab | undefined;\n    @Input() generalServiceTab: GeneralServiceTab | undefined;\n    @Input() removable = true;\n    @Input() selected = false;\n    @Input() active = false;\n    @Input() isResultTab = false;\n    @Input() public cartSummary: CheckoutCartServiceSummary[] = [];\n    @Output() toggleServiceTab: EventEmitter<void> = new EventEmitter<void>();\n    @Output() removeServiceTab: EventEmitter<void> = new EventEmitter();\n    @Output() clickServiceTab: EventEmitter<void> = new EventEmitter();\n\n    public cartLabel!: string;\n    public isDisplayedMinimalPriceFromPreSearch = false;\n    public isDisplayedNoResult = false;\n    public isDisplayedCartDataPrice = false;\n    public serviceId = ServiceId;\n    private isFlightPath!: boolean;\n    private isTrainPath!: boolean;\n    private subscription$: Subscription = new Subscription();\n\n    constructor(private router: Router, private trainService: TrainService, private flightService: FlightsService) {}\n\n    get serviceTextOpacity(): boolean {\n        const isFirstPage = PageUtils.is(this.router.url, [PagesUrls.HOME, PagesUrls.SEARCH]);\n        return (\n            (!isFirstPage && !this.service?.isInError) ||\n            (this.isEnable && !this.service?.isInError) ||\n            (!isFirstPage && !this.isEnable)\n        );\n    }\n\n    get isEnable(): boolean {\n        return this.service && this.service.enable ? this.service?.enable : false;\n    }\n\n    get icon(): string {\n        if (this.service) {\n            if (this.service.serviceId === ServiceId.FLIGHT_TRAIN) {\n                if (this.service.selectedService && this.active) {\n                    if (this.service.secondMobIcon) {\n                        const isFlightPath = PageUtils.is(this.router.url, PagesUrls.RESULTS_FLIGHTS);\n                        return isFlightPath ? this.service.mobIcon : this.service.secondMobIcon;\n                    }\n                }\n                const isTrain = !!this.cartSummary.find(\n                    (cartItem: CheckoutCartServiceSummary) => cartItem.serviceId === ServiceId.TRAIN\n                );\n                if (isTrain) {\n                    return this.active ? 'mob-train-service-tab' : 'mob-train-purple-service-tab';\n                }\n            }\n            return this.service.mobIcon;\n        }\n\n        if (this.generalServiceTab) {\n            return this.generalServiceTab.mobIcon;\n        }\n\n        return '';\n    }\n\n    get label(): string {\n        if (\n            this.service?.serviceId === ServiceId.FLIGHT_TRAIN &&\n            this.cartSummary.find((cartItem: CheckoutCartServiceSummary) => cartItem.serviceId === ServiceId.TRAIN)\n        ) {\n            return (this.cartLabel = 'SERVICES.TRAIN');\n        }\n\n        if (this.service) {\n            return this.service.mobLabel;\n        }\n\n        if (this.generalServiceTab) {\n            return this.generalServiceTab.mobLabel;\n        }\n\n        return '';\n    }\n\n    get dataTestName(): string {\n        if (this.service) {\n            return this.service.name;\n        }\n\n        if (this.generalServiceTab) {\n            return this.generalServiceTab.serviceKey;\n        }\n\n        return '';\n    }\n\n    get getSelectedItemPrice(): number {\n        if (this.service) {\n            if (this.isDisplayedCartDataPrice) {\n                return this.service.selectedItemPrice;\n            }\n\n            if (this.service?.serviceId === ServiceId.FLIGHT_TRAIN && this.isDisplayedMinimalPriceFromPreSearch) {\n                this.isFlightPath = PageUtils.is(this.router.url, PagesUrls.RESULTS_FLIGHTS);\n                this.isTrainPath = PageUtils.is(this.router.url, PagesUrls.RESULTS_TRAINS);\n                if (this.isTrainPath) {\n                    return this.trainService?.minTrainPrice;\n                }\n\n                if (this.isFlightPath) {\n                    return this.flightService.minFlightsPrice;\n                }\n            }\n\n            return this.service.minPrice;\n        }\n\n        return 0;\n    }\n\n    get getSelectedItemPriceCur(): string {\n        if (this.service) {\n            return this.service.selectedItemPriceCur;\n        }\n\n        return '';\n    }\n\n    get getMinPriceCur(): string {\n        if (this.service) {\n            return this.service.minPriceCur;\n        }\n\n        return '';\n    }\n\n    public ngOnInit(): void {\n        if (this.isResultTab) {\n            this.initializeTabData();\n        }\n    }\n\n    public onSelectService(): void {\n        if (this.isResultTab) {\n            this.clickServiceTab.emit();\n        }\n\n        if (!this.isResultTab) {\n            this.toggleServiceTab.emit();\n        }\n    }\n\n    public onRemoveService(): void {\n        this.removeServiceTab.emit();\n    }\n\n    public ngOnDestroy(): void {\n        this.subscription$.unsubscribe();\n    }\n\n    private initializeTabData(): void {\n        if (this.service) {\n            this.isDisplayedMinimalPriceFromPreSearch = TabUtils.displayMinimalPriceFromPreSearch(this.service);\n            this.isDisplayedCartDataPrice = TabUtils.displayPriceFromCart(this.service);\n            this.isDisplayedNoResult = TabUtils.displayNoResult(this.service);\n        }\n    }\n}\n","<div\n    *ngIf=\"generalServiceTab || !service?.loader\"\n    class=\"mob-service-tab\"\n    [ngClass]=\"{\n        'mob-service-tab--selected': selected,\n        'mob-service-tab--active': active,\n        'mob-service-tab--result': isResultTab,\n        'mob-service-tab--enable': isEnable\n    }\"\n    [attr.data-test]=\"'searching-page-' + dataTestName\"\n    [class.tab-item-container-hide]=\"service?.serviceId === serviceId?.SUMMARY\"\n>\n    <div class=\"mob-service-tab__icon-block\" (click)=\"onSelectService()\">\n        <tz-svg-icon *ngIf=\"icon\" [icon]=\"icon\" [stretch]=\"true\" className=\"mob-service-tab__icon\"></tz-svg-icon>\n\n        <div\n            *ngIf=\"isResultTab && active && !service?.isInError\"\n            class=\"mob-service-tab__remove-btn\"\n            (click)=\"onRemoveService()\"\n        >\n            <tz-svg-icon icon=\"service-tab-remove\"></tz-svg-icon>\n        </div>\n        <div class=\"mob-service-tab__remove-btn\" *ngIf=\"service?.isInError\">\n            <tz-svg-icon icon=\"reject-button\" [stretch]=\"true\"></tz-svg-icon>\n        </div>\n    </div>\n\n    <div\n        *ngIf=\"(!isDisplayedMinimalPriceFromPreSearch && !isDisplayedCartDataPrice) || service?.isInError\"\n        [class]=\"isEnable ? 'mob-service-tab__text mob-service-tab__text-active' : 'mob-service-tab__text'\"\n        [ngClass]=\"{ 'text-opacity': serviceTextOpacity, 'reject-label': service?.isInError }\"\n    >\n        {{ label | translate }}\n    </div>\n    <div class=\"reject-service\" *ngIf=\"service?.isInError\">\n        {{ 'BOOKINGS.STATUS.7' | translate }}\n    </div>\n    <div\n        *ngIf=\"service && isDisplayedMinimalPriceFromPreSearch && !service?.isInError\"\n        class=\"mob-service-tab__price-text\"\n    >\n        <div>{{ 'GENERAL.FROM' | translate }}</div>\n        <div>{{ getSelectedItemPrice | tzCurrency: getMinPriceCur }}</div>\n    </div>\n\n    <div *ngIf=\"service && isDisplayedCartDataPrice && !service?.isInError\" class=\"mob-service-tab__price-text\">\n        <div>{{ label | translate }}</div>\n        <div>{{ getSelectedItemPrice | tzCurrency: getSelectedItemPriceCur }}</div>\n    </div>\n</div>\n\n<div *ngIf=\"!generalServiceTab && service?.loader\" class=\"mob-service-tab-skeleton\">\n    <ngx-skeleton-loader class=\"mob-service-tab-skeleton__icon-block\" [theme]=\"{ width: '3.75rem', height: '3.75rem' }\">\n    </ngx-skeleton-loader>\n\n    <ngx-skeleton-loader class=\"mob-service-tab-skeleton__info\" [theme]=\"{ width: '2.5rem', height: '1rem' }\">\n    </ngx-skeleton-loader>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    HostListener,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { ModalService } from '@services/modal.service';\n\n@Component({\n    selector: 'tz-mob-main-details-modal',\n    templateUrl: './mob-main-details-modal.component.html',\n    styleUrls: ['./mob-main-details-modal.component.scss'],\n})\nexport class MobMainDetailsModalComponent implements OnInit {\n    @ViewChild('modalContent', {\n        static: true,\n        read: ViewContainerRef,\n    })\n    viewContainerRef: any;\n\n    public title: string | undefined;\n    public hideHeader = false;\n    public isHeaderBottomDivider = true;\n    public headerModalType: 'default' | 'fullscreen' = 'fullscreen';\n    private componentRef!: ComponentRef<any>;\n    private data: any;\n    private component!: ComponentType<any>;\n\n    constructor(private modalService: ModalService, private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    @HostListener('window:popstate', ['$event'])\n    dismissModal(): void {\n        this.closeModal();\n    }\n\n    public ngOnInit(): void {\n        this.modalService.historyPushModal();\n\n        this.initData();\n    }\n\n    public closeModal(): void {\n        this.modalService.dismiss();\n    }\n\n    private initData(): void {\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n\n        if (this.componentRef) {\n            this.componentRef.instance.data = this.data;\n            this.changeHeaderModalType();\n        }\n\n        if (this.isHeaderBottomDivider === undefined) {\n            this.isHeaderBottomDivider = true;\n        }\n    }\n\n    private changeHeaderModalType(): void {\n        if (this.data.headerModalType) {\n            this.headerModalType = this.data.headerModalType;\n        }\n    }\n}\n","<div *ngIf=\"!hideHeader\" class=\"mod-main-modal-wrapper\">\n    <tz-mob-main-modal-header\n        (closeModal)=\"closeModal()\"\n        [isHeaderBottomDivider]=\"isHeaderBottomDivider\"\n        [type]=\"headerModalType\"\n    >\n        {{ title ? (title | translate) : '' }}\n    </tz-mob-main-modal-header>\n</div>\n\n<ion-content>\n    <ng-template #modalContent></ng-template>\n</ion-content>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'tz-mob-main-modal-header',\n    templateUrl: './mob-main-modal-header.component.html',\n    styleUrls: ['./mob-main-modal-header.component.scss'],\n})\nexport class MobMainModalHeaderComponent {\n    @Input() type: 'default' | 'fullscreen' = 'default';\n    @Input() isHeaderBottomDivider = true;\n    @Output() closeModal: EventEmitter<void> = new EventEmitter<void>();\n\n    get isFullscreen(): boolean {\n        return this.type === 'fullscreen';\n    }\n\n    get isDefault(): boolean {\n        return this.type === 'default';\n    }\n\n    public onCloseModal(): void {\n        this.closeModal.emit();\n    }\n}\n","<div\n    class=\"mob-main-modal-header\"\n    [ngClass]=\"{\n        'mob-main-modal-header--default': isDefault,\n        'mob-main-modal-header--fullscreen': isFullscreen\n    }\"\n    id=\"mobMainModalHeader\"\n>\n    <div *ngIf=\"isFullscreen\" (click)=\"onCloseModal()\">\n        <tz-svg-icon icon=\"modal-header-back-btn\"></tz-svg-icon>\n    </div>\n    <div *ngIf=\"isDefault\" class=\"mob-main-modal-header__close-btn-empty-block\"></div>\n\n    <div class=\"mob-main-modal-header__title\">\n        <ng-content></ng-content>\n    </div>\n\n    <div *ngIf=\"isFullscreen\" class=\"mob-main-modal-header__close-btn-empty-block\"></div>\n\n    <div *ngIf=\"isDefault\" (click)=\"onCloseModal()\" data-mob=\"close-checkout-mob-modal-menu\">\n        <tz-svg-icon icon=\"mob-main-modal-close-btn\"></tz-svg-icon>\n    </div>\n</div>\n<div class=\"mob-main-modal-header-bottom-divider\" *ngIf=\"isFullscreen && isHeaderBottomDivider\"></div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { ModalService } from '@services/modal.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'tz-mob-main-modal',\n    templateUrl: './mob-main-modal.component.html',\n    styleUrls: ['./mob-main-modal.component.scss'],\n})\nexport class MobMainModalComponent implements OnInit, OnDestroy {\n    @ViewChild('modalContent', {\n        static: true,\n        read: ViewContainerRef,\n    })\n    viewContainerRef: any;\n    @Input() hideHeader = false;\n    public title: string | undefined;\n    private componentRef!: ComponentRef<any>;\n    private data: any;\n    private component!: ComponentType<any>;\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n    constructor(private modalService: ModalService, private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    @HostListener('window:popstate', ['$event'])\n    dismissModal(): void {\n        this.closeModal();\n    }\n\n    ngOnInit() {\n        this.modalService.historyPushModal();\n\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n\n        if (this.componentRef) {\n            this.componentRef.instance.data = this.data;\n        }\n\n        this.modalService.updateModelTitle$.pipe(takeUntil(this.destroy$)).subscribe((title) => {\n            this.title = title;\n        });\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public closeModal(): void {\n        this.modalService.dismiss();\n    }\n}\n","<div class=\"mod-main-modal-wrapper\">\n    <tz-mob-main-modal-header *ngIf=\"!hideHeader\" (closeModal)=\"closeModal()\">\n        {{ title ? (title | translate) : '' }}\n    </tz-mob-main-modal-header>\n</div>\n\n<ion-content>\n    <ng-template #modalContent></ng-template>\n</ion-content>\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { ModalService } from '@services/modal.service';\nimport { MobPickerWheels } from '@schemas/modules/picker/mob-picker';\nimport { MbscScrollerOptions } from '@mobiscroll/angular4';\n\n@Component({\n    selector: 'tz-mob-picker-modal',\n    templateUrl: './mob-picker-modal.component.html',\n    styleUrls: ['./mob-picker-modal.component.scss'],\n})\nexport class MobPickerModalComponent implements OnInit {\n    public scrollerOptions!: MbscScrollerOptions;\n    public selectBtnText!: string;\n    public cancelBtnText: string | undefined;\n    public title: string | undefined;\n    public selected: any[] | undefined = [];\n\n    private data!: { wheels: MobPickerWheels[]; selected?: any[]; buttonText?: string };\n    private selectedValue: any[] | undefined;\n\n    constructor(private modalService: ModalService) {}\n\n    @HostListener('window:popstate', ['$event'])\n    dismissModal(): void {\n        this.modalService.dismiss();\n    }\n\n    ngOnInit() {\n        this.modalService.historyPushModal();\n        this.initPiker();\n        this.setSelectedValue();\n    }\n\n    public onSelect(): void {\n        this.modalService.dismiss({ selected: [this.selectedValue] });\n    }\n\n    public onCancel(): void {\n        this.modalService.dismiss({ cancel: true });\n    }\n\n    public onClose(): void {\n        this.modalService.dismiss(null);\n    }\n\n    private initPiker(): void {\n        this.scrollerOptions = {\n            display: 'inline',\n            width: 150,\n            wheels: [\n                [\n                    {\n                        circular: false,\n                        data: this.data.wheels,\n                    },\n                ],\n            ],\n            onChange: (event: any, inst: any) => {\n                this.selectedValue = event.valueText;\n            },\n        };\n    }\n\n    private setSelectedValue(): void {\n        this.selected = this.data.selected;\n\n        const selected = this.selected && this.selected[0] !== undefined ? this.selected[0] : this.data.wheels[0].value;\n\n        this.selectedValue = selected;\n    }\n}\n","<div class=\"picker-wrapper tz-mob-picker\">\n    <div class=\"picker-header\">\n        <div *ngIf=\"title\" class=\"picker-title\">\n            {{ title ? (title | translate) : '' }}\n        </div>\n\n        <div class=\"picker-header-close-btn\" (click)=\"onClose()\">\n            <tz-svg-icon icon=\"mob-main-modal-close-btn\"></tz-svg-icon>\n        </div>\n    </div>\n\n    <div class=\"picker-container tz-mobi-picker\">\n        <mbsc-scroller\n            [(ngModel)]=\"selected\"\n            [options]=\"scrollerOptions\"\n            [width]=\"310\"\n            [minWidth]=\"310\"\n        ></mbsc-scroller>\n    </div>\n\n    <div class=\"picker-footer\">\n        <div class=\"picker-select-block\">\n            <button class=\"picker-btn picker-select-btn\" (click)=\"onSelect()\">\n                {{ selectBtnText | translate }}\n            </button>\n        </div>\n\n        <div *ngIf=\"cancelBtnText\" class=\"picker-cancel-block\">\n            <button class=\"picker-btn picker-cancel-btn\" (click)=\"onCancel()\">\n                {{ cancelBtnText | translate }}\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-payment-address',\n    templateUrl: './payment-address.component.html',\n    styleUrls: ['./payment-address.component.scss'],\n})\nexport class PaymentAddressComponent implements OnInit {\n    @Input() formGroup = new FormGroup({});\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit() {}\n}\n","<div class=\"tz-form-container\">\n    <div class=\"tz-form-container__form\" *ngIf=\"formGroup.get('address')\">\n        <div class=\"form-group-container\" [formGroup]=\"formGroup\">\n            <div class=\"name-address\">{{ 'BOOKINGS.BILLING.NAME_ADDRESS' | translate }}</div>\n            <div class=\"field-row stripe-row\">\n                <div class=\"tz-field address\" *ngIf=\"!platformService.isMobileDevice\">\n                    <span class=\"tz-field__name\">{{ 'BOOKINGS.BILLING.ADDRESS' | translate }}</span>\n                    <input\n                        data-test=\"payment-method-address\"\n                        type=\"text\"\n                        formControlName=\"address\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                    />\n                    <tz-form-error [form]=\"formGroup\" key=\"address\" fieldType=\"ADDRESS\"></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'address'\"\n                        [fieldType]=\"'ADDRESS'\"\n                        [title]=\"'BOOKINGS.BILLING.ADDRESS'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n                <div class=\"tz-field zip-code\" *ngIf=\"!platformService.isMobileDevice\">\n                    <span class=\"tz-field__name\">{{ 'BOOKINGS.BILLING.ZIP' | translate }}</span>\n                    <input\n                        data-test=\"payment-method-zip\"\n                        type=\"text\"\n                        formControlName=\"zipCode\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                    />\n                    <tz-form-error [form]=\"formGroup\" key=\"zipCode\" fieldType=\"ZIP_CODE\"></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'zipCode'\"\n                        [fieldType]=\"'ZIP_CODE'\"\n                        [title]=\"'BOOKINGS.BILLING.ZIP'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n            </div>\n            <div class=\"field-row loc-field\">\n                <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field\">\n                    <span class=\"tz-field__name\">{{ 'BOOKINGS.BILLING.COUNTRY' | translate }}</span>\n                    <tz-country-field [formGroup]=\"formGroup\" [formCtrl]=\"'country'\" data-test=\"payment-method-country\">\n                    </tz-country-field>\n                    <tz-form-error [form]=\"formGroup\" key=\"country\"></tz-form-error>\n                </div>\n                <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                    <tz-mob-dropdown\n                        leftIcon=\"france-flag\"\n                        [title]=\"'BOOKINGS.BILLING.COUNTRY'\"\n                        [text]=\"'BOOKINGS.BILLING.COUNTRY'\"\n                    ></tz-mob-dropdown>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"!platformService.isMobileDevice\">\n                    <span class=\"tz-field__name\">{{ 'BOOKINGS.BILLING.CITY' | translate }}</span>\n                    <input\n                        data-test=\"payment-method-city\"\n                        type=\"text\"\n                        formControlName=\"city\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                    />\n                    <tz-form-error [form]=\"formGroup\" key=\"city\" fieldType=\"CITY_NAME\"></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'city'\"\n                        [fieldType]=\"'CITY_NAME'\"\n                        [title]=\"'BOOKINGS.BILLING.CITY'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { SortByValueOption } from '@schemas/modules/core/sort-by-value.option';\n\n@Component({\n    selector: 'tz-price-range-filter',\n    templateUrl: './price-range-filter.component.html',\n    styleUrls: ['./price-range-filter.component.scss'],\n})\nexport class PriceRangeFilterComponent implements OnInit {\n    @Input() options: SortByValueOption[] = [];\n    @Input() showLabel = false;\n    @Input() sort: undefined | string;\n    @Input() sortType: 'select' | 'buttonToggle' = 'select';\n    @Input() skeletonLoading = false;\n    @Input() disabled = false;\n    @Output() sortChange: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor() {}\n\n    ngOnInit() {\n        this.sort = this.sort || 'bestValue';\n    }\n\n    public selectOption(option: SortByValueOption): void {\n        this.sort = option.sort;\n        this.sortChange.emit(option.sort);\n    }\n\n    public onButtonToggleChange(sort: string | undefined): void {\n        this.sort = sort;\n        this.sortChange.emit(sort);\n    }\n}\n","<div *ngIf=\"sortType === 'buttonToggle'\">\n    <div *ngIf=\"!skeletonLoading\" class=\"toggle-buttons-block\">\n        <div\n            *ngFor=\"let option of options\"\n            class=\"toggle-buttons-block-btn\"\n            [attr.data-test]=\"'result-page-hotels-and-stays-hotel-' + (option.label | translate)\"\n            [class.toggle-buttons-block-btn--selected]=\"option.sort === sort\"\n            (click)=\"onButtonToggleChange(option.sort)\"\n        >\n            {{ option.label | translate }}\n        </div>\n    </div>\n\n    <div *ngIf=\"skeletonLoading\" class=\"tz-skeleton-loader skeleton-loader-button-block\">\n        <div *ngFor=\"let option of options\" class=\"skeleton-loader-button-item\">\n            <ngx-skeleton-loader\n                count=\"1\"\n                [theme]=\"{\n                    height: '1.25rem',\n                    width: '7.5rem'\n                }\"\n            ></ngx-skeleton-loader>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"sortType === 'select'\" [ngClass]=\"{ 'sort-disabled': disabled }\">\n    <tz-dropdown\n        *ngIf=\"!skeletonLoading\"\n        [label]=\"'FILTER.COMPONENT.SORT_BY' | translate\"\n        optionKey=\"sort\"\n        labelKey=\"label\"\n        data-test=\"result-page-sort-by-dropdown\"\n        labelSelectKey=\"label\"\n        dropdownType=\"block\"\n        dropArrowDownIcon=\"drop-arrow-down\"\n        dropArrowUpIcon=\"drop-arrow-up\"\n        [options]=\"options\"\n        [selectedOptionKey]=\"sort || ''\"\n        (selectChange)=\"selectOption($event)\"\n    ></tz-dropdown>\n\n    <div *ngIf=\"skeletonLoading\" class=\"tz-skeleton-loader skeleton-loader-dropdown\">\n        <ngx-skeleton-loader\n            count=\"1\"\n            [theme]=\"{\n                height: '1.25rem',\n                width: '11.0625rem'\n            }\"\n        ></ngx-skeleton-loader>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { CustomerInfo } from '@shared/schemas/tz-customer-info';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { Phone } from '@shared/schemas/tz-customer-info';\nimport { ValidatorPatterns } from '@core/constants/validation-patterns.const';\nimport { first } from 'rxjs/operators';\nimport { timer } from 'rxjs';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-profile-info',\n    templateUrl: './profile-info.component.html',\n    styleUrls: ['./profile-info.component.scss'],\n})\nexport class ProfileInfoComponent implements OnInit {\n    @Input() customerInformation!: CustomerInfo;\n    @Input() usageType = 'profile';\n\n    @Output() updateCustomerInfo = new EventEmitter<{ customer: CustomerInfo }>();\n    @Output() loadForm = new EventEmitter<FormGroup>();\n\n    public formReadonly = false;\n    public formGroup = new FormGroup({\n        firstName: new FormControl('', [\n            Validators.required,\n            Validators.pattern(ValidatorPatterns.NAME),\n            Validators.maxLength(100),\n        ]),\n        lastName: new FormControl('', [\n            Validators.required,\n            Validators.pattern(ValidatorPatterns.NAME),\n            Validators.maxLength(100),\n        ]),\n        emailID: new FormControl('', [Validators.required, Validators.pattern(ValidatorPatterns.EMAIL)]),\n        phone: new FormControl('', [Validators.required]),\n    });\n    public phoneFocused = false;\n\n    constructor(\n        private userService: UserService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        public platformService: PlatformService\n    ) {}\n\n    ngOnInit() {\n        this.setDefaultFormValues();\n        this.formReadonly =\n            this.usageType === 'profile' &&\n            this.customerInformation.profUpdated &&\n            !this.platformService.isMobileDevice;\n        this.loadForm.emit(this.formGroup);\n    }\n\n    public toggleEdit(): void {\n        this.formReadonly = !this.formReadonly;\n        if (this.formReadonly) {\n            this.setDefaultFormValues();\n        }\n\n        this.formGroup.markAsPristine();\n    }\n\n    public updateProfile(): void {\n        const values = this.formGroup.value;\n        this.customerInformation.firstName = values.firstName;\n        this.customerInformation.lastName = values.lastName;\n        this.customerInformation.emailID = values.emailID;\n        this.customerInformation.phone = {\n            // eslint-disable-next-line id-blacklist\n            number: values.phone.internationalNumber,\n            countryCode: values.phone.countryCode,\n            callingCode: values.phone.dialCode,\n        } as Phone;\n\n        this.updateCustomerInfo.emit({ customer: this.customerInformation });\n        this.formReadonly = !this.platformService.isMobileDevice;\n        this.formGroup.markAsPristine();\n    }\n\n    public onEmailFieldClicked(): void {\n        if (this.formReadonly || !this.customerInformation.profUpdated) {\n            return;\n        }\n\n        this.dialogService.openSnackBarDialog(this.translateService.instant('NOTIFS.MAIL_EDIT_MSG'));\n    }\n\n    public deleteAccount = () => this.userService.deleteCustomer();\n\n    private setDefaultFormValues(): void {\n        if (!this.userService.IsLogged()) {\n            return;\n        }\n\n        this.formGroup.controls['firstName'].setValue(this.customerInformation.firstName);\n        this.formGroup.controls['lastName'].setValue(this.customerInformation.lastName);\n        this.formGroup.controls['emailID'].setValue(this.customerInformation.emailID);\n\n        const updatedPhone = this.customerInformation.phone;\n        const validPhone = updatedPhone && updatedPhone.number && updatedPhone.number !== '';\n\n        const phoneNumber = this.formGroup.controls['phone'];\n        const updatePhoneNumber =\n            validPhone &&\n            (!phoneNumber.value ||\n                (phoneNumber.value.internationalNumber &&\n                    updatedPhone.number !== phoneNumber.value.internationalNumber));\n\n        if (updatePhoneNumber) {\n            phoneNumber.setValue(this.customerInformation.phone.number);\n            phoneNumber.statusChanges.pipe(first()).subscribe(() => {\n                const timer$ = timer(500); // to reset the initial field dirty set by tel library\n                timer$.subscribe(() => {\n                    phoneNumber.markAsPristine();\n                });\n            });\n        }\n    }\n}\n","<div\n    class=\"tz-form-container\"\n    data-test=\"profile-personal-information-container\"\n    [ngClass]=\"{ 'title-mb': usageType === 'delete-account' }\"\n>\n    <div\n        class=\"tz-form-container__title\"\n        data-test=\"profile-personal-information\"\n        *ngIf=\"(platformService.isMobileDevice$ | async) === false && usageType !== 'delete-account'\"\n    >\n        {{ 'ACCOUNT.PROFILE.PERSONAL_INFO' | translate }}\n    </div>\n    <div class=\"tz-form-container__form\">\n        <form class=\"form-group-container\" [formGroup]=\"formGroup\">\n            <div class=\"field-row\">\n                <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field\">\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.FIRST_MIDDLE_NAME' | translate }}</span>\n                    <input\n                        data-test=\"profile-personal-first-middle-name\"\n                        type=\"text\"\n                        formControlName=\"firstName\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        [readonly]=\"formReadonly\"\n                        placeholder=\" \"\n                    />\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error [form]=\"formGroup\" key=\"firstName\" fieldType=\"PROFILE_FIRST_MIDDLE_NAME\">\n                    </tz-form-error>\n                </div>\n                <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'firstName'\"\n                        [fieldType]=\"'PROFILE_FIRST_MIDDLE_NAME'\"\n                        [title]=\"'TRAVELLER.FIRST_MIDDLE_NAME'\"\n                        ngDefaultControl\n                    >\n                    </tz-mob-input>\n                </div>\n                <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field\">\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.LAST_NAME' | translate }}</span>\n                    <input\n                        data-test=\"profile-personal-last-name\"\n                        type=\"text\"\n                        formControlName=\"lastName\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        [readonly]=\"formReadonly\"\n                        placeholder=\" \"\n                        class=\"mob-profile-input\"\n                    />\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error [form]=\"formGroup\" key=\"lastName\" fieldType=\"PROFILE_LAST_NAME\"></tz-form-error>\n                </div>\n                <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'lastName'\"\n                        [fieldType]=\"'PROFILE_LAST_NAME'\"\n                        [title]=\"'TRAVELLER.LAST_NAME'\"\n                        ngDefaultControl\n                    >\n                    </tz-mob-input>\n                </div>\n            </div>\n            <div class=\"field-row\">\n                <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field\" (click)=\"onEmailFieldClicked()\">\n                    <span class=\"tz-field__name\">{{ 'GENERAL.EMAIL' | translate }}</span>\n                    <input\n                        data-test=\"profile-personal-email\"\n                        type=\"text\"\n                        formControlName=\"emailID\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        class=\"mob-profile-input\"\n                        autocapitalize=\"off\"\n                        [readonly]=\"customerInformation.profUpdated\"\n                        [ngClass]=\"{ 'email-updated': customerInformation.profUpdated } + ' email-input'\"\n                    />\n                    <span *ngIf=\"(platformService.isMobileDevice$ | async) === false\" class=\"valid-check\"></span>\n                    <tz-form-error [form]=\"formGroup\" key=\"emailID\" fieldType=\"EMAIL\"></tz-form-error>\n                </div>\n                <div *ngIf=\"platformService.isMobileDevice\" class=\"tz-field\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'emailID'\"\n                        [fieldType]=\"'EMAIL'\"\n                        [title]=\"'GENERAL.EMAIL'\"\n                        ngDefaultControl\n                        [formReadonly]=\"true\"\n                        icon=\"lock\"\n                    >\n                    </tz-mob-input>\n                </div>\n                <div class=\"tz-field last-block\">\n                    <span class=\"tz-field__name\">{{ 'GENERAL.MOBILE_NUMBER' | translate }}</span>\n                    <span>\n                        <tz-phone\n                            class=\"phone tz-profile-phone\"\n                            data-test=\"profile-personal-mobile-number\"\n                            [formGroup]=\"formGroup\"\n                            [cssClass]=\"(platformService.isMobileDevice$ | async) ? 'mob-profile-info-phone' : ''\"\n                            [readonly]=\"formReadonly\"\n                            (inputFocused)=\"phoneFocused = $event\"\n                        ></tz-phone>\n                    </span>\n                    <tz-form-error *ngIf=\"!phoneFocused\" [form]=\"formGroup\" key=\"phone\" fieldType=\"PHONE\">\n                    </tz-form-error>\n                </div>\n            </div>\n            <div class=\"field-row mb-0 form-btn-container\" *ngIf=\"(platformService.isMobileDevice$ | async) === false\">\n                <ng-container *ngIf=\"usageType === 'profile'\">\n                    <button\n                        class=\"tz-btn tz-btn-secondary\"\n                        data-test=\"profile-personal-edit-btn\"\n                        *ngIf=\"formReadonly\"\n                        (click)=\"toggleEdit()\"\n                    >\n                        {{ 'PROFILE.Edit' | translate }}\n                    </button>\n                    <button\n                        class=\"tz-btn tz-btn-primary save-btn\"\n                        data-test=\"profile-personal-save-btn\"\n                        *ngIf=\"!formReadonly\"\n                        (click)=\"updateProfile()\"\n                    >\n                        {{ 'GENERAL.SAVE' | translate }}\n                    </button>\n                    <button\n                        data-test=\"profile-personal-cancel-btn\"\n                        class=\"tz-btn tz-btn-secondary\"\n                        *ngIf=\"\n                            (platformService.isMobileDevice$ | async) === false &&\n                            !formReadonly &&\n                            customerInformation.profUpdated\n                        \"\n                        (click)=\"toggleEdit()\"\n                    >\n                        {{ 'GENERAL.CANCEL' | translate }}\n                    </button>\n                </ng-container>\n                <ng-container *ngIf=\"usageType === 'delete-account'\">\n                    <button class=\"tz-btn delete-account\" data-test=\"profile-delete-account\" (click)=\"deleteAccount()\">\n                        {{ 'ACCOUNT.DELETE.TITLE' | translate }}\n                    </button>\n                </ng-container>\n            </div>\n            <div class=\"bottom-container\" *ngIf=\"usageType === 'profile' && (platformService.isMobileDevice$ | async)\">\n                <button\n                    class=\"btn select-btn selected save-btn\"\n                    data-test=\"profile-personal-save-btn\"\n                    (click)=\"updateProfile()\"\n                >\n                    {{ 'GENERAL.SAVE' | translate }}\n                </button>\n            </div>\n        </form>\n    </div>\n    <button\n        *ngIf=\"platformService.isMobileDevice$ | async\"\n        class=\"btn select-btn selected mob-delete-account\"\n        data-test=\"profile-delete-account\"\n        (click)=\"deleteAccount()\"\n    >\n        {{ 'ACCOUNT.DELETE.TITLE' | translate }}\n    </button>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { BestValType } from '@schemas/modules/search/search';\n\n@Component({\n    selector: 'tz-recommended-list-tem-description',\n    templateUrl: './recommended-list-tem-description.component.html',\n    styleUrls: ['./recommended-list-tem-description.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RecommendedListTemDescriptionComponent implements OnInit {\n    @Input() bestValType: BestValType | undefined = undefined;\n    public label = 'GENERAL.RECOMMENDED';\n    public bgClass = 'bg-recommended';\n\n    constructor() {}\n    ngOnInit(): void {\n        switch (this.bestValType) {\n            case BestValType.QUICKEST: {\n                this.label = 'GENERAL.QUICKEST';\n                this.bgClass = 'bg-quickest';\n                break;\n            }\n            case BestValType.CHEAPEST: {\n                this.label = 'GENERAL.CHEAPEST';\n                this.bgClass = 'bg-cheapest';\n                break;\n            }\n        }\n    }\n}\n","<div class=\"recommended-list-item-container\" [ngClass]=\"bgClass\" data-test=\"result-page-flight-recommended\">\n    {{ label | translate }}\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'tz-results-top-info-block',\n    templateUrl: './results-top-info-block.component.html',\n    styleUrls: ['./results-top-info-block.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ResultsTopInfoBlockComponent {\n    @Input() blockType: 'green' | 'blue' | 'orange' | 'red' = 'blue';\n    @Input() loading = false;\n\n    get className() {\n        return 'results-top-info-block--' + this.blockType;\n    }\n}\n","<div [class]=\"'results-top-info-block ' + className\" [ngClass]=\"{ loading: loading }\">\n    <div class=\"results-top-info-block-text\" *ngIf=\"!loading\">\n        <ng-content></ng-content>\n    </div>\n    <div class=\"results-top-info-block-text tz-skeleton-loader\" *ngIf=\"loading\">\n        <ngx-skeleton-loader\n            [theme]=\"{\n                height: '52px',\n                width: '100%'\n            }\"\n        >\n        </ngx-skeleton-loader>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { IHotelNames } from '@schemas/modules/accommodations/accommodations-response';\nimport { NgSelectComponent } from '@ng-select/ng-select';\n\n@Component({\n    selector: 'tz-search-hotel-name',\n    templateUrl: './search-hotel-name.component.html',\n    styleUrls: ['./search-hotel-name.component.scss'],\n})\nexport class SearchHotelNameComponent {\n    @Input() hotelNames: IHotelNames[] = [];\n    @Output() search = new EventEmitter<IHotelNames>();\n    @ViewChild(NgSelectComponent) ngSelectComponent?: NgSelectComponent;\n\n    constructor() {}\n\n    public filterNames(term: string, item: any): boolean {\n        if (!term) {\n            return false;\n        }\n\n        return item.name.toLowerCase().indexOf(term.toLowerCase()) >= 0;\n    }\n\n    public searchHotel(hotelInfo: IHotelNames): void {\n        this.search.emit(hotelInfo);\n        this.ngSelectComponent?.blur();\n    }\n\n    public onFocus(): void {\n        if (!this.ngSelectComponent?.selectedValues[0]?.name.length) {\n            return;\n        }\n\n        this.ngSelectComponent.searchTerm = this.ngSelectComponent.selectedValues[0].name;\n    }\n\n    public onBlur(): void {\n        if (!this.ngSelectComponent?.searchTerm?.length) {\n            return;\n        }\n\n        this.ngSelectComponent.searchTerm = '';\n    }\n}\n","<div class=\"acc-search-field-container\">\n    <div class=\"acc-search-title\" translate=\"HOTELS.SEARCH_HOTEL_NAME_TITLE\"></div>\n    <div class=\"acc-search-container\">\n        <tz-icon icon=\"search-gray\"></tz-icon>\n        <ng-select\n            class=\"acc-search-select\"\n            [ngClass]=\"{\n                'not-enough-char':\n                    !ngSelectComponent || !ngSelectComponent.searchTerm || ngSelectComponent.searchTerm.length < 3\n            }\"\n            type=\"text\"\n            [placeholder]=\"'HOTELS.SEARCH_HOTEL_NAME_PLACEHOLDER' | translate\"\n            [items]=\"hotelNames\"\n            [searchFn]=\"filterNames\"\n            [clearOnBackspace]=\"true\"\n            bindLabel=\"name\"\n            (change)=\"searchHotel($event)\"\n            (focus)=\"onFocus()\"\n            (blur)=\"onBlur()\"\n        >\n        </ng-select>\n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\n\nimport { CustomerInfo } from '@shared/schemas/tz-customer-info';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { LogInService } from '@services/services/log-in.service';\n\n@Component({\n    selector: 'tz-sign-in',\n    templateUrl: './sign-in.component.html',\n    styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit {\n    @Input() emailId?: string;\n\n    public showSignin = true;\n    public errorMsg = '';\n    public logInForm;\n    public showPassword = false;\n\n    constructor(\n        private activeModal: NgbActiveModal,\n        private router: Router,\n        private logInService: LogInService,\n        private storageManagerUtil: StorageManagerUtil\n    ) {\n        this.logInForm = LogInService.createLoginForm();\n    }\n\n    ngOnInit(): void {\n        if (this.emailId && this.emailId !== '') {\n            this.logInForm.controls['emailID'].setValue(this.emailId);\n        }\n    }\n\n    public validatePassword(patternStr: string): boolean {\n        const pattern = new RegExp(patternStr);\n        return pattern.test(this.logInForm.value.password);\n    }\n\n    public closePopup(skipSignIn = false): void {\n        if (skipSignIn) {\n            StorageManagerUtil.set('skipSignIn', true);\n        }\n\n        this.activeModal.dismiss({} as CustomerInfo);\n    }\n\n    public proceedSignIn(): void {\n        if (!this.logInForm.valid) {\n            return;\n        }\n\n        this.logInService.proceedSignIn(this.showSignin, this.logInForm.value, this.activeModal).then(\n            (resp: { token: string; customer: CustomerInfo }) => {\n                console.log('Auth data', resp);\n            },\n            (err) => {\n                this.errorMsg = err.error.message;\n                console.log('Auth error: ', err);\n            }\n        );\n    }\n\n    public loginWithSocialMedia = (media: string) => this.logInService.loginWithSocialMedia(media, this.activeModal);\n\n    public goToPage(url: string): void {\n        const targetUrl = this.router.serializeUrl(this.router.createUrlTree([url]));\n        window.open(targetUrl, '_blank');\n    }\n}\n","<form class=\"auth-form\" [formGroup]=\"logInForm\" data-test=\"sign-in-modal\">\n    <div class=\"close-icon tz-icon-clear\" data-test=\"sign-in-modal-close-button\" (click)=\"closePopup()\"></div>\n    <div class=\"auth-form-header\">\n        <ng-container *ngIf=\"showSignin\">\n            <span class=\"form-title\" translate=\"ACCOUNT.SIGN.SIGN_IN\"></span>\n            <span class=\"checkout-hide\" translate=\"ACCOUNT.SIGN.NOT_A_MEMBER\"></span>\n            <a\n                class=\"checkout-hide\"\n                (click)=\"showSignin = !showSignin\"\n                data-test=\"signin-signup-create-an-account\"\n                translate=\"ACCOUNT.SIGN.CREATE_AN_ACCOUNT\"\n            ></a>\n            <a\n                (click)=\"closePopup(true)\"\n                class=\"checkout-only\"\n                data-test=\"signin-signup-skip-login\"\n                translate=\"ACCOUNT.SIGN.SKIP_LOGIN\"\n            ></a>\n        </ng-container>\n        <ng-container *ngIf=\"!showSignin\">\n            <span class=\"form-title\" translate=\"ACCOUNT.SIGN.CREATE_AN_ACCOUNT\"></span>\n            <span translate=\"ACCOUNT.SIGN.CREATE_AN_ACCOUNT_ALREADY_A_MEMBER\"></span>\n            <a (click)=\"showSignin = !showSignin\" translate=\"ACCOUNT.SIGN.SIGN_IN\"></a>\n        </ng-container>\n    </div>\n    <div class=\"auth-form-body\">\n        <div class=\"auth-field-row\">\n            <span class=\"field-name field-error\" data-test=\"field-name-field-error\" *ngIf=\"errorMsg !== ''\">{{\n                errorMsg\n            }}</span>\n            <span class=\"field-name\" translate=\"ACCOUNT.SIGN.EMAIL\"></span>\n            <input\n                type=\"mail\"\n                data-test=\"signin-signup-input-email-field\"\n                formControlName=\"emailID\"\n                autocomplete=\"off\"\n                autocorrect=\"off\"\n                autocapitalize=\"off\"\n            />\n        </div>\n        <div class=\"auth-field-row\">\n            <span class=\"field-name\">\n                {{ 'ACCOUNT.SIGN.PASSWORD' | translate }}\n                <span\n                    class=\"forgot-password\"\n                    translate=\"ACCOUNT.SIGN.FORGOT_YOUR_PASSWORD\"\n                    (click)=\"goToPage('/forgot-password')\"\n                    *ngIf=\"showSignin\"\n                ></span>\n            </span>\n            <input\n                #passwordField\n                [type]=\"showPassword ? 'text' : 'password'\"\n                data-test=\"signin-signup-input-password-field\"\n                class=\"password-dots sign-in-password\"\n                formControlName=\"password\"\n                autocomplete=\"off\"\n                autocorrect=\"off\"\n                autocapitalize=\"off\"\n            />\n            <div\n                class=\"password-eye-icon\"\n                (click)=\"showPassword = !showPassword; passwordField.focus()\"\n                *ngIf=\"passwordField.value !== ''\"\n            >\n                <tz-icon *ngIf=\"!showPassword\" [icon]=\"'eye-normal'\"></tz-icon>\n                <tz-icon *ngIf=\"showPassword\" [icon]=\"'eye-slash'\"></tz-icon>\n            </div>\n        </div>\n        <div class=\"auth-field-row password-validations\" *ngIf=\"!showSignin\">\n            <p>{{ 'ACCOUNT.PASSWORD.ACCOUNT_PASSWORD_MUST' | translate }}</p>\n            <ul>\n                <li\n                    [class]=\"{ 'valid-check': validatePassword('.{8,}') }\"\n                    data-test=\"sign-up-create-account-valid-password-8-characters\"\n                >\n                    <span class=\"tz-icon-check-nobg\"></span>\n                    {{ 'ACCOUNT.PASSWORD.BE_AT_LEAST_8_CHARACTERS' | translate }}\n                </li>\n                <li\n                    [class]=\"{ 'valid-check': validatePassword('(?=.*?[A-Z])(?=.*?[a-z])') }\"\n                    data-test=\"sign-up-create-account-valid-password-upper-lower-case\"\n                >\n                    <span class=\"tz-icon-check-nobg\"></span>\n                    {{ 'ACCOUNT.PASSWORD.USE_BOTH_UPPER_AND_LOWER_CASE_LETTERS' | translate }}\n                </li>\n                <li\n                    [class]=\"{ 'valid-check': validatePassword('(?=.*?[0-9])') }\"\n                    data-test=\"sign-up-create-account-valid-password-one-number\"\n                >\n                    <span class=\"tz-icon-check-nobg\"></span>\n                    {{ 'ACCOUNT.PASSWORD.INCLUDE_AT_LEAST_ONE_NUMBER' | translate }}\n                </li>\n            </ul>\n            <p>\n                {{ 'ACCOUNT.SIGN.I_AGREE_WITH' | translate }}\n                <a target=\"_blank\" class=\"tz-purple-link\" (click)=\"goToPage('/about/terms')\">{{\n                    'ACCOUNT.SIGN.GENERAL_CONDITIONS' | translate\n                }}</a>\n                {{ 'GENERAL.AND' | translate }}\n                <a target=\"_blank\" class=\"tz-purple-link\" (click)=\"goToPage('/about/ppc')\">{{\n                    'ACCOUNT.SIGN.PRIVACY_POLICY_COOKIES' | translate\n                }}</a>\n            </p>\n        </div>\n        <button\n            class=\"auth-btn tz-btn tz-btn-primary\"\n            data-test=\"signin-signup-connect-button\"\n            [ngClass]=\"{ passive: !logInForm.valid }\"\n            (click)=\"proceedSignIn()\"\n        >\n            {{ (showSignin ? 'ACCOUNT.SIGN.CONNECT' : 'ACCOUNT.SIGN.CREATE_AN_ACCOUNT') | translate }}\n        </button>\n    </div>\n    <div class=\"login-separator\">\n        <span> {{ 'ACCOUNT.SIGN.OR' | translate }} </span>\n    </div>\n    <div class=\"d-flex space-between\">\n        <a\n            (click)=\"loginWithSocialMedia('googlePlus')\"\n            data-test=\"signin-signup-google-login-button\"\n            class=\"social-btn\"\n        >\n            <tz-icon [icon]=\"'google_login'\"></tz-icon> Google\n        </a>\n        <a\n            (click)=\"loginWithSocialMedia('facebook')\"\n            data-test=\"signin-signup-facebook-login-button\"\n            class=\"social-btn\"\n        >\n            <tz-icon [icon]=\"'facebook_login'\"></tz-icon> Facebook\n        </a>\n        <a\n            (click)=\"loginWithSocialMedia('linkedin')\"\n            data-test=\"signin-signup-linkedin-login-button\"\n            class=\"social-btn\"\n        >\n            <tz-icon [icon]=\"'linkedIn_login'\"></tz-icon> LinkedIn\n        </a>\n    </div>\n</form>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-stars',\n    templateUrl: './stars.component.html',\n    styleUrls: ['./stars.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarsComponent implements OnInit {\n    @Input() starCount: string | number = 1;\n    @Input() className = '';\n    @Input() starWidth = 14;\n    @Input() starHeight = 14;\n    @Input() type = 1;\n    @Input() selected = false;\n\n    constructor(public platformService: PlatformService) {}\n\n    get starItems() {\n        return new Array(+this.starCount);\n    }\n\n    ngOnInit() {}\n}\n","<div [class]=\"'inline-flex ' + className\" *ngIf=\"type === 1\">\n    <span *ngFor=\"let star of starItems\" class=\"star\">\n        <tz-svg-icon icon=\"star\" [styles]=\"{ 'width.px': starWidth, 'height.px': starHeight }\"></tz-svg-icon>\n    </span>\n</div>\n<div\n    [class]=\"'inline-flex ' + className\"\n    *ngIf=\"type === 2\"\n    style=\"\n         {\n            gap: 0.5rem;\n        }\n    \"\n>\n    <tz-svg-icon\n        *ngIf=\"!platformService.isMobileDevice\"\n        [icon]=\"selected ? 'star' : 'star2'\"\n        [styles]=\"{ 'width.px': starWidth, 'height.px': starHeight }\"\n    ></tz-svg-icon>\n\n    <tz-svg-icon\n        *ngIf=\"platformService.isMobileDevice\"\n        [icon]=\"selected ? 'star' : 'star-mob-not-selected'\"\n        [styles]=\"{ 'width.px': starWidth, 'height.px': starHeight }\"\n    ></tz-svg-icon>\n</div>\n<div [class]=\"'flex ' + className\" *ngIf=\"type === 3\">\n    <span *ngFor=\"let star of starItems\" class=\"star\">\n        <tz-svg-icon\n            icon=\"star\"\n            [styles]=\"{ 'width.px': starWidth, 'height.px': starHeight }\"\n            [mobile]=\"true\"\n        ></tz-svg-icon>\n    </span>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CountryISO } from 'ngx-intl-tel-input';\nimport { FormGroup } from '@angular/forms';\nimport { PlatformService } from '@services/platform.service';\n\n@Component({\n    selector: 'tz-country-field',\n    templateUrl: './tz-country-field.component.html',\n})\nexport class TzCountryFieldComponent implements OnInit {\n    @Input() formGroup = new FormGroup({});\n    @Input() formCtrl = '';\n    @Input() readonly = false;\n\n    @Output() countyFocus: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    public countryList!: any[];\n\n    constructor(public platformService: PlatformService) {}\n\n    ngOnInit(): void {\n        this.countryList = this.getCountryList();\n        this.formGroup.controls[this.formCtrl].statusChanges.subscribe((result) => {\n            if (result === 'INVALID') {\n                this.countryList = this.getCountryList('in');\n            }\n        });\n    }\n\n    private getCountryList(selectedISO?: string) {\n        return Object.entries(CountryISO).map((country) => {\n            const counrty = {\n                name: country[0].replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([A-Z][a-z])/g, '$1 $2'),\n                code: country[1],\n            };\n\n            if (selectedISO && selectedISO === counrty.code) {\n                this.formGroup.controls[this.formCtrl].setValue(counrty);\n            }\n\n            return counrty;\n        });\n    }\n}\n","<div [formGroup]=\"formGroup\" style=\"width: 100%\">\n    <ng-select\n        class=\"ng-select-no-dropdown-margin\"\n        [items]=\"countryList\"\n        [readonly]=\"readonly\"\n        [selectOnTab]=\"true\"\n        bindLabel=\"name\"\n        [clearable]=\"false\"\n        [formControlName]=\"formCtrl\"\n        (focus)=\"countyFocus.emit(true)\"\n        (blur)=\"countyFocus.emit(false)\"\n    >\n        <ng-template ng-label-tmp let-item=\"item\" *ngIf=\"platformService.isMobileDevice$ | async\">\n            <div *ngIf=\"item\" class=\"iti__flag\" [ngClass]=\"'iti__' + item.code\"></div>\n            <span *ngIf=\"item\">{{ item.name }}</span>\n        </ng-template>\n    </ng-select>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TzTravellerService } from '@services/services/tzTraveller.service';\n\nconst ERROR_PREFIX = 'TZ_FORM_VALIDATION.';\n\n@Component({\n    selector: 'tz-form-error',\n    templateUrl: './tz-form-error.component.html',\n    styleUrls: ['./tz-form-error.component.scss'],\n})\nexport class TzFormErrorComponent implements OnInit {\n    @Input() form!: FormGroup;\n    @Input() fieldType = '';\n    @Input() key!: string;\n\n    constructor() {}\n\n    get isInvalid(): boolean {\n        return TzTravellerService.invalidControl(this.form, this.key);\n    }\n\n    get errorMessage(): string {\n        const control = this.form.get(this.key);\n        if (control === null) {\n            return '';\n        }\n\n        if (control.hasError('required')) {\n            return `${ERROR_PREFIX}REQUIRED`;\n        }\n\n        switch (this.fieldType) {\n            case 'FIRST_NAME':\n            case 'MIDDLE_NAME':\n            case 'LAST_NAME':\n            case 'ID_CARD_NUMBER':\n            case 'PROFILE_FIRST_MIDDLE_NAME':\n            case 'PROFILE_LAST_NAME':\n            case 'HOLDERS_NAME':\n            case 'COMPANY_NAME':\n            case 'VAT_NO':\n            case 'ADDRESS':\n            case 'ZIP_CODE':\n            case 'CITY_NAME': {\n                if (control.hasError('maxlength')) {\n                    return `${ERROR_PREFIX}${this.fieldType}.MAX_LENGTH`;\n                }\n\n                if (control.hasError('pattern')) {\n                    return `${ERROR_PREFIX}${this.fieldType}.INVALID_CHARACTER`;\n                }\n\n                if (control.hasError('DUPLICATE_ID')) {\n                    return control.getError('DUPLICATE_ID');\n                }\n\n                break;\n            }\n            case 'PHONE': {\n                return `${ERROR_PREFIX}INVALID_PHONE_NUMBER`;\n            }\n            case 'DOB':\n            case 'ISSUED_DATE':\n            case 'EXPIRY_DATE': {\n                switch (true) {\n                    case control.hasError('INVALID_DATE'):\n                        return `${ERROR_PREFIX}INVALID`;\n\n                    case control.hasError('INVALID_DATE_FORMAT'):\n                        return control.getError('INVALID_DATE_FORMAT');\n\n                    case this.fieldType === 'DOB' && control.hasError('INVALID_DOB'):\n                        return control.getError('INVALID_DOB');\n\n                    case this.fieldType === 'ISSUED_DATE' && control.hasError('INVALID_ISSUED_DATE'):\n                        return control.getError('INVALID_ISSUED_DATE');\n\n                    case this.fieldType === 'EXPIRY_DATE' && control.hasError('INVALID_EXPIRY_DATE'):\n                        return control.getError('INVALID_EXPIRY_DATE');\n                }\n                break;\n            }\n            case 'EMAIL': {\n                if (control.hasError('EMAIL_DID_NOT_MATCH')) {\n                    return `${ERROR_PREFIX}${this.fieldType}.NOT_MATCH`;\n                }\n\n                if (control.hasError('pattern')) {\n                    return `${ERROR_PREFIX}${this.fieldType}.INVALID_FORMAT`;\n                }\n\n                break;\n            }\n            default: {\n                if (control.hasError('pattern')) {\n                    return `${ERROR_PREFIX}INVALID`;\n                }\n            }\n        }\n\n        return `${ERROR_PREFIX}INVALID`;\n    }\n\n    get invalidMessageParams(): any {\n        const control = this.form.get(this.key);\n        if (control?.hasError('INVALID_MESSAGE_PARAMS')) {\n            return control.getError('INVALID_MESSAGE_PARAMS');\n        }\n    }\n\n    ngOnInit() {}\n}\n","<ng-container *ngIf=\"isInvalid\">\n    {{ errorMessage | translate: invalidMessageParams }}\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TZ_ICONS } from '@shared/components/tz-icon/tz-icons';\n\n@Component({\n    selector: 'tz-icon',\n    templateUrl: './tz-icon.component.html',\n    styleUrls: ['./tz-icon.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class TzIconComponent implements OnInit {\n    @Input() icon: string | null = null;\n    @Input() iconContent: string | null = null;\n    @Input() className = '';\n    public imageUrl = '';\n\n    constructor() {}\n\n    ngOnInit(): void {\n        if (this.iconContent) {\n            return;\n        }\n        if (this.icon) {\n            this.imageUrl = TZ_ICONS[this.icon] ? TZ_ICONS[this.icon] : this.icon + '.svg';\n        }\n    }\n}\n","<div\n    [class]=\"'trazler-icon-container ' + className\"\n    [ngStyle]=\"{\n        ':before': {\n            content: iconContent\n        }\n    }\"\n>\n    <img *ngIf=\"imageUrl\" class=\"trazler-icon-container__img\" src=\"/assets/icons/web/icons/{{ imageUrl }}\" />\n</div>\n","export const TZ_ICONS: { [key: string]: string } = {\n    // please add here label for the icons which label doesn't correspond to the file name\n    users: 'users.svg',\n    'Wifi.svg': 'wifi.svg',\n    'Accessibility.svg': 'accessibility.svg',\n    'Kids_friendly.svg': 'kids-friendly.svg',\n    'Bar.svg': 'bar.svg',\n    'Non_smoking_property.svg': 'non-smoking-property.svg',\n    'Fitness.svg': 'fitness.svg',\n    'Lift.svg': 'lift.svg',\n    'Event_Facilities.svg': 'event-facilities.svg',\n    'Pet_friendly.svg': 'pet-friendly.svg',\n    'Restaurant.svg': 'restaurant.svg',\n    'Concierge.svg': 'concierge.svg',\n    'Gay_friendly.svg': 'gay-friendly.svg',\n    'Parking.svg': 'parking.svg',\n    'Air_condition.svg': 'air-condition.svg',\n    'Adult_only.svg': 'adult-only.svg',\n    'Sports.svg': 'sports.svg',\n    'Nightclub.svg': 'nightclub.svg',\n    'Bowling.svg': 'bowling.svg',\n    'Room_service.svg': 'room-service.svg',\n    'Cafe.svg': 'cafe.svg',\n    'Spa_centre.svg': 'spa-centre.svg',\n    'Naturist.svg': 'naturist.svg',\n    'Swimming_pool.svg': 'swimming-pool.svg',\n    'Wellness.svg': 'wellness.svg',\n    'Private_beach.svg': 'private-beach.svg',\n    'Casino.svg': 'casino.svg',\n    'Entertainment.svg': 'entertainment.svg',\n    'Veg-friendly.svg': 'veg-friendly.svg',\n    'Tennis.svg': 'tennis.svg',\n    'Golf.svg': 'golf.svg',\n    'Horse_riding.svg': 'horse-riding.svg',\n    'ski.svg': 'ski.svg',\n    'Ski_to_door_access.svg': 'ski-to-door-access.svg',\n    'Bikes_friendly.svg': 'bikes-friendly.svg',\n    'Sailing.svg': 'sailing.svg',\n    'Diving.svg': 'diving.svg',\n    '24.7 front desk.svg': '24-7-front-desk.svg',\n    'Laundry_service.svg': 'laundry-service.svg',\n    'Supermarket.svg': 'supermarket.svg',\n    'Water_sports.svg': 'water-sports.svg',\n    'Library.svg': 'library.svg',\n    'Beauty_Services.svg': 'beauty-services.svg',\n    'Safe.svg': 'safe.svg',\n    'Minibar.svg': 'minibar.svg',\n    'Tea_coffee maker.svg': 'tea-coffee-maker.svg',\n    'Satellite TV.svg': 'satellite-tv.svg',\n    'Fridge.svg': 'fridge.svg',\n    'Kitchenette.svg': 'kitchenette.svg',\n    'Speaker.svg': 'speaker.svg',\n    'Balcony_Terrace.svg': 'balcony-terrace.svg',\n    'FirePlace.svg': 'fire-place.svg',\n    'condition.svg': 'condition.svg',\n    'Pool.svg': 'pool.svg',\n    'Bathtub.svg': 'bathtub.svg',\n    'honeumoon_room.svg': 'honeumoon-room.svg',\n};\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ToolsService } from '@core/utils/tools-service';\n\nexport interface AccSlider {\n    id: number;\n    url: string;\n    active: boolean;\n    status: number;\n}\n\n@Component({\n    selector: 'tz-image-slider',\n    templateUrl: './tz-image-slider.component.html',\n    styleUrls: ['./tz-image-slider.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TzImageSliderComponent implements OnInit {\n    @Input() giataId = '';\n    @Input() images: string[] = [];\n    @Input() imageProvider = '';\n    @Input() showWarning = false;\n    @Input() gallery = false;\n    @Input() mobileOnlyGal = false;\n\n    @Output() actionCb: EventEmitter<string | number> = new EventEmitter<string | number>();\n\n    public slides: AccSlider[] = [];\n    public loading = true;\n    public initialLoading = true;\n    public selectedImage!: AccSlider;\n    public image!: AccSlider;\n\n    private count = 0;\n\n    constructor() {}\n\n    ngOnInit() {\n        if (this.images) {\n            this.slides = this.images.map((url) =>\n                // if (this.count === 0) url += 'test'; //To test\n\n                ({\n                    id: this.count++,\n                    url,\n                    active: false,\n                    status: 0,\n                })\n            );\n        }\n\n        this.addNoImage(-1, 0);\n    }\n\n    public loadImg(n: number): void {\n        // n - increment/decrement value\n        let selectedId = this.selectedImage.id + n;\n        if (selectedId < 0) {\n            selectedId = this.slides[this.slides.length - 1].id;\n        } else if (selectedId >= this.count) {\n            selectedId = this.slides[0].id;\n        }\n\n        this.select(selectedId, n);\n    }\n\n    public selectImg = (id: number) => this.select(id, 0);\n\n    public imgCallback(data: { id: number; status: number; url: string }): void {\n        if (!data) {\n            return;\n        }\n\n        this.loading = false;\n        this.slides.forEach((slide, idx) => {\n            slide.active = false;\n\n            if (slide.id === data.id) {\n                if (data.status === 404) {\n                    slide.status = -1;\n                    const nextId = slide.id + 1;\n                    this.select(nextId, 1);\n                    this.slides.splice(idx, 1);\n                } else {\n                    slide.status = 1;\n                    slide.url = data.url;\n                    this.setSelectedImg(slide);\n                }\n            }\n        });\n    }\n\n    public open(): void {\n        this.actionCb.emit(this.gallery ? this.selectedImage.id : this.giataId);\n    }\n\n    private setSelectedImg(slide: AccSlider): void {\n        this.loading = false;\n        this.initialLoading = false;\n        slide.active = true;\n        this.selectedImage = ToolsService.deepCopy(slide);\n        /*if (elt[0].offsetParent.id === 'hotel_0') {\n      ListenersService.NotifyListeners(ListenersService.LISTEN_ACC_FIRST_LOADED)\n    }*/\n    }\n\n    private select(id: number, n: number): void {\n        if (id >= this.count) {\n            this.addNoImage(-1, 0);\n            return;\n        }\n\n        let found = false;\n        this.slides.forEach((slide) => {\n            slide.active = false;\n            if (slide.id === id) {\n                found = slide.status > -1;\n                if (slide.status === 0) {\n                    this.image = ToolsService.deepCopy(slide);\n                    this.loading = true;\n                } else if (slide.status === 1) {\n                    this.setSelectedImg(slide);\n                }\n            }\n        });\n\n        if (!found) {\n            this.addNoImage(id, n);\n        }\n    }\n\n    private addNoImage(id: number, n: number): void {\n        // n - increment/decrement value\n        if (this.slides.length === 0) {\n            const slide = {\n                url: 'assets/icons/web/img/corrupted.png',\n            } as AccSlider;\n            this.slides = [slide];\n            this.setSelectedImg(slide);\n        } else if (n !== 0 && id > -1 && id < this.count) {\n            this.select(id + n, n);\n        } else if (n !== 0 && this.selectedImage && this.selectedImage.active) {\n            // activate previous selection\n            this.select(this.selectedImage.id, n);\n        } else if (id !== this.slides[0].id) {\n            this.select(this.slides[0].id, n);\n        }\n    }\n}\n","<div class=\"img-slider-container\">\n    <div\n        class=\"carousel-container relative\"\n        *ngIf=\"!initialLoading && selectedImage.active\"\n        tzOnSwipe\n        (swipeLeft)=\"loadImg(1)\"\n        (swipeRight)=\"loadImg(-1)\"\n    >\n        <img\n            [src]=\"selectedImage.url\"\n            class=\"carousel-img\"\n            [ngClass]=\"{\n                disabled: mobileOnlyGal || giataId === ''\n            }\"\n            (click)=\"open()\"\n        />\n        <div *ngIf=\"showWarning\" class=\"slider-warning\">{{ 'HOTELS.MISSING_PHOTOS' | translate }}</div>\n        <ng-container *ngIf=\"slides.length > 1\">\n            <div\n                data-test=\"result-page-hotel-images-control-left\"\n                class=\"tz-icon-arrow carousel-control left\"\n                (click)=\"loadImg(-1); $event.stopPropagation()\"\n            ></div>\n            <div\n                data-test=\"result-page-hotel-images-control-right\"\n                class=\"tz-icon-arrow carousel-control right\"\n                (click)=\"loadImg(1); $event.stopPropagation()\"\n            ></div>\n            <div class=\"carousel-indicators\">\n                <ol>\n                    <li\n                        *ngFor=\"let slide of slides\"\n                        [ngClass]=\"{\n                            active: slide.active\n                        }\"\n                        (click)=\"selectImg(slide.id); $event.stopPropagation()\"\n                    ></li>\n                </ol>\n            </div>\n        </ng-container>\n    </div>\n    <div *ngIf=\"initialLoading\" class=\"loading-elm flex\">\n        <span style=\"margin: auto\">{{ 'LOADER_MESSAGES.LOADING' | translate }}</span>\n    </div>\n</div>\n\n<!-- thumb to identify the image success style=\"display:none\" -->\n<!-- Remove after image loaded success full -->\n<div *ngIf=\"loading\" style=\"display: none\">\n    <img\n        style=\"width: 50px; height: 50px\"\n        [id]=\"image.id\"\n        [tzHotelImage]=\"image.url\"\n        [provider]=\"imageProvider\"\n        (imgCallback)=\"imgCallback($event)\"\n        onErrorSrc=\"_omit\"\n        dynamic\n    />\n</div>\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PhoneNumberFormat } from 'ngx-intl-tel-input';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CountryISO } from 'ngx-intl-tel-input';\n\n@Component({\n    selector: 'tz-phone',\n    templateUrl: './tz-phone.component.html',\n})\nexport class TzPhoneComponent implements AfterViewInit, OnDestroy {\n    @Input() formGroup = new FormGroup({});\n    @Input() readonly = false;\n    @Input() cssClass?: string = '';\n    @Output() inputFocused: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @ViewChild('ngxIntlTelInputComponent', { read: ElementRef, static: true }) ngxTelInput?: ElementRef;\n\n    public PhoneNumberFormat = PhoneNumberFormat;\n    public countryISO = CountryISO;\n\n    private phoneValid = false;\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor() {}\n\n    public ngAfterViewInit(): void {\n        const controller = this.formGroup.controls['phone'];\n        if (this.ngxTelInput) {\n            const nativeElementOfInput: HTMLInputElement = this.ngxTelInput.nativeElement.querySelector('#phone');\n            fromEvent(nativeElementOfInput, 'focus')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                    this.inputFocused.emit(true);\n                });\n\n            fromEvent(nativeElementOfInput, 'blur')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                    this.inputFocused.emit(false);\n                });\n\n            fromEvent(nativeElementOfInput, 'input')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => {\n                    if (typeof controller.value === 'string') {\n                        nativeElementOfInput.value = controller.value;\n                    }\n                });\n        }\n\n        controller.statusChanges.subscribe((result) => {\n            if (result === 'VALID' && !this.phoneValid) {\n                controller.setValue(controller.value.internationalNumber);\n                this.phoneValid = true;\n            } else {\n                this.phoneValid = false;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n}\n","<div [formGroup]=\"formGroup\" style=\"width: 100%\">\n    <ngx-intl-tel-input\n        #ngxIntlTelInputComponent\n        [enableAutoCountrySelect]=\"true\"\n        [enablePlaceholder]=\"true\"\n        [phoneValidation]=\"true\"\n        [numberFormat]=\"PhoneNumberFormat.National\"\n        [selectedCountryISO]=\"countryISO.India\"\n        formControlName=\"phone\"\n        [cssClass]=\"'tz-phone ' + cssClass\"\n        [ngClass]=\"{ 'disable-phone': readonly }\"\n        data-test=\"basket-personal-input-phone\"\n    >\n    </ngx-intl-tel-input>\n    <span class=\"valid-check\"></span>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'tz-svg-icon',\n    templateUrl: './tz-svg-icon.component.html',\n    styleUrls: ['./tz-svg-icon.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TzSvgIconComponent {\n    @Input() path = '/assets/icons/web/icons/';\n    @Input() pathMob = '/assets/icons/web/icons/mob/';\n    @Input() icon: string | undefined;\n    @Input() iconType = 'svg';\n    @Input() className: string | undefined;\n    @Input() stretch = false;\n    @Input() mobile = false;\n    @Input() styles: { [key: string]: string | number } = {};\n}\n","<svg-icon\n    [src]=\"(mobile ? pathMob : path) + icon + '.' + iconType\"\n    [class]=\"'svg-icon' + (className ? ' ' + className : '')\"\n    [stretch]=\"stretch\"\n    [svgStyle]=\"styles\"\n></svg-icon>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormGroup } from '@angular/forms';\nimport * as moment from 'moment';\n\nimport { Passenger, Phone } from '@shared/schemas/tz-customer-info';\nimport { TzTravellerService } from '@services/services/tzTraveller.service';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { PlatformService } from '@services/platform.service';\nimport { SettingsService } from '@services/services/settings-service';\nimport { DatesUtils } from '@core/utils/dates-utils';\n\n@Component({\n    selector: 'tz-traveller',\n    templateUrl: './tz-traveller.component.html',\n    styleUrls: ['./tz-traveller.component.scss'],\n})\nexport class TzTravellerComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() formGroup = new FormGroup({});\n    @Input() formIdx = -1;\n    @Input() selectedTraveller!: Passenger;\n    @Input() isProfile = false;\n    @Input() travellerType = '';\n    @Input() travelDate = {\n        startDate: new Date(),\n        endDate: new Date(),\n    };\n    @Input() selectedAge = -1;\n    @Input() ageLimit!: {\n        min: number;\n        max: number;\n    };\n\n    @Output() setTraveller = new EventEmitter<{ traveller: Passenger }>();\n    @Output() markFormAsVisited = new EventEmitter<void>();\n\n    public savedTraveller = false;\n    public dateFormat;\n    public formReadonly = false;\n    public genders = ['TRAVELLER.MALE', 'TRAVELLER.FEMALE'];\n    public idCardTypes = [\n        this.translateService.instant('TRAVELLER.PASSPORT'),\n        this.translateService.instant('TRAVELLER.ID_CARD'),\n    ];\n    public phoneFocused = false;\n    public expiryAlertShown = false;\n\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    constructor(\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        private tzTravellerService: TzTravellerService,\n        private translateService: TranslateService,\n        private settingsService: SettingsService,\n        public userService: UserService,\n        public platformService: PlatformService\n    ) {\n        this.dateFormat = this.tzTravellerService.tzFormDateFormat;\n    }\n\n    get updateTraveler(): boolean {\n        const formData = this.formTravellerInfo();\n        return formData.travellerUpdated;\n    }\n\n    get saveTraveler(): boolean {\n        for (const value of Object.values(this.formGroup?.value)) {\n            if (value !== null && value !== '') {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    ngOnInit() {\n        this.savedTraveller = this.selectedTraveller.id !== undefined && this.selectedTraveller.id !== '';\n        this.formReadonly = this.isProfile && this.savedTraveller && !this.platformService.isMobileDevice;\n        this.setDateValidators();\n\n        this.formGroup.statusChanges.subscribe((result) => {\n            if (result === 'VALID') {\n                const formData = this.formTravellerInfo();\n                this.setTraveller.emit({ traveller: formData });\n            }\n        });\n\n        this.userService.loggedIn$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.changeDetectorRef.detectChanges();\n            this.formTravellerInfo();\n        });\n\n        this.tzTravellerService.updateTravellerForm$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.changeDetectorRef.detectChanges();\n            this.formTravellerInfo();\n        });\n\n        this.settingsService.selectedLanguageSubject.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.formatFieldDates();\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['selectedTraveller'] && this.selectedTraveller) {\n            const updateTravellerForm = this.isProfile || this.selectedTraveller.updateTravellerForm;\n            this.formTravellerInfo();\n            if (updateTravellerForm) {\n                this.selectedTraveller.travellerUpdated = false;\n                this.formGroup.reset();\n                if (this.selectedTraveller.firstName && this.selectedTraveller.firstName !== '') {\n                    this.setSelectedTraveller();\n\n                    if (!this.isProfile) {\n                        this.checkExpiringSoon();\n                    }\n                }\n                this.changeDetectorRef.detectChanges();\n            }\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public isInValidField(controlName: string): boolean {\n        return TzTravellerService.invalidControl(this.formGroup, controlName);\n    }\n\n    public toggoleEdit(): void {\n        this.formReadonly = !this.formReadonly;\n        this.formGroup.markAsPristine();\n        this.setSelectedTraveller();\n    }\n\n    public saveTraveller(): void {\n        const travellerInfo = this.formTravellerInfo();\n        console.log('Values: ', travellerInfo);\n\n        if (this.selectedTraveller.id !== '') {\n            this.tzTravellerService.updateTraveller(travellerInfo);\n        } else {\n            this.tzTravellerService.saveTraveller(travellerInfo);\n        }\n\n        this.formReadonly = !this.platformService.isMobileDevice;\n        this.formGroup.markAsPristine();\n    }\n\n    public removeTraveller(): void {\n        this.tzTravellerService.removeTraveller(this.selectedTraveller.id);\n    }\n\n    public checkExpiringSoon(): void {\n        if (this.expiryAlertShown) {\n            return;\n        }\n\n        const formValue = this.formGroup.value;\n        this.tzTravellerService.isExpiringSoon(formValue.idCardValidity, this.travelDate.endDate);\n        this.expiryAlertShown = true;\n    }\n\n    public onFocus(field: string): void {\n        if (this.isProfile) {\n            return;\n        }\n\n        const setDirty = (controlName: string) => {\n            const fieldControl = this.formGroup.get(controlName);\n            if (fieldControl) {\n                fieldControl.markAsDirty();\n                fieldControl.markAsTouched();\n            }\n        };\n\n        switch (field) {\n            case 'idIssuedCountry':\n                setDirty('idCardValidity');\n            // eslint-disable-next-line no-fallthrough\n            case 'idCardValidity':\n                setDirty('dateOfIssue');\n            // eslint-disable-next-line no-fallthrough\n            case 'dateOfIssue':\n                setDirty('idCardNumber');\n            // eslint-disable-next-line no-fallthrough\n            case 'idCardNumber':\n                setDirty('idCardType');\n            // eslint-disable-next-line no-fallthrough\n            case 'idCardType':\n                setDirty('nationality');\n            // eslint-disable-next-line no-fallthrough\n            case 'nationality':\n                setDirty('dateOfBirth');\n            // eslint-disable-next-line no-fallthrough\n            case 'dateOfBirth':\n                setDirty('gender');\n            // eslint-disable-next-line no-fallthrough\n            case 'gender':\n                setDirty('phone');\n            // eslint-disable-next-line no-fallthrough\n            case 'phone':\n                setDirty('lastName');\n            // eslint-disable-next-line no-fallthrough\n            case 'lastName':\n                setDirty('middleName');\n            // eslint-disable-next-line no-fallthrough\n            case 'middleName':\n                setDirty('firstName');\n        }\n\n        this.markFormAsVisited.emit();\n    }\n\n    private setDateValidators(): void {\n        const dobCtrl = this.formGroup.get('dateOfBirth');\n        if (dobCtrl) {\n            dobCtrl.addValidators([\n                this.tzTravellerService.dateValidation(),\n                this.tzTravellerService.dobValidation(\n                    this.travellerType,\n                    this.selectedAge,\n                    this.travelDate,\n                    this.ageLimit\n                ),\n            ]);\n        }\n\n        const dateOfIssue = this.formGroup.get('dateOfIssue');\n        if (dateOfIssue) {\n            dateOfIssue.addValidators([\n                this.tzTravellerService.dateValidation(),\n                this.tzTravellerService.idIssueValidation(),\n            ]);\n        }\n\n        const idCardValidity = this.formGroup.get('idCardValidity');\n        if (idCardValidity) {\n            idCardValidity.addValidators([\n                this.tzTravellerService.dateValidation(),\n                this.tzTravellerService.idExpiryValidation(this.travelDate.endDate),\n            ]);\n        }\n\n        const idCardNumber = this.formGroup.get('idCardNumber');\n        if (idCardNumber && this.formIdx !== -1) {\n            idCardNumber.addValidators([this.tzTravellerService.duplicateIdValidation(this.formIdx)]);\n\n            const idCardType = this.formGroup.get('idCardType');\n            idCardType?.statusChanges.subscribe(() => {\n                idCardNumber.updateValueAndValidity();\n            });\n        }\n    }\n\n    private formatFieldDates(): void {\n        const currentFormat = this.dateFormat;\n        const reqFromat = this.tzTravellerService.tzFormDateFormat;\n        const formatDate = (controlStr: string): void => {\n            const fieldCtrl = this.formGroup.get(controlStr);\n            const fieldValue = fieldCtrl?.value;\n            if (!fieldValue || fieldValue === '') {\n                return;\n            }\n\n            const momentObj = moment(fieldValue, currentFormat);\n            if (!momentObj.isValid()) {\n                fieldCtrl.updateValueAndValidity();\n                this.changeDetectorRef.detectChanges();\n                return;\n            }\n\n            const date = moment(fieldValue, currentFormat).format(reqFromat);\n            this.setFieldValue(controlStr, date);\n        };\n\n        formatDate('dateOfBirth');\n        formatDate('dateOfIssue');\n        formatDate('idCardValidity');\n        this.dateFormat = reqFromat;\n    }\n\n    private setFieldValue(controlStr: string, value: any): void {\n        const fieldCtrl = this.formGroup.get(controlStr);\n        if (!fieldCtrl || !value) {\n            return;\n        }\n\n        fieldCtrl.setValue(value);\n    }\n\n    private formDate(dateStr: string | Date, format: string): string {\n        if (!dateStr || dateStr === '' || dateStr === '01/01/0001') {\n            return '';\n        }\n\n        return moment(dateStr, format).format(this.dateFormat);\n    }\n\n    private setSelectedTraveller(): void {\n        const traveller = this.selectedTraveller;\n        const savedDateFormat = DatesUtils.savedTzTravelerFormat;\n\n        this.setFieldValue('firstName', traveller.firstName);\n        this.setFieldValue('middleName', traveller.middleName);\n        this.setFieldValue('lastName', traveller.lastName);\n        this.setFieldValue('gender', traveller.gender);\n        this.setFieldValue('dateOfBirth', this.formDate(traveller.dateOfBirth, savedDateFormat));\n        this.setFieldValue('idCardType', traveller.idCardType);\n        this.setFieldValue('idCardNumber', traveller.idCardNumber);\n        this.setFieldValue('dateOfIssue', this.formDate(traveller.dateOfIssue, savedDateFormat));\n        this.setFieldValue('idCardValidity', this.formDate(traveller.idCardValidity, savedDateFormat));\n\n        if (traveller.nationalityName !== '' && traveller.nationality !== '') {\n            this.setFieldValue('nationality', {\n                name: traveller.nationalityName,\n                code: traveller.nationality,\n            });\n        }\n\n        if (traveller.issuedCountryName !== '' && traveller.idIssuedCountry !== '') {\n            this.setFieldValue('idIssuedCountry', {\n                name: traveller.issuedCountryName,\n                code: traveller.idIssuedCountry,\n            });\n        }\n\n        if (traveller.phone && traveller.phone.number && traveller.phone.number !== '') {\n            this.setFieldValue('phone', traveller.phone.number);\n        }\n    }\n\n    private formTravellerInfo(): Passenger {\n        const formValue = this.formGroup.value;\n        const curFormat = this.tzTravellerService.tzFormDateFormat;\n\n        const travellerInfo = {\n            ...this.selectedTraveller,\n            firstName: formValue.firstName,\n            middleName: formValue.middleName,\n            lastName: formValue.lastName,\n            gender: formValue.gender,\n            dateOfBirth: DatesUtils.updateTzFormDate(formValue.dateOfBirth, curFormat),\n            idCardType: formValue.idCardType,\n            idCardNumber: formValue.idCardNumber,\n            dateOfIssue: DatesUtils.updateTzFormDate(formValue.dateOfIssue, curFormat),\n            idCardValidity: DatesUtils.updateTzFormDate(formValue.idCardValidity, curFormat),\n        } as Passenger;\n\n        if (this.isProfile) {\n            travellerInfo.docNotRequired = true;\n        }\n\n        if (formValue.phone) {\n            travellerInfo.phone = {\n                // eslint-disable-next-line id-blacklist\n                number: formValue.phone.internationalNumber,\n                countryCode: formValue.phone.countryCode,\n                callingCode: formValue.phone.dialCode,\n            } as Phone;\n        }\n\n        if (formValue.nationality) {\n            travellerInfo.nationalityName = formValue.nationality.name;\n            travellerInfo.nationality = formValue.nationality.code;\n        }\n\n        if (formValue.idIssuedCountry) {\n            travellerInfo.issuedCountryName = formValue.idIssuedCountry.name;\n            travellerInfo.idIssuedCountry = formValue.idIssuedCountry.code;\n        }\n\n        travellerInfo.travellerUpdated = this.updateTraveller(travellerInfo);\n        return travellerInfo;\n    }\n\n    private selectedProfileTrvaller(): Passenger {\n        const customer = this.userService.getCustomerInformation();\n        const selectedId = this.selectedTraveller.id;\n        if (selectedId === undefined || (selectedId === '' && !this.userService.IsLogged())) {\n            return {} as Passenger;\n        }\n\n        for (const passenger of customer.passengers ?? []) {\n            if (passenger.id === selectedId) {\n                return passenger;\n            }\n        }\n\n        return {} as Passenger;\n    }\n\n    private updateTraveller(formValue: Passenger): boolean {\n        const savedTraveler = ToolsService.deepCopy(this.selectedProfileTrvaller()) as Passenger;\n        if (!savedTraveler || !savedTraveler.id || savedTraveler.id === '') {\n            return false;\n        }\n\n        const isDatesModified = (savedDate: string | Date, formDate: string | Date) =>\n            !!formDate && formDate !== '' && new Date(savedDate).toDateString() !== new Date(formDate).toDateString();\n        const isValueModified = (savedValue: string | undefined, formStr: string | undefined) => {\n            savedValue = savedValue ?? '';\n            formStr = formStr ?? '';\n            return savedValue !== formStr;\n        };\n\n        return (\n            isValueModified(savedTraveler.firstName, formValue.firstName) ||\n            isValueModified(savedTraveler.middleName, formValue.middleName) ||\n            isValueModified(savedTraveler.lastName, formValue.lastName) ||\n            isValueModified(savedTraveler.gender, formValue.gender) ||\n            isDatesModified(savedTraveler.dateOfBirth, formValue.dateOfBirth) ||\n            isValueModified(savedTraveler.nationalityName, formValue.nationalityName) ||\n            (!this.selectedTraveller.docNotRequired &&\n                (isValueModified(savedTraveler.idCardType, formValue.idCardType) ||\n                    isValueModified(savedTraveler.idCardNumber, formValue.idCardNumber) ||\n                    isDatesModified(savedTraveler.dateOfIssue, formValue.dateOfIssue) ||\n                    isDatesModified(savedTraveler.idCardValidity, formValue.idCardValidity) ||\n                    isValueModified(savedTraveler.issuedCountryName, formValue.issuedCountryName)))\n        );\n    }\n}\n","<div class=\"tz-form-container\">\n    <div class=\"tz-form-container__form\">\n        <form class=\"form-group-container\" [formGroup]=\"formGroup\">\n            <div class=\"field-row\">\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'firstName'\"\n                        [fieldType]=\"'FIRST_NAME'\"\n                        [title]=\"'TRAVELLER.FIRST_NAME'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"!platformService.isMobileDevice\">\n                    <input\n                        class=\"field\"\n                        data-test=\"first-name\"\n                        type=\"text\"\n                        formControlName=\"firstName\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        [readonly]=\"formReadonly\"\n                        placeholder=\" \"\n                        (focus)=\"onFocus('firstName')\"\n                    />\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.FIRST_NAME' | translate }}</span>\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error\n                        data-test=\"travelers-first-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"firstName\"\n                        fieldType=\"FIRST_NAME\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"!platformService.isMobileDevice && formGroup.get('middleName')\">\n                    <input\n                        class=\"field\"\n                        data-test=\"middle-name\"\n                        type=\"text\"\n                        formControlName=\"middleName\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        [readonly]=\"formReadonly\"\n                        placeholder=\" \"\n                        (focus)=\"onFocus('middleName')\"\n                    />\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.MIDDLE_NAME' | translate }}</span>\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error\n                        data-test=\"travelers-middle-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"middleName\"\n                        fieldType=\"MIDDLE_NAME\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice && formGroup.get('middleName')\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'middleName'\"\n                        [fieldType]=\"'MIDDLE_NAME'\"\n                        [title]=\"'TRAVELLER.MIDDLE_NAME'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"!platformService.isMobileDevice && !formGroup.get('middleName')\">\n                    <input\n                        class=\"field\"\n                        data-test=\"last-name\"\n                        type=\"text\"\n                        formControlName=\"lastName\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        [readonly]=\"formReadonly\"\n                        placeholder=\" \"\n                        (focus)=\"onFocus('lastName')\"\n                    />\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.LAST_NAME' | translate }}</span>\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error\n                        data-test=\"travelers-last-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"lastName\"\n                        fieldType=\"LAST_NAME\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice && !formGroup.get('middleName')\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'lastName'\"\n                        [fieldType]=\"'LAST_NAME'\"\n                        [title]=\"'TRAVELLER.LAST_NAME'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n            </div>\n            <div class=\"field-row\" *ngIf=\"formGroup.get('middleName')\">\n                <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field last-name-container\">\n                    <input\n                        class=\"field\"\n                        data-test=\"basket-flight-last-name\"\n                        type=\"text\"\n                        formControlName=\"lastName\"\n                        autocomplete=\"off\"\n                        autocorrect=\"off\"\n                        autocapitalize=\"off\"\n                        [readonly]=\"formReadonly\"\n                        placeholder=\" \"\n                        (focus)=\"onFocus('lastName')\"\n                    />\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.LAST_NAME' | translate }}</span>\n                    <span class=\"valid-check\"></span>\n                    <tz-form-error\n                        data-test=\"travelers-general-last-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"lastName\"\n                        fieldType=\"LAST_NAME\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'lastName'\"\n                        [fieldType]=\"'LAST_NAME'\"\n                        [title]=\"'TRAVELLER.LAST_NAME'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n                <div\n                    class=\"tz-field\"\n                    *ngIf=\"formGroup.get('gender') && !platformService.isMobileDevice\"\n                    #gender\n                    [ngClass]=\"{ invalid: isInValidField('gender') }\"\n                >\n                    <ng-select\n                        data-test=\"gender\"\n                        class=\"field ng-select-no-dropdown-margin tz-traveller-ng-select\"\n                        [items]=\"genders\"\n                        [selectOnTab]=\"true\"\n                        [clearable]=\"false\"\n                        formControlName=\"gender\"\n                        [readonly]=\"formReadonly\"\n                        [searchable]=\"false\"\n                        (focus)=\"onFocus('gender'); gender.classList.add('focused')\"\n                        (blur)=\"gender.classList.remove('focused')\"\n                    >\n                        <ng-template ng-label-tmp let-item=\"item\">\n                            {{ item | translate }}\n                        </ng-template>\n                        <ng-template ng-option-tmp let-item=\"item\">\n                            {{ item | translate }}\n                        </ng-template>\n                    </ng-select>\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.GENDER' | translate }}</span>\n                    <tz-form-error\n                        data-test=\"travelers-gender-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"gender\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"formGroup.get('gender') && platformService.isMobileDevice\">\n                    <tz-mob-dropdown [title]=\"'TRAVELLER.GENDER'\" [text]=\"'TRAVELLER.GENDER'\"></tz-mob-dropdown>\n                </div>\n            </div>\n            <div class=\"field-row\" *ngIf=\"formGroup.get('phone')\">\n                <div\n                    class=\"tz-field\"\n                    *ngIf=\"!platformService.isMobileDevice\"\n                    [ngClass]=\"{ focused: phoneFocused, invalid: isInValidField('phone') }\"\n                >\n                    <tz-phone\n                        class=\"field\"\n                        [formGroup]=\"formGroup\"\n                        (inputFocused)=\"phoneFocused = $event; onFocus('phone')\"\n                    ></tz-phone>\n                    <span class=\"tz-field__name\">{{ 'GENERAL.MOBILE_NUMBER' | translate }}</span>\n                    <tz-form-error\n                        *ngIf=\"!phoneFocused\"\n                        data-test=\"travelers-mobile-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"phone\"\n                        fieldType=\"PHONE\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'phone'\"\n                        icon=\"arrow-down-grey\"\n                        [fieldType]=\"'PHONE'\"\n                        [title]=\"'TRAVELLER.MOBILE_NUMBER'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n            </div>\n            <div class=\"field-row\">\n                <div\n                    class=\"tz-field dob-container\"\n                    *ngIf=\"\n                        !platformService.isMobileDevice && formGroup.get('middleName') && formGroup.get('dateOfBirth')\n                    \"\n                >\n                    <input\n                        data-test=\"input-birth-date\"\n                        type=\"text\"\n                        class=\"pr-0 field\"\n                        formControlName=\"dateOfBirth\"\n                        mask=\"00/00/0000\"\n                        inputmode=\"numeric\"\n                        [dropSpecialCharacters]=\"false\"\n                        [placeholder]=\"dateFormat\"\n                        [readonly]=\"formReadonly\"\n                        (focus)=\"onFocus('dateOfBirth')\"\n                    />\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.BIRTH_DATE' | translate }}</span>\n                    <tz-form-error\n                        data-test=\"travelers-birth-date-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"dateOfBirth\"\n                        fieldType=\"DOB\"\n                    ></tz-form-error>\n                </div>\n                <div\n                    class=\"tz-field\"\n                    *ngIf=\"\n                        formGroup.get('middleName') && formGroup.get('dateOfBirth') && platformService.isMobileDevice\n                    \"\n                >\n                    <tz-mob-input\n                        [formGroup]=\"formGroup\"\n                        [key]=\"'dateOfBirth'\"\n                        [fieldType]=\"'DOB'\"\n                        [placeholder]=\"dateFormat\"\n                        [title]=\"'TRAVELLER.BIRTH_DATE'\"\n                        ngDefaultControl\n                    ></tz-mob-input>\n                </div>\n                <div class=\"field-row\" *ngIf=\"!formGroup.get('middleName')\">\n                    <div\n                        class=\"tz-field\"\n                        *ngIf=\"!platformService.isMobileDevice && formGroup.get('gender')\"\n                        #gender\n                        [ngClass]=\"{ invalid: isInValidField('gender') }\"\n                    >\n                        <ng-select\n                            data-test=\"basket-car-rental-gender\"\n                            class=\"field ng-select-no-dropdown-margin tz-traveller-ng-select\"\n                            [items]=\"genders\"\n                            [selectOnTab]=\"true\"\n                            [clearable]=\"false\"\n                            formControlName=\"gender\"\n                            [readonly]=\"formReadonly\"\n                            (focus)=\"onFocus('gender'); gender.classList.add('focused')\"\n                            (blur)=\"gender.classList.remove('focused')\"\n                        >\n                            <ng-template ng-label-tmp let-item=\"item\">\n                                {{ item | translate }}\n                            </ng-template>\n                            <ng-template ng-option-tmp let-item=\"item\">\n                                {{ item | translate }}\n                            </ng-template>\n                        </ng-select>\n                        <span class=\"tz-field__name\">{{ 'TRAVELLER.GENDER' | translate }}</span>\n                        <tz-form-error\n                            data-test=\"travelers-general-gender-error-msg\"\n                            [form]=\"formGroup\"\n                            key=\"gender\"\n                        ></tz-form-error>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice && formGroup.get('gender')\">\n                        <tz-mob-dropdown [title]=\"'TRAVELLER.GENDER'\" [text]=\"'TRAVELLER.GENDER'\"></tz-mob-dropdown>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"formGroup.get('dateOfBirth') && !platformService.isMobileDevice\">\n                        <input\n                            data-test=\"basket-car-rental-birth-date\"\n                            type=\"text\"\n                            class=\"pr-0 field\"\n                            formControlName=\"dateOfBirth\"\n                            inputmode=\"numeric\"\n                            mask=\"00/00/0000\"\n                            [dropSpecialCharacters]=\"false\"\n                            [placeholder]=\"dateFormat\"\n                            [readonly]=\"formReadonly\"\n                            (focus)=\"onFocus('dateOfBirth')\"\n                        />\n                        <span class=\"tz-field__name\">{{ 'TRAVELLER.BIRTH_DATE' | translate }}</span>\n                        <tz-form-error\n                            data-test=\"travelers-general-birth-date-error-msg\"\n                            [form]=\"formGroup\"\n                            key=\"dateOfBirth\"\n                            fieldType=\"DOB\"\n                        ></tz-form-error>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"formGroup.get('dateOfBirth') && platformService.isMobileDevice\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'dateOfBirth'\"\n                            [fieldType]=\"'DOB'\"\n                            [placeholder]=\"dateFormat\"\n                            [title]=\"'TRAVELLER.BIRTH_DATE'\"\n                            ngDefaultControl\n                        ></tz-mob-input>\n                    </div>\n                </div>\n                <div\n                    class=\"tz-field\"\n                    *ngIf=\"formGroup.get('nationality') && !platformService.isMobileDevice\"\n                    #nationality\n                    [ngClass]=\"{ invalid: isInValidField('nationality') }\"\n                >\n                    <tz-country-field\n                        class=\"field select-box tz-traveller-ng-select\"\n                        [formGroup]=\"formGroup\"\n                        data-test=\"basket-flight-citizenship\"\n                        [formCtrl]=\"'nationality'\"\n                        [readonly]=\"formReadonly\"\n                        (countyFocus)=\"\n                            onFocus('nationality'); nationality.classList[$event ? 'add' : 'remove']('focused')\n                        \"\n                    >\n                    </tz-country-field>\n                    <span class=\"tz-field__name\">{{ 'TRAVELLER.CITIZENSHIP' | translate }}</span>\n                    <tz-form-error\n                        data-test=\"travelers-passengers-error-msg\"\n                        [form]=\"formGroup\"\n                        key=\"nationality\"\n                    ></tz-form-error>\n                </div>\n                <div class=\"tz-field\" *ngIf=\"formGroup.get('nationality') && platformService.isMobileDevice\">\n                    <tz-mob-dropdown\n                        [title]=\"'TRAVELLER.CITIZENSHIP'\"\n                        [text]=\"'TRAVELLER.CITIZENSHIP'\"\n                    ></tz-mob-dropdown>\n                </div>\n            </div>\n            <ng-container *ngIf=\"formGroup.get('idCardType')\">\n                <div class=\"field-row\">\n                    <div\n                        *ngIf=\"!platformService.isMobileDevice\"\n                        class=\"tz-field\"\n                        #idCardType\n                        [ngClass]=\"{ invalid: isInValidField('idCardType') }\"\n                    >\n                        <ng-select\n                            class=\"field select-box ng-select-no-dropdown-margin tz-traveller-ng-select\"\n                            [items]=\"idCardTypes\"\n                            [selectOnTab]=\"true\"\n                            [clearable]=\"false\"\n                            formControlName=\"idCardType\"\n                            [readonly]=\"formReadonly\"\n                            data-test=\"passport-or-id-card-types\"\n                            (focus)=\"onFocus('idCardType'); idCardType.classList.add('focused')\"\n                            (blur)=\"idCardType.classList.remove('focused')\"\n                        ></ng-select>\n                        <span class=\"tz-field__name\">{{ 'TRAVELLER.ID_TYPE' | translate }}</span>\n                        <tz-form-error\n                            data-test=\"travelers-id-type-error-msg\"\n                            [form]=\"formGroup\"\n                            key=\"idCardType\"\n                        ></tz-form-error>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                        <tz-mob-dropdown [title]=\"'TRAVELLER.ID_TYPE'\" [text]=\"'TRAVELLER.ID_TYPE'\"></tz-mob-dropdown>\n                    </div>\n                    <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field select-box\">\n                        <input\n                            type=\"text\"\n                            class=\"pr-0 field\"\n                            formControlName=\"idCardNumber\"\n                            autocomplete=\"off\"\n                            autocorrect=\"off\"\n                            autocapitalize=\"off\"\n                            [readonly]=\"formReadonly\"\n                            placeholder=\" \"\n                            data-test=\"id-card-number\"\n                            (focus)=\"onFocus('idCardNumber')\"\n                        />\n                        <span class=\"tz-field__name\">{{ 'TRAVELLER.ID_NUMBER' | translate }}</span>\n                        <tz-form-error\n                            data-test=\"travelers-id-number-error-msg\"\n                            [form]=\"formGroup\"\n                            key=\"idCardNumber\"\n                            fieldType=\"ID_CARD_NUMBER\"\n                        ></tz-form-error>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                        <tz-mob-input\n                            [formGroup]=\"formGroup\"\n                            [key]=\"'idCardNumber'\"\n                            [fieldType]=\"'ID_CARD_NUMBER'\"\n                            [title]=\"'TRAVELLER.ID_NUMBER'\"\n                            ngDefaultControl\n                        ></tz-mob-input>\n                    </div>\n                </div>\n                <div class=\"field-row\">\n                    <div [ngClass]=\"{ 'field-row': !platformService.isMobileDevice }\">\n                        <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field\">\n                            <input\n                                data-test=\"issue-date\"\n                                type=\"text\"\n                                class=\"pr-0 field issue-date\"\n                                formControlName=\"dateOfIssue\"\n                                inputmode=\"numeric\"\n                                mask=\"00/00/0000\"\n                                [dropSpecialCharacters]=\"false\"\n                                [placeholder]=\"dateFormat\"\n                                [readonly]=\"formReadonly\"\n                                (focus)=\"onFocus('dateOfIssue')\"\n                            />\n                            <span class=\"tz-field__name\">{{ 'TRAVELLER.ISSUE_DATE' | translate }}</span>\n                            <tz-form-error\n                                data-test=\"travelers-issue-date-error-msg\"\n                                [form]=\"formGroup\"\n                                key=\"dateOfIssue\"\n                                fieldType=\"ISSUED_DATE\"\n                            ></tz-form-error>\n                        </div>\n                        <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                            <tz-mob-input\n                                [formGroup]=\"formGroup\"\n                                [key]=\"'dateOfIssue'\"\n                                [fieldType]=\"'ISSUED_DATE'\"\n                                [placeholder]=\"dateFormat\"\n                                [title]=\"'TRAVELLER.ISSUE_DATE'\"\n                                ngDefaultControl\n                            ></tz-mob-input>\n                        </div>\n                        <div *ngIf=\"!platformService.isMobileDevice\" class=\"tz-field\">\n                            <input\n                                data-test=\"expiry-date\"\n                                type=\"text\"\n                                class=\"pr-0 field expiry-date\"\n                                formControlName=\"idCardValidity\"\n                                inputmode=\"numeric\"\n                                mask=\"00/00/0000\"\n                                [dropSpecialCharacters]=\"false\"\n                                [placeholder]=\"dateFormat\"\n                                [readonly]=\"formReadonly\"\n                                (input)=\"expiryAlertShown = false\"\n                                (blur)=\"checkExpiringSoon()\"\n                                (focus)=\"onFocus('idCardValidity')\"\n                            />\n                            <span class=\"tz-field__name\">{{ 'TRAVELLER.EXPIRY_DATE' | translate }}</span>\n                            <tz-form-error\n                                data-test=\"travelers-expiry-date-error-msg\"\n                                [form]=\"formGroup\"\n                                key=\"idCardValidity\"\n                                fieldType=\"EXPIRY_DATE\"\n                            ></tz-form-error>\n                        </div>\n                        <div class=\"tz-field mt-3\" *ngIf=\"platformService.isMobileDevice\">\n                            <tz-mob-input\n                                [formGroup]=\"formGroup\"\n                                [key]=\"'idCardValidity'\"\n                                [fieldType]=\"'EXPIRY_DATE'\"\n                                [placeholder]=\"dateFormat\"\n                                [title]=\"'TRAVELLER.EXPIRY_DATE'\"\n                                ngDefaultControl\n                            ></tz-mob-input>\n                        </div>\n                    </div>\n                    <div\n                        *ngIf=\"!platformService.isMobileDevice\"\n                        class=\"tz-field border-transparent\"\n                        #idIssuedCountry\n                        [ngClass]=\"{ invalid: isInValidField('idIssuedCountry') }\"\n                    >\n                        <tz-country-field\n                            class=\"field select-box tz-traveller-ng-select\"\n                            data-test=\"country-of-issue\"\n                            [formGroup]=\"formGroup\"\n                            [formCtrl]=\"'idIssuedCountry'\"\n                            [readonly]=\"formReadonly\"\n                            (countyFocus)=\"\n                                onFocus('idIssuedCountry');\n                                idIssuedCountry.classList[$event ? 'add' : 'remove']('focused')\n                            \"\n                        >\n                        </tz-country-field>\n                        <span class=\"tz-field__name\">{{ 'TRAVELLER.COUNTRY_OF_ISSUE' | translate }}</span>\n                        <tz-form-error\n                            data-test=\"travelers-counrty-error-msg\"\n                            [form]=\"formGroup\"\n                            key=\"idIssuedCountry\"\n                        ></tz-form-error>\n                    </div>\n                    <div class=\"tz-field\" *ngIf=\"platformService.isMobileDevice\">\n                        <tz-mob-dropdown\n                            leftIcon=\"france-flag\"\n                            [title]=\"'TRAVELLER.COUNTRY_OF_ISSUE'\"\n                            [text]=\"'TRAVELLER.COUNTRY_OF_ISSUE'\"\n                        ></tz-mob-dropdown>\n                    </div>\n                </div>\n                <div class=\"field-row mt-3\" *ngIf=\"isProfile && (platformService.isMobileDevice$ | async) === false\">\n                    <div class=\"field-row save-cancel form-btn-container\">\n                        <button\n                            class=\"tz-btn tz-btn-secondary\"\n                            data-test=\"traveller-edit-btn\"\n                            *ngIf=\"formReadonly\"\n                            (click)=\"toggoleEdit()\"\n                        >\n                            {{ 'PROFILE.Edit' | translate }}\n                        </button>\n                        <button\n                            data-test=\"traveller-save-btn\"\n                            class=\"tz-btn tz-btn-primary save-btn\"\n                            *ngIf=\"!formReadonly\"\n                            (click)=\"saveTraveller()\"\n                        >\n                            {{ 'GENERAL.SAVE' | translate }}\n                        </button>\n                        <button\n                            class=\"tz-btn tz-btn-secondary\"\n                            data-test=\"traveller-cancel-btn\"\n                            *ngIf=\"!formReadonly && savedTraveller\"\n                            (click)=\"toggoleEdit()\"\n                        >\n                            {{ 'GENERAL.CANCEL' | translate }}\n                        </button>\n                    </div>\n                    <button\n                        data-test=\"traveller-remove-btn\"\n                        class=\"tz-btn tz-btn-cancel\"\n                        *ngIf=\"!formReadonly && savedTraveller\"\n                        (click)=\"removeTraveller()\"\n                    >\n                        {{ 'GENERAL.Remove' | translate }}\n                    </button>\n                </div>\n            </ng-container>\n            <div class=\"bottom-container\" *ngIf=\"isProfile && (platformService.isMobileDevice$ | async)\">\n                <button\n                    class=\"traveller-save-btn\"\n                    data-test=\"traveller-save-btn\"\n                    (click)=\"saveTraveller()\"\n                    translate=\"GENERAL.SAVE\"\n                    [ngClass]=\"{ invalid: formGroup.invalid }\"\n                ></button>\n            </div>\n        </form>\n        <div\n            class=\"checkbox-item mobile-hidden\"\n            *ngIf=\"userService.IsLogged() && !isProfile && formGroup.get('middleName')\"\n        >\n            <label *ngIf=\"saveTraveler && (!selectedTraveller.id || selectedTraveller.id === '')\">\n                <input type=\"checkbox\" [(ngModel)]=\"selectedTraveller.saveTraveller\" />\n                <span></span>\n                <div>{{ 'TRAVELLER.SAVE' | translate }}</div>\n            </label>\n            <label *ngIf=\"updateTraveler\">\n                <input type=\"checkbox\" [(ngModel)]=\"selectedTraveller.updateTraveller\" />\n                <span></span>\n                <div>{{ 'TRAVELLER.UPDATE' | translate }}</div>\n            </label>\n        </div>\n    </div>\n    <div\n        class=\"remove-traveler-btn\"\n        data-test=\"traveller-save-btn\"\n        *ngIf=\"isProfile && (platformService.isMobileDevice$ | async) && savedTraveller\"\n        (click)=\"removeTraveller()\"\n        translate=\"TRAVELLER.DELETE_TRAVELER\"\n    ></div>\n    <div\n        class=\"checkbox-item mobile-only\"\n        *ngIf=\"\n            userService.IsLogged() &&\n            !isProfile &&\n            formGroup.get('middleName') &&\n            ((saveTraveler && (!selectedTraveller.id || selectedTraveller.id === '')) || updateTraveler)\n        \"\n    >\n        <label *ngIf=\"saveTraveler && (!selectedTraveller.id || selectedTraveller.id === '')\">\n            <div>{{ 'TRAVELLER.SAVE' | translate }}</div>\n            <input type=\"checkbox\" [(ngModel)]=\"selectedTraveller.saveTraveller\" />\n            <span></span>\n        </label>\n        <label *ngIf=\"updateTraveler\">\n            <div>{{ 'TRAVELLER.UPDATE' | translate }}</div>\n            <input type=\"checkbox\" [(ngModel)]=\"selectedTraveller.updateTraveller\" />\n            <span></span>\n        </label>\n    </div>\n</div>\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\n\ninterface imgCallbackData {\n    id: number;\n    status: number;\n    url: string;\n}\n\n@Directive({\n    selector: '[tzHotelImage]',\n})\nexport class HotelImageDirective implements OnInit, OnChanges {\n    @Input() id!: number;\n    @Input() tzHotelImage = '';\n    @Input() provider = '';\n    @Input() defaultSize = '';\n    @Input() onErrorSrc = '';\n\n    @Output() imgCallback: EventEmitter<imgCallbackData> = new EventEmitter<imgCallbackData>();\n\n    private corruptedImgURL = 'assets/icons/web/img/corrupted.png';\n    private url = '';\n    private idx = 0;\n    private len = 0;\n    private sizes: string[] = [];\n    private defSize = this.defaultSize;\n\n    constructor(private elem: ElementRef) {}\n\n    ngOnInit(): void {\n        if (this.onErrorSrc && this.onErrorSrc !== '') {\n            this.corruptedImgURL = this.onErrorSrc;\n        }\n        this.init(true);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        // used in showing gallery dynamically\n        if (changes['tzHotelImage']) {\n            this.init(true);\n        }\n    }\n\n    private setImage = (imageURL: string) => (this.elem.nativeElement.src = imageURL);\n\n    private setTzImage() {\n        let imageURL = '';\n        if (this.sizes[this.idx] === '') {\n            imageURL = this.url && this.idx < this.len ? this.url.replace('{size}/', '') : this.corruptedImgURL;\n        } else {\n            imageURL =\n                this.url && this.idx < this.len\n                    ? this.url.replace('{size}', this.sizes[this.idx])\n                    : this.corruptedImgURL;\n        }\n\n        if (imageURL && imageURL !== '_omit') {\n            this.setImage(imageURL);\n        } else {\n            this.handleError();\n        }\n    }\n\n    private invokeCallback = (status: number) => {\n        this.imgCallback.emit({\n            id: this.id,\n            status,\n            url: this.elem.nativeElement.src,\n        });\n    };\n\n    private handleError(): void {\n        if (this.idx >= this.len) {\n            // set corruptedImgURL once all the alternate images are set\n            if (this.corruptedImgURL !== '_omit') {\n                this.setImage(this.corruptedImgURL);\n            }\n\n            this.invokeCallback(404);\n            return;\n        }\n\n        this.idx++;\n        this.setTzImage();\n    }\n\n    private getImagesSizes(provider: string) {\n        let sizes: string[] = [];\n        switch (provider) {\n            case 'Hotelbeds':\n                // '' We use default HB image (/ to be removed in that case)\n                sizes = ['bigger', '', 'medium'];\n                break;\n            case 'Ostrovok':\n                sizes = ['1024x768', '240x240', 'x100'];\n                if (this.defaultSize === 'medium') {\n                    this.defSize = '240x240';\n                }\n                break;\n            case 'BookingCom':\n                sizes = ['max500', 'max300', 'square60'];\n                if (this.defaultSize === 'medium') {\n                    this.defSize = 'max300';\n                }\n                break;\n        }\n\n        if (this.defSize) {\n            if (sizes.indexOf(this.defSize) > -1) {\n                sizes.splice(sizes.indexOf(this.defSize), 1);\n            }\n\n            // move the default size to index zero\n            sizes.unshift(this.defSize);\n        }\n\n        return sizes;\n    }\n\n    private init(isInit: boolean): void {\n        this.url = this.tzHotelImage;\n        this.idx = 0;\n        this.sizes = this.getImagesSizes(this.provider);\n        this.len = this.sizes.length;\n\n        if (isInit) {\n            this.elem.nativeElement.onerror = () => this.handleError();\n        }\n        this.elem.nativeElement.onload = () => this.invokeCallback(200);\n\n        this.setTzImage();\n    }\n}\n","import { Directive, ElementRef, Input, HostListener } from '@angular/core';\n\n@Directive({\n    selector: '[tzMaxLimit]',\n})\nexport class MaxLimitDirective {\n    @Input() tzMaxLimit = -1;\n    @Input() type = '';\n\n    private readonly invalidChars = ['-', '+', 'E', 'e', '.'];\n    private readonly specialKeys = ['Backspace', 'Del', 'Delete'];\n    constructor(private el: ElementRef) {}\n\n    @HostListener('keydown', ['$event'])\n    onKeyDown(event: KeyboardEvent) {\n        if (this.specialKeys.includes(event.key)) {\n            return;\n        }\n\n        const preventKeydown =\n            (this.type === 'number' && this.invalidChars.includes(event.key)) ||\n            (!document.getSelection()?.toString() &&\n                this.el.nativeElement.value.length === this.tzMaxLimit &&\n                isFinite(+event.key));\n        if (preventKeydown) {\n            event.preventDefault();\n        }\n    }\n}\n","import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\n\n@Directive({\n    selector: '[tzOnFocus]',\n})\nexport class OnFocusDirective {\n    constructor(private el: ElementRef, public renderer: Renderer2) {}\n\n    @HostListener('focus', ['$event']) onFocus(): void {\n        this.renderer.addClass(this.el.nativeElement, 'tz-input-focus');\n        return;\n    }\n\n    @HostListener('blur', ['$event']) onblur(): void {\n        this.renderer.removeClass(this.el.nativeElement, 'tz-input-focus');\n        return;\n    }\n}\n","import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n    selector: '[tzOnSwipe]',\n})\nexport class OnSwipeDirective {\n    @Output() swipeLeft = new EventEmitter<void>();\n    @Output() swipeRight = new EventEmitter<void>();\n    @Output() swipeTop = new EventEmitter<void>();\n    @Output() swipeBottom = new EventEmitter<void>();\n\n    private touchstartX = 0;\n    private touchstartY = 0;\n\n    constructor() {}\n\n    @HostListener('touchstart', ['$event']) touchStart(event: TouchEvent): void {\n        const touch = event.changedTouches[0];\n        this.touchstartX = touch.screenX;\n        this.touchstartY = touch.screenY;\n        return;\n    }\n\n    @HostListener('touchend', ['$event']) touchEnd(event: TouchEvent): void {\n        const touch = event.changedTouches[0];\n        const touchendX = touch.screenX;\n        const touchendY = touch.screenY;\n\n        const xDiff = this.touchstartX - touchendX;\n        const yDiff = this.touchstartY - touchendY;\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) {\n            if (xDiff > 0) {\n                this.swipeLeft.emit();\n            } else {\n                this.swipeRight.emit();\n            }\n        } else {\n            if (yDiff > 0) {\n                this.swipeTop.emit();\n            } else {\n                this.swipeBottom.emit();\n            }\n        }\n        return;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { SettingsService } from '@services/services/settings-service';\nimport { DatesService } from '@services/modules/search/utils/dates.service';\nimport { DatesUtils } from '@core/utils/dates-utils';\n\n@Pipe({\n    name: 'dateRange',\n    pure: false,\n})\nexport class DateRangePipe implements PipeTransform {\n    constructor(private settingsService: SettingsService, private datesService: DatesService) {}\n\n    transform(startDate: string, endDate: string, noTime = false): string {\n        return this.datesService.formDoubleDate(\n            DatesUtils.getDateFromTzDate(startDate),\n            DatesUtils.getDateFromTzDate(endDate)\n        );\n\n        /*\n        const regex1 = /(MMM.*d)|(d.*MMM)/gm;\n        const m = regex1.exec(this.settingsService.locales.DATETIME_FORMATS.mediumDate);\n\n        if (!m || startDate === '' || endDate === '') {\n            return '';\n        }\n\n        const timeFormat = this.settingsService.locales.DATETIME_FORMATS.shortTime;\n        let dateFrom = new Date(startDate);\n        let dateTo = new Date(endDate);\n\n        if (dateFrom.getTime() > dateTo.getTime()) {\n            [dateFrom, dateTo] = [dateTo, dateFrom]; // swap dates if FROM date is bigger than TO date\n        }\n\n        if (dateTo.getFullYear() !== dateFrom.getFullYear()) {\n            const mediumFormat = this.settingsService.locales.DATETIME_FORMATS.mediumDate;\n            return this.format(dateFrom, mediumFormat) + sep + this.format(dateTo, mediumFormat);\n        }\n\n        if (dateFrom.getMonth() !== dateTo.getMonth()) {\n            return (\n                this.format(dateFrom, m[0]) +\n                sep +\n                this.format(dateTo, this.settingsService.locales.DATETIME_FORMATS.mediumDate)\n            );\n        } else {\n            return (\n                this.format(dateFrom, 'd') +\n                sep +\n                this.format(dateTo, this.settingsService.locales.DATETIME_FORMATS.mediumDate)\n            );\n        }\n\n        if (dateFrom.getDate() !== dateTo.getDate()) {\n            if (!noTime) {\n                const date = this.getDate(dateFrom) + sep + this.getDate(dateTo);\n                if (this.isMonthFirst()) {\n                    return this.format(dateTo, 'MMM') + ' ' + date + ', ' + dateTo.getFullYear();\n                } else {\n                    return date + ' ' + this.format(dateTo, 'MMM') + ' ' + dateTo.getFullYear();\n                }\n            } else {\n                return (\n                    this.format(dateFrom, timeFormat) +\n                    ' ' +\n                    this.format(dateFrom, this.settingsService.locales.DATETIME_FORMATS.mediumDate) +\n                    sep +\n                    this.format(dateTo, timeFormat) +\n                    ' ' +\n                    this.format(dateTo, this.settingsService.locales.DATETIME_FORMATS.mediumDate)\n                );\n            }\n        }\n\n        return (\n            this.format(dateFrom, timeFormat) +\n            sep +\n            this.format(dateTo, timeFormat) +\n            ' ' +\n            this.format(dateTo, this.settingsService.locales.DATETIME_FORMATS.mediumDate)\n        );*/\n    }\n    /*\n    private getDate(date: Date): string {\n        return (date.getDate() < 10 ? '0' : '') + date.getDate();\n    }\n\n    private isMonthFirst(): boolean {\n        const positions = this.settingsService.locales.DATETIME_FORMATS.mediumDate.split(' ');\n        let datePos = 0;\n        for (let i = 0; i < positions.length; i++) {\n            if (positions[i].indexOf('d') >= 0) {\n                datePos = i;\n                break;\n            }\n        }\n        return datePos > 0;\n    }\n\n    private format(date: Date, formatStr: string): string {\n        const dateString = formatDate(date, formatStr, this.settingsService.langCode);\n        return dateString;\n    }*/\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'tzDistance',\n    pure: true,\n})\nexport class DistancePipe implements PipeTransform {\n    constructor() {}\n\n    transform(distance: number): string {\n        return distance < 0.1 ? Math.round(distance * 1000) + 'm' : distance.toFixed(1) + 'km';\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filterArray',\n})\nexport class FilterArrayPipe implements PipeTransform {\n    transform(\n        arr: any[],\n        filterObj: {\n            [key: string]: string | boolean;\n        }\n    ): any[] {\n        const filterKey = Object.keys(filterObj)[0];\n        const filterValue = filterObj[filterKey];\n\n        if (arr && arr.length > 0) {\n            return arr.filter((item: any) => item[filterKey] === filterValue);\n        }\n\n        return arr;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { FlightSummary } from '@schemas/modules/flights/flight-summary.model';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n    name: 'layoverDescription',\n})\nexport class LayoverDescriptionPipe implements PipeTransform {\n    constructor(private translateService: TranslateService) {}\n\n    transform(summary: FlightSummary): string {\n        const count = summary.airportStopRoutes && summary.airportStopRoutes.length;\n        let finalText = '';\n        let city1 = '';\n        let city2 = '';\n        let airport1 = '';\n        let airport2 = '';\n        const bookAndText = this.translateService.instant('GENERAL.AND');\n\n        if (count) {\n            city1 = summary.airportStopRoutes[0]?.city;\n            city2 = summary.airportStopRoutes[1]?.city;\n            airport1 = summary.airportStopRoutes[0]?.airport;\n            airport2 = summary.airportStopRoutes[1]?.airport;\n        }\n\n        switch (count) {\n            case 1:\n                if (summary.hasLayover === 2) {\n                    finalText = this.translateService.instant('NIGHT_LAYOVER_IN') + ' ' + city1 + ', ' + airport1;\n                }\n                finalText = city1 + ', ' + airport1;\n                break;\n            case 2:\n                finalText = city1 + ', ' + airport1 + ' ' + bookAndText + ' ' + city2 + ', ' + airport2;\n                break;\n            case 3:\n                finalText = city1 + ', ' + city2 + ' ' + bookAndText + ' ' + summary.airportStopRoutes[2].city;\n                break;\n        }\n\n        return finalText;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'ratingToText',\n})\nexport class RatingToTextPipe implements PipeTransform {\n    transform(rating: number): string {\n        const ratingsMap = [\n            {\n                range: [0, 6],\n                textKey: 'NO_RATING',\n            },\n            {\n                range: [6, 8],\n                textKey: 'GOOD',\n            },\n            {\n                range: [8, 9],\n                textKey: 'VERY_GOOD',\n            },\n            {\n                range: [9, 9.5],\n                textKey: 'EXCELLENT',\n            },\n            {\n                range: [9.5, 10],\n                textKey: 'FABULOUS',\n            },\n        ];\n\n        let overAllText = 'NO_RATING';\n\n        ratingsMap.map((ratingItem) => {\n            const [bottom, top] = ratingItem.range;\n            if (rating >= bottom && rating <= top) {\n                overAllText = ratingItem.textKey;\n            }\n        });\n\n        return 'HOTELS.REVIEWS.RATINGS.' + overAllText;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'replace',\n})\nexport class ReplacePipe implements PipeTransform {\n    transform(str: string, regex: string, replacement: string): string {\n        return str.replace(new RegExp(regex, 'g'), replacement);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safeHtml',\n})\nexport class SafeHtmlPipe implements PipeTransform {\n    constructor(private sanitized: DomSanitizer) {}\n    transform(value: string) {\n        return this.sanitized.bypassSecurityTrustHtml(value);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'sortArray',\n})\nexport class SortArrayPipe implements PipeTransform {\n    transform(arr: any[], args: string): any[] {\n        if (!Array.isArray(arr)) {\n            return arr;\n        }\n\n        arr.sort((a: any, b: any) => {\n            if (a[args] < b[args]) {\n                return -1;\n            } else if (a[args] > b[args]) {\n                return 1;\n            } else {\n                return 0;\n            }\n        });\n\n        return arr;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { AccommodationSummary } from '@schemas/modules/accommodations/accommodation';\n\n@Pipe({\n    name: 'sortSummary',\n})\nexport class SortSummaryPipe implements PipeTransform {\n    public transform(value: AccommodationSummary[]): AccommodationSummary[] {\n        return value.sort((a: AccommodationSummary, b: AccommodationSummary) => {\n            if (a.sentiment === 'positive') {\n                return -1;\n            } else if (a.sentiment === 'negative') {\n                return 1;\n            } else {\n                return 0;\n            }\n        });\n    }\n}\n","import { ChangeDetectorRef, Pipe, PipeTransform } from '@angular/core';\nimport { formatCurrency, getCurrencySymbol } from '@angular/common';\nimport { SettingsService } from '@services/services/settings-service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n    name: 'tzCurrency',\n    pure: false,\n})\nexport class TzCurrencyPipe implements PipeTransform {\n    constructor(private settingService: SettingsService) {}\n\n    transform(\n        value: number,\n        currencyCode: string = this.settingService.getCurrency(),\n        display: 'code' | 'symbol' | 'symbol-narrow' | string | boolean = 'symbol',\n        digitsInfo: string = '1.0-0',\n        locale: string = this.settingService.langCode\n    ): string | null {\n        return formatCurrency(value, locale, getCurrencySymbol(currencyCode, 'wide'), currencyCode, digitsInfo);\n    }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@services/services/settings-service';\n\n@Pipe({\n    name: 'tzDate',\n    pure: false,\n})\nexport class TzDatePipe implements PipeTransform {\n    constructor(private translateService: TranslateService, private settingsService: SettingsService) {}\n\n    transform(\n        value: Date | string | number | undefined,\n        format?: string,\n        timezone?: string,\n        locale?: string\n    ): string | null {\n        if (!value) {\n            return '';\n        }\n        const datePipe: DatePipe = new DatePipe(this.translateService.currentLang);\n        const settingsLocale = locale ? locale : this.settingsService.locales;\n        let localeFormat: undefined | string;\n        if (format) {\n            localeFormat = settingsLocale.DATETIME_FORMATS[format] ? settingsLocale.DATETIME_FORMATS[format] : format;\n        }\n\n        return datePipe.transform(value, localeFormat, timezone, locale);\n    }\n}\n","export enum DialogButtonsStyles {\n    PRIMARY = 0,\n    SECONDARY = 1,\n}\n\nexport enum MainDialogSize {\n    DEFAULT = '540px',\n    LARGE = '940px',\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { PriceRangeFilterComponent } from './components/price-range-filter/price-range-filter.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { AngularSvgIconModule } from 'angular-svg-icon';\n// eslint-disable-next-line max-len\nimport { RecommendedListTemDescriptionComponent } from './components/recommended-list-tem-description/recommended-list-tem-description.component';\nimport { ResultsTopInfoBlockComponent } from '@shared/components/results-top-info-block/results-top-info-block.component';\nimport { TzIconComponent } from './components/tz-icon/tz-icon.component';\nimport { TzSvgIconComponent } from '@shared/components/tz-svg-icon/tz-svg-icon.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { NgxSliderModule } from '@angular-slider/ngx-slider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppDialogComponent } from '@shared/components/dialogs/app-dialog/app-dialog.component';\nimport { TzDialogComponent } from '@shared/components/dialogs/tz-dialog/tz-dialog.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CounterComponent } from '@shared/components/counter/counter.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { MobSignInComponent } from './components/mobile/mob-sign-in/mob-sign-in.component';\nimport { MobForgotPasswordComponent } from './components/mobile/mob-forgot-password/mob-forgot-password.component';\nimport { FilterArrayPipe } from './pipes/filter-array.pipe';\nimport { RatingToTextPipe } from './pipes/rating-to-text.pipe';\nimport { SortArrayPipe } from './pipes/sort-array.pipe';\nimport { DateRangePipe } from './pipes/date-range.pipe';\nimport { SafeHtmlPipe } from './pipes/safe-html.pipe';\nimport { ReplacePipe } from './pipes/replace.pipe';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n// eslint-disable-next-line max-len\nimport { TrazlerConfirmationDialogComponent } from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { MainDialogComponent } from '@shared/components/dialogs/main-dialog/main-dialog.component';\nimport { StickyFooterDialogComponent } from '@shared/components/dialogs/stick-footer-dialog/stick-footer-dialog.component';\nimport { HotelImageDirective } from './directives/hotel-image.directive';\nimport { NgxIntlTelInputModule } from 'ngx-intl-tel-input';\nimport { TzPhoneComponent } from './components/tz-phone/tz-phone.component';\nimport { TzCountryFieldComponent } from './components/tz-country-field/tz-country-field.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TzTravellerComponent } from './components/tz-traveller/tz-traveller.component';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { CartItemActionsBarComponent } from '@shared/components/cart-item-actions-bar/cart-item-actions-bar.component';\nimport { BillingInfoComponent } from './components/billing-info/billing-info.component';\nimport { PaymentAddressComponent } from './components/payment-address/payment-address.component';\nimport { ProfileInfoComponent } from './components/profile-info/profile-info.component';\nimport { BlockSeparatorComponent } from '@shared/components/block-separator/block-separator.component';\nimport { CartSummaryComponent } from './components/cart-summary/cart-summary.component';\nimport { TzImageSliderComponent } from './components/tz-image-slider/tz-image-slider.component';\nimport { DropdownComponent } from '@shared/components/dropdowns/dropdown/dropdown.component';\nimport { StarsComponent } from '@shared/components/stars/stars.component';\nimport { TzCurrencyPipe } from './pipes/tz-currency.pipe';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { DebugCartItemComponent } from '@shared/components/debug-cart-item/debug-cart-item.component';\nimport { FooterPagesHeaderComponent } from '@shared/components/footer-pages/footer-pages-header/footer-pages-header.component';\n// eslint-disable-next-line max-len\nimport { FooterPageContactFormComponent } from '@shared/components/footer-pages/footer-page-contact-form/footer-page-contact-form.component';\nimport { SignUpFormComponent } from '@shared/components/landing-page/sign-up-form/sign-up-form.component';\nimport { NgxMapboxGLModule } from 'ngx-mapbox-gl';\nimport { environment } from '@environments/environment';\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\nimport { LayoverDescriptionPipe } from './pipes/layover-description.pipe';\nimport { OnFocusDirective } from '@shared/directives/on-focus.directive';\nimport { FormErrorMessagesComponent } from '@shared/components/landing-page/form-error-messages/form-error-messages.component';\nimport { TzSnackBarDialogComponent } from '@shared/components/dialogs/tz-snack-bar-dialog/tz-snack-bar-dialog.component';\nimport { TzSnackBarComponent } from '@shared/components/dialogs/tz-snack-bar/tz-snack-bar.component';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { TzDatePipe } from './pipes/tz-date.pipe';\nimport { MobServiceTabComponent } from '@shared/components/mobile/mob-tab/mob-service-tab.component';\nimport { MobMainModalComponent } from '@shared/components/modals/mob-main-modal/mob-main-modal.component';\nimport { MobMainModalHeaderComponent } from '@shared/components/modals/mob-main-modal-header/mob-main-modal-header.component';\nimport { MobModalPageLinkComponent } from '@shared/components/mobile/mob-modal-page-link/mob-modal-page-link.component';\nimport { MobMainDetailsModalComponent } from '@shared/components/modals/mob-main-details-modal/mob-main-details-modal.component';\nimport { MobPickerComponent } from '@shared/components/mobile/mob-picker/mob-picker.component';\nimport { TRANSLATION_CONFIG } from 'src/app/config/translation.config';\nimport { MobCartSummaryButtonComponent } from './components/mobile/mob-cart-summary-button/mob-cart-summary-button.component';\nimport { MobResetPasswordComponent } from './components/mobile/mob-reset-password/mob-reset-password.component';\nimport { OnSwipeDirective } from './directives/on-swipe.directive';\n// eslint-disable-next-line max-len\nimport { MobAccommodationGuestRateComponent } from '@shared/components/mob-accommodation-guest-rate/mob-accommodation-guest-rate.component';\nimport { SortSummaryPipe } from '@shared/pipes/sort-summary.pipe';\nimport { TzFormErrorComponent } from './components/tz-form-error/tz-form-error.component';\nimport { MobPickerModalComponent } from '@shared/components/modals/mob-picker-modal/mob-picker-modal.component';\nimport { MbscDatepickerModule } from '@mobiscroll/angular';\nimport { CookieComponent } from '@shared/components/cookie/cookie.component';\nimport { MobCookieComponent } from '@shared/components/mob-cookie/mob-cookie.component';\nimport { MbscScrollerModule } from '@mobiscroll/angular4';\nimport { MaxLimitDirective } from './directives/max-limit.directive';\nimport { DistancePipe } from '@shared/pipes/distance.pipe';\nimport { MobPriceChangedBlockComponent } from '@shared/components/mob-price-changed-block/mob-price-changed-block.component';\nimport { SearchHotelNameComponent } from './components/search-hotel-name/search-hotel-name.component';\nimport { MobAuthComponent } from '@shared/components/mobile/mob-auth/mob-auth.component';\nimport { MobButtonComponent } from '@shared/components/mobile/mob-button/mob-button.component';\nimport { MobInputComponent } from '@shared/components/mob-input/mob-input.component';\nimport { MobDropdownComponent } from '@shared/components/mob-dropdown/mob-dropdown.component';\n\n@NgModule({\n    declarations: [\n        AppDialogComponent,\n        CheckboxComponent,\n        PriceRangeFilterComponent,\n        RecommendedListTemDescriptionComponent,\n        ResultsTopInfoBlockComponent,\n        TzDialogComponent,\n        TzIconComponent,\n        TzSvgIconComponent,\n        CounterComponent,\n        SignInComponent,\n        MobForgotPasswordComponent,\n        MobSignInComponent,\n        FilterArrayPipe,\n        RatingToTextPipe,\n        SortArrayPipe,\n        DateRangePipe,\n        SafeHtmlPipe,\n        ReplacePipe,\n        HotelImageDirective,\n        TrazlerConfirmationDialogComponent,\n        MainDialogComponent,\n        StickyFooterDialogComponent,\n        TzPhoneComponent,\n        TzCountryFieldComponent,\n        TzTravellerComponent,\n        CartItemActionsBarComponent,\n        BillingInfoComponent,\n        PaymentAddressComponent,\n        ProfileInfoComponent,\n        BlockSeparatorComponent,\n        CartSummaryComponent,\n        TzImageSliderComponent,\n        DropdownComponent,\n        TzCurrencyPipe,\n        DebugCartItemComponent,\n        CookieComponent,\n        MobCookieComponent,\n        StarsComponent,\n        FooterPagesHeaderComponent,\n        FooterPageContactFormComponent,\n        SignUpFormComponent,\n        LayoverDescriptionPipe,\n        OnFocusDirective,\n        FormErrorMessagesComponent,\n        TzSnackBarDialogComponent,\n        TzSnackBarComponent,\n        TzDatePipe,\n        MobServiceTabComponent,\n        MobMainModalComponent,\n        MobMainModalHeaderComponent,\n        MobModalPageLinkComponent,\n        MobMainDetailsModalComponent,\n        MobPickerComponent,\n        MobCartSummaryButtonComponent,\n        MobResetPasswordComponent,\n        OnSwipeDirective,\n        MobPickerModalComponent,\n        TzFormErrorComponent,\n        MobAccommodationGuestRateComponent,\n        SortSummaryPipe,\n        MaxLimitDirective,\n        DistancePipe,\n        MobPriceChangedBlockComponent,\n        SearchHotelNameComponent,\n        MobAuthComponent,\n        MobButtonComponent,\n        MobInputComponent,\n        MobDropdownComponent,\n    ],\n    imports: [\n        CommonModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TranslateModule.forChild(TRANSLATION_CONFIG),\n        NgbModule,\n        NgxSliderModule,\n        NgxSkeletonLoaderModule,\n        MatDialogModule,\n        MatSnackBarModule,\n        NgxDaterangepickerMd.forRoot(),\n        MatIconModule,\n        MatButtonToggleModule,\n        InfiniteScrollModule,\n        NgxIntlTelInputModule,\n        NgSelectModule,\n        NgxMaskModule.forRoot(),\n        IonicModule,\n        AngularSvgIconModule.forRoot(),\n        NgxMapboxGLModule.withConfig({\n            accessToken: environment.mapboxGLToken,\n        }),\n        VirtualScrollerModule,\n        MbscDatepickerModule,\n        MbscScrollerModule,\n    ],\n    exports: [\n        MatDialogModule,\n        MatSnackBarModule,\n        ScrollingModule,\n        TranslateModule,\n        MatIconModule,\n        MatExpansionModule,\n        MatRadioModule,\n        MatButtonToggleModule,\n        FilterArrayPipe,\n        RatingToTextPipe,\n        SortArrayPipe,\n        DateRangePipe,\n        SafeHtmlPipe,\n        ReplacePipe,\n        IonicModule,\n        VirtualScrollerModule,\n        AppDialogComponent,\n        CheckboxComponent,\n        CounterComponent,\n        PriceRangeFilterComponent,\n        RecommendedListTemDescriptionComponent,\n        ResultsTopInfoBlockComponent,\n        TzDialogComponent,\n        TzIconComponent,\n        TzSvgIconComponent,\n        NgbModule,\n        NgxDaterangepickerMd,\n        InfiniteScrollModule,\n        HotelImageDirective,\n        TrazlerConfirmationDialogComponent,\n        MainDialogComponent,\n        StickyFooterDialogComponent,\n        TzPhoneComponent,\n        TzCountryFieldComponent,\n        TzTravellerComponent,\n        CartItemActionsBarComponent,\n        BillingInfoComponent,\n        PaymentAddressComponent,\n        ProfileInfoComponent,\n        BlockSeparatorComponent,\n        CartSummaryComponent,\n        TzImageSliderComponent,\n        DropdownComponent,\n        TzCurrencyPipe,\n        DebugCartItemComponent,\n        CookieComponent,\n        MobCookieComponent,\n        NgxMapboxGLModule,\n        StarsComponent,\n        FooterPagesHeaderComponent,\n        FooterPageContactFormComponent,\n        SignUpFormComponent,\n        LayoverDescriptionPipe,\n        OnFocusDirective,\n        OnSwipeDirective,\n        FormErrorMessagesComponent,\n        TzSnackBarDialogComponent,\n        TzSnackBarComponent,\n        NgxSkeletonLoaderModule,\n        TzDatePipe,\n        MobServiceTabComponent,\n        MobMainModalComponent,\n        MobMainModalHeaderComponent,\n        MobModalPageLinkComponent,\n        MobMainDetailsModalComponent,\n        MobPickerComponent,\n        MobCartSummaryButtonComponent,\n        MobAccommodationGuestRateComponent,\n        SortSummaryPipe,\n        TzFormErrorComponent,\n        MobPickerModalComponent,\n        MaxLimitDirective,\n        DistancePipe,\n        MobPriceChangedBlockComponent,\n        SearchHotelNameComponent,\n        MobAuthComponent,\n        MobButtonComponent,\n        MobInputComponent,\n        MobDropdownComponent,\n    ],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ConfigService {\n    constructor() {}\n\n    get baseUrl(): string {\n        return environment.baseUrl;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BrowserAnimationsModuleConfig } from '@angular/platform-browser/animations';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DeviceService {\n    public static animatedConfig(): BrowserAnimationsModuleConfig {\n        // on old IOS version animation must be disabled or we get crashes on angular (visible impact\n        // dialog box do not close)\n        const disableAnimations =\n            !('animate' in document.documentElement) ||\n            (navigator && /(iPhone OS|iPad; CPU OS) (8|9|10|11|12|13)_/.test(navigator.userAgent));\n\n        if (disableAnimations) {\n            console.log('animation disabled');\n            return { disableAnimations: true };\n        }\n        return { disableAnimations: false };\n    }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { BehaviorSubject, Observable, Subject, timer } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { TzDialogComponent } from '@shared/components/dialogs/tz-dialog/tz-dialog.component';\n// eslint-disable-next-line max-len\nimport { TrazlerConfirmationDialogComponent } from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { MainDialogOptions } from '@shared/schemas/main-dialog-options.model';\nimport { MainDialogComponent } from '@shared/components/dialogs/main-dialog/main-dialog.component';\nimport { StickFooterDialogOptions } from '@shared/schemas/stick-footer-dialog-options.model';\nimport { StickyFooterDialogComponent } from '@shared/components/dialogs/stick-footer-dialog/stick-footer-dialog.component';\nimport { MainDialogSize } from '@shared/schemas/dialog.model';\nimport { ConfirmationDialogOptions } from '@shared/schemas/confirmation-dialog-options.model';\nimport { AccommodationReviews } from '@schemas/modules/accommodations/accommodation-reviews.model';\nimport { TzSnackBarComponent } from '@shared/components/dialogs/tz-snack-bar/tz-snack-bar.component';\nimport { TzSnackBarDialogComponent } from '@shared/components/dialogs/tz-snack-bar-dialog/tz-snack-bar-dialog.component';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { PlatformService } from './platform.service';\nimport { FilterReferenceItem } from '@schemas/modules/core/filters/service-filter';\nimport { IHotelNames } from '@schemas/modules/accommodations/accommodations-response';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DialogService {\n    private conf = {\n        autoFocus: true,\n        height: 'auto',\n        width: 'auto',\n        panelClass: 'app-dialog',\n        data: {},\n    };\n\n    constructor(\n        private dialog: MatDialog,\n        private dialogRef: MatDialogRef<TzDialogComponent>,\n        private platformService: PlatformService\n    ) {}\n\n    public openDialog<T>(component: ComponentType<T> | TemplateRef<T>, conf: MatDialogConfig): MatDialogRef<any> {\n        if (!this.platformService.isMobileDevice) {\n            return this.dialog.open(component, conf);\n        }\n\n        const animationClass = ['animate__dialogPanel', 'animate__dialogEnter'];\n        if (!conf.panelClass) {\n            conf.panelClass = animationClass;\n        } else if (typeof conf.panelClass === 'string') {\n            conf.panelClass = [conf.panelClass, ...animationClass];\n        } else {\n            conf.panelClass = [...conf.panelClass, ...animationClass];\n        }\n\n        return this.dialog.open(component, conf);\n    }\n\n    public closeAll() {\n        console.log('closing all open popups');\n        this.dialog.closeAll();\n    }\n\n    public closeDialog<T>(mdDialogRef: MatDialogRef<T>, dialogResult?: any): void {\n        if (!this.platformService.isMobileDevice) {\n            mdDialogRef.close(dialogResult);\n            return;\n        }\n\n        mdDialogRef.removePanelClass('animate__dialogEnter');\n        mdDialogRef.addPanelClass('animate__dialogExit');\n\n        const timer$ = timer(500); // wait for panel close animation to finish\n        timer$.subscribe(() => {\n            mdDialogRef.close(dialogResult);\n        });\n    }\n\n    public open<T>(\n        component: ComponentType<T> | TemplateRef<T>,\n        data?: any,\n        conf: MatDialogConfig = {}\n    ): MatDialogRef<any> {\n        this.conf.data = {\n            component,\n            data,\n        };\n        if (data?.isDefaultDialog === true) {\n            this.conf.panelClass = 'default-app-dialog';\n        }\n        conf = {\n            ...this.conf,\n            ...conf,\n        };\n        return this.openDialog(component, conf);\n    }\n\n    openSizePopup<T>(component: any, sizedata: any): MatDialogRef<any> {\n        return this.openDialog(component, {\n            width: '600px',\n            data: sizedata,\n            disableClose: false,\n        });\n    }\n\n    openAuthenticityPopup<T>(component: any): MatDialogRef<any> {\n        return this.openDialog(component, {\n            disableClose: false,\n        });\n    }\n\n    // tvb-dialog\n\n    public openFilterDialog<T>(\n        component: ComponentType<T>,\n        data: {\n            filter: BehaviorSubject<FilterReferenceItem>;\n            resultsCount: Subject<number>;\n            searchHotel?: {\n                hotelNames: IHotelNames[];\n                searchHotel$?: Subject<IHotelNames>;\n            };\n        }\n    ): MatDialogRef<T> {\n        const conf = {\n            autoFocus: false,\n            height: '100%',\n            width: '448px',\n            panelClass: 'trazler-filter-dialog',\n            position: {\n                left: '0',\n            },\n            data,\n        };\n        return this.dialog.open(component, conf);\n    }\n\n    public openAccommodationReviewsDialog<T>(\n        component: ComponentType<T>,\n        accommodationReviews: AccommodationReviews | undefined | null\n    ): MatDialogRef<T> {\n        const conf = {\n            height: '100%',\n            width: '424px',\n            panelClass: 'trazler-accommodation-reviews-dialog',\n            position: {\n                left: '0',\n            },\n            data: { accommodationReviews },\n        };\n        return this.dialog.open(component, conf);\n    }\n\n    public openBasketTimelineDialog<T>(component: ComponentType<T>, cartItems: ICartItem[]): MatDialogRef<T> {\n        const conf = {\n            height: '100%',\n            width: '448px',\n            panelClass: 'trazler-filter-dialog',\n            position: {\n                left: '0',\n            },\n            data: { cartItems },\n        };\n\n        return this.dialog.open(component, conf);\n    }\n\n    public openAccommodationDialog<T>(component: ComponentType<T>, galleyConf: MatDialogConfig): MatDialogRef<T> {\n        return this.openDialog(component, galleyConf);\n    }\n\n    public openServiceDialog<T>(component: ComponentType<T>, modelConf: MatDialogConfig): MatDialogRef<T> {\n        return this.openDialog(component, modelConf);\n    }\n\n    public confirmedTrazlerDialog(): Observable<any> {\n        return this.dialogRef.afterClosed().pipe(\n            take(1),\n            map((res) => res)\n        );\n    }\n\n    public openConfirmationDialog(\n        confirmationDialogData: ConfirmationDialogOptions,\n        options: { mainDialogSize: MainDialogSize; dialogPanelClasses?: string[] } = {\n            mainDialogSize: MainDialogSize.DEFAULT,\n        }\n    ): MatDialogRef<TrazlerConfirmationDialogComponent> {\n        const className = MainDialogSize.LARGE === options.mainDialogSize ? 'tz-main-dialog-large' : 'tz-main-dialog';\n\n        const config: MatDialogConfig = {\n            data: { data: confirmationDialogData },\n            panelClass: [className, ...(options.dialogPanelClasses ?? [])],\n            maxWidth: options.mainDialogSize,\n            width: options.mainDialogSize,\n            maxHeight: '566px',\n            disableClose: true,\n        };\n\n        return this.openDialog(TrazlerConfirmationDialogComponent, config);\n    }\n\n    public openSnackBarDialog(\n        message: string,\n        options: { time: number } = { time: 4000 }\n    ): MatDialogRef<TzSnackBarDialogComponent> {\n        const config: MatDialogConfig = {\n            data: { data: { message, time: options.time } },\n            panelClass: 'tz-snack-bar-dialog',\n            backdropClass: 'tz-snack-bar-backdrop',\n            maxWidth: '365px',\n            width: '365px',\n            minHeight: '60px',\n            disableClose: true,\n        };\n\n        return this.openDialog(TzSnackBarDialogComponent, config);\n    }\n\n    public openMainDialog(\n        dialogData: MainDialogOptions,\n        options: { mainDialogSize: MainDialogSize } = { mainDialogSize: MainDialogSize.DEFAULT }\n    ) {\n        const className = MainDialogSize.LARGE === options.mainDialogSize ? 'tz-main-dialog-large' : 'tz-main-dialog';\n\n        const config: MatDialogConfig = {\n            data: { data: dialogData },\n            panelClass: className,\n            maxWidth: options.mainDialogSize,\n            width: options.mainDialogSize,\n            maxHeight: '566px',\n            disableClose: true,\n        };\n\n        return this.openDialog(MainDialogComponent, config);\n    }\n\n    public openStickFooterDialog(dialogData: StickFooterDialogOptions) {\n        const config: MatDialogConfig = {\n            data: { data: dialogData },\n            panelClass: 'tz-stick-footer-dialog',\n            maxWidth: '100vw',\n            minWidth: '920px',\n            width: '100%',\n            disableClose: true,\n        };\n\n        return this.openDialog(StickyFooterDialogComponent, config);\n    }\n\n    public openSnackBar(data: { message: string; time?: number }): void {\n        data.time = data.time ?? 4000;\n        const config: MatDialogConfig = {\n            data: { data },\n            panelClass: ['tz-snack-bar-dialog', 'tz-snack-bar'],\n            backdropClass: 'tz-snack-bar-backdrop',\n            maxWidth: '365px',\n            width: '365px',\n            minHeight: '60px',\n            disableClose: true,\n        };\n\n        this.openDialog(TzSnackBarComponent, config);\n    }\n\n    public getDialogById(id: string): MatDialogRef<any> | undefined {\n        return this.dialog.getDialogById(id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { SelectedServices } from '@schemas/modules/services/selected-services';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LandingPageService {\n    public landingPageClosed$: Subject<SelectedServices> = new Subject<SelectedServices>();\n\n    constructor() {}\n}\n","import { Injectable } from '@angular/core';\nimport { ModalController, AnimationController } from '@ionic/angular';\nimport { MobMainModalComponent } from '@shared/components/modals/mob-main-modal/mob-main-modal.component';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { ModalOptions } from '@ionic/core';\nimport { MobMainDetailsModalComponent } from '@shared/components/modals/mob-main-details-modal/mob-main-details-modal.component';\nimport { Subject } from 'rxjs';\nimport { MobPickerModalComponent } from '@shared/components/modals/mob-picker-modal/mob-picker-modal.component';\nimport { MobPickerWheels } from '@schemas/modules/picker/mob-picker';\nimport { ModalOpenOptions } from '@core/constants/modal';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ModalService {\n    public updateModelTitle$ = new Subject<string>();\n\n    constructor(private modalController: ModalController, private animationCtrl: AnimationController) {}\n\n    public create(opts: ModalOptions, options: ModalOpenOptions): Promise<HTMLIonModalElement> {\n        const iconModel = this.modalController.create(opts);\n        this.addSlideAnimation(iconModel, options);\n        return iconModel;\n    }\n\n    public async createMainModal<T>(\n        component: ComponentType<any>,\n        props: { data?: any; title?: string; cssClass?: string | string[]; hideHeader?: boolean },\n        options: { openOptions: ModalOpenOptions } = { openOptions: ModalOpenOptions.TOP }\n    ): Promise<T> {\n        const modal = await this.create(\n            {\n                component: MobMainModalComponent,\n                componentProps: {\n                    component,\n                    data: props.data,\n                    title: props.title,\n                    hideHeader: props.hideHeader,\n                },\n                cssClass: props.cssClass ? props.cssClass : 'mob-main-modal',\n            },\n            options.openOptions\n        );\n        await modal.present();\n\n        modal.onWillDismiss().then(() => {\n            this.historyBack();\n        });\n\n        modal.onDidDismiss().then(() => {\n            this.historyPushIfHasModal();\n        });\n\n        return (await modal.onDidDismiss()) as T;\n    }\n\n    public async createDetailsPage(\n        component: ComponentType<any>,\n        props: {\n            data?: any;\n            title?: string;\n            hideHeader?: boolean;\n            leftClose?: boolean;\n            modalCustomClasses?: string[];\n            isHeaderBottomDivider?: boolean;\n        },\n        options: { openOptions: ModalOpenOptions } = { openOptions: ModalOpenOptions.LEFT }\n    ): Promise<any> {\n        const modal = await this.create(\n            {\n                component: MobMainDetailsModalComponent,\n                componentProps: {\n                    component,\n                    data: props.data,\n                    title: props.title,\n                    hideHeader: props.hideHeader,\n                    isHeaderBottomDivider: props.isHeaderBottomDivider,\n                },\n                cssClass: ['mob-modal-fullscreen', ...(props.modalCustomClasses ?? [])],\n            },\n            options.openOptions\n        );\n        await modal.present();\n\n        modal.onWillDismiss().then(() => {\n            this.historyBack();\n        });\n\n        modal.onDidDismiss().then(() => {\n            this.historyPushIfHasModal();\n        });\n\n        return await modal.onDidDismiss();\n    }\n\n    public async openSummeryModal(\n        component: ComponentType<any>,\n        props: { data?: any },\n        options: { openOptions: ModalOpenOptions } = { openOptions: ModalOpenOptions.TOP }\n    ): Promise<any> {\n        const modal = await this.create(\n            {\n                component,\n                componentProps: { data: props.data },\n                cssClass: 'mob-summery-modal',\n            },\n            options.openOptions\n        );\n\n        await modal.present();\n\n        modal.onWillDismiss().then(() => {\n            this.historyBack();\n        });\n\n        return await modal.onDidDismiss();\n    }\n\n    public async openPickerModal(\n        data: { wheels: MobPickerWheels[]; selected?: any[] },\n        props: { title?: string; cssClass?: string | string[]; selectBtnText?: string; cancelBtnText?: string },\n        options: { openOptions: ModalOpenOptions } = { openOptions: ModalOpenOptions.TOP }\n    ): Promise<{ data?: { selected?: any[]; cancel?: boolean }; role?: string; id?: string }> {\n        const modal = await this.create(\n            {\n                component: MobPickerModalComponent,\n                componentProps: {\n                    data,\n                    title: props.title,\n                    selectBtnText: props.selectBtnText ? props.selectBtnText : 'GENERAL.DONE',\n                    cancelBtnText: props.cancelBtnText,\n                },\n                cssClass: props.cssClass ? props.cssClass : 'mob-picker-modal',\n            },\n            options.openOptions\n        );\n        await modal.present();\n\n        modal.onWillDismiss().then(() => {\n            this.historyBack();\n        });\n\n        modal.onDidDismiss().then(() => {\n            this.historyPushIfHasModal();\n        });\n\n        return await modal.onDidDismiss();\n    }\n\n    public async openDatePickerModal(\n        component: ComponentType<any>,\n        props: { data?: any; title?: string; cssClass?: string | string[]; selectBtnText?: string },\n        options: { openOptions: ModalOpenOptions } = { openOptions: ModalOpenOptions.TOP }\n    ): Promise<any> {\n        const modal = await this.create(\n            {\n                component,\n                componentProps: {\n                    data: props.data,\n                    title: props.title,\n                    selectBtnText: props.selectBtnText ? props.selectBtnText : 'GENERAL.DONE',\n                },\n                cssClass: props.cssClass ? props.cssClass : 'mob-picker-modal',\n            },\n            options.openOptions\n        );\n        await modal.present();\n\n        modal.onWillDismiss().then(() => {\n            this.historyBack();\n        });\n\n        modal.onDidDismiss().then(() => {\n            this.historyPushIfHasModal();\n        });\n\n        return await modal.onDidDismiss();\n    }\n\n    public dismiss(data?: any, role?: string, id?: string): Promise<boolean> {\n        return this.modalController.dismiss(data, role, id);\n    }\n\n    public getTop(): Promise<any> {\n        return this.modalController.getTop();\n    }\n\n    public historyPushModal(): void {\n        history.pushState({ modal: true }, '');\n    }\n\n    private historyBack(): void {\n        if (window.history.state.modal) {\n            history.back();\n        }\n    }\n\n    private historyPushIfHasModal(): void {\n        this.getTop().then((modal) => {\n            if (modal) {\n                history.pushState({ modal: true }, '');\n            }\n        });\n    }\n\n    private addSlideAnimation(\n        ionModel: Promise<HTMLIonModalElement>,\n        options: ModalOpenOptions = ModalOpenOptions.LEFT\n    ): void {\n        ionModel.then((baseEl) => {\n            const root = baseEl.shadowRoot;\n            const backDrop = root?.querySelector('ion-backdrop');\n            const model = root?.querySelector('.modal-wrapper');\n            if (!backDrop || !model) {\n                return;\n            }\n\n            const backdropAnimation = this.animationCtrl\n                .create()\n                .addElement(backDrop)\n                .fromTo('opacity', '0.01', 'var(--backdrop-opacity)');\n\n            const wrapperAnimation = this.animationCtrl\n                .create()\n                .addElement(model)\n                .keyframes(this.modalAnimations(options));\n\n            const modelEnterAnimation = () =>\n                this.animationCtrl\n                    .create()\n                    .addElement(baseEl)\n                    .easing('ease')\n                    .duration(300)\n                    .addAnimation([backdropAnimation, wrapperAnimation]);\n\n            baseEl.enterAnimation = modelEnterAnimation;\n            baseEl.leaveAnimation = () => modelEnterAnimation().direction('reverse');\n        });\n    }\n\n    private modalAnimations(options: ModalOpenOptions): { offset: number; opacity: string; transform: string }[] {\n        const modalOpenOptions: {\n            [key: string]: { offset: number; opacity: string; transform: string }[];\n        } = {};\n\n        modalOpenOptions[ModalOpenOptions.LEFT] = [\n            { offset: 0, opacity: '1', transform: 'translateX(100%)' },\n            { offset: 1, opacity: '1', transform: 'translateX(0)' },\n        ];\n\n        modalOpenOptions[ModalOpenOptions.RIGHT] = [\n            { offset: 0, opacity: '1', transform: 'translateX(-100%)' },\n            { offset: 1, opacity: '1', transform: 'translateX(0)' },\n        ];\n\n        modalOpenOptions[ModalOpenOptions.TOP] = [\n            { offset: 0, opacity: '1', transform: 'translateY(100%)' },\n            { offset: 1, opacity: '1', transform: 'translateY(0)' },\n        ];\n\n        modalOpenOptions[ModalOpenOptions.BOTTOM] = [\n            { offset: 0, opacity: '1', transform: 'translateY(-100%)' },\n            { offset: 1, opacity: '1', transform: 'translateY(0)' },\n        ];\n\n        return modalOpenOptions[options];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { HttpRequestType } from '@core/constants/http-request-type';\nimport { CombinationId, DataId } from '@schemas/modules/core/base-types';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { Observable, throwError } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CartDataService extends ApiAccessService {\n    public addCartSummary(combId: CombinationId, serviceId: ServiceId, dataId: DataId, req: any): any {\n        const params = {\n            entity: 'cart',\n            id: combId,\n            action: 'add',\n            curCode: this.settingsService.getCurrency(),\n            lang: this.settingsService.langCode,\n            deviceId: this.settingsService.getDeviceID(),\n            serviceId,\n            dataId,\n            closeLoader: true,\n        };\n        if (!params.id) {\n            throwError('invalid device id');\n        } else {\n            this.showLoader(true);\n            return this.apiCallObs(HttpRequestType.POST, params, req);\n        }\n    }\n\n    public removeCartSummary(serviceId: ServiceId, optionId: string): Observable<ICart> {\n        const params = {\n            entity: 'cart',\n            id: this.searchDataService.getCombId(),\n            action: 'remove',\n            curCode: this.settingsService.getCurrency(),\n            deviceId: this.settingsService.getDeviceID(),\n            serviceId,\n            optionId: optionId ? optionId : '',\n            closeLoader: true,\n        };\n        if (!params.id) {\n            return throwError('invalid data id');\n        } else {\n            this.showLoader(true);\n            return this.apiCallObs(HttpRequestType.POST, params, {});\n        }\n    }\n\n    public updateServiceCtx(combId: CombinationId, serviceList: any): Observable<any> {\n        const params = {\n            entity: 'updCombinationCtx',\n            id: combId,\n            deviceId: this.settingsService.getDeviceID(),\n        };\n\n        if (!params.id) {\n            return throwError('invalid device id');\n        } else {\n            return this.apiCallObs(HttpRequestType.POST, params, serviceList);\n        }\n    }\n\n    public clearCart(): Observable<{ message: string }> {\n        const params = {\n            entity: 'cart',\n            deviceId: this.settingsService.getDeviceID(),\n        };\n        if (!params.deviceId) {\n            return throwError('invalid data id');\n        } else {\n            return this.apiCallObs(HttpRequestType.POST, params, {});\n        }\n    }\n\n    public acceptPriceChange(serviceId: ServiceId, optionId: string): Observable<ICart> {\n        const params = {\n            entity: 'cart',\n            id: this.searchDataService.getCombId(),\n            action: 'acceptPriceChange',\n            curCode: this.settingsService.getCurrency(),\n            deviceId: this.settingsService.getDeviceID(),\n            serviceId,\n            optionId,\n            closeLoader: true,\n        };\n\n        if (!params.id) {\n            return throwError('invalid data id' + params);\n        } else {\n            this.showLoader(true);\n            return this.apiCallObs(HttpRequestType.POST, params, {});\n        }\n    }\n\n    public recheckCartItem(combID: CombinationId, deviceId: string, hideLoader = false) {\n        const params = {\n            entity: 'cart',\n            id: combID,\n            curCode: this.settingsService.getCurrency(),\n            deviceId, //device id must not be set from the global value, we must use device id of that cart\n            action: 'reCheckCartItem',\n            closeLoader: !hideLoader,\n            langCode: this.settingsService.langCode,\n        };\n\n        if (!hideLoader) {\n            this.showLoader(true, 'LOADER_MESSAGES.RECHECK_CART.MESSAGE', 'LOADER_MESSAGES.RECHECK_CART.TITLE');\n        }\n\n        return this.apiCallAccess(HttpRequestType.POST, params);\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { TabRoutingService } from '@services/searchEngine/services/tab-routing.service';\nimport { Router } from '@angular/router';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { Observable, Subscriber } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { CartDataService } from '@services/modules/cart/dataservices/cart.data.service';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserSearchService } from '@services/searchEngine/services/user-search-service';\nimport { MatDialogRef } from '@angular/material/dialog';\n// eslint-disable-next-line max-len\nimport { TrazlerConfirmationDialogComponent } from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CartStatus } from '@core/constants/cart-status';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CartRemoveService {\n    constructor(\n        private cartService: CartService,\n        private tabRoutingService: TabRoutingService,\n        private router: Router,\n        private tripPlannerService: TripPlannerService,\n        private searchDataService: SearchDataService,\n        private trazlerAPI: ApiAccessService,\n        private cartRouterService: CartRoutingService,\n        private cartDataService: CartDataService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private injector: Injector\n    ) {}\n\n    private static isPartial(cartData: any, serviceIdToRemove: ServiceId, optionId: string | undefined): boolean {\n        let nbToRemove = 0;\n        if (serviceIdToRemove === ServiceId.TRAIN || serviceIdToRemove === ServiceId.TRANSFER) {\n            return false;\n        }\n        for (const item of cartData.items) {\n            if (item.serviceId === serviceIdToRemove) {\n                if (optionId !== undefined && optionId !== '') {\n                    for (const option of item.selectedItem.bookingOptions) {\n                        if (option.optionId !== optionId) {\n                            return true;\n                        }\n                    }\n                }\n                nbToRemove++;\n            }\n            if (nbToRemove > 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private static isLastToRemove(cartData: any, serviceIdToRemove: ServiceId): boolean {\n        let nbTransfersToRemove = 0;\n        for (const item of cartData.items) {\n            if (item.serviceId !== serviceIdToRemove) {\n                return false;\n            }\n            if (serviceIdToRemove === ServiceId.TRANSFER) {\n                nbTransfersToRemove++;\n            }\n        }\n        return nbTransfersToRemove <= 1;\n    }\n\n    /*\n    isLastToBook: returns true if after current item removal all remaining items\n    are under booking (or cancelled) and none is unavailable\n     */\n    private static wasLastToBook(cartData: any, serviceIdToRemove: ServiceId, optionId: string | undefined): boolean {\n        let otherItemsFound = false;\n        for (const item of cartData.items) {\n            if (item.serviceId === serviceIdToRemove && optionId === '') {\n                continue;\n            }\n\n            for (const option of item.selectedItem.bookingOptions) {\n                if (item.serviceId !== serviceIdToRemove || option.optionId !== optionId) {\n                    if (option.status < CartStatus.STATUS_PROGRESS || option.status > CartStatus.STATUS_CANCELLED) {\n                        return false;\n                    } else {\n                        otherItemsFound = true;\n                    }\n                }\n            }\n        }\n\n        // if no item remains we return false\n        return otherItemsFound;\n    }\n\n    private static isLast(\n        cartData: any,\n        serviceIdToRemove: ServiceId,\n        optionId: string | undefined,\n        checkIfLastToBook?: boolean\n    ): { isLast: boolean; isPartial: boolean; wasLastToBook: boolean } {\n        const isPartial = CartRemoveService.isPartial(cartData, serviceIdToRemove, optionId);\n        if (isPartial) {\n            // if we remove partially an item it means that this is not last item to remove\n            return {\n                isLast: false,\n                isPartial: true,\n                wasLastToBook:\n                    !!checkIfLastToBook && CartRemoveService.wasLastToBook(cartData, serviceIdToRemove, optionId),\n            };\n        }\n        const isLast = CartRemoveService.isLastToRemove(cartData, serviceIdToRemove);\n        return {\n            isLast,\n            isPartial: false,\n            wasLastToBook:\n                !!checkIfLastToBook && CartRemoveService.wasLastToBook(cartData, serviceIdToRemove, optionId),\n        };\n    }\n\n    public removeCartData(\n        serviceId: ServiceId,\n        optionId: string | undefined,\n        removeService?: boolean\n    ): Observable<boolean | void> {\n        // dataType, result, idx, transferJourneyType, tripType\n        return new Observable<boolean | void>((subscriber: Subscriber<boolean | void>) => {\n            this.cartService\n                .removeCartData(serviceId, optionId)\n                .pipe(take(1))\n                .subscribe(\n                    (success: any) => {\n                        this.onRemoveSuccess(serviceId, subscriber, removeService);\n                    },\n                    (failure: any) => {\n                        this.cartService.resetSelected(serviceId);\n                        console.log('CART RESULT FAIL', failure);\n                        subscriber.error(failure);\n                    }\n                );\n        });\n    }\n\n    public removeTheService(\n        serviceId: ServiceId,\n        optionId?: string | undefined,\n        checkBooking?: boolean\n    ): Promise<boolean> {\n        //we want to remove all train entries on remove, we discard optionId content\n        if (serviceId === ServiceId.TRAIN) {\n            optionId = undefined;\n        }\n        const cartData = this.cartService.getCartData();\n        let cartItem: ICartItem | undefined;\n        if (cartData) {\n            for (let i = 0; cartData.items.length > i; i++) {\n                const cItem = cartData.items[i];\n                if (\n                    serviceId === cItem.serviceId ||\n                    (serviceId === ServiceId.FLIGHT_TRAIN &&\n                        (cItem.serviceId === ServiceId.FLIGHT || cItem.serviceId === ServiceId.TRAIN))\n                ) {\n                    cartItem = cItem;\n                    serviceId = cItem.serviceId;\n                    break;\n                }\n            }\n        }\n        const isVirtual = !cartItem || (cartItem && cartItem.isVirtual);\n        const isLast = CartRemoveService.isLast(cartData, serviceId, optionId, checkBooking);\n\n        return new Promise<boolean>((resolve, reject) => {\n            if (isVirtual && !isLast.isLast) {\n                this.callRemoveService(serviceId, optionId, resolve, reject, false);\n            } else {\n                this.getServiceRemovalDialogObservableRef(serviceId, isLast)\n                    .afterClosed()\n                    .subscribe((confirm: boolean) => {\n                        if (confirm) {\n                            this.callRemoveService(serviceId, optionId, resolve, reject, isLast.wasLastToBook);\n                        } else {\n                            resolve(false);\n                        }\n                    });\n            }\n        });\n    }\n\n    private onRemoveSuccess(serviceId: ServiceId, subscriber: Subscriber<boolean>, removeService?: boolean) {\n        const currentCartData = this.cartService.getCartData();\n\n        if (!currentCartData.items || currentCartData.items.length === 0) {\n            this.router.navigate(['/search']);\n            subscriber.next(true);\n            return;\n        }\n        this.tabRoutingService.refreshBookingStatus();\n\n        if (removeService) {\n            this.removeService(serviceId).subscribe(\n                (removed: any) => {\n                    if (removed) {\n                        this.tripPlannerService.removeServiceSearchInfos(serviceId);\n                    }\n                    subscriber.next();\n                },\n                (failure: any) => {\n                    console.error('failure on ctx service update' + failure);\n                    subscriber.error(failure);\n                }\n            );\n        } else {\n            subscriber.next(true);\n        }\n    }\n\n    private checkCartHasService(serviceId: ServiceId) {\n        const data = this.cartService.getCartData();\n        return data.items && data.items.filter((ci: any) => ci.serviceId === serviceId).length > 0;\n    }\n\n    /*\n    removeService: returns true when service is removed, false otherwise (items remains on cart)\n     */\n    private removeService(serviceId: ServiceId): Observable<boolean> {\n        return new Observable((subscriber) => {\n            if (this.checkCartHasService(serviceId)) {\n                // if cart has the service, keep the service\n                return subscriber.next(false);\n            }\n            const services = this.searchDataService.removeService(serviceId);\n            this.cartDataService\n                .updateServiceCtx(this.searchDataService.getCombId(), {\n                    activeServices: services,\n                })\n                .pipe(take(1))\n                .subscribe(\n                    () => {\n                        this.tabRoutingService.removeService(serviceId);\n                        subscriber.next(true);\n                    },\n                    (error: any) => {\n                        subscriber.error(error);\n                    }\n                );\n        });\n    }\n\n    private callRemoveService(\n        serviceId: ServiceId,\n        optionId: string | undefined,\n        resolve: any,\n        reject: any,\n        wasLastToBook: boolean // when true navigate according to result\n    ): void {\n        this.removeCartData(serviceId, optionId, true).subscribe(\n            (isLastService: boolean | void) => {\n                if (wasLastToBook) {\n                    this.moveToBooking()\n                        .afterClosed()\n                        .subscribe((confirm: boolean) => {\n                            if (confirm) {\n                                this.router.navigate(['/checkout']);\n                            }\n                            resolve(true);\n                        });\n                } else {\n                    if (isLastService) {\n                        this.router.navigate(['/search']);\n                    } else {\n                        this.injector.get(UserSearchService).searchCheckDep(serviceId, false, false, false, true);\n                    }\n                }\n                resolve(true);\n            },\n            (err) => {\n                reject(err);\n            }\n        );\n    }\n\n    private getInterpolate(serviceId: ServiceId): object {\n        return {\n            serviceName: this.translateService.instant('SERVICES.' + serviceId).toLowerCase(),\n            tabName: this.getTabName(serviceId),\n        };\n    }\n\n    private moveToBooking(): MatDialogRef<TrazlerConfirmationDialogComponent> {\n        return this.dialogService.openConfirmationDialog({\n            title: this.translateService.instant('POPUPS.FINALIZE_BOOK.TITLE'),\n            content: this.translateService.instant('POPUPS.FINALIZE_BOOK.BODY'),\n            confirmBtnTitle: this.translateService.instant('POPUPS.FINALIZE_BOOK.1_DELETE'),\n            cancelBtnTitle: this.translateService.instant('POPUPS.FINALIZE_BOOK.2_MODIFY'),\n        });\n    }\n\n    private getServiceRemovalDialogObservableRef(\n        serviceId: ServiceId,\n        isLast: { isLast: boolean; isPartial: boolean; wasLastToBook: boolean }\n    ): MatDialogRef<TrazlerConfirmationDialogComponent> {\n        const title = this.translateService.instant('POPUPS.REMOVE_CART_ITEM.TITLE');\n        const confirmBtnTitle = this.translateService.instant('POPUPS.REMOVE_CART_ITEM.DELETE');\n        const cancelBtnTitle = this.translateService.instant('POPUPS.REMOVE_CART_ITEM.CANCEL');\n        let content: string;\n\n        switch (true) {\n            case isLast.isLast:\n                content = this.translateService.instant(\n                    'POPUPS.REMOVE_CART_ITEM.LAST_BODY',\n                    this.getInterpolate(serviceId)\n                );\n                break;\n            case isLast.isPartial:\n                content = this.translateService.instant(\n                    'POPUPS.REMOVE_CART_ITEM.PARTIAL_BODY',\n                    this.getInterpolate(serviceId)\n                );\n                break;\n            default:\n                content = this.translateService.instant('POPUPS.REMOVE_CART_ITEM.BODY', this.getInterpolate(serviceId));\n        }\n\n        return this.dialogService.openConfirmationDialog({\n            content,\n            title,\n            confirmBtnTitle,\n            cancelBtnTitle,\n            icon: { name: 'remove-cart-dialog', iconStyle: { 'width.px': 40, 'height.px': 40 } },\n        });\n    }\n\n    private getTabName(serviceId: ServiceId): string {\n        switch (serviceId) {\n            case ServiceId.FLIGHT:\n                return this.translateService.instant('SEARCH.TAB.FLIGHT_TRAINS');\n            case ServiceId.TRAIN:\n                return this.translateService.instant('SEARCH.TAB.FLIGHT_TRAINS');\n            case ServiceId.ACC:\n                return this.translateService.instant('SERVICES.HOTEL');\n            case ServiceId.TRANSFER:\n                return this.translateService.instant('SEARCH.TAB.TRANSFERS');\n            case ServiceId.CAR_RENTAL:\n                return this.translateService.instant('SEARCH.TAB.CAR_RENTALS');\n            case ServiceId.FLIGHT_TRAIN:\n                return this.translateService.instant('SEARCH.TAB.FLIGHT_TRAINS');\n            default:\n                return '';\n        }\n    }\n\n    private isInCart(cartItems: any, serviceId: ServiceId): boolean {\n        return cartItems.some((cItem: any) => cItem.serviceId === serviceId);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ScrollService } from '@services/modules/core/scroll-service';\nimport { ResolveEnd, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { Trip } from '@core/constants/trip';\nimport { SERVICE_DEFAULT_SORT } from '@core/constants/default-sort';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { SERVICE_ROUTE_MAP } from '../../../../modules/results/service-route.map';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\n\nexport interface IRoutingIds {\n    giataId?: string; //hotel\n    markerKey?: string; //rental\n    hotelName?: string; //hotel\n    journeyType?: Trip | undefined; //transfer\n    state?: any;\n}\n\ntype IRoutingParams = {\n    id?: string;\n    from?: StateFrom;\n    itemIdentifier?: string;\n    newItem?: boolean; // to be removed after the check\n    journeyType?: Trip;\n    sort_by?: string | number;\n    extra?: any;\n    markerKeys?: string;\n    serviceId: ServiceId;\n};\n\ntype ServiceRoutingParams = {\n    inValid?: boolean;\n    name?: string;\n    params?: IRoutingParams;\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CartRoutingService {\n    currentServiceId: BehaviorSubject<ServiceId> = new BehaviorSubject<ServiceId>(ServiceId.INVALID);\n\n    constructor(\n        private scrollService: ScrollService,\n        private router: Router,\n        private cartService: CartService,\n        private searchDataService: SearchDataService\n    ) {\n        this.computeCurrentServiceId(window.location.pathname);\n        this.listenNav();\n    }\n\n    public get getCurStateServiceId(): ServiceId {\n        return this.currentServiceId.getValue();\n    }\n\n    public reload(state: any, serviceId: ServiceId, ids: IRoutingIds | undefined): void {\n        this.router.navigateByUrl('fake', { skipLocationChange: true, state: { isReload: true } }).then(() => {\n            let routerParams = [state.name];\n            if (state.params?.id) {\n                routerParams.push(state.params.id);\n            } else {\n                const urlSuffixes = this.searchDataService.getRoutingParam(serviceId, ids);\n                if (urlSuffixes && urlSuffixes.length) {\n                    routerParams = routerParams.concat(urlSuffixes);\n                }\n            }\n            this.router.navigate(routerParams, {\n                state: state.params,\n            });\n        });\n    }\n\n    public goToState(\n        serviceId: ServiceId,\n        ids: IRoutingIds | undefined,\n        newItem: any,\n        from: any,\n        extraParams?: any\n    ): void {\n        const state = this.getStateAndParams(serviceId, ids, newItem, from);\n\n        if (!state.inValid) {\n            this.scrollService.scrollToTop();\n\n            if (extraParams) {\n                if (!state.params) {\n                    state.params = {\n                        serviceId,\n                    } as IRoutingParams;\n                }\n                state.params.extra = extraParams;\n            } else {\n                if (!state.params) {\n                    state.params = {\n                        serviceId,\n                    } as IRoutingParams;\n                } else {\n                    state.params.serviceId = serviceId;\n                }\n            }\n            const urlSuffixes = this.searchDataService.getRoutingParam(serviceId, ids);\n            if (\n                state.name &&\n                this.isSameState(\n                    state.name +\n                        (state.params?.id ? '/' + state.params.id : urlSuffixes ? '/' + urlSuffixes.join('/') : '')\n                )\n            ) {\n                this.reload(state, serviceId, ids);\n                return;\n            }\n\n            // V2 check later\n            let routerParams = [state.name];\n            if (state.params?.id) {\n                routerParams.push(state.params.id);\n            }\n            if (urlSuffixes) {\n                routerParams = routerParams.concat(urlSuffixes);\n            }\n\n            console.log('navigateto:', routerParams, state.params, !urlSuffixes || !urlSuffixes.length);\n\n            this.router.navigate(routerParams, {\n                state: state.params,\n                skipLocationChange: serviceId !== ServiceId.SUMMARY && (!urlSuffixes || !urlSuffixes.length),\n            });\n            /*.then(() => {\n                this.set(serviceId);\n            })*/\n        }\n    }\n\n    public changeState(serviceId: ServiceId, cartItem: any, newItem: any, from: any, extraParams?: any): void {\n        switch (serviceId) {\n            case ServiceId.ACC_DETAILS:\n                this.goToState(ServiceId.ACC_DETAILS, { giataId: cartItem.giataID }, newItem, from, extraParams);\n                console.log('cartItem in changeState fn', cartItem);\n                break;\n            case ServiceId.CAR_RENTAL:\n                if (cartItem) {\n                    this.goToState(serviceId, { markerKey: cartItem.markerKey }, newItem, from, extraParams);\n                } else {\n                    this.goToState(serviceId, undefined, newItem, from, extraParams);\n                }\n                break;\n            case ServiceId.FLIGHT_TRAIN:\n                if (this.cartService.getCartItemData(ServiceId.TRAIN).found) {\n                    this.goToState(ServiceId.TRAIN, undefined, newItem, from, extraParams);\n                } else {\n                    this.goToState(ServiceId.FLIGHT, undefined, newItem, from, extraParams);\n                }\n                break;\n            case ServiceId.TRANSFER:\n                if (cartItem) {\n                    this.goToState(serviceId, { journeyType: cartItem.journeyType }, newItem, from, extraParams);\n                } else {\n                    this.goToState(serviceId, undefined, newItem, from, extraParams);\n                }\n                break;\n            default:\n                this.goToState(serviceId, undefined, newItem, from, extraParams);\n        }\n    }\n\n    public moveToSummary(): Promise<boolean> {\n        const routerPromise = this.router.navigate(['results-summary']);\n        routerPromise.then(() => this.set(ServiceId.SUMMARY));\n        return routerPromise;\n    }\n\n    public isTransportState(): boolean {\n        return this.router.url.indexOf('/travel') === 0;\n    }\n\n    private computeCurrentServiceId(pathanme: string) {\n        console.log('path name is:', pathanme);\n        for (const key in SERVICE_ROUTE_MAP) {\n            if (\n                SERVICE_ROUTE_MAP[+key as ServiceId] &&\n                pathanme.includes(SERVICE_ROUTE_MAP[+key as ServiceId] as string)\n            ) {\n                this.set(+key as ServiceId);\n                break;\n            }\n        }\n    }\n\n    private set(serviceId: ServiceId): void {\n        console.log('set cur service id to:', serviceId);\n        this.currentServiceId.next(serviceId);\n    }\n\n    private isSameState(uri: string): boolean {\n        return this.router.url === '/' + encodeURI(uri);\n    }\n\n    private getStateAndParams(\n        serviceId: ServiceId,\n        ids: IRoutingIds | undefined,\n        newItem: any,\n        from: any\n    ): ServiceRoutingParams {\n        const params: IRoutingParams = {\n            sort_by: SERVICE_DEFAULT_SORT[serviceId],\n            from,\n            newItem,\n            serviceId,\n        };\n\n        switch (serviceId) {\n            case ServiceId.ACC:\n                return {\n                    name: 'hotels',\n                    params,\n                };\n            case ServiceId.ACC_DETAILS:\n                let giataId = '';\n                if (ids?.giataId) {\n                    giataId = ids.giataId;\n                }\n                return {\n                    name: 'hotel',\n                    params: {\n                        id: giataId,\n                        from,\n                        newItem,\n                        serviceId: ServiceId.ACC,\n                    },\n                };\n            case ServiceId.FLIGHT_TRAIN:\n                if (this.cartService.getCartInfo(ServiceId.TRAIN).inCart) {\n                    return { name: 'travel/trains', params };\n                } else {\n                    return { name: 'travel/flights', params };\n                }\n            case ServiceId.FLIGHT:\n                return {\n                    name: 'travel/flights',\n                    params,\n                };\n            case ServiceId.TRAIN:\n                return {\n                    name: 'travel/trains',\n                    params,\n                };\n            case ServiceId.CAR_RENTAL:\n                if (ids && ids.markerKey) {\n                    params.markerKeys = ids.markerKey;\n                }\n\n                return {\n                    name: 'car-rentals',\n                    params,\n                };\n            case ServiceId.TRANSFER:\n                return {\n                    name: 'transfers',\n                    params: {\n                        journeyType: ids && ids.journeyType ? ids.journeyType : undefined,\n                        from,\n                        newItem,\n                        sort_by: SERVICE_DEFAULT_SORT[serviceId],\n                        serviceId,\n                    },\n                };\n            case ServiceId.SUMMARY:\n                // Activate Summary tab if there is any data in cart\n                return {\n                    name: 'results-summary',\n                    params: {\n                        from,\n                        newItem,\n                        serviceId,\n                    },\n                };\n        }\n        return {\n            inValid: true,\n        };\n    }\n\n    private listenNav(): void {\n        console.log('starting listen nav');\n        this.router.events.forEach((event) => {\n            if (event instanceof ResolveEnd) {\n                console.log('nav end received', event, this.router.url);\n                this.computeCurrentServiceId(event.url);\n                //this.computeCurrentServiceId(this.router.url);\n                /*const state = this.router.getCurrentNavigation();\n                if (state && state.extras && state.extras.state) {\n                    if (state.extras.state['serviceId'] !== undefined) {\n                        const serviceId = state.extras.state['serviceId'];\n                        if (serviceId !== ServiceId.INVALID) {\n                            this.set(serviceId);\n                        } else {\n                            console.error('invalid service');\n                        }\n                    } else if (!state.extras.state['isReload']) {\n                        console.error('invalid state');\n                    }\n                } else {\n                    console.error('invalid state');\n                }*/\n            }\n        });\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { ScrollService } from '@services/modules/core/scroll-service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { CartStatus } from '@core/constants/cart-status';\nimport { SearchHelpers } from '@services/searchEngine/services/search-helpers';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subscriber, throwError } from 'rxjs';\nimport { CartDataService } from '@services/modules/cart/dataservices/cart.data.service';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { DialogService } from '@services/dialog.service';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { CombinationId, DataId } from '@schemas/modules/core/base-types';\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { CurrencyService } from '@services/services/currency-service';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { StorageKeys } from '@schemas/modules/core/storage-keys';\nimport { CartTransfers } from '@schemas/modules/cart/cart-transfers';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CartService extends ApiAccessService implements CanActivate {\n    private cartData: any = {};\n    private readonly defaultSelected: {\n        [key in ServiceId]?: any;\n    } = {};\n\n    private initDone = new Promise(() => {});\n\n    private cartRepriced = new Promise<void>((resolve, reject) => {\n        resolve();\n    });\n    private emptyCart: any = {\n        items: [],\n        itemPrice: {},\n    };\n\n    constructor(\n        private trazlerAPI: ApiAccessService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private scrollService: ScrollService,\n        private cartDataService: CartDataService,\n        private currencyService: CurrencyService,\n        private router: Router,\n        injector: Injector,\n        http: HttpClient\n    ) {\n        super(injector, http);\n        this.init();\n    }\n\n    public get InitDone(): Promise<unknown> {\n        return this.initDone;\n    }\n\n    public static getRecommendedCartInfo(combId: string): any | null {\n        const info = StorageManagerUtil.get(StorageKeys.RECOMMENDED);\n        if (info) {\n            if (info.combId === combId) {\n                return info.recommended;\n            }\n        }\n        return null;\n    }\n\n    private static setRecommended(combId: CombinationId, recommended: boolean): void {\n        if (recommended) {\n            const data = {\n                combId,\n                recommended,\n            };\n            StorageManagerUtil.set(StorageKeys.RECOMMENDED, data);\n        }\n    }\n\n    public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\n        console.log('can activate called');\n        if (this.noVirtual()) {\n            return true;\n        }\n        console.error('forbidden to access summary in this state');\n        return this.router.parseUrl('/search');\n    }\n\n    // silentMode == true => no loader displayed\n    public reInit(silentMode?: boolean): Promise<any> {\n        console.log('reinit cart called');\n        return this.init(silentMode);\n    }\n\n    public reprice(combId: CombinationId, updateLang = false): Promise<any> {\n        this.cartRepriced = new Promise<any>((resolve, reject): any => {\n            if (this.cartData.cartCurrency && this.cartData.cartCurrency !== '' && !updateLang) {\n                resolve(this.cartData);\n                return this.cartRepriced;\n            }\n\n            this.trazlerAPI.repriceCart(combId).then(\n                (success: any) => {\n                    this.setCart(success);\n                    resolve(success);\n                    //this.listenersService.NotifyListeners(ListenerId.LISTEN_CART_CHANGED);\n                },\n                () => {\n                    this.setCart(ToolsService.deepCopy(this.emptyCart));\n                    reject();\n                }\n            );\n        });\n\n        return this.cartRepriced;\n    }\n\n    public getCartData(serviceId = -1, cartData?: any): any {\n        if (!cartData) {\n            cartData = ToolsService.deepCopy(this.cartData);\n        }\n\n        if (!cartData || !cartData.items) {\n            return;\n        }\n\n        if (serviceId < 0) {\n            return CartUtils.formServiceTitle(cartData, this.translateService);\n        }\n\n        let tmp = ToolsService.deepCopy(cartData);\n        tmp.items = [];\n        tmp.itemPrice = {\n            additionalCharge: 0,\n            additionalChargeNow: 0,\n            dueOnArrival: 0,\n            listPrice: 0,\n            listPriceCur: 'EUR',\n            payLaterAmt: 0,\n            payableAmt: 0,\n        };\n\n        for (let i = 0; i < cartData.items.length; i++) {\n            if (cartData.items[i].serviceId === serviceId && !cartData.items[i].isVirtual) {\n                tmp.items.push(cartData.items[i]);\n                if (i === 0) {\n                    tmp.itemPrice.listPriceCur = cartData.items[i].itemPrice.listPriceCur;\n                }\n                tmp.itemPrice.payableAmt += cartData.items[i].itemPrice.payableAmt;\n                tmp.itemPrice.payLaterAmt += cartData.items[i].itemPrice.payLaterAmt;\n                tmp.itemPrice.listPrice += cartData.items[i].itemPrice.listPrice;\n                tmp.itemPrice.dueOnArrival += cartData.items[i].itemPrice.dueOnArrival;\n                tmp.itemPrice.additionalChargeNow += cartData.items[i].itemPrice.additionalChargeNow;\n                tmp.itemPrice.additionalCharge += cartData.items[i].itemPrice.additionalCharge;\n            }\n        }\n\n        tmp = CartUtils.formServiceTitle(tmp, this.translateService);\n        tmp.itemsOrder = CartUtils.formItemOrder(serviceId, tmp.items, this.translateService);\n        tmp.validated = tmp.items.length > 0;\n\n        return tmp;\n    }\n\n    public isAllServiceOptionBooked(servicesId: ServiceId): boolean {\n        return this.isServiceBooked(servicesId, true);\n    }\n\n    public isServicesBooked(servicesId: ServiceId): boolean {\n        return this.isServiceBooked(servicesId, false);\n    }\n\n    public isEmpty(): boolean {\n        return !(this.cartData && this.cartData.items && this.cartData.items.length);\n    }\n\n    public isSomeServiceBooked(): boolean {\n        return CartUtils.hasStillBookedItem(this.cartData);\n    }\n\n    public getUserValidatedServices(): any {\n        const bookedServices: {\n            [key in ServiceId]?: true;\n        } = {};\n        if (this.cartData.items) {\n            for (const cartItem of this.cartData.items) {\n                if (!cartItem.isVirtual) {\n                    bookedServices[cartItem.serviceId as ServiceId] = true;\n                }\n            }\n        }\n        return bookedServices;\n    }\n\n    public getTransfers(cartDataTest: ICart): CartTransfers[] {\n        const hasMultipleServices = cartDataTest.items.some((item) => item.serviceId !== ServiceId.TRANSFER);\n        if (hasMultipleServices) {\n            return [];\n        }\n\n        const transfers: CartTransfers[] = [];\n        const cartData = this.getCartData(ServiceId.TRANSFER);\n        cartData.items.forEach((item: ICartItem) => {\n            const info = {\n                date: new Date(item.selectedItem.data.onwardDetails.pickupTzDate),\n                title: item.summaryHeaderInfo,\n            };\n\n            transfers.push(info);\n        });\n\n        return transfers;\n    }\n\n    public getCartPersonsStr(cartData: ICart): string {\n        let personsStr = '';\n        const travellersData = CartUtils.getTravellersData(cartData.items);\n        if (travellersData) {\n            personsStr =\n                travellersData.txt +\n                ' ' +\n                this.translateService\n                    .instant('TRAVELLER.' + (travellersData.total > 1 ? 'PEOPLE' : 'PERSON'))\n                    .toLowerCase();\n        }\n\n        return personsStr;\n    }\n\n    //  cartReq is a Array of selected items, (use to add onward&return of same service)\n    public setCartData(combId: CombinationId, serviceId: ServiceId, dataId: DataId, cartReq: any): Observable<any> {\n        return new Observable((subscriber) => {\n            const selected = this.getSelected(serviceId, {\n                journeyType: 'all',\n                id: undefined,\n            });\n            this.scrollService.scrollToTop();\n            if (!this.sameItem(selected, serviceId, cartReq) && !CartUtils.isInvalidItem(selected)) {\n                const confirmationDialogOptions = CartUtils.getSameItemConfirmationDialogData(\n                    serviceId,\n                    selected,\n                    cartReq,\n                    this.translateService\n                );\n                this.scrollService.disableScroll();\n                setTimeout(() => {\n                    this.dialogService\n                        .openConfirmationDialog(confirmationDialogOptions)\n                        .afterClosed()\n                        .subscribe((dialogReturn: TzDialogReturn) => {\n                            this.scrollService.enableScroll();\n                            if (dialogReturn === CONFIRM) {\n                                return this.setCartDataInternal(combId, serviceId, dataId, cartReq, subscriber);\n                            } else {\n                                subscriber.error({\n                                    status: 304,\n                                });\n                            }\n                        });\n                }, 0);\n            } else {\n                this.setCartDataInternal(combId, serviceId, dataId, cartReq, subscriber);\n            }\n        });\n    }\n\n    public isVirtual(serviceId: ServiceId): boolean {\n        if (this.cartData.items) {\n            for (const cartItem of this.cartData.items) {\n                if (\n                    cartItem.serviceId === serviceId ||\n                    (serviceId === ServiceId.FLIGHT_TRAIN &&\n                        (cartItem.serviceId === ServiceId.FLIGHT || cartItem.serviceId === ServiceId.TRAIN))\n                ) {\n                    return cartItem.isVirtual;\n                }\n            }\n        }\n        return true;\n    }\n\n    public getCartItemData(serviceId: ServiceId, legInfo?: any): any {\n        const result: any = {\n            found: false,\n            carts: [],\n        };\n\n        if (!this.cartData || !Array.isArray(this.cartData.items) || this.cartData.items.length === 0) {\n            return result;\n        }\n\n        this.cartData.items.some((cartItem: any): any => {\n            if (legInfo && legInfo.journeyType) {\n                switch (serviceId) {\n                    case ServiceId.FLIGHT_TRAIN:\n                        if (cartItem.serviceId === ServiceId.FLIGHT) {\n                            break;\n                        }\n                    /* falls through */\n                    case ServiceId.TRAIN:\n                        if (cartItem.serviceId === ServiceId.TRAIN) {\n                            if (legInfo.journeyType === 'all') {\n                                result.found = true;\n                                result.carts.push(cartItem);\n                                return false;\n                            } else if (cartItem.selectedItem.type === legInfo.journeyType) {\n                                result.found = true;\n                                result.carts.push(cartItem);\n                                return true;\n                            }\n                        } else {\n                            return false;\n                        }\n                        break;\n                    case ServiceId.TRANSFER:\n                        if (cartItem.serviceId === ServiceId.TRANSFER) {\n                            if (legInfo.journeyType === 'all') {\n                                result.found = true;\n                                result.carts.push(cartItem);\n                            } else if (\n                                (!legInfo.id || cartItem.selectedItem.activeTransfer === legInfo.id) &&\n                                cartItem.selectedItem.data.journeyType === legInfo.journeyType\n                            ) {\n                                result.found = true;\n                                result.carts.push(cartItem);\n                                return true;\n                            }\n                            return false;\n                        }\n                }\n            }\n            if (cartItem.serviceId === serviceId) {\n                result.found = true;\n                result.carts.push(cartItem);\n                return true;\n            }\n\n            if (\n                serviceId === ServiceId.FLIGHT_TRAIN &&\n                (cartItem.serviceId === ServiceId.FLIGHT ||\n                    (cartItem.serviceId === ServiceId.TRAIN &&\n                        (!legInfo || !legInfo.journeyType || legInfo.journeyType !== 'all')))\n            ) {\n                result.found = true;\n                result.carts.push(cartItem);\n                return true;\n            }\n        });\n\n        return result;\n    }\n\n    public getSelected(serviceId: ServiceId, legInfo?: any): any {\n        if (!legInfo) {\n            legInfo = {\n                journeyType: 'all',\n                id: undefined,\n            };\n        }\n        const cartData = this.getCartItemData(serviceId, legInfo);\n\n        if (!cartData.found) {\n            return this.getEmptySelected(serviceId);\n        }\n        const item = cartData.carts[0].selectedItem.data;\n\n        const cartLight = {\n            inCart: true,\n            isVirtual: cartData.carts[0].isVirtual,\n            bookingOptions: ToolsService.deepCopy(cartData.carts[0].selectedItem.bookingOptions),\n        };\n        let res: any;\n        switch (serviceId) {\n            case ServiceId.FLIGHT:\n                return {\n                    ...cartLight,\n                    onwardTripId: item.departureSummary.tripID,\n                    returnTripId: item.returnSummary.tripID,\n                    id: item.id,\n                    item,\n                    dataId: cartData.carts[0].dataId,\n                    hasUpgrades: ToolsService.deepCopy(cartData.carts[0].selectedItem.hasUpgrades),\n                };\n\n            case ServiceId.TRAIN:\n                res = {\n                    ...cartLight,\n                    selectedTrainOnwardId: cartData.carts[0].selectedItem.id,\n                    selectedTrainReturnId: '',\n                    selectedOnwardClassId: item.onward.id,\n                    selectedReturnClassId: '',\n                    journey_id: item.onward.groupId,\n                    tripId: item.onward.tripID,\n                    dataId: cartData.carts[0].dataId,\n                    items: cartData.carts,\n                };\n                if (cartData.carts.length > 1) {\n                    res.selectedTrainReturnId = cartData.carts[1].selectedItem.id;\n                    res.selectedReturnClassId = cartData.carts[1].selectedItem.data.onward.id;\n                    res.retTripId = cartData.carts[1].selectedItem.data.onward.tripID;\n                }\n                return res;\n\n            case ServiceId.ACC:\n                return {\n                    ...cartLight,\n                    selectedHotel: item,\n                    cartPrice: cartData.carts[0].itemPrice,\n                    adults: cartData.carts[0].searchReq.passengers.adults,\n                };\n\n            case ServiceId.CAR_RENTAL:\n                return {\n                    ...cartLight,\n                    id: item.id,\n                    rentalData: item,\n                    // packageInfo: cartData.cart.selectedItem.rentalPackageInfo,\n                };\n\n            case ServiceId.TRANSFER:\n                res = {\n                    ...cartLight,\n                    transferData: cartData,\n                };\n                return res;\n        }\n    }\n\n    public getEmptySelected(serviceId: ServiceId): any {\n        return ToolsService.deepCopy(this.defaultSelected[serviceId]);\n    }\n\n    /*\nfrom should be set to one of the value of StateFrom constants\n*/\n\n    public getCartInfo(serviceId: ServiceId): any {\n        let info: any = {\n            inCart: false,\n            price: 0,\n            name: '',\n            currency: {},\n        };\n\n        if (!this.cartData || !Array.isArray(this.cartData.items) || this.cartData.items.length === 0) {\n            return info;\n        }\n\n        if (serviceId === ServiceId.SUMMARY) {\n            info.inCart = true;\n            info.price = this.cartData.itemPrice.listPrice;\n            info.currency = this.cartData.itemPrice.listPriceCur;\n            info.additionalCharge = this.cartData.itemPrice.additionalCharge;\n            return info;\n        }\n\n        const { found, carts } = this.getCartItemData(serviceId, {\n            journeyType: 'all',\n            id: undefined,\n        });\n        if (found) {\n            carts.forEach((cart: any) => {\n                info = CartUtils.formTabInfo(info, cart);\n            });\n        }\n        return info;\n    }\n\n    public resetSelected(serviceId: ServiceId): any {\n        return this.getSelected(serviceId);\n    }\n\n    public removeCartData(serviceId: ServiceId, optionId: any): Observable<boolean | void> {\n        // dataType, result, idx, transferJourneyType, tripType\n        return this.cartDataService.removeCartSummary(serviceId, optionId).pipe(\n            map((response: ICart) => {\n                console.log('CART REMOVED SUCCESS', response);\n                this.setCart(response);\n                this.resetSelected(serviceId);\n                return true;\n            }),\n            catchError((err) => {\n                console.log('CART RESULT FAIL', err);\n                this.resetSelected(serviceId);\n                return throwError(err);\n            })\n        );\n    }\n\n    public clearCart(): Observable<{ message: string }> {\n        return this.cartDataService.clearCart().pipe(\n            tap((response: { message: string }) => {\n                this.resetAllSelected();\n                this.setCart(ToolsService.deepCopy(this.emptyCart));\n                StorageManagerUtil.remove('checkoutFormData');\n                StorageManagerUtil.remove('skipSignIn');\n                StorageManagerUtil.remove('cartCurrency');\n            })\n        );\n    }\n\n    public recheckCartItem(combId: CombinationId, deviceId: string, hideLoader: boolean): Promise<any> {\n        return this.cartDataService.recheckCartItem(combId, deviceId, hideLoader);\n    }\n\n    public applyPriceChange(optionId: string): Observable<ICart> {\n        return new Observable<ICart>((subscriber: Subscriber<ICart>) => {\n            const serviceId = this.getInvalidItemServiceId(optionId);\n            if (serviceId === undefined || serviceId === ServiceId.INVALID) {\n                subscriber.next();\n                return;\n            }\n\n            this.cartDataService.acceptPriceChange(serviceId, optionId).subscribe(\n                (response) => {\n                    this.setCart(response);\n                    this.resetSelected(serviceId);\n                    this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, true);\n                    subscriber.next(response);\n                },\n                (failure: any) => {\n                    this.resetSelected(serviceId);\n                    console.log('CART RESULT FAIL', failure);\n                    subscriber.next(failure);\n                }\n            );\n        });\n    }\n\n    public setCart(c: any): void {\n        if (c) {\n            CartService.setRecommended(c.combId, c.recommended);\n            this.cartData = c;\n        }\n        //this.listenersService.NotifyListeners(ListenerId.LISTEN_CART_CHANGED);\n    }\n\n    public noVirtual(): any {\n        if (this.cartData.items) {\n            for (const cartItem of this.cartData.items) {\n                if (cartItem.isVirtual) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private isServiceBooked(servicesId: ServiceId, checkAllOptions: boolean): boolean {\n        const valid = Array.isArray(this.cartData.items) && this.cartData.items.length > 0;\n        if (!valid) {\n            return valid;\n        }\n        const checkFunc = (ci: any) => {\n            if (\n                ci.serviceId === servicesId ||\n                (SearchHelpers.isTransport(servicesId) && SearchHelpers.isTransport(ci.serviceId))\n            ) {\n                if (checkAllOptions) {\n                    return ci.selectedItem.bookingOptions.every(\n                        (option: any) =>\n                            option.status === CartStatus.STATUS_PROGRESS ||\n                            option.status === CartStatus.STATUS_CONFIRMED\n                    );\n                }\n                return ci.selectedItem.bookingOptions.some(\n                    (option: any) =>\n                        option.status === CartStatus.STATUS_PROGRESS || option.status === CartStatus.STATUS_CONFIRMED\n                );\n            }\n        };\n\n        if (checkAllOptions) {\n            return this.cartData.items.every(checkFunc);\n        }\n        return this.cartData.items.some(checkFunc);\n    }\n\n    private getInvalidItemServiceId(optionId: string): ServiceId | undefined {\n        const cartItems = this.cartData.items as ICartItem[];\n        for (const item of cartItems) {\n            for (const option of item.selectedItem.bookingOptions) {\n                if (option.optionId === optionId) {\n                    return item.serviceId;\n                }\n            }\n        }\n\n        return;\n    }\n\n    private resetAllSelected(): void {\n        this.defaultSelected[ServiceId.FLIGHT] = {\n            onwardTripId: '',\n            returnTripId: '',\n            id: '',\n            inCart: false,\n        };\n        this.defaultSelected[ServiceId.TRAIN] = {\n            selectedTrainOnwardId: '',\n            selectedTrainReturnId: '',\n            selectedOnwardClassId: '',\n            selectedReturnClassId: '',\n            inCart: false,\n            journey_id: '',\n            tripId: '',\n            retTripId: '',\n        };\n        this.defaultSelected[ServiceId.ACC] = {\n            selectedHotel: {\n                id: '',\n                rooms: [],\n            },\n            inCart: false,\n        };\n        this.defaultSelected[ServiceId.TRANSFER] = {\n            selectedTransfers: [],\n            inCart: false,\n        };\n        this.defaultSelected[ServiceId.CAR_RENTAL] = {\n            id: '',\n            inCart: false,\n            rentalData: undefined,\n            packageInfo: {\n                extrasText: '',\n            },\n        };\n    }\n\n    private setAllSelected(): void {\n        this.getSelected(ServiceId.FLIGHT);\n        this.getSelected(ServiceId.TRANSFER);\n        this.getSelected(ServiceId.TRAIN);\n        this.getSelected(ServiceId.ACC);\n        this.getSelected(ServiceId.CAR_RENTAL);\n    }\n\n    //silentMode == true => no loader displayed\n    private init(silentMode?: boolean): Promise<any> {\n        // init default selected\n        this.resetAllSelected();\n        this.initDone = new Promise<unknown>((resolve, reject) => {\n            // get cart list from server\n            this.trazlerAPI.getCartList(silentMode).then(\n                (success: any) => {\n                    console.log('new cart data content received');\n\n                    this.setCart(success);\n                    if (this.cartData.cartCurrency && this.cartData.cartCurrency !== '') {\n                        this.currencyService.setCartCurrency(this.cartData.cartCurrency);\n                    }\n                    // v2 check later\n                    //this.settingsService\n                    this.setAllSelected();\n                    resolve(success);\n                    this.listenersService.NotifyListeners(ListenerId.LISTEN_CAL_REFRESH);\n                },\n                () => {\n                    this.setCart(ToolsService.deepCopy(this.emptyCart));\n                    resolve(this.cartData);\n                }\n            );\n        });\n        return this.initDone;\n    }\n\n    private setCartDataInternal(\n        combId: CombinationId,\n        serviceId: ServiceId,\n        dataId: DataId,\n        cartReq: any,\n        observable: Subscriber<any>\n    ): any {\n        return this.cartDataService.addCartSummary(combId, serviceId, dataId, cartReq).subscribe(\n            (success: any) => {\n                this.setCart(success);\n                observable.next(success);\n            },\n            (failure: any) => {\n                observable.error(failure);\n            }\n        );\n    }\n\n    private sameItem(selected: any, serviceId: ServiceId, cartReq: any): any {\n        // V2 check later\n        if (serviceId === ServiceId.FLIGHT) {\n            const selectedService = this.getSelected(ServiceId.TRAIN, {\n                journeyType: 'all',\n                id: undefined,\n            });\n            if (!selectedService.isVirtual && selectedService.inCart) {\n                return false;\n            }\n        } else if (serviceId === ServiceId.TRAIN) {\n            const selectedService = this.getSelected(ServiceId.FLIGHT, {\n                journeyType: 'all',\n                id: undefined,\n            });\n            if (!selectedService.isVirtual && selectedService.inCart) {\n                return false;\n            }\n        }\n        if (\n            !selected.inCart ||\n            selected.isVirtual\n            // @todo check whether status check is needed\n            // || selected.cartItemStatus > CartStatus.StatusCreated\n        ) {\n            return true;\n        }\n\n        switch (serviceId) {\n            case ServiceId.ACC:\n                return CartUtils.verifySelectedAcc(selected, cartReq[0]);\n            case ServiceId.TRANSFER:\n                return CartUtils.verifySelectedTransfers(selected.transferData.carts, cartReq);\n            case ServiceId.CAR_RENTAL:\n                return (\n                    cartReq[0].id === selected.id &&\n                    cartReq[0].bookingOptions[0].rentalPackageInfo.name ===\n                        selected.bookingOptions[0].rentalPackageInfo.name &&\n                    CartUtils.sameExtras(\n                        cartReq[0].bookingOptions[0].rentalPackageInfo.extrasSelected,\n                        selected.bookingOptions[0].rentalPackageInfo.extrasSelected\n                    )\n                );\n            case ServiceId.FLIGHT:\n                return cartReq[0].id === selected.id;\n            case ServiceId.TRAIN:\n                return (\n                    cartReq[0].bookingOptions[0].tripId === selected.tripId &&\n                    cartReq[0].bookingOptions[0].classId === selected.selectedOnwardClassId &&\n                    (cartReq.length <= 1 ||\n                        (cartReq[1].bookingOptions[0].tripId === selected.retTripId &&\n                            cartReq[1].bookingOptions[0].classId === selected.selectedReturnClassId))\n                );\n            default:\n                console.error('unknown service id:' + serviceId);\n        }\n    }\n}\n","import { DatesUtils } from '@core/utils/dates-utils';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CartStatus } from '@core/constants/cart-status';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmationDialogOptions } from '@shared/schemas/confirmation-dialog-options.model';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { ToolsService } from '@core/utils/tools-service';\n\nexport class CartUtils {\n    private static readonly TRANSPORT = 0;\n    private static readonly HOTEL = 2;\n    private static readonly TRANSFERS = 3;\n    private static readonly RENTAL = 5;\n\n    private static mapper: any = {\n        hotel: (item: any) => ({\n            startDate: item.data.checkIn,\n            endDate: item.data.checkOut,\n        }),\n        train: (item: any) => ({\n            startDate: item.data.onward.departure.dateTzFormat,\n            endDate: item.data.onward.arrival.dateTzFormat,\n        }),\n        transfer: (item: any) => {\n            const { onwardDetails } = item.data;\n\n            return {\n                startDate: onwardDetails.pickupTzDate,\n                endDate: onwardDetails.dropTzDate,\n            };\n        },\n        flight: ({ data }: any, key: any) => ({\n            startDate: data[key].departureTzFormat,\n            endDate: data[key].arrivalTzFormat,\n        }),\n        rentCar: ({ data }: any) => ({\n            startDate: data.pickupTzDate,\n            endDate: data.dropOffTzDate,\n        }),\n        activity: () => ({\n            startDate: '',\n            endDate: '',\n        }),\n    };\n\n    public static isFailed = (status: number) => status >= CartStatus.STATUS_REJECTED;\n    public static isBookingStarted = (status: number) => status > CartStatus.STATUS_CREATED;\n    public static isPriceChange = (status: number) => status >= CartStatus.STATUS_PRICE_CHANGED;\n    public static isBooked = (status: number) =>\n        status >= CartStatus.STATUS_PROGRESS && status <= CartStatus.STATUS_CANCELLED;\n    public static isStillBooked = (status: number) =>\n        status >= CartStatus.STATUS_PROGRESS && status < CartStatus.STATUS_CPROGRESS;\n\n    public static getDatesData(item: any, type: any, key?: any): any {\n        return this.mapper[type](item, key);\n    }\n\n    public static isCancellableOption(bookingOptions: ICartSelectedItemBookingOption[]): boolean {\n        return !bookingOptions.some(\n            (option) => option.status !== CartStatus.STATUS_CONFIRMED || option.cancelMode === 'not-allowed'\n        );\n    }\n\n    public static hasUnavailable(bookingOptions: ICartSelectedItemBookingOption[]): boolean {\n        return bookingOptions.some((option) => this.isFailed(option.status));\n    }\n\n    public static hasPriceChange(bookingOptions: ICartSelectedItemBookingOption[]): boolean {\n        return bookingOptions.some((option) => this.isPriceChange(option.status));\n    }\n\n    public static hasBookingStarted(bookingOptions: ICartSelectedItemBookingOption[]): boolean {\n        return bookingOptions.some((option) => this.isBookingStarted(option.status));\n    }\n    public static hasNoBookingStarted(bookingOptions: ICartSelectedItemBookingOption[]): boolean {\n        return bookingOptions.some((option) => !this.isBookingStarted(option.status));\n    }\n    public static hasBooked(bookingOptions: ICartSelectedItemBookingOption[]): boolean {\n        return bookingOptions.some((option) => this.isBooked(option.status));\n    }\n    public static hasStillBooked(bookingOptions: ICartSelectedItemBookingOption[]): boolean {\n        return bookingOptions.some((option) => this.isStillBooked(option.status));\n    }\n    public static hasStillBookedItem(cartData: ICart): boolean {\n        for (const items of cartData.items) {\n            if (CartUtils.hasStillBooked(items.selectedItem.bookingOptions)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static areAllInError(cartData: ICart): boolean {\n        return !CartUtils.hasNotFailed(cartData);\n    }\n    public static generateTimelineData(items: any, splitTransfers: any, translateService: TranslateService) {\n        const data: any = [];\n        if (!items) {\n            return data;\n        }\n\n        items.map((timeline: any, idx: any) => {\n            const { dataType, dataId, serviceId, summaryTitle, ordinal, tzOrderNumber, selectedItem } = timeline;\n            let refId = timeline.selectedItem.id; // unique data identifier\n\n            switch (dataType) {\n                case 'flight':\n                    const departureData = CartUtils.getDatesData(timeline.selectedItem, 'flight', 'departureSummary');\n                    const returnDates = CartUtils.getDatesData(timeline.selectedItem, 'flight', 'returnSummary');\n                    //timeline.orderDate = new Date(departureData.startDate);\n\n                    const departureTitle = translateService.instant('FLIGHT_TRAIN.PLACE_TO_PLACE', {\n                        placeFrom: timeline.selectedItem.data.departureSummary.originCity,\n                        placeTo: timeline.selectedItem.data.departureSummary.destinationCity,\n                    });\n                    const returnTitle = translateService.instant('FLIGHT_TRAIN.PLACE_TO_PLACE', {\n                        placeFrom: timeline.selectedItem.data.returnSummary.originCity,\n                        placeTo: timeline.selectedItem.data.returnSummary.destinationCity,\n                    });\n                    const flightCommonData = {\n                        idx,\n                        dataId,\n                        serviceId,\n                        summaryTitle,\n                        ordinal,\n                        tzOrderNumber,\n                        hash: timeline.selectedItem.id,\n                        bookingOptions: selectedItem.bookingOptions,\n                        refId,\n                    };\n\n                    data.push({\n                        ...flightCommonData,\n                        type: 'flight',\n                        startDate: DatesUtils.getDateFromTzDate(departureData.startDate),\n                        endDate: DatesUtils.getDateFromTzDate(departureData.endDate),\n                        direction: 'departure',\n                        routes: timeline.selectedItem.data.departureSummary.airportStopRoutes,\n                        title: departureTitle,\n                    });\n                    if (returnDates.startDate && returnDates.endDate) {\n                        data.push({\n                            ...flightCommonData,\n                            type: 'flight',\n                            startDate: DatesUtils.getDateFromTzDate(returnDates.startDate),\n                            endDate: DatesUtils.getDateFromTzDate(returnDates.endDate),\n                            direction: 'return',\n                            routes: timeline.selectedItem.data.returnSummary.airportStopRoutes,\n                            title: returnTitle,\n                        });\n                    }\n\n                    break;\n\n                default:\n                    let title;\n\n                    const datesInfo = CartUtils.getDatesData(timeline.selectedItem, dataType);\n                    switch (dataType) {\n                        case 'train':\n                            title = translateService.instant('FLIGHT_TRAIN.PLACE_TO_PLACE', {\n                                placeFrom: timeline.selectedItem.data.onward.departure.location.city,\n                                placeTo: timeline.selectedItem.data.onward.arrival.location.city,\n                            });\n\n                            // for train combined the onward and return by identifying same bookingID;\n                            // @todo: for train data need to be combined at server while selecting trains\n                            refId = selectedItem.bookingOptions[0].groupingId;\n\n                            break;\n                        case 'hotel':\n                            datesInfo.startDate = timeline.startDate;\n                            datesInfo.endDate = timeline.endDate;\n                            break;\n                        case 'rentCar':\n                            title = translateService.instant('SERVICES.CAR RENTAL');\n                            break;\n                    }\n                    const info: any = {\n                        idx,\n                        dataId,\n                        serviceId,\n                        summaryTitle,\n                        ordinal,\n                        tzOrderNumber,\n                        hash: timeline.selectedItem.id,\n                        title,\n                        type: dataType.toLowerCase(),\n                        startDate: DatesUtils.getDateFromTzDate(datesInfo.startDate),\n                        endDate: DatesUtils.getDateFromTzDate(datesInfo.endDate),\n                        activeTransfer: selectedItem.activeTransfer,\n                        bookingOptions: selectedItem.bookingOptions,\n                        refId,\n                    };\n\n                    if (Array.isArray(selectedItem.bookingOptions) && selectedItem.bookingOptions.length) {\n                        const bookingOption = selectedItem.bookingOptions[0];\n                        info.journeyType = bookingOption.journeyType;\n                        info.activeTransfer = bookingOption.activeTransfer;\n\n                        if (dataType === 'transfer' && splitTransfers) {\n                            // key created to separate transfers selected in the summary page\n                            // info.activeTransfer = selectedItem.activeTransfer;\n                            info.journeyType = bookingOption.journeyType;\n                            info.dataId = dataId + '-' + bookingOption.journeyType;\n                        }\n                    }\n                    data.push(info);\n            }\n        });\n        console.log({ data });\n        data.sort((a: any, b: any) => a.startDate - b.startDate);\n        return data;\n    }\n\n    public static formTabInfo(info: any, cart: any) {\n        if (!info) {\n            info = {\n                inCart: false,\n                price: 0,\n                currency: {},\n            };\n        }\n        info.inCart = true;\n        info.price += cart.itemPrice.listPrice;\n        info.additionalCharge += cart.itemPrice.additionalCharge;\n        info.currency = cart.itemPrice.listPriceCur;\n        info.isVirtual = cart.isVirtual;\n        if (cart.inError && info.inError) {\n            info.inError.cheapestListPrice += cart.inError.cheapestListPrice;\n        } else {\n            info.inError = ToolsService.deepCopy(cart.inError);\n        }\n        return info;\n    }\n\n    public static buildFlightTitleSummary(\n        flight: Flight,\n        translateService: TranslateService,\n        isMyTrip?: boolean\n    ): string {\n        let flightRoute = flight.departureSummary.originCity + ' – ' + flight.departureSummary.destinationCity;\n\n        let service: string;\n        if (flight.isRoundTrip) {\n            flightRoute += ' – ' + flight.returnSummary.destinationCity;\n            service = translateService.instant('FLIGHT.FLIGHTS');\n        } else {\n            service = translateService.instant('FLIGHT.FLIGHT');\n        }\n\n        let summaryTitle = `${translateService.instant(\n            flight.isRoundTrip ? 'FLIGHT_TRAIN.SELECTED' : 'FLIGHT.SELECTED_ONE_WAY',\n            {\n                service: service.toLowerCase(),\n                serviceUpper: service,\n                transportRoute: flightRoute,\n            }\n        )}`;\n        if (isMyTrip) {\n            summaryTitle = translateService.instant('SERVICES.FLIGHT');\n        }\n\n        return summaryTitle;\n    }\n\n    public static formServiceTitle(cartData: any, translateService: TranslateService, isMyTrip?: boolean) {\n        if (!cartData.items) {\n            return;\n        }\n        let service = '';\n        cartData.items.forEach((item: any) => {\n            switch (item.title) {\n                case 'Flight':\n                    item.summaryTitle = this.buildFlightTitleSummary(\n                        item.selectedItem.data,\n                        translateService,\n                        isMyTrip\n                    );\n                    item.ordinal = this.TRANSPORT;\n                    break;\n                case 'Train #1':\n                    let trainPrefix = translateService.instant('TRAIN.TRAIN');\n                    let trainRoutes =\n                        item.selectedItem.data.onward.departure.location.city +\n                        ' – ' +\n                        item.selectedItem.data.onward.arrival.location.city;\n                    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n                    for (let i = 0; i < cartData.items.length; i++) {\n                        if (cartData.items[i].title === 'Train #2') {\n                            trainPrefix = translateService.instant('TRAIN.TRAINS');\n                            trainRoutes += ' – ' + cartData.items[i].selectedItem.data.onward.arrival.location.city;\n                            cartData.items[i].ordinal = this.TRANSPORT + 1;\n                        }\n                    }\n                    service = translateService.instant('TRAIN.TRAINS');\n                    item.summaryTitle = `${translateService.instant('FLIGHT_TRAIN.SELECTED', {\n                        service: service.toLowerCase(),\n                        transportRoute: trainRoutes,\n                        serviceUpper: service,\n                    })}`;\n                    if (isMyTrip) {\n                        item.summaryTitle = translateService.instant('SERVICES.TRAIN');\n                    }\n                    item.ordinal = this.TRANSPORT;\n                    break;\n                case 'Hotel':\n                    item.summaryTitle = translateService.instant('HOTELS.SELECTED');\n                    if (isMyTrip) {\n                        item.summaryTitle = translateService.instant('SERVICES.HOTEL');\n                    }\n                    item.ordinal = this.HOTEL;\n                    break;\n                case 'Transfer':\n                    let journeyType = 'onwardJourney';\n                    if (\n                        Array.isArray(item.selectedItem.bookingOptions) &&\n                        item.selectedItem.bookingOptions.length > 0\n                    ) {\n                        journeyType = item.selectedItem.bookingOptions[0].journeyType;\n                    }\n                    const isRoundTrip = item.searchReq.searchData.transferCal.twoDates;\n                    const journeyInfo = isRoundTrip\n                        ? translateService.instant(\n                              journeyType === 'onwardJourney' ? 'TRANSFER.OUTBOUND' : 'TRANSFER.RETURN'\n                          )\n                        : '';\n                    if (isMyTrip) {\n                        item.summaryTitle = translateService.instant('SERVICES.TRANSFER') + ' ' + journeyInfo;\n                    } else {\n                        item.summaryTitle = isRoundTrip\n                            ? ` ${translateService.instant('TRANSFER.SELECTED_S')}`\n                            : ` ${translateService.instant('TRANSFER.SELECTED')}`;\n                    }\n                    // if (isRoundTrip) {\n                    //     journeyInfo = journeyType === \"onwardJourney\" ? \"O\" : \"R\";\n                    // }\n                    item.summaryHeaderInfo = journeyInfo.trim();\n                    item.ordinal = item.title === 'Transfer #2' ? this.TRANSFERS + 1 : this.TRANSFERS;\n                    break;\n                case 'Car Rental':\n                    item.summaryTitle = translateService.instant('CAR_RENTAL.SELECTED');\n                    if (isMyTrip) {\n                        item.summaryTitle = translateService.instant('SERVICES.CAR RENTAL');\n                    }\n                    item.ordinal = this.RENTAL;\n                    break;\n            }\n        });\n\n        cartData.items.sort((itemA: any, itemB: any) => itemA.ordinal - itemB.ordinal);\n        return cartData;\n    }\n\n    public static formItemOrder(serviceId: ServiceId = -1, cartItems: any = [], translateService: TranslateService) {\n        if (serviceId < 0 || cartItems.length === 0) {\n            return;\n        }\n\n        const timelineData = CartUtils.generateTimelineData(cartItems, true, translateService);\n        if (!timelineData || timelineData.length === 0) {\n            return;\n        }\n\n        const serviceOrder: any = {};\n        timelineData.forEach((timeline: any) => {\n            const { hash, serviceID, summaryTitle, tzOrderNumber, idx, bookingOptions, refId } = timeline;\n            if (serviceOrder[refId]) {\n                if (serviceOrder[refId].idxs.indexOf(idx) === -1) {\n                    serviceOrder[refId].idxs.push(idx);\n                }\n                if (serviceOrder[refId].hashes.indexOf(hash) === -1) {\n                    serviceOrder[refId].hashes.push(hash);\n                }\n            } else {\n                serviceOrder[refId] = {\n                    serviceID,\n                    summaryTitle,\n                    tzOrderNumber,\n                    idxs: [idx],\n                    hashes: [hash],\n                    bookingOptions,\n                };\n            }\n        });\n\n        return serviceOrder;\n    }\n\n    public static verifySelectedAcc(oldSelectedAcc: any, newlySelectedAcc: any): boolean {\n        let sameAcc = true;\n\n        if (\n            oldSelectedAcc.selectedHotel.id !== newlySelectedAcc.id ||\n            oldSelectedAcc.bookingOptions.length !== newlySelectedAcc.bookingOptions.length\n        ) {\n            return false;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < oldSelectedAcc.bookingOptions.length; i++) {\n            let offerFound = false;\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let j = 0; j < newlySelectedAcc.bookingOptions.length; j++) {\n                //@todo: need to change\n                if (\n                    oldSelectedAcc.bookingOptions[i].selectedRoom.roomOfferId ===\n                        newlySelectedAcc.bookingOptions[j].selectedRoom.roomOfferId &&\n                    oldSelectedAcc.bookingOptions[i].selectedRoom.numberOfRooms ===\n                        newlySelectedAcc.bookingOptions[j].selectedRoom.numberOfRooms\n                ) {\n                    offerFound = true;\n                }\n            }\n            if (!offerFound) {\n                sameAcc = offerFound;\n            }\n        }\n\n        return sameAcc;\n    }\n\n    // it checks whether new options contain previously selected transfers\n    public static verifySelectedTransfers(oldSelectedTransfers: any, newlySelectedTransfers: any): boolean {\n        console.log(\n            {\n                oldSelectedTransfers,\n            },\n            {\n                newlySelectedTransfers,\n            },\n            '306'\n        );\n        const sameTransferFound = true;\n\n        if (\n            !oldSelectedTransfers ||\n            !newlySelectedTransfers ||\n            oldSelectedTransfers.length !== newlySelectedTransfers.length\n        ) {\n            return false;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let j = 0; j < oldSelectedTransfers.length; j++) {\n            let found = false;\n\n            for (let i = 0; i < newlySelectedTransfers.length && !found; i++) {\n                if (oldSelectedTransfers[j].selectedItem.id === newlySelectedTransfers[i].id) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return false;\n            }\n        }\n\n        return sameTransferFound;\n    }\n\n    public static sameExtras(oldExtras: any, newExtras: any) {\n        const extraMap: any = {};\n        let extraCount = 0;\n        for (const extraId in oldExtras) {\n            if (oldExtras.hasOwnProperty(extraId)) {\n                extraMap[extraId] = oldExtras[extraId];\n                extraCount++;\n            }\n        }\n        let newExtraCount = 0;\n        for (const extraId in newExtras) {\n            if (oldExtras.hasOwnProperty(extraId)) {\n                newExtraCount++;\n                if (extraMap[extraId]) {\n                    if (extraMap[extraId].count !== newExtras[extraId].count) {\n                        return false;\n                    }\n                } else {\n                    return false;\n                }\n            }\n        }\n        return extraCount === newExtraCount;\n    }\n\n    public static isInvalidItem(selected: any): boolean {\n        return (\n            selected &&\n            selected.bookingOptions &&\n            selected.bookingOptions.some((option: ICartSelectedItemBookingOption) => this.isFailed(option.status))\n        );\n    }\n\n    public static getSameItemConfirmationDialogData(\n        serviceId: ServiceId,\n        selected: any,\n        cartReq: any,\n        translateService: TranslateService\n    ): ConfirmationDialogOptions {\n        let confirmStr = '';\n        if (serviceId === ServiceId.FLIGHT) {\n            confirmStr = translateService.instant('POPUPS.CHANGE_OPTION.MESSAGE', {\n                service: translateService.instant('SERVICES.' + serviceId).toLowerCase(),\n            });\n        } else {\n            confirmStr = translateService.instant('POPUPS.CHANGE_OPTION.MESSAGE', {\n                service: '',\n            });\n        }\n\n        return {\n            title: translateService.instant('POPUPS.CHANGE_OPTION.TITLE'),\n            content: confirmStr,\n            cancelBtnTitle: translateService.instant('POPUPS.CHANGE_OPTION.CANCEL'),\n            confirmBtnTitle: translateService.instant('POPUPS.CHANGE_OPTION.YES_CHANGE'),\n        };\n    }\n\n    public static checkPriceChangeOnly(invalidItems: ICartItem[]) {\n        let priceChangedItemsCount = 0;\n        let unchangedItemsCount = 0;\n        let priceChangeId = '';\n        let priceChangeServId!: ServiceId;\n\n        invalidItems.forEach((item) => {\n            const status = item.selectedItem.bookingOptions[0].status;\n            if (!CartUtils.isFailed(status)) {\n                return;\n            }\n\n            if (status === CartStatus.STATUS_PRICE_CHANGED) {\n                priceChangeServId = item.serviceId;\n                priceChangeId = item.selectedItem.bookingOptions[0].optionId;\n                priceChangedItemsCount++;\n            } else {\n                unchangedItemsCount++;\n            }\n        });\n\n        return {\n            // check only one error.\n            showPriceChange: priceChangedItemsCount === 1 && unchangedItemsCount === 0,\n            priceChangeServId,\n            priceChangeId,\n        };\n    }\n\n    public static getTravellersData(cartItems: ICartItem[]): { txt: string; total: number } | undefined {\n        let min = 99999;\n        let max = 0;\n\n        if (!cartItems) {\n            return;\n        }\n\n        cartItems.forEach((item) => {\n            const total =\n                //adult can be 0 in case of rental only\n                (item.searchReq.passengers.adults ? item.searchReq.passengers.adults : 1) +\n                item.searchReq.passengers.children +\n                item.searchReq.passengers.infants;\n\n            if (total < min) {\n                min = total;\n            }\n            if (total > max) {\n                max = total;\n            }\n        });\n\n        return {\n            txt: min === max ? min.toString() : '(' + min + ' - ' + max + ')',\n            total: max,\n        };\n    }\n\n    private static hasNotFailed(cartData: ICart): boolean {\n        for (const items of cartData.items) {\n            if (!CartUtils.hasUnavailable(items.selectedItem.bookingOptions)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","import { TranslateService } from '@ngx-translate/core';\nimport { AdditionalLuggage, SelectedBaggageInfo, SelectedBagOption } from '@schemas/modules/checkout/transport-luggage';\nimport { FlightLuggageOption, FlightLuggageOptionTypes } from '@schemas/modules/flights/flight-luggage.model';\nimport { TzCurrencyPipe } from '@shared/pipes/tz-currency.pipe';\n\nexport const DefaultLuggage = {\n    totalPrice: 0,\n    cabin: { selected: '', bagsCount: 0, options: {} },\n    checkIn: { selected: '', bagsCount: 0, options: {} },\n};\n\nexport class TransportLuggagesUtil {\n    public static getTravellerName(\n        formvalue: { firstName: string; middleName: string; lastName: string },\n        idx: number,\n        translateService: TranslateService\n    ): string {\n        if (!formvalue.firstName || !formvalue.lastName) {\n            if (idx === 0) {\n                return translateService.instant('TRAVELLER.PRIMARY_TRAVELER');\n            } else {\n                return `${translateService.instant('TRAVELLER.TRAVELER')} ${idx + 1}`;\n            }\n        }\n\n        return `${formvalue.firstName} ${formvalue.middleName ? formvalue.middleName : ''} ${formvalue.lastName}`;\n    }\n\n    public static optionPresent(additionalLuggage: AdditionalLuggage, bagType: string, idx: string): boolean {\n        return (\n            additionalLuggage &&\n            (bagType === FlightLuggageOptionTypes.CABIN || bagType === FlightLuggageOptionTypes.CHECKIN) &&\n            additionalLuggage[bagType].options.hasOwnProperty(idx)\n        );\n    }\n\n    public static disableLuggageSelection(\n        additionalLuggage: AdditionalLuggage,\n        bagType: string,\n        option: FlightLuggageOption,\n        maxAllowed: number\n    ): boolean {\n        return (\n            additionalLuggage &&\n            ((this.optionPresent(additionalLuggage, bagType, option.index) &&\n                this.getOption(additionalLuggage, bagType, option.index).count === option.maxQuantity) ||\n                ((bagType === FlightLuggageOptionTypes.CABIN || bagType === FlightLuggageOptionTypes.CHECKIN) &&\n                    additionalLuggage[bagType].bagsCount === maxAllowed))\n        );\n    }\n\n    public static getOption(additionalLuggage: AdditionalLuggage, bagType: string, idx: string): SelectedBagOption {\n        return bagType === FlightLuggageOptionTypes.CABIN\n            ? additionalLuggage.cabin.options[idx]\n            : additionalLuggage.checkIn.options[idx];\n    }\n\n    public static formLuggageCombination(\n        additionalLuggage: AdditionalLuggage,\n        option: FlightLuggageOption,\n        bagType: string\n    ): AdditionalLuggage {\n        if (!additionalLuggage) {\n            return JSON.parse(JSON.stringify(DefaultLuggage));\n        }\n\n        if (bagType !== FlightLuggageOptionTypes.CHECKIN && bagType !== FlightLuggageOptionTypes.CABIN) {\n            return additionalLuggage;\n        }\n\n        const title = option.weightText !== '' ? option.weightText + ' ' + option.dimensions : option.dimensions;\n        const bag =\n            this.optionPresent(additionalLuggage, bagType, option.index) &&\n            this.getOption(additionalLuggage, bagType, option.index).count !== 0\n                ? this.getOption(additionalLuggage, bagType, option.index)\n                : ({\n                      count: 0,\n                      totalPrice: 0,\n                      optionPrice: option.prices,\n                      title,\n                      weight: option.maxWeight,\n                  } as SelectedBagOption);\n\n        additionalLuggage.totalPrice += option.prices.listPrice;\n        additionalLuggage[bagType].bagsCount++;\n\n        bag.count++;\n        bag.totalPrice += option.prices.listPrice;\n\n        bag.depIdx = option.outwardIndex;\n        bag.retIdx = option.returnIndex;\n        if (!option.outwardIndex) {\n            bag.depIdx = option.index;\n        }\n\n        additionalLuggage[bagType].options[option.index] = bag;\n        return additionalLuggage;\n    }\n\n    public static removeLuggageCombination(\n        additionalLuggage: AdditionalLuggage,\n        option: FlightLuggageOption,\n        bagType: string\n    ): AdditionalLuggage {\n        if (!additionalLuggage) {\n            return JSON.parse(JSON.stringify(DefaultLuggage));\n        }\n\n        if (bagType !== FlightLuggageOptionTypes.CHECKIN && bagType !== FlightLuggageOptionTypes.CABIN) {\n            return additionalLuggage;\n        }\n\n        const bag = this.getOption(additionalLuggage, bagType, option.index);\n        if (!bag) {\n            return additionalLuggage;\n        }\n\n        if (bag.count === 0) {\n            bag.depIdx = '';\n            bag.retIdx = '';\n            bag.title = '';\n            bag.weight = 0;\n            return additionalLuggage;\n        }\n\n        additionalLuggage.totalPrice -= option.prices.listPrice;\n        additionalLuggage[bagType].bagsCount--;\n\n        bag.count--;\n        bag.totalPrice -= option.prices.listPrice;\n\n        additionalLuggage[bagType].options[option.index] = bag;\n        if (bag.count === 0) {\n            delete additionalLuggage[bagType].options[option.index];\n        }\n\n        return additionalLuggage;\n    }\n\n    public static selectLuggageOption(\n        additionalLuggage: AdditionalLuggage,\n        option: FlightLuggageOption | null,\n        bagType: string,\n        tzCurrencyPipe: TzCurrencyPipe\n    ): AdditionalLuggage {\n        if (!additionalLuggage) {\n            return JSON.parse(JSON.stringify(DefaultLuggage));\n        }\n\n        if (bagType !== FlightLuggageOptionTypes.CHECKIN && bagType !== FlightLuggageOptionTypes.CABIN) {\n            return additionalLuggage;\n        }\n\n        additionalLuggage[bagType].options = {};\n        additionalLuggage[bagType].bagsCount = 0;\n        additionalLuggage[bagType].selected = option ? option.index : '';\n        additionalLuggage[bagType].selectedBaggageStr = '';\n        additionalLuggage[bagType].selectedBaggageInfo = {} as SelectedBaggageInfo;\n        additionalLuggage.totalPrice = 0;\n\n        if (option) {\n            const title = option.combinationText;\n            additionalLuggage[bagType].options[option.index] = {\n                count: option.quantity,\n                totalPrice: option.prices.listPrice,\n                optionPrice: option.prices,\n                depIdx: option.outwardIndex,\n                retIdx: option.returnIndex,\n                title,\n                weight: option.maxWeight,\n            } as SelectedBagOption;\n\n            additionalLuggage.totalPrice = option.prices.listPrice;\n            additionalLuggage[bagType].bagsCount = option.quantity;\n            additionalLuggage[bagType].byTotalWeight = option.byTotalWeight;\n\n            const weightTexts = option.weightTexts ? option.weightTexts.join(', ') : '';\n            const currency = tzCurrencyPipe.transform(option.prices.listPrice, option.prices.listPriceCur);\n            const dimensions = option.dimensions ?? '';\n            additionalLuggage[bagType].selectedBaggageStr = weightTexts + dimensions + ' - ' + currency;\n            additionalLuggage[bagType].selectedBaggageInfo = {\n                weightTexts: option.weightTexts,\n                dimension: dimensions,\n                price: currency ?? '',\n            };\n        }\n\n        return additionalLuggage;\n    }\n\n    public static getSelectedLuggage(\n        additionalLuggage: AdditionalLuggage,\n        bagType: FlightLuggageOptionTypes.CABIN | FlightLuggageOptionTypes.CHECKIN\n    ): SelectedBaggageInfo | undefined {\n        const luggageStr = additionalLuggage?.[bagType]?.selectedBaggageStr;\n        if (luggageStr && luggageStr !== '') {\n            return additionalLuggage[bagType].selectedBaggageInfo;\n        }\n\n        return;\n    }\n\n    public static formatWeightText(weightTexts: string[], noSinglePc = false): string {\n        const weightText = weightTexts.join(' + ');\n        return weightText.replace(new RegExp(weightTexts.length > 1 || noSinglePc ? '1 pc x ' : 'pc ', 'gi'), '');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpRequestType } from '@core/constants/http-request-type';\n\ninterface IRequestOptions {\n    body?: any;\n    headers?:\n        | HttpHeaders\n        | {\n              [header: string]: string | string[];\n          };\n    context?: HttpContext;\n    observe?: 'body';\n    params?:\n        | HttpParams\n        | {\n              [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;\n          };\n    reportProgress?: boolean;\n    responseType: 'arraybuffer' | 'json';\n    withCredentials?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BaseService {\n    constructor(private http: HttpClient) {}\n\n    protected request(\n        method: HttpRequestType,\n        url: string,\n        queryParams?: {\n            [param: string]: string | number | boolean;\n        },\n        data?: object,\n        httpOptions?: any\n    ): Observable<any> {\n        return this.runRequest(method, url, true, queryParams, data, httpOptions);\n    }\n\n    protected requestNoCredential(\n        method: HttpRequestType,\n        url: string,\n        queryParams?: {\n            [param: string]: string | number | boolean;\n        },\n        data?: object,\n        httpOptions?: any\n    ) {\n        return this.runRequest(method, url, false, queryParams, data, httpOptions);\n    }\n\n    private runRequest(\n        method: HttpRequestType,\n        url: string,\n        credentials: boolean,\n        queryParams?: {\n            [param: string]: string | number | boolean;\n        },\n        data?: object,\n        httpOptions?: any\n    ): Observable<any> {\n        let options: IRequestOptions = {\n            responseType: 'json',\n            withCredentials: credentials,\n        };\n        if (queryParams) {\n            options.params = queryParams;\n        }\n        if (data) {\n            options.body = data;\n        }\n        if (httpOptions) {\n            options = {\n                ...options,\n                ...httpOptions,\n            };\n        }\n        return this.http.request(method, url, options);\n    }\n}\n","import { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { Injectable } from '@angular/core';\nimport { HttpRequestType } from '@core/constants/http-request-type';\nimport { ICountryIP } from '@schemas/modules/core/country-ip';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AppConfigDataService extends ApiAccessService {\n    public initDeviceId(forceNew: boolean): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const deviceId = this.settingsService.getDeviceID();\n            if (forceNew || !deviceId) {\n                this.fetchDeviceID().then(\n                    (response: any) => {\n                        if (response.deviceID) {\n                            this.settingsService.storeDeviceId(response);\n                            resolve(response.deviceID);\n                        } else {\n                            console.error(response);\n                            reject('device id fetch failed:' + response);\n                        }\n                    },\n                    (error: any) => {\n                        console.error(error);\n                        resolve('');\n                    }\n                );\n            } else {\n                resolve(deviceId);\n            }\n        });\n    }\n\n    public setCountryIP(deviceId: string): Observable<ICountryIP> {\n        const params = {\n            entity: 'userConnection',\n            deviceID: deviceId,\n        };\n        if (!deviceId) {\n            return throwError('invalid data id');\n        } else {\n            return this.apiCallObs(HttpRequestType.GET, params).pipe(\n                map((data: ICountryIP) => {\n                    StorageManagerUtil.set('ip_country', data);\n                    return data;\n                })\n            );\n        }\n    }\n\n    private fetchDeviceID() {\n        const params = {\n            entity: 'deviceID',\n        };\n        return this.apiCallAccess(HttpRequestType.GET, params);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { SearchEvents } from '@core/constants/search-events';\nimport { SearchErrorService } from '@services/searchEngine/services/search-error-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { SearchHelpers } from '@services/searchEngine/services/search-helpers';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PreSearchService {\n    constructor(\n        private apiAccessService: ApiAccessService,\n        private searchMetadataService: SearchMetadataService,\n        private tripPlannerService: TripPlannerService,\n        private loaderService: LoaderService,\n        private searchErrorService: SearchErrorService,\n        private router: Router,\n        private listenersService: ListenersService,\n        private cartRoutingService: CartRoutingService,\n        private cartService: CartService,\n        private searchDataService: SearchDataService\n    ) {}\n\n    public preSearchData(params: any, serviceSearch: any, eventId: any): Promise<any> {\n        this.searchErrorService.unsetErrorFlag();\n        if (\n            this.router.url !== '/search' &&\n            //when click on tab for new service do not move to both train and flight states (we move to flight)\n            (!params.isNewService || params.serviceId !== ServiceId.TRAIN) &&\n            params.serviceId !== this.cartRoutingService.getCurStateServiceId &&\n            //If we are already in a transport state do not move to other transport...\n            (!this.cartRoutingService.isTransportState() || !SearchHelpers.isTransport(params.serviceId))\n        ) {\n            this.cartRoutingService.goToState(params.serviceId, undefined, params.isNewService, StateFrom.SEARCH, {\n                preSearch: true,\n            });\n        }\n        return new Promise((resolve, reject) => {\n            this.apiAccessService\n                .preSearch(params, serviceSearch)\n                .then(\n                    (success: any) => {\n                        if (!success) {\n                            //this is occurring when we cancel all requests\n                            //I unsuccessfully tried to figure out why we do not end up on reject case\n                            return;\n                        }\n                        this.cartService.reInit(true).then(\n                            () => this.preSearchSuccess(success, params, resolve, eventId),\n                            () => this.preSearchFailure(success, params, reject, eventId)\n                        );\n                    },\n                    (failure: any) => {\n                        if (params.isNewService || params.isNewCombi) {\n                            this.preSearchFailure(failure, params, reject, eventId);\n                        } else {\n                            this.cartService\n                                .reInit()\n                                .finally(() => this.preSearchFailure(failure, params, reject, eventId));\n                        }\n                    }\n                )\n                .catch(() => {\n                    this.loaderService.triggerLoading.emit({ loading: false });\n                });\n        });\n    }\n\n    private preSearchSuccess(success: any, params: any, resolve: any, eventId: any): void {\n        console.log('getting pre search success on service:' + params.serviceId);\n        const serviceId: ServiceId = success.metaData.serviceId;\n        this.searchMetadataService.saveSearch(success, eventId);\n        if (success.metaData.complete) {\n            this.tripPlannerService.setComplete(serviceId);\n        }\n        if (serviceId === ServiceId.TRAIN || serviceId === ServiceId.FLIGHT) {\n            resolve(success);\n            return;\n        }\n        switch (serviceId) {\n            case ServiceId.ACC:\n            case ServiceId.TRANSFER:\n            case ServiceId.CAR_RENTAL:\n                const metaData = success.metaData;\n                const serviceSearchRes = success.serviceSearch;\n                if (metaData.count === 0) {\n                    /*this.searchErrorService.searchErr(\n                        {\n                            status: 400,\n                            message: '',\n                        },\n                        serviceId,\n                        SearchEvents.EVENT_SEARCH_WEB\n                    );*/\n                    if (this.router.url === '/search') {\n                        this.loaderService.triggerLoading.emit({ loading: false });\n                        this.searchErrorService.searchErr(\n                            {\n                                status: 200,\n                                message: '',\n                            },\n                            serviceId,\n                            SearchEvents.EVENT_SEARCH_WEB\n                        );\n                        return;\n                    }\n                } else {\n                    this.searchErrorService.unsetErrorFlag();\n                }\n\n                switch (serviceId) {\n                    case ServiceId.ACC:\n                        if (serviceSearchRes.searchData.hotelCode) {\n                            const accRepriceListener = this.listenersService.registerListener(\n                                ListenerId.LISTEN_ACC_REPRICED,\n                                () => {\n                                    this.listenersService.unregisterListener(accRepriceListener);\n                                    this.cartRoutingService.goToState(\n                                        ServiceId.ACC_DETAILS,\n                                        //TODO SF 9091\n                                        {\n                                            giataId: serviceSearchRes.searchData.hotelCode,\n                                            hotelName: serviceSearchRes.searchData.hotelName,\n                                        },\n                                        true,\n                                        StateFrom.SEARCH\n                                    );\n                                },\n                                this\n                            );\n                            return;\n                        } /*else {\n                                            this.cartRoutingService.currentServiceId.next(serviceId);\n                                        }*/\n                        break;\n                    case ServiceId.TRANSFER:\n                        break;\n                    case ServiceId.CAR_RENTAL:\n                        if (serviceSearchRes.searchData.retainSearch) {\n                            this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_RENT_CAR);\n                        } else {\n                            this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_RENT_CAR, {\n                                resetMap: true,\n                            });\n                        }\n                }\n                this.cartRoutingService.goToState(serviceId, undefined, true, StateFrom.SEARCH);\n                break;\n            default:\n                console.error('unhandled service id:' + serviceId);\n        }\n        resolve(success);\n    }\n\n    private preSearchFailure(failure: any, params: any, reject: any, eventId: any): void {\n        console.log('getting pre search failure on service:' + params.serviceId);\n        this.loaderService.triggerLoading.emit({ loading: false });\n        this.tripPlannerService.setComplete(params.serviceId); // on error set result is completed\n\n        if (this.router.url !== '/search' && failure.status === 412 && failure.error) {\n            failure.error.metaData.complete = true;\n            this.searchMetadataService.saveSearch(failure.error, eventId);\n            this.searchDataService.resetSearch$.next();\n        }\n        if (\n            params.serviceId === ServiceId.TRAIN ||\n            params.serviceId === ServiceId.FLIGHT ||\n            (failure.error && failure.error.code === 8024)\n        ) {\n            reject(failure);\n            return;\n        }\n        this.searchErrorService.searchErr(\n            {\n                status: failure && failure.status ? failure.status : 400,\n                message: '',\n                invalid: failure && failure.status === 412,\n            },\n            params.serviceId,\n            eventId\n        );\n        if (this.router.url !== '/search') {\n            //this.cartRoutingService.currentServiceId.next(params.serviceId);\n            if (this.router.url === '/results-summary' || eventId !== SearchEvents.EVENT_SEARCH_EDIT) {\n                this.cartRoutingService.goToState(params.serviceId, undefined, true, StateFrom.SEARCH);\n            }\n        }\n        return;\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { HttpRequestType } from '@core/constants/http-request-type';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { PaginationQueryParams } from '@schemas/modules/core/pagination-query-params';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { CartRemoveService } from '@services/modules/cart/services/cart-remove-service';\nimport { take, tap } from 'rxjs/operators';\nimport { DataId } from '@schemas/modules/core/base-types';\nimport { CheckInconsistentService } from '@services/searchEngine/services/check-consistent-service';\nimport { ISearchErr, SearchErrorService } from '@services/searchEngine/services/search-error-service';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { UserSearchService } from '@services/searchEngine/services/user-search-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { MapResults, SearchMapRequest } from '@schemas/modules/result-map/results-map.model';\nimport { Accommodation } from '@schemas/modules/accommodations/accommodation';\nimport { TzFocusType } from '@core/constants/keyboard-key-types.const';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DialogService } from '@services/dialog.service';\nimport { ResultsSharedServices } from '@services/modules/results/services/results.shared.services';\nimport { ICartSelectedItemBookingOption } from '@schemas/modules/cart/cart-selected-item-booking-option';\nimport { CartStatus } from '@core/constants/cart-status';\nimport { ICartItem } from '@schemas/modules/cart/cart-item';\nimport { ModalService } from '@services/modal.service';\nimport { ICart } from '@schemas/modules/cart/cart';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ResultService extends ApiAccessService {\n    public readonly serviceId: ServiceId = ServiceId.INVALID;\n    public refId: string | undefined;\n    public dataId: DataId | undefined;\n    public selectedServices: number[] = [];\n    public minTrainPrice!: number;\n\n    private paginateFrom = -1;\n\n    constructor(\n        injector: Injector,\n        http: HttpClient,\n        private cartService: CartService,\n        private tripPlannerService: TripPlannerService,\n        private cartRemoveService: CartRemoveService,\n        private checkInconsistentService: CheckInconsistentService,\n        private searchErrService: SearchErrorService,\n        private userSearchService: UserSearchService,\n        private resultsSharedServices: ResultsSharedServices,\n        public translateService: TranslateService,\n        public dialogService: DialogService,\n        public modalService: ModalService\n    ) {\n        super(injector, http);\n    }\n\n    public searchServiceData(serviceId: ServiceId, queryParams: any, checkConsistency: boolean, params?: any) {\n        const state = window.history.state;\n        const from = state ? state.from : '';\n        this.paginateFrom = -1;\n\n        if (this.noResult(serviceId)) {\n            const curErr = this.searchErrService.getCurServiceErr(serviceId);\n\n            let dataErr: ISearchErr;\n            if (curErr === null) {\n                dataErr = {\n                    serviceId,\n                    failure: {\n                        invalid: false,\n                        addService: from === StateFrom.SUMMARY,\n                    },\n                    cb: this.noResultMoveNext.bind(this),\n                };\n            } else {\n                dataErr = curErr;\n                dataErr.cb = this.noResultMoveNext.bind(this);\n            }\n\n            const searchInfos = this.searchDataService.getSearch(serviceId);\n            if (searchInfos && searchInfos.failureCode === 8024 && searchInfos.modifyData) {\n                dataErr.failure.dataFailure = {\n                    remove: true,\n                    status: searchInfos.failureCode,\n                    cal: searchInfos.modifyData,\n                    confirmCb: this.userSearchService.updateRentalSearch,\n                    field: '',\n                };\n            }\n            this.searchErrService.newError(dataErr);\n            return throwError(dataErr);\n        }\n\n        const searchParams = {\n            entity: 'searchResults',\n            id: this.searchDataService.getCombId(),\n            dataId: this.searchDataService.getDataId(serviceId),\n            currency: this.settingsService.getCurrency(),\n            hideLoading: false,\n            lang: this.settingsService.langCode,\n            refreshFilter: false,\n            serviceId,\n            handleRedisError: true,\n            ...queryParams,\n            ...params,\n        };\n\n        return this.apiCall(HttpRequestType.GET, searchParams).pipe(\n            tap(\n                () => {\n                    if (checkConsistency) {\n                        this.checkInconsistentService.checkInconsistent(serviceId, from);\n                    }\n\n                    this.hideLoader();\n                },\n                (failure) => {\n                    console.log('fail', failure);\n                    if (failure && failure.error.code === 24) {\n                        //DataExpired\n                        this.userSearchService.reSearch(serviceId);\n                    } else {\n                        this.hideLoader();\n                    }\n                }\n            )\n        );\n    }\n\n    public filterServiceData(serviceId: ServiceId, queryParams: any, filters: any): Observable<any> {\n        this.paginateFrom = -1;\n        const filterParams = {\n            entity: 'filter',\n            id: this.searchDataService.getCombId(),\n            dataId: this.searchDataService.getDataId(serviceId),\n            boosterSeats: 0,\n            childSeats: 0,\n            currency: this.settingsService.getCurrency(),\n            hideLoading: false,\n            journeyType: 'onwardJourney',\n            lang: this.settingsService.langCode,\n            refreshFilter: false,\n            serviceId,\n            handleRedisError: true,\n            ...queryParams,\n        };\n        return this.apiCall(HttpRequestType.POST, filterParams, filters);\n    }\n\n    public searchMapResults(serviceId: ServiceId, queryParams: any, request: SearchMapRequest): Observable<MapResults> {\n        const params = {\n            entity: 'searchMap',\n            id: this.searchDataService.getCombId(),\n            dataId: this.searchDataService.getDataId(serviceId),\n            currency: this.settingsService.getCurrency(),\n            lang: this.settingsService.langCode,\n            serviceId,\n            handleRedisError: true,\n            ...queryParams,\n        };\n\n        return this.apiCallObs(HttpRequestType.POST, params, request);\n    }\n\n    public findResultById(serviceId: ServiceId, queryParams: any): Observable<Accommodation> {\n        const params = {\n            entity: 'findById',\n            id: this.searchDataService.getCombId(),\n            dataId: this.searchDataService.getDataId(serviceId),\n            currency: this.settingsService.getCurrency(),\n            lang: this.settingsService.langCode,\n            serviceId,\n            handleRedisError: true,\n            closeLoader: true,\n            ...queryParams,\n        };\n        this.showLoader(true);\n\n        return this.apiCallObs(HttpRequestType.GET, params);\n    }\n\n    public apiCallOptions(requestMethod: HttpRequestType, params: any, httpOptions: any, data?: any) {\n        const urlAndQueryParams = this.buildUrlAndQueryParams(params);\n        const { url, queryParams } = urlAndQueryParams;\n        return this.request(requestMethod, url, queryParams, data, httpOptions);\n    }\n\n    public apiCall(requestMethod: HttpRequestType, params: any, data?: any) {\n        return this.apiCallOptions(requestMethod, params, undefined, data);\n    }\n\n    public paginate(serviceId: ServiceId, params: any): Observable<any[]> {\n        const { limit, start, section, sortBy, onwardId, returnId } = params;\n\n        if (this.paginateFrom === start) {\n            return throwError(`pagination error got duplicate start index: ${start}`);\n        }\n        this.paginateFrom = start;\n\n        const paginationQueryParams: PaginationQueryParams = {\n            dataId: this.searchDataService.getDataId(serviceId),\n            lang: this.settingsService.langCode,\n            currency: this.settingsService.getCurrency(),\n            onwardId,\n            returnId,\n            serviceId,\n            limit,\n            start,\n            sortBy,\n        };\n\n        if (section) {\n            paginationQueryParams.section = section;\n        }\n\n        const paginationRequestParams: any = {\n            entity: 'paginate',\n            id: this.searchDataService.getCombId(),\n            ...paginationQueryParams,\n        };\n\n        return this.apiCall(HttpRequestType.GET, paginationRequestParams);\n    }\n\n    public checkServiceFailedAndNotify(serviceId: ServiceId, journeyType?: string): void {\n        const cartData = this.cartService.getCartData(serviceId) as ICart;\n        if (!cartData || !cartData.items || !cartData.totalImprintAmt) {\n            return;\n        }\n\n        let hasFailedOption = false;\n        for (const item of cartData.items) {\n            if (journeyType && item.selectedItem.data.journeyType !== journeyType) {\n                continue;\n            }\n\n            hasFailedOption =\n                item.selectedItem.bookingOptions.some(\n                    (option) =>\n                        option.status >= CartStatus.STATUS_REJECTED && option.status !== CartStatus.STATUS_PRICE_CHANGED\n                ) || hasFailedOption;\n        }\n\n        if (hasFailedOption) {\n            this.dialogService.openConfirmationDialog({\n                title: this.translateService.instant('POPUPS.CONTACT_SUPPORT.TITLE'),\n                multipleContent: [this.translateService.instant('POPUPS.CONTACT_SUPPORT.MESSAGE')],\n                confirmBtnTitle: this.translateService.instant('POPUPS.OK'),\n            });\n        }\n    }\n\n    public getServiceCartItems(validOnly = true): any {\n        const cartData = this.cartService.getCartData(this.serviceId);\n        if (!cartData || !validOnly) {\n            return cartData;\n        }\n\n        const validCartItems: ICartItem[] = [];\n        cartData.items?.forEach((item: ICartItem) => {\n            const valid = item.selectedItem.bookingOptions.some(\n                (option: ICartSelectedItemBookingOption) =>\n                    !(option.status >= CartStatus.STATUS_REJECTED && option.status !== CartStatus.STATUS_PRICE_CHANGED)\n            );\n\n            if (valid) {\n                validCartItems.push(item);\n            }\n        });\n\n        cartData.items = validCartItems;\n        return cartData;\n    }\n\n    public addToCart(cartReq: any): Observable<any> {\n        const combinationId = this.searchDataService.getCombId();\n        const dataId = this.searchDataService.getDataId(this.serviceId);\n        const serviceId = this.serviceId;\n\n        console.log('set page blocker to true');\n        this.resultsSharedServices.pageBlocker.next(true);\n        return this.tripPlannerService.setCartData(combinationId, serviceId, dataId, cartReq).pipe(\n            take(1),\n            tap(\n                () => {\n                    console.log('set page blocker to false');\n                    this.resultsSharedServices.pageBlocker.next(false);\n                },\n                (error) => {\n                    this.resultsSharedServices.pageBlocker.next(false);\n                }\n            )\n        );\n    }\n\n    public removeSelectedItem(optionId: string, removeService: boolean = false): Observable<void | boolean> {\n        return this.cartRemoveService.removeCartData(this.serviceId, optionId, removeService);\n    }\n\n    public handlingData<T>(data: T[], recommendedID: string, cartID: string | null): T[] {\n        data.map((item: any) => {\n            item.recommended = item.id === recommendedID && item.id !== cartID;\n        });\n\n        return data;\n    }\n\n    public filterDataRemoveCartItem<T>(data: T[], cartId: string): T[] {\n        return data.filter((item: any) => item.id !== cartId);\n    }\n\n    /*  private showLoaderMessage(serviceId: number): void {\n        const messageKey = 'LOADER_MESSAGES.' + ResultService.getLoaderMassageKey(serviceId);\n        this.loaderService.triggerLoading.emit({loading: true, textKey: messageKey});\n    }*/\n\n    private noResultMoveNext(serviceId: ServiceId, shouldEdit: boolean): void {\n        if (shouldEdit) {\n            console.log('should edit search');\n            this.listenersService.NotifyListeners(ListenerId.LISTEN_ENABLE_EDIT, true);\n            this.listenersService.NotifyListeners(ListenerId.LISTEN_FOCUS_NEXT, {\n                id: 'tabIdx1',\n                moveTo: TzFocusType.MOVE_TO_INVALID,\n            });\n        } else {\n            this.userSearchService.searchCheckDep(serviceId, false, false, false, false);\n        }\n    }\n\n    private hideLoader(): void {\n        this.loaderService.triggerLoading.emit({ loading: false });\n    }\n\n    private noResult(serviceId: ServiceId): boolean {\n        const data = this.searchDataService.getSearchResult(serviceId);\n        return !data || data.resultLength === 0;\n    }\n}\n","import { Injectable } from '@angular/core';\n\n/*\nangular.module('trazler.services.GeneralService', []).service('GeneralService', [\"$window\", \"$state\", \"$filter\",\nfunction ($window, $state, $filter) {\n  const MOBILE_BREAKPOINT = 767;\n  const TABLET_BREAKPOINT = 1220;\n  const detector = new MobileDetect(window.navigator.userAgent);\n  let isMobile = () => {\n    return detector.phone() || window.innerWidth < MOBILE_BREAKPOINT;\n  };\n  let isTabletOrMobile = () => {\n    return isMobile() || detector.tablet() || window.innerWidth < MOBILE_BREAKPOINT;\n  };\n  let isTablet = () => {\n    return detector.tablet() || window.innerWidth <= TABLET_BREAKPOINT;\n  };\n  let getCountryList = () => {\n    return window.intlTelInputGlobals.getCountryData().map(country => {\n      let filteredName = country.name.replace(/\\((.)*\\)/gi, '').trim();\n      return {\n        ...country,\n        name: filteredName\n      }\n    });\n  };\n  let isTransfersTab = () => {\n    return $state.current.name.split('.').includes('transfer') ? true : false\n  };\n\n  const deviceType = () => {\n    const ua = navigator.userAgent;\n    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(ua)) {\n      return \"tablet\";\n    } else if (/Mobile|Android|iP(hone|od)|IEMobile|BlackBerry|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(ua)) {\n      return \"mobile\";\n    }\n    return \"desktop\";\n  };\n\n  function init() {\n    if (!isTabletOrMobile()) return;\n    if (deviceType() === \"mobile\" && screen.orientation.type === \"portrait-primary\" || deviceType() === \"tablet\" &&\n     screen.orientation.type === \"landscape-primary\") {\n      document.body.classList.add(\"ignore-orientation\");\n    } else {\n      document.body.classList.remove(\"ignore-orientation\");\n    }\n  }\n\n  window.addEventListener(\"orientationchange\", function () {\n    init();\n  });\n\n  angular.element($window).on('resize', function () {\n    init();\n  });\n\n  //used to keep function signature to remove from listeners\n  let this\n.\n  stopFunction = null;\n\n\n  let currentTab = null;\n\n  function setCurrentTab(tab) {\n    console.log({tab}, \"setting\")\n    currentTab = tab || null;\n  }\n\n  function getCurrentTab() {\n    console.log(\"CURRENT GET\")\n    return currentTab || null;\n  }\n\n\n  function convertRemToPixels(rem) {\n    return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);\n  }\n\n  function getRecommendedText(serviceTxt) {\n    let service = this.translateService.instant(serviceTxt);\n    return this.translateService.instant(\"msg_Recommended_best_value\", {\n      services: service.toLowerCase(),\n    });\n  }\n\n  return {\n    isTransfersTab,\n    isMobile,\n    isTablet,\n    getCountryList,\n    isTabletOrMobile,\n    setCurrentTab,\n    getCurrentTab,\n    convertRemToPixels,\n    getRecommendedText\n  }\n}]);*/\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GeneralService {\n    private stopFunction: any;\n\n    constructor() {}\n\n    public stopWindowListeners() {\n        if (typeof this.stopFunction !== 'function') {\n            return;\n        }\n\n        window.removeEventListener('load', this.stopFunction);\n        window.removeEventListener('mousemove', this.stopFunction);\n        window.removeEventListener('keypress', this.stopFunction);\n        window.removeEventListener('mousedown', this.stopFunction);\n        window.removeEventListener('click', this.stopFunction);\n        window.removeEventListener('scroll', this.stopFunction);\n        this.stopFunction = null;\n    }\n\n    public startWindowListeners(callbackFn?: any) {\n        if (typeof callbackFn !== 'function') {\n            return;\n        }\n        if (this.stopFunction) {\n            this.startWindowListeners();\n        }\n        this.stopFunction = callbackFn;\n        window.addEventListener('load', this.stopFunction);\n        window.addEventListener('mousemove', this.stopFunction);\n        window.addEventListener('keypress', this.stopFunction);\n        window.addEventListener('mousedown', this.stopFunction);\n        window.addEventListener('click', this.stopFunction);\n        window.addEventListener('scroll', this.stopFunction);\n    }\n\n    public isMobile(): boolean {\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ListenerId } from '@core/constants/listener-id.const';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ListenersService {\n    private listeners: any = {};\n    private listenerId = ListenerId.LISTEN_INVALID;\n\n    // can be a subj, cb or an array of subj with one callback\n    public registerListener(subj: ListenerId | ListenerId[], cb: any, scope?: any): number {\n        if ((typeof subj !== 'number' && !Array.isArray(subj)) || typeof cb !== 'function') {\n            console.error('invalid listener request on subj:' + subj);\n            return -1;\n        }\n        this.listenerId++;\n        this.listeners[this.listenerId] = {\n            subj,\n            cb,\n            scope,\n        };\n\n        return this.listenerId;\n    }\n\n    public unregisterListener(id: ListenerId): void {\n        if (id === ListenerId.LISTEN_INVALID) {\n            return;\n        }\n        delete this.listeners[id];\n    }\n\n    public NotifyListeners(subj: ListenerId, data?: any): void {\n        for (const k in this.listeners) {\n            if (typeof this.listeners[k].subj === 'number') {\n                if (this.listeners[k].subj === subj) {\n                    if (this.listeners[k].scope) {\n                        this.listeners[k].cb.call(this.listeners[k].scope, data, subj);\n                    } else {\n                        this.listeners[k].cb(data, subj);\n                    }\n                }\n            } else {\n                for (const subject of this.listeners[k].subj) {\n                    if (subject === subj) {\n                        if (this.listeners[k].scope) {\n                            this.listeners[k].cb.call(this.listeners[k].scope, data, subj);\n                        } else {\n                            this.listeners[k].cb(data, subj);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\n\nimport { LoaderModel } from '@shared/schemas/loader.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpContextToken } from '@angular/common/http';\n\nexport const SEARCH_RESULT_PROCESSING = new HttpContextToken(() => false);\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LoaderService {\n    public skeletonLoading = false;\n    triggerLoading: EventEmitter<LoaderModel> = new EventEmitter<LoaderModel>();\n    triggerCheckResults: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n}\n","import { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { Injectable } from '@angular/core';\nimport { CombinationId, DataId } from '@schemas/modules/core/base-types';\nimport { ServiceId } from '@core/constants/service-id.const';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PollerService {\n    private pollerIntervalId: any = -1;\n    private pollInterval = 5; // poll interval in seconds\n    private pollerIds: any = {};\n\n    constructor(private trazlerAPI: ApiAccessService, private toolsService: ToolsService) {\n        this.pollerIntervalId = this.poll();\n    }\n\n    public unregisterPoller(registeredData: any) {\n        console.log('delete poller id :' + registeredData);\n        if (!registeredData || !this.pollerIds[registeredData.dataId]) {\n            return;\n        }\n        // deactivate callback for unregistered listener\n        this.pollerIds[registeredData.dataId].cb[registeredData.cbIdx] = null;\n\n        //check if one callback is left\n        for (const cb of this.pollerIds[registeredData.dataId].cb) {\n            if (cb !== null) {\n                return;\n            }\n        }\n        // no callback left clean up structure\n        this.unregisterAllPoller(registeredData.dataId);\n    }\n\n    public registerPoller(combId: CombinationId, dataId: DataId, servicesId: ServiceId, cb: any) {\n        if (!dataId || dataId === '') {\n            console.error('DataId is mandatory');\n            return null;\n        }\n\n        if (!cb) {\n            console.error('callback not set');\n        }\n        console.log('registering poller for service :' + servicesId);\n        if (this.pollerIds[dataId]) {\n            this.pollerIds[dataId].cb.push(cb);\n        } else {\n            this.pollerIds[dataId] = {\n                dataId,\n                combId,\n                cb: [cb],\n                servicesId,\n            };\n            this.onPoll();\n        }\n\n        return {\n            dataId,\n            cbIdx: this.pollerIds[dataId].cb.length - 1,\n        };\n    }\n\n    private onPoll(): void {\n        if (ToolsService.isSet(this.pollerIds)) {\n            for (const dataId in this.pollerIds) {\n                if (this.pollerIds.hasOwnProperty(dataId)) {\n                    if (this.pollerIds[dataId].dataId === '' || this.pollerIds[dataId].combId === '') {\n                        console.error('DataId/combId is mandatory');\n                        continue;\n                    }\n                    if (this.pollerIds[dataId].pollOngoing) {\n                        continue;\n                    }\n                    this.pollerIds[dataId].pollOngoing = true;\n                    console.log('service poller on dataId:' + dataId);\n                    this.trazlerAPI.pollService(this.pollerIds[dataId].dataId, this.pollerIds[dataId].combId).then(\n                        (metaData: any) => {\n                            if (this.pollerIds[dataId]) {\n                                this.pollerIds[dataId].pollOngoing = false;\n                                if (metaData.complete === true) {\n                                    // in case poller get unselected in between\n                                    if (this.pollerIds[dataId]) {\n                                        for (const cb of this.pollerIds[dataId].cb) {\n                                            if (cb) {\n                                                cb(metaData, null);\n                                            }\n                                        }\n                                        this.unregisterAllPoller(dataId);\n                                    }\n                                } else {\n                                    console.log('service poller data not ready');\n                                }\n                            }\n                        },\n                        (error: any) => {\n                            this.pollerIds[dataId].pollOngoing = false;\n                            console.log(error);\n                            if (this.pollerIds[dataId]) {\n                                for (const cb of this.pollerIds[dataId].cb) {\n                                    if (cb) {\n                                        cb(null, error);\n                                    }\n                                }\n                                this.unregisterAllPoller(dataId);\n                            }\n                        }\n                    );\n                }\n            }\n        }\n    }\n\n    private poll() {\n        return setInterval(() => {\n            this.onPoll();\n        }, this.pollInterval * 1000);\n    }\n\n    private unregisterAllPoller(dataId: string) {\n        delete this.pollerIds[dataId];\n    }\n}\n","import { ListenersService } from '@services/modules/core/listeners-service';\nimport { GeneralService } from '@services/modules/core/general-service';\nimport { ElementRef, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScrollService {\n    public onScroll$ = new Subject<HTMLDivElement>();\n    private defaultScrollingOptions = {\n        behavior: 'smooth',\n        block: 'start',\n    };\n\n    private scrollTop = 0;\n    private isDisabled = false;\n\n    private paginateService: any;\n\n    private scrollInstance: HTMLElement | undefined;\n\n    constructor(private listenersService: ListenersService, private generalService: GeneralService) {}\n\n    public static adjustScrollButtonPosition(resultContainer: ElementRef): number {\n        const minimumThreshold = 63;\n        const minimumBtnRight = 22;\n        if (!resultContainer) {\n            return minimumBtnRight;\n        }\n\n        const containerStyle = window.getComputedStyle(resultContainer.nativeElement);\n        const containerRightMargin = +containerStyle.getPropertyValue('margin-left').replace('px', '');\n\n        if (containerRightMargin > minimumThreshold && containerRightMargin - minimumThreshold > minimumBtnRight) {\n            return containerRightMargin - minimumThreshold;\n        } else {\n            return minimumBtnRight;\n        }\n    }\n\n    public scrollTo(scrollId: string, scrollTop: number, smooth: boolean) {\n        if (!scrollId || scrollId === '') {\n            return;\n        }\n\n        const scrollEl = document.getElementById(scrollId) as HTMLElement;\n        if (!scrollEl) {\n            return;\n        }\n\n        requestAnimationFrame(() => {\n            scrollEl.style.scrollMarginTop = `${scrollTop}px`;\n            scrollEl.scrollIntoView({\n                behavior: smooth ? 'smooth' : 'auto',\n                block: 'start',\n            });\n        });\n    }\n\n    public scrollToVisibleArea(\n        el: HTMLElement | ElementRef | string,\n        fixedElement: HTMLElement | ElementRef | string,\n        options: {\n            scrollTop?: number;\n            scrollMarginBottom?: number;\n            scrollBlock?: 'start' | 'end' | 'center' | 'nearest';\n            includeElementsHeight?: string[];\n        } = {},\n        smooth = true\n    ): void {\n        let element;\n        if (typeof el === 'string') {\n            element = document.getElementById(el);\n        } else {\n            element = el instanceof HTMLElement ? el : el.nativeElement;\n        }\n\n        let fixElement;\n        if (typeof fixedElement === 'string') {\n            fixElement = document.getElementById(fixedElement);\n        } else {\n            fixElement = fixedElement instanceof HTMLElement ? fixedElement : fixedElement.nativeElement;\n        }\n\n        const scrollEl = element as HTMLElement;\n        const fixedEl = fixElement as HTMLElement;\n\n        if (!scrollEl || !fixedEl) {\n            return;\n        }\n\n        let elementsHeight = 0;\n        if (options.includeElementsHeight) {\n            options.includeElementsHeight.map((countEl) => {\n                const countElement = document.getElementById(countEl);\n\n                if (countElement) {\n                    elementsHeight = elementsHeight + countElement.offsetHeight;\n                }\n            });\n        }\n\n        const addScrollTop = options.scrollTop ? options.scrollTop : 0;\n        const scrollTop =\n            window.innerHeight - fixedEl.offsetHeight - scrollEl.offsetHeight - elementsHeight - addScrollTop;\n\n        if (this.isScrolledElementView(element, { elAddBottom: fixedEl.offsetHeight })) {\n            return;\n        }\n\n        requestAnimationFrame(() => {\n            if (scrollTop) {\n                scrollEl.style.scrollMarginTop = `${scrollTop}px`;\n            }\n\n            if (options.scrollMarginBottom) {\n                scrollEl.style.scrollMarginBottom = `${options.scrollMarginBottom}px`;\n            }\n\n            scrollEl.scrollIntoView({\n                behavior: smooth ? 'smooth' : 'auto',\n                block: options.scrollBlock ? options.scrollBlock : 'start',\n            });\n        });\n    }\n\n    public scrollToTop(): void {\n        const element = document.getElementsByClassName('wrapper');\n        if (element.length && element[0]) {\n            element[0].scrollTo({ top: 0 });\n        }\n    }\n\n    public scrollToElement(el: HTMLElement | ElementRef | string, options: Partial<ScrollIntoViewOptions> = {}): void {\n        const scrollOptions = {\n            ...this.defaultScrollingOptions,\n            ...options,\n        };\n        let element;\n        if (typeof el === 'string') {\n            element = document.getElementById(el);\n        } else {\n            element = el instanceof HTMLElement ? el : el.nativeElement;\n        }\n        element.scrollIntoView(scrollOptions);\n    }\n\n    public scrollToServiceContainer() {\n        this.scrollToElement('result-wrapper', { block: 'start' });\n    }\n\n    public isScrolledElementView(\n        el: HTMLElement | ElementRef | string,\n        options: { elAddTop?: number; elAddBottom?: number } = {}\n    ): boolean {\n        let element;\n        if (typeof el === 'string') {\n            element = document.getElementById(el);\n        } else {\n            element = el instanceof HTMLElement ? el : el.nativeElement;\n        }\n\n        const scrollEl = element as HTMLElement;\n        if (!scrollEl) {\n            return false;\n        }\n\n        const rect = scrollEl.getBoundingClientRect();\n        const elAddTop = options.elAddTop ? options.elAddTop : 0;\n        const elAddBottom = options.elAddBottom ? options.elAddBottom : 0;\n        const elemTop = rect.top + elAddTop;\n        const elemBottom = rect.bottom + elAddBottom;\n\n        return elemTop >= 0 && elemBottom <= window.innerHeight;\n    }\n\n    public disableScroll(keepPosition = false): void {\n        /*  if (this.isDisabled) {\n    return\n  }\n  this.isDisabled = true;\n  if (!this.paginateService) {\n    lazyLoad.load('PaginateService').then(function () {\n      PaginateService = lazyLoad.get('PaginateService');\n      PaginateService.disableAll();\n    });\n  } else {\n    PaginateService.disableAll();\n  }\n  document.documentElement.classList.add('disable-scroll');\n  const scrollTop = document.documentElement.scrollTop;\n\n  if (!GeneralService.isMobile() && !keepPosition) {\n    // to solve issue of filter disappearing on loader display\n    let filterEl = document.getElementById(\"filter\");\n    if (filterEl && scrollTop) {\n      //filterEl.parentElement.style.top = _scrollTop + 'px';\n      document.body.style.top = `-${window.scrollY}px`;\n      document.body.style.position = 'fixed';\n    }\n  }\n  if (this.scrollInstance) {\n    this.scrollInstance.sleep();\n    this.scrollInstance.ext('custom-extension').disableScroll();\n  }*/\n    }\n\n    public getPosition() {\n        /* if (this.scrollInstance) {\n             return this.scrollInstance.scroll().position.y;\n         } else {\n             return window.scrollY;\n         }*/\n    }\n\n    public enableScroll(scrollTop?: number, force = true): void {\n        /*\nif (!this.isDisabled) {\n  return\n}\nthis.isDisabled = false;\nif (!PaginateService) {\n  lazyLoad.load('PaginateService').then(function () {\n    PaginateService = lazyLoad.get('PaginateService');\n    PaginateService.enableAll();\n  });\n} else {\n  PaginateService.enableAll();\n}\n// Steve: we need this css to prevent scrolling in mobile please don't comment this\ndocument.documentElement.classList.remove('disable-scroll');\n\nif (!GeneralService.isMobile()) {\n  //let filterEl = document.getElementById(\"filter\");\n  //if (filterEl && _scrollTop) {\n  //  filterEl.parentElement.style.top = 'unset';\n  document.body.style.position = '';\n  document.body.style.top = '';\n  //}\n}\nwindow.scrollTo(0, scrollTop || _scrollTop || 0);\nif (this.scrollInstance) {\n  this.scrollInstance.ext('custom-extension').enableScroll();\n  this.scrollInstance.update(force);\n}\n*/\n    }\n\n    public init() {\n        return false;\n    }\n\n    public getInstance() {\n        return this.scrollInstance;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { GeneralService } from '@services/modules/core/general-service';\nimport { CombServiceIds } from '@core/constants/comb-service-ids';\nimport { CalTypes } from '@core/constants/call-types.const';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { Router } from '@angular/router';\nimport { SettingsService } from '@services/services/settings-service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { AppConfigDataService } from '@services/modules/core/dataservices/app-config-data.service';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject } from 'rxjs';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { ModalService } from '@services/modal.service';\nimport { PlatformService } from '@services/platform.service';\nimport { PageUtils } from '@core/utils/page-utils';\nimport { ToggleContentPages } from '@core/constants/toggle-content-pages';\n\ntype searchParam = { params: any; serviceSearch?: any };\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class InactivityHandler {\n    private readonly thirtyMinInMilliseconds = 30 * 60000;\n    private sessionTimeout: any;\n    private inactiveTimeout: any;\n    private listenerTimeout: any;\n\n    constructor(\n        private trazlerAPI: ApiAccessService,\n        private generalService: GeneralService,\n        private cartService: CartService,\n        private router: Router,\n        private searchDataService: SearchDataService,\n        private settingsService: SettingsService,\n        private appConfigDataService: AppConfigDataService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private modalService: ModalService,\n        private platformService: PlatformService\n    ) {\n        /*\n        //used to test inactivity handler\n        let self = this;\n        setInterval(function(){\n            if (window.sessionStorage.getItem(\"fake\") === \"true\"){\n                self.timeoutAlert(new Subject<{ params: any; serviceSearch?: any }>());\n                window.sessionStorage.setItem(\"fake\",\"false\");\n            }\n        },2000);*/\n    }\n\n    public sessionTimer(\n        sessionEndTimeInMinutes: number,\n        combId: CombinationId,\n        searchHandler$: Subject<searchParam>\n    ): void {\n        if (!sessionEndTimeInMinutes || sessionEndTimeInMinutes === 0) {\n            return;\n        }\n\n        const dt = new Date(new Date().getTime() + sessionEndTimeInMinutes * 60000);\n        StorageManagerUtil.set('sessionEndTime', dt.toString(), true);\n        this.startSessionTimer(dt, combId, searchHandler$);\n    }\n\n    public startSessionTimer(\n        sessionEndTime: Date | string | null,\n        combId: CombinationId,\n        searchHandler$: Subject<searchParam>\n    ): void {\n        sessionEndTime = sessionEndTime ? sessionEndTime : StorageManagerUtil.get('sessionEndTime', true);\n        if (!sessionEndTime) {\n            return;\n        }\n\n        if (this.sessionTimeout) {\n            clearTimeout(this.sessionTimeout);\n        }\n\n        const timer = new Date(sessionEndTime).getTime() - new Date().getTime();\n        this.sessionTimeout = setTimeout(\n            () => {\n                console.log('search expires');\n                if (this.platformService.isMobileDevice) {\n                    this.dialogService.closeAll();\n                }\n                this.timeoutAlert(searchHandler$);\n                // sendBookingRecoveryMail(combId, handler);\n                // provide some delay when timer < 0 (page was refreshed otherwise\n                // alert is not displayed as we are currently displaying the loader popup\n            },\n            timer <= 0 ? 5000 : timer\n        );\n\n        if (timer > this.thirtyMinInMilliseconds) {\n            this.startInactiveTimer(combId, searchHandler$);\n        }\n    }\n\n    public clearSession(): void {\n        this.generalService.stopWindowListeners();\n        StorageManagerUtil.remove('sessionEndTime');\n        if (this.sessionTimeout) {\n            clearTimeout(this.sessionTimeout);\n        }\n        if (this.inactiveTimeout) {\n            clearTimeout(this.inactiveTimeout);\n        }\n        if (this.listenerTimeout) {\n            clearTimeout(this.listenerTimeout);\n        }\n    }\n\n    private startInactiveTimer(combId: CombinationId, searchHandler$: Subject<searchParam>) {\n        if (this.inactiveTimeout) {\n            clearTimeout(this.inactiveTimeout);\n        }\n        this.generalService.stopWindowListeners();\n\n        this.inactiveTimeout = setTimeout(() => {\n            this.timeoutAlert(searchHandler$);\n        }, this.thirtyMinInMilliseconds);\n\n        if (this.listenerTimeout) {\n            clearTimeout(this.listenerTimeout);\n        }\n\n        this.listenerTimeout = setTimeout(() => {\n            this.generalService.startWindowListeners(this.startInactiveTimer.bind(this, combId, searchHandler$));\n        }, 3 * 60000);\n    }\n\n    private timeoutAlert(searchHandler$: Subject<searchParam>) {\n        if (\n            !PageUtils.is(this.router.url, ToggleContentPages.RESULT_PAGES) ||\n            //inactivity handler disabled in case of one or more service is booked\n            this.cartService.isSomeServiceBooked()\n        ) {\n            return;\n        }\n\n        this.clearSession();\n        const { update, combSearchInfos } = this.checkEnableUpdateSession();\n        if (!update) {\n            this.timeout();\n            return;\n        }\n\n        this.checkSession().then(\n            (resp: any) => {\n                this.dialogService.closeAll();\n                this.dialogService\n                    .openConfirmationDialog({\n                        title: this.translateService.instant('POPUPS.INACTIVITY.TITLE'),\n                        multipleContent: [this.translateService.instant('POPUPS.INACTIVITY.BODY')],\n                        confirmBtnTitle: this.translateService.instant('POPUPS.INACTIVITY.1_NEW_SEARCH'),\n                        cancelBtnTitle: this.translateService.instant('POPUPS.INACTIVITY.2_UPDATE'),\n                        icon: { name: 'inactivity-newsearch-dialog', iconStyle: { 'width.px': 48, 'height.px': 48 } },\n                    })\n                    .afterClosed()\n                    .subscribe((startNewSearch: TzDialogReturn) => {\n                        if (startNewSearch === CONFIRM) {\n                            if (this.platformService.isMobileDevice) {\n                                this.closeAllModal();\n                            } else {\n                                this.router.navigate(['search']);\n                            }\n\n                            return;\n                        }\n\n                        if (!resp.fullReset) {\n                            // extend the session and search missing service\n                            this.sessionTimer(resp.combTimeout, this.searchDataService.getCombId(), searchHandler$);\n                            const searchInfos = this.searchDataService.getSearch(resp.firstServiceId);\n                            if (searchInfos) {\n                                /* forceResultPage used to navigate the flight/train page\n                                forcefully to result screen if the search starts from summary*/\n                                const forceResultPage = true;\n                                searchHandler$.next({\n                                    params: { serviceId: resp.firstService, editMode: true, forceResultPage },\n                                    serviceSearch: searchInfos,\n                                });\n                                return;\n                            }\n                        }\n                        this.reCreateSession(combSearchInfos, searchHandler$);\n                    });\n            },\n            (failure: any) => {\n                console.error('***unknown cart error', { failure });\n                this.reCreateSession(combSearchInfos, searchHandler$);\n            }\n        );\n    }\n\n    private checkEnableUpdateSession() {\n        const combSearchInfos = StorageManagerUtil.get('searchInfos');\n        console.log(combSearchInfos);\n        if (!combSearchInfos) {\n            return {\n                update: false,\n            };\n        }\n        const recommendedCartData = CartService.getRecommendedCartInfo(combSearchInfos.combId);\n        if (recommendedCartData) {\n            combSearchInfos.recommendedCartData = recommendedCartData;\n        }\n        delete combSearchInfos.combId;\n        return {\n            update: this.checkDate(combSearchInfos),\n            combSearchInfos,\n        };\n    }\n\n    private checkDate = (combSearchInfos: any) => {\n        let calType = CalTypes.CAL_TRIP_TYPE;\n\n        switch (combSearchInfos.context.services) {\n            case CombServiceIds.FLIGHT_TRAIN:\n            case CombServiceIds.FLIGHT:\n            case CombServiceIds.TRAIN:\n            case CombServiceIds.HOTEL:\n                break;\n            case CombServiceIds.TRANSFER: // transfer\n                calType = CalTypes.CAL_TRANSFER_TYPE;\n                break;\n            case CombServiceIds.RENTAL: //rental\n                calType = CalTypes.CAL_RENTAL_TYPE;\n                break;\n            default:\n                // check for single service\n                return false;\n        }\n\n        const cal = combSearchInfos.searchData[calType];\n        if (!cal) {\n            return false;\n        }\n        const now = new Date();\n        const calDate = new Date(`${cal.fromDate}T${cal.fromTime}`);\n        return now.getTime() < calDate.getTime();\n    };\n\n    private reCreateSession(combSearchInfos: any, searchHandler$: Subject<searchParam>) {\n        // LocalStorageManager.clear(LocalStorageManager.session);\n        this.settingsService.clearDeviceId();\n        this.appConfigDataService.initDeviceId(true).then(() => {\n            searchHandler$.next({\n                params: {},\n                serviceSearch: combSearchInfos,\n            });\n        });\n    }\n\n    private checkSession() {\n        return new Promise((resolve, reject) => {\n            this.trazlerAPI.resetSession(this.searchDataService.getCombId()).then(\n                (resp: any) => {\n                    resolve(resp);\n                },\n                (failure: any) => {\n                    reject(failure);\n                }\n            );\n        });\n    }\n\n    private timeout(): void {\n        // LocalStorageManager.clear(LocalStorageManager.session);\n        this.settingsService.clearDeviceId();\n        this.dialogService.closeAll();\n        this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant('POPUPS.INACTIVITY.TITLE'),\n                multipleContent: [this.translateService.instant('POPUPS.INACTIVITY.BODY')],\n                confirmBtnTitle: this.translateService.instant('POPUPS.INACTIVITY.1_NEW_SEARCH'),\n                icon: { name: 'inactivity-dialog', iconStyle: { 'width.px': 80, 'height.px': 54 } },\n            })\n            .afterClosed()\n            .subscribe(() => {\n                if (this.platformService.isMobileDevice) {\n                    this.closeAllModal();\n                } else {\n                    this.router.navigate(['search']);\n                }\n\n                return;\n            });\n    }\n\n    private closeAllModal(): void {\n        this.modalService.getTop().then((isOverlay) => {\n            if (!!isOverlay) {\n                this.modalService\n                    .dismiss()\n                    .then(() => {\n                        this.closeAllModal();\n                    })\n                    .catch((err) => {\n                        console.error('dismiss modal error:', err);\n                    });\n            } else {\n                this.goToHome();\n            }\n        });\n    }\n\n    private goToHome(): void {\n        setTimeout(() => {\n            this.router.navigate(['search']).catch((e) => console.error(e));\n        }, 300);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ServiceId, ServiceIdStr } from '@core/constants/service-id.const';\nimport { SearchEvents } from '@core/constants/search-events';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { SERVICE_DEFAULT_SORT } from '@core/constants/default-sort';\nimport { IPreSearchResult, ISSIBase } from '@schemas/modules/search/search';\nimport { MetaDataExt } from '@schemas/modules/search/meta';\nimport { TabRoutingService } from '@services/searchEngine/services/tab-routing.service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { CombServiceIds } from '@core/constants/comb-service-ids';\n\nexport interface ITripQuery {\n    combId: CombinationId;\n    servicesIds: CombServiceIds;\n    deviceId: string;\n    lang: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SearchMetadataService {\n    constructor(\n        private searchDataService: SearchDataService,\n        private apiAccessService: ApiAccessService,\n        private tabRoutingService: TabRoutingService,\n        private cartRoutingService: CartRoutingService\n    ) {}\n\n    public parseTripUrl(url: string): ITripQuery {\n        const queryParams = new URLSearchParams(url);\n        return {\n            combId: queryParams.get('combId') ? queryParams.get('combId') : '',\n            deviceId: queryParams.get('deviceId') ? queryParams.get('deviceId') : '',\n            lang: queryParams.get('lang') ? queryParams.get('lang') : '',\n            servicesIds: queryParams.get('services') ? queryParams.get('services') : CombServiceIds.INVALID,\n        } as ITripQuery;\n    }\n\n    public openTrip(tripQuery: ITripQuery): Promise<any> {\n        this.searchDataService.saveInfos(\n            {\n                combId: tripQuery.combId,\n                searchData: {},\n                passengers: {\n                    rooms: 1,\n                    infantAges: [] as number[],\n                    childrenAges: [] as number[],\n                    youthAges: [] as number[],\n                },\n                context: {\n                    services: tripQuery.servicesIds,\n                    runMode: this.searchDataService.RUN_FAST,\n                    travelType: 'roundTrip',\n                },\n            },\n            false\n        );\n        return this.fillFastRunMeta().then(() => {\n            this.cartRoutingService.changeState(ServiceId.ACC, undefined, false, undefined);\n        });\n    }\n\n    public fillFastRunMeta(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.apiAccessService.getAllMetaRes(this.searchDataService.getCombId()).then(\n                (metaRes: { [key in ServiceIdStr]: IPreSearchResult }) => {\n                    this.searchDataService.resetSearchResults();\n                    let serviceId: ServiceIdStr;\n\n                    for (serviceId in metaRes) {\n                        if (metaRes.hasOwnProperty(serviceId)) {\n                            this.saveSearch(metaRes[serviceId], SearchEvents.EVENT_TRIP_PLANNER);\n                        }\n                    }\n                    this.tabRoutingService.initRouting(this.searchDataService.searchInfos.context.services, false);\n                    resolve();\n                },\n                (error: any) => {\n                    console.error(error);\n                    reject(error);\n                }\n            );\n        });\n    }\n\n    public saveTripPlannerSearchInfos(res: ISSIBase, serviceId: ServiceId) {\n        this.searchDataService.saveServicesInfos(res, serviceId);\n    }\n\n    public saveSearch(res: IPreSearchResult, eventId?: any): void {\n        if (!res || !res.metaData) {\n            return;\n        }\n        console.log('Saving trip planner info for :' + res.metaData.serviceId, { res });\n        // if (res.metaData.complete) {\n        //    this.tripPlannerService.setComplete(res.metaData.serviceId);\n        // }\n        res.serviceSearch.passengers.total =\n            res.serviceSearch.passengers.adults +\n            res.serviceSearch.passengers.children +\n            res.serviceSearch.passengers.infants;\n        this.searchDataService.saveServicesInfos(res.serviceSearch, res.metaData.serviceId);\n        if (res.metaData.serviceId === ServiceId.FLIGHT || res.metaData.serviceId === ServiceId.TRAIN) {\n            this.searchDataService.saveServicesInfos(res.serviceSearch, ServiceId.FLIGHT_TRAIN);\n        }\n        this.saveMeta(res.metaData, eventId);\n    }\n\n    private saveMeta(metaData: MetaDataExt, eventId: any): void {\n        console.log('Saving metadata for :' + metaData.serviceId);\n\n        switch (metaData.serviceId) {\n            case ServiceId.TRAIN:\n            case ServiceId.FLIGHT:\n                const params = {\n                    dataId: metaData.dataId,\n                    resultLength: metaData.count,\n                    nbOnwards: metaData.nbOnwards,\n                    nbReturns: metaData.nbReturns,\n                    bestValueFlight: metaData.bestValueFlight ? metaData.bestValueFlight : '',\n                    recommendedItemPrice: metaData.recommendedItemPrice,\n                    recommendedItemPriceCur: metaData.recommendedItemPriceCur,\n                    serviceType: metaData.serviceId === ServiceId.TRAIN ? 'train' : 'transport',\n                    sortBy: SERVICE_DEFAULT_SORT[metaData.serviceId as ServiceId],\n                };\n\n                this.searchDataService.saveResult(metaData.serviceId, params, eventId);\n                break;\n\n            case ServiceId.CAR_RENTAL:\n                this.searchDataService.saveResult(\n                    ServiceId.CAR_RENTAL,\n                    {\n                        dataId: metaData.dataId,\n                        resultLength: metaData.count,\n                        recommendedItemPrice: metaData.recommendedItemPrice,\n                        recommendedItemPriceCur: metaData.recommendedItemPriceCur,\n                        showMap: metaData.showMap,\n                        sortBy: SERVICE_DEFAULT_SORT[metaData.serviceId as ServiceId],\n                    },\n                    eventId\n                );\n                break;\n\n            case ServiceId.TRANSFER:\n                this.searchDataService.saveResult(\n                    ServiceId.TRANSFER,\n                    {\n                        dataId: metaData.dataId,\n                        resultLength: metaData.count,\n                        serviceType: metaData.serviceType,\n                        onwardResultsLength: metaData.nbOnwards,\n                        returnResultsLength: metaData.nbReturns,\n                        recommendedItemPrice: metaData.recommendedItemPrice,\n                        recommendedItemPriceCur: metaData.recommendedItemPriceCur,\n                        sortBy: SERVICE_DEFAULT_SORT[metaData.serviceId as ServiceId],\n                    },\n                    eventId\n                );\n                break;\n\n            case ServiceId.ACC:\n                // req.dataID = metaData.dataID;\n                this.searchDataService.saveResult(\n                    ServiceId.ACC,\n                    {\n                        dataId: metaData.dataId,\n                        recommendedItemPrice: metaData.recommendedItemPrice,\n                        recommendedItemPriceCur: metaData.recommendedItemPriceCur,\n                        count: metaData.count,\n                        resultLength: metaData.count,\n                        nbOnwards: metaData.nbOnwards,\n                        nbReturns: metaData.nbReturns,\n                        complete: metaData.complete,\n                        sortBy: SERVICE_DEFAULT_SORT[metaData.serviceId as ServiceId],\n                        info: metaData.info, // @todo: [Remove] temporarily added to see original count of provider\n                    },\n                    eventId\n                );\n                break;\n            default:\n        }\n    }\n}\n","import { ServiceId } from '@core/constants/service-id.const';\nimport { DatesUtils } from '@core/utils/dates-utils';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Injectable } from '@angular/core';\nimport { NightChoices } from '@schemas/modules/search/search';\nimport { DialogService } from '@services/dialog.service';\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\n\nexport interface INightCheckResult {\n    ignore: boolean;\n    changed: boolean;\n    curChoice: NightChoices;\n}\n\ninterface ICheckNightRes {\n    askNightDate: boolean;\n    newChoice: NightChoices;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NightChoiceService {\n    private userNightPref = NightChoices.NIGHT_CHOICE_UNDEFINED;\n\n    constructor(\n        private cartService: CartService,\n        private searchDataService: SearchDataService,\n        private translateService: TranslateService,\n        private dialogService: DialogService\n    ) {}\n\n    public checkNightArrival(): Promise<INightCheckResult> {\n        return new Promise<INightCheckResult>((resolve, reject) => {\n            if (this.userNightPref !== NightChoices.NIGHT_CHOICE_UNDEFINED) {\n                resolve({\n                    ignore: true,\n                    changed: false,\n                    curChoice: this.userNightPref,\n                });\n            } else {\n                const { askNightDate, newChoice } = this.requestNightArrivalCheck();\n                if (askNightDate) {\n                    return this.requestDateCheck(newChoice, resolve);\n                } else {\n                    resolve({\n                        ignore: true,\n                        changed: false,\n                        curChoice: this.userNightPref,\n                    });\n                }\n            }\n        });\n    }\n\n    public resetNightPreference(): void {\n        this.userNightPref = NightChoices.NIGHT_CHOICE_UNDEFINED;\n    }\n\n    public requestNightArrivalCheck(): ICheckNightRes {\n        const searchServiceInfos = this.searchDataService.getSearchServiceInfos();\n        if (\n            searchServiceInfos.services[ServiceId.FLIGHT] &&\n            searchServiceInfos.services[ServiceId.ACC] &&\n            this.searchDataService.hasAcc()\n        ) {\n            const flight = this.cartService.getCartItemData(ServiceId.FLIGHT);\n\n            if (flight && flight.carts[0]) {\n                const arrivalTimeH = parseInt(\n                    DatesUtils.getTZFormatTime(\n                        flight.carts[0].selectedItem.data.departureSummary.arrivalTzFormat\n                    ).split(':')[0],\n                    10\n                );\n                const arrivalDate = DatesUtils.getTZFormatDate(\n                    flight.carts[0].selectedItem.data.departureSummary.arrivalTzFormat\n                );\n                const hotelDate = searchServiceInfos.services[ServiceId.ACC].searchData.tripCal.fromDate;\n\n                if (arrivalTimeH >= 0 && arrivalTimeH <= 5) {\n                    const newChoice =\n                        arrivalDate !== hotelDate\n                            ? NightChoices.NIGHT_CHOICE_CUR_DAY\n                            : NightChoices.NIGHT_CHOICE_PREV_DAY;\n                    if (newChoice === this.userNightPref || !this.userNightPref) {\n                        return {\n                            askNightDate: true,\n                            newChoice,\n                        };\n                    }\n                }\n            }\n        }\n\n        return {\n            askNightDate: false,\n            newChoice: NightChoices.NIGHT_CHOICE_UNDEFINED,\n        };\n    }\n\n    private requestDateCheck(newChoice: NightChoices, resolver: any): void {\n        const msg =\n            newChoice === NightChoices.NIGHT_CHOICE_CUR_DAY\n                ? 'POPUPS.SEARCH_ON_ARRIVAL.BODY'\n                : 'POPUPS.BOOK_BEFORE_ARRIVAL.BODY';\n        const title =\n            newChoice === NightChoices.NIGHT_CHOICE_CUR_DAY\n                ? 'POPUPS.SEARCH_ON_ARRIVAL.TITLE'\n                : 'POPUPS.BOOK_BEFORE_ARRIVAL.TITLE';\n        const button1 =\n            newChoice === NightChoices.NIGHT_CHOICE_CUR_DAY\n                ? 'POPUPS.SEARCH_ON_ARRIVAL.1_YES'\n                : 'POPUPS.BOOK_BEFORE_ARRIVAL.1_YES';\n        const button2 =\n            newChoice === NightChoices.NIGHT_CHOICE_CUR_DAY\n                ? 'POPUPS.SEARCH_ON_ARRIVAL.2_NO'\n                : 'POPUPS.BOOK_BEFORE_ARRIVAL.2_NO';\n\n        this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant(title),\n                content: this.translateService.instant(msg),\n                confirmBtnTitle: this.translateService.instant(button1),\n                cancelBtnTitle: this.translateService.instant(button2),\n            })\n            .afterClosed()\n            .subscribe((dialogReturn: TzDialogReturn) => {\n                if (dialogReturn === CONFIRM) {\n                    this.userNightPref = newChoice;\n                    resolver({ ignore: false, changed: true, curChoice: this.userNightPref });\n                } else {\n                    this.userNightPref =\n                        newChoice === NightChoices.NIGHT_CHOICE_CUR_DAY\n                            ? NightChoices.NIGHT_CHOICE_PREV_DAY\n                            : NightChoices.NIGHT_CHOICE_CUR_DAY;\n                    resolver({\n                        ignore: false,\n                        changed: false,\n                        curChoice: this.userNightPref,\n                    });\n                }\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n// eslint-disable-next-line max-len\n@Injectable({\n    providedIn: 'root',\n})\nexport class ResultsSharedServices {\n    private blockPage: Subject<boolean> = new Subject<boolean>();\n\n    get pageBlocker(): Subject<boolean> {\n        return this.blockPage;\n    }\n}\n","/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { SettingsService } from '@services/services/settings-service';\nimport { CalTypes } from '@core/constants/call-types.const';\nimport { Trip } from '@core/constants/trip';\nimport { DatePipe } from '@angular/common';\nimport { TzDatePipe } from '@shared/pipes/tz-date.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DatesService {\n    private mapLocaleDayNum: number[] = [];\n    tzDateTime: any;\n    tzTimeDate: any;\n    tzMonthDay: any;\n    monthDateFmt: any;\n    monthDateTimeFmt: any;\n\n    constructor(private settingsService: SettingsService, private datePipe: DatePipe, private tzDatePipe: TzDatePipe) {\n        this.init();\n        this.settingsService.selectedLanguageSubject.subscribe(() => {\n            this.init();\n        });\n    }\n\n    public static getNewDate(date: Date | string): Date {\n        let nd;\n        if (date instanceof Date) {\n            nd = new Date(date);\n        } else {\n            const res = date.split('-');\n            if (res.length === 3) {\n                // to avoid timezone conversion\n                nd = new Date(+res[0], +res[1] - 1, +res[2]);\n            } else {\n                nd = new Date(date);\n            }\n        }\n        return nd;\n    }\n\n    public static getDateNoTimeFrom(year: string, month: string, day: string): string {\n        return year + '-' + ('0' + (month + 1)).slice(-2) + '-' + ('0' + day).slice(-2);\n    }\n\n    public static getDateNoTime(date: string | Date) {\n        if (typeof date === 'object') {\n            return (\n                date.getFullYear() +\n                '-' +\n                ('0' + (date.getMonth() + 1)).slice(-2) +\n                '-' +\n                ('0' + date.getDate()).slice(-2)\n            );\n        }\n        return DatesService.getDateNoTimeFromStr(date);\n    }\n\n    public getMonth(monthNumber: number, isShort: boolean): string {\n        return isShort\n            ? this.settingsService.locales.DATETIME_FORMATS.SHORTMONTH[monthNumber]\n            : this.settingsService.locales.DATETIME_FORMATS.MONTH[monthNumber];\n    }\n\n    public formDoubleDate(fromDate: any, toDate: any): string {\n        //const fromDateDay = fromDate.getDate().toString();\n\n        //dateIns.fromDisplayStr = fromDateDay;\n        if (fromDate && toDate) {\n            //toDateDay = toDate.getDate().toString();\n            let part1: string | null, part2: string | null;\n            if (fromDate.getMonth() === toDate.getMonth()) {\n                part1 = this.tzDatePipe.transform(fromDate, 'tzDoubleDatePart1SameMonth');\n                part2 = this.tzDatePipe.transform(toDate, 'tzDoubleDatePart2SameMonth');\n            } else {\n                part1 = this.tzDatePipe.transform(fromDate, 'tzDoubleDatePart1');\n                part2 = this.tzDatePipe.transform(toDate, 'tzDoubleDatePart2');\n            }\n            return (part1 ? part1 : '') + (part2 ? part2 : '');\n        }\n\n        if (toDate) {\n            const part = this.tzDatePipe.transform(toDate, 'mediumDate');\n            return part ? part : '';\n            /*toDateDay = toDate.getDate().toString();\n            const month = toDate.getMonth();\n            const toMonth = this.settingsService.locales.DATETIME_FORMATS.SHORTMONTH[month];\n            displayStr = displayStr + ' - ' + toDateDay + ' ' + toMonth;\n            dateIns.toDisplayStr = toDateDay + ' ' + toMonth + ', ' + toDate.getFullYear();*/\n        }\n        const part = this.tzDatePipe.transform(fromDate, 'mediumDate');\n        return part ? part : '';\n        /*if (toDate && fromDate.getMonth() !== toDate.getMonth()) {\n            const fromMonth = this.settingsService.locales.DATETIME_FORMATS.SHORTMONTH[fromDate.getMonth()];\n            const toMonth = this.settingsService.locales.DATETIME_FORMATS.SHORTMONTH[toDate.getMonth()];\n            displayStr =\n                fromDateDay + ' ' + fromMonth + ' - ' + toDateDay + ' ' + toMonth + ', ' + toDate.getFullYear();\n            dateIns.fromDisplayStr = fromDateDay + ' ' + fromMonth;\n        }\n\n        return displayStr;*/\n    }\n    private static setTime(date: any, time: string) {\n        let dateObj = DatesService.getNewDate(date);\n        if (!time) return dateObj;\n\n        let timeArr = time.split(':');\n        if (timeArr.length !== 2) return dateObj;\n\n        dateObj.setHours(parseInt(timeArr[0], 10));\n        dateObj.setMinutes(parseInt(timeArr[1], 10));\n        return dateObj;\n    }\n\n    private static getDateNoTimeFromStr(date: string): any {\n        const newDate = DatesService.getNewDate(date);\n        return this.getDateNoTime(newDate);\n    }\n\n    public getWeekHeads(): string[] {\n        const localesDays = this.settingsService.locales.DATETIME_FORMATS.SHORTDAY.slice(1);\n        localesDays.push(this.settingsService.locales.DATETIME_FORMATS.SHORTDAY[0]);\n        const res = localesDays.slice(this.settingsService.locales.DATETIME_FORMATS.FIRSTDAYOFWEEK);\n        return [...res, ...localesDays.slice(0, this.settingsService.locales.DATETIME_FORMATS.FIRSTDAYOFWEEK)];\n    }\n\n    public getDay(date: Date): number {\n        return this.mapLocaleDayNum[date.getDay()];\n    }\n\n    public getMonthArrayForCalendar(year: any, month: any) {\n        const monthFirstDay = new Date(year, month, 1);\n        const lastDay = new Date(year, month + 1, 0);\n        const monthsArr = [];\n\n        for (let d = 0; d < this.getDay(monthFirstDay); d++) {\n            monthsArr.push({\n                id: 'D' + d,\n                text: '',\n            });\n        }\n        for (let i = 1; i <= lastDay.getDate(); i++) {\n            monthsArr.push({\n                id: i,\n                text: i,\n                isLast: i === lastDay.getDate(),\n                disable: false,\n            });\n        }\n        let noOfWeeks = parseInt((monthsArr.length / 7).toString(), 10);\n        const rem = monthsArr.length % 7;\n        if (rem > 0) {\n            noOfWeeks = noOfWeeks + 1;\n        }\n\n        const months = [];\n        for (let s = 0; s < noOfWeeks; s++) {\n            const sliceArr = monthsArr.slice(s * 7, s * 7 + 7);\n            months.push(sliceArr);\n        }\n\n        return months;\n    }\n\n    // build a mapping map between day number (starting on Sunday) and day number in locale format (starting as locales defined it)\n    // for instance when date.getDay() returns 0 (meaning sunday) the mapping table returns 6 if first day of week is 0 (monday)\n    private buildLocalDayMap(): void {\n        const firstDay = this.settingsService.locales.DATETIME_FORMATS.FIRSTDAYOFWEEK;\n        for (let i = 0; i < 7; i++) {\n            if (6 - firstDay + i < 7) {\n                this.mapLocaleDayNum[i] = 6 - firstDay + i;\n            } else {\n                this.mapLocaleDayNum[i] = firstDay + i - 1;\n            }\n        }\n    }\n\n    public getCalendarDateString(\n        dateFrom: string,\n        dateTo: string,\n        displayStr: string | undefined | null,\n        conf: any,\n        fromTime = '',\n        toTime = '',\n        travelType: any = Trip.ONE_WAY\n    ): string {\n        if (((!dateTo || dateTo === '') && (!dateFrom || dateFrom === '')) || !conf) {\n            return '';\n        }\n\n        let shortTimeFormat = this.settingsService.locales.DATETIME_FORMATS.shortTime;\n        let fdate = DatesService.setTime(dateFrom, fromTime);\n        if (\n            !dateTo ||\n            dateTo === '' ||\n            conf.dateRange === CalTypes.CAL_RANGE_ONE_DATE ||\n            (conf.dateRange === CalTypes.CAL_RANGE_TRAVEL && travelType === Trip.ONE_WAY)\n        ) {\n            if (conf.time && fromTime) {\n                return this.datePipe\n                    .transform(dateFrom, this.tzDateTime)!\n                    .replace(\n                        this.datePipe.transform(dateFrom, shortTimeFormat, undefined)!,\n                        this.datePipe.transform(fdate, shortTimeFormat)!\n                    );\n            }\n\n            const res = this.datePipe.transform(dateFrom, this.settingsService.locales.DATETIME_FORMATS.mediumDate);\n            return res ? res : '';\n        }\n\n        let tdate = DatesService.setTime(dateTo, toTime);\n        if (!dateFrom || dateFrom === '') {\n            if (conf.time && toTime) {\n                return this.datePipe\n                    .transform(dateTo, this.tzDateTime)!\n                    .replace(\n                        this.datePipe.transform(dateTo, shortTimeFormat)!,\n                        this.datePipe.transform(tdate, shortTimeFormat)!\n                    );\n            }\n            const res = this.datePipe.transform(dateTo, this.settingsService.locales.DATETIME_FORMATS.mediumDate);\n            return res ? res : '';\n        }\n        if (conf.time) {\n            return (\n                this.datePipe\n                    .transform(dateFrom, this.monthDateTimeFmt)!\n                    .replace(\n                        '00:00',\n                        this.datePipe.transform(fdate, this.settingsService.locales.DATETIME_FORMATS.shortTime)!\n                    ) +\n                ' – ' +\n                this.datePipe\n                    .transform(dateTo, this.monthDateTimeFmt)!\n                    .replace(\n                        '00:00',\n                        this.datePipe.transform(tdate, this.settingsService.locales.DATETIME_FORMATS.shortTime)!\n                    )\n            );\n        }\n\n        return this.formDoubleDate(fdate, tdate);\n        /*var fromDate = new Date(fdate);\n        var toDate = new Date(tdate);\n        if (fromDate.getMonth() === toDate.getMonth()) {\n            if (fromDate.getDate() === toDate.getDate()) {\n                return this.datePipe.transform(dateFrom, this.settingsService.locales.DATETIME_FORMATS.mediumDate);\n            }\n\n            let idx = -1;\n            let splitFormat = this.settingsService.locales.DATETIME_FORMATS.mediumDate.split(' ');\n            for (let i = 0; i < splitFormat.length; i++) {\n                if (splitFormat[i] === 'd' || splitFormat[i] === 'd,') {\n                    // checking for days element position\n                    idx = i;\n                }\n                if (idx >= 0) {\n                    // days position found\n                    break;\n                }\n            }\n            let dateRes = this.datePipe.transform(dateTo, this.settingsService.locales.DATETIME_FORMATS.mediumDate);\n            let splitDateRes: any = dateRes?.split(' ');\n            splitDateRes[idx] = `${fromDate.getDate().toString()} – ${toDate.getDate().toString()}`;\n\n            return splitDateRes.join(' ');\n        } else {\n            let dateRes = this.datePipe.transform(dateTo, this.settingsService.locales.DATETIME_FORMATS.mediumDate);\n            return dateRes!.replace(\n                this.datePipe.transform(dateTo, this.monthDateFmt)!,\n                this.datePipe.transform(dateFrom, this.monthDateFmt) +\n                    ' – ' +\n                    this.datePipe.transform(dateTo, this.monthDateFmt)\n            );\n        }*/\n    }\n\n    private init(): void {\n        const regex1 = /(MMM.*d)|(d.*MMM)/gm;\n        this.tzDateTime =\n            this.settingsService.locales.DATETIME_FORMATS.mediumDate +\n            ' ' +\n            this.settingsService.locales.DATETIME_FORMATS.shortTime; //\"d MMM y HH:mm\"\n        this.tzTimeDate =\n            this.settingsService.locales.DATETIME_FORMATS.shortTime +\n            ' ' +\n            this.settingsService.locales.DATETIME_FORMATS.mediumDate; //\"HH:mm d MMM y\"\n        this.tzMonthDay = this.settingsService.locales.DATETIME_FORMATS.medium.substring(0, 5); //\"d MMM\"\n        // we extract d MMM format ( result can be 'MMM d', 'd MMM', ... depending on lang\n        let m = regex1.exec(this.settingsService.locales.DATETIME_FORMATS.mediumDate);\n        if (m && m.length) {\n            this.monthDateFmt = m[0];\n        }\n        this.monthDateTimeFmt = this.monthDateFmt + ' HH:mm';\n        this.buildLocalDayMap();\n    }\n}\n\n/*\n\nangular.module('trazler.services.DatesService', []).service('DatesService', [\"$rootScope\", \"$locale\", \"$filter\", \"ListenersService\",\n    function ($rootScope, $locale, $filter, ListenersService) {\n        // defining formats for date formatting by using the predefined formats that we get from locale\n        let tzDateTime;\n        let tzTimeDate;\n        let tzMonthDay;\n        // we extract d MMM format ( result can be 'MMM d', 'd MMM', ... depending on lang\n        let monthDateFmt;\n        let monthDateTimeFmt;\n        let mapLocaleDayNum = [];\n        let listenerId;\n\n        function init() {\n            const regex1 = /(MMM.*d)|(d.*MMM)/gm;\n            tzDateTime = $locale.DATETIME_FORMATS.mediumDate + ' ' + $locale.DATETIME_FORMATS.shortTime; //\"d MMM y HH:mm\"\n            tzTimeDate = $locale.DATETIME_FORMATS.shortTime + ' ' + $locale.DATETIME_FORMATS.mediumDate; //\"HH:mm d MMM y\"\n            tzMonthDay = $locale.DATETIME_FORMATS.medium.substring(0, 5); //\"d MMM\"\n            // we extract d MMM format ( result can be 'MMM d', 'd MMM', ... depending on lang\n            let m = regex1.exec($locale.DATETIME_FORMATS.mediumDate);\n            if (m.length) {\n                monthDateFmt = m[0];\n            }\n            monthDateTimeFmt = monthDateFmt + ' HH:mm';\n\n            $rootScope.tzShortFullDate = $locale.DATETIME_FORMATS.fullDate.replace(', y', '').replace(' y', ''); //\"EEEE, d MMMM\"\n            $rootScope.tzDateTime = tzDateTime;\n            $rootScope.tzTimeDate = tzTimeDate;\n            $rootScope.tzMonthDay = tzMonthDay;\n            $rootScope.tzTrainDate = \"EEE MMMM d, y\";\n            $rootScope.tzMonthDate = monthDateFmt; //\"d MMM\"\n            $rootScope.tzMonthDateTimeFmt = monthDateTimeFmt;\n            //\"dd/MM/yy\"\n            $rootScope.tzPlaceholderFormat =\n            $locale.DATETIME_FORMATS.shortDate.replace(/m+/i, 'MM').replace(/d+/i, 'dd').replace(/y+/i, 'yyyy');\n            buildLocalDayMap();\n            if (!listenerId) {\n                listenerId = ListenersService.RegisterListener(ListenersService.LISTEN_LANG, init);\n            }\n        }\n\n\n        function getPlaceHolderDateFormat() {\n            return $rootScope.tzPlaceholderFormat;\n        }\n\n        init();\n\n        // getAgeDiff gets the diff between two dates sent\n        function getAgeDiff(d1, d2) {\n            if (!d1) {\n                return 0\n            }\n\n            var ageAt = d2 ? new Date(d2) : new Date();\n            var birthDate = new Date(d1);\n            var age = ageAt.getFullYear() - birthDate.getFullYear();\n            var m = ageAt.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && ageAt.getDate() < birthDate.getDate())) {\n                age--;\n            }\n            return age;\n        }\n\n        function getAge(dob, ageAt) {\n            let monthDiff = (ageAt ? new Date(ageAt) : new Date()) - dob;\n            let ageDT = new Date(monthDiff);\n            let year = ageDT.getUTCFullYear();\n            return Math.abs(year - 1970);\n        }\n\n        function getProfileDate(dateStr) {\n            if (!dateStr) return;\n            if (dateStr === \"01/01/0001\") return;\n\n            let parts = dateStr.split(\"/\") || [];\n            if (parts.length !== 3) return;\n\n            let dd = parts[0];\n            let mm = parseInt(parts[1]);\n            let yyyy = parts[2];\n\n            // In js month starts at 0\n            mm = mm - 1;\n            return new Date(yyyy, mm, dd);\n        }\n\n\n        // return the day using locale configuration for first day of week\n\n\n        function getDateInMilliSeconds(dateStr) {\n            if (dateStr === \"\") return;\n            return Date.parse(dateStr);\n        }\n\n\n        function getTZFormatDate(tzDate) {\n            return tzDate.split('T')[0];\n        }\n\n        function getTZFormatTime(tzDate) {\n            return tzDate.split('T')[1];\n        }\n\n        function getDateFromTzDate(tzDate) {\n            if (!tzDate) {\n                console.error('invalidate date received');\n                return null\n            }\n            let dateParts = tzDate.split(/[\\-|T:]/);\n            if (dateParts.length < 3) {\n                console.error('invalidate date received:' + tzDate);\n                return null\n            }\n            return new Date(dateParts[0], dateParts[1] - 1, dateParts[2],\n            dateParts.length > 3 ? dateParts[3] : 0, dateParts.length > 4 ? dateParts[4] : 0, 0, 0)\n        }\n\n\n\n        return {\n            init,\n            getAge,\n            getAgeDiff,\n            getDateFromTzDate,\n            getDateNoTime,\n            getDateNoTimeFrom,\n            getWeekHeads,\n            getDay,\n            setTime,\n            get monthDateTimeFmt() {\n                return monthDateTimeFmt;\n            },\n            get monthDateFmt() {\n                return monthDateFmt;\n            },\n            get tzDateTime() {\n                return tzDateTime;\n            },\n            get tzTimeDate() {\n                return tzTimeDate;\n            },\n            get tzMonthDay() {\n                return tzMonthDay;\n            },\n            getProfileDate,\n            getDateInMilliSeconds,\n            getPlaceHolderDateFormat,\n            getTZFormatDate,\n            getTZFormatTime,\n            getNewDate\n        };\n    }\n]);\n*/\n","import { Injectable } from '@angular/core';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { FormArray } from '@angular/forms';\nimport { CalTypes } from '@core/constants/call-types.const';\nimport { EngineRuleService } from '@services/searchEngine/services/engine-rule-service';\nimport { CombServiceIds } from '@core/constants/comb-service-ids';\nimport { SearchHelpers } from '@services/searchEngine/services/search-helpers';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SearchUtilsService {\n    public static isNewSearch(\n        tempSearch: any,\n        search: any,\n        passengers: any,\n        selectedServices: any,\n        travelType: any,\n        editMode: boolean\n    ): boolean {\n        let isNewSearch = false;\n        const combinationParams = EngineRuleService.buildSearchFieldsObj(selectedServices, travelType);\n        const resultSearch = tempSearch.searchData;\n        const resultPassenger = tempSearch.passengers;\n        let calField;\n        let compareToWithAddress = false;\n\n        if (tempSearch.context.services !== SearchHelpers.getServiceValue(selectedServices)) {\n            return true;\n        }\n        if (!editMode && tempSearch.context.services === CombServiceIds.HOTEL) {\n            // used to compare search fields from home page with address field stored\n            // as for 0100 we store to and address into address field\n            // so we need to compare to with stored address or ignore to when\n            // address is set on home page\n            compareToWithAddress = true;\n        }\n        for (const combParam of combinationParams) {\n            let compareAddress = '';\n            for (const k in combParam) {\n                if (combParam.hasOwnProperty(k)) {\n                    switch (k) {\n                        case 'from':\n                        case 'to':\n                        case 'address':\n                            if (compareToWithAddress) {\n                                if (k === 'to') {\n                                    if (search.address && search.address.displayStr) {\n                                        // we skip 'to' comparison will be done with address\n                                        continue;\n                                    }\n                                    //we will compare 'to' with saved 'address' field\n                                    compareAddress = 'address';\n                                } else if (k === 'address' && (!search.address || !search.address.displayStr)) {\n                                    continue;\n                                }\n                            } else {\n                                compareAddress = k;\n                            }\n                            if (search[k]) {\n                                if (\n                                    search[k].uniqueKey &&\n                                    resultSearch[compareAddress] &&\n                                    resultSearch[compareAddress].uniqueKey &&\n                                    search[k].uniqueKey !== '' &&\n                                    search[k].uniqueKey !== resultSearch[compareAddress].uniqueKey\n                                ) {\n                                    isNewSearch = true;\n                                } else if (\n                                    !resultSearch[compareAddress] ||\n                                    (search[k].placeId !== resultSearch[compareAddress].placeId &&\n                                        (search[k].placeId || resultSearch[compareAddress].placeId) &&\n                                        (resultSearch[compareAddress].placeId !== 'dummy' ||\n                                            !SearchUtilsService.sameCoord(resultSearch[compareAddress], search[k])))\n                                ) {\n                                    isNewSearch = true;\n                                } else if (\n                                    search[k].placeId &&\n                                    resultSearch[compareAddress].placeId &&\n                                    search[k].placeId !== '' &&\n                                    search[k].placeId === resultSearch[compareAddress].placeId &&\n                                    search[k].latitude + search[k].longitude + search[k].placeType !==\n                                        resultSearch[compareAddress].latitude +\n                                            resultSearch[compareAddress].longitude +\n                                            resultSearch[compareAddress].placeType\n                                ) {\n                                    /* Places in city shares same placeId so we compare latitude + longitude + placeType*/\n                                    isNewSearch = true;\n                                }\n                            }\n\n                            break;\n                        case CalTypes.CAL_TRIP_TYPE:\n                            if (\n                                (search[k] && !resultSearch[k]) ||\n                                (search[k] &&\n                                    resultSearch[k] &&\n                                    (search[k].fromDate !== resultSearch[k].fromDate ||\n                                        search[k].toDate !== resultSearch[k].toDate))\n                            ) {\n                                isNewSearch = true;\n                            }\n                            calField = k;\n                            break;\n                        case CalTypes.CAL_RENTAL_TYPE:\n                        case CalTypes.CAL_TRANSFER_TYPE:\n                        case CalTypes.CAL_MEETING_TYPE:\n                            if (\n                                (search[k] && !resultSearch[k]) ||\n                                (search[k] &&\n                                    resultSearch[k] &&\n                                    (search[k].fromDate !== resultSearch[k].fromDate ||\n                                        search[k].toDate !== resultSearch[k].toDate ||\n                                        search[k].fromTime !== resultSearch[k].fromTime ||\n                                        search[k].toTime !== resultSearch[k].toTime))\n                            ) {\n                                isNewSearch = true;\n                            }\n                            calField = k;\n                            break;\n                        case 'persons':\n                            if (\n                                passengers.adults !== resultPassenger.adults ||\n                                passengers.children !== resultPassenger.children ||\n                                passengers.infants !== resultPassenger.infants ||\n                                (combParam[k].driver &&\n                                    passengers.driversAge !== resultPassenger.driversAge &&\n                                    (passengers.driversAge || resultPassenger.driversAge)) ||\n                                passengers.rooms !== resultPassenger.rooms\n                            ) {\n                                isNewSearch = true;\n                            } else {\n                                //if nothing had been changed, check for children age changes\n                                for (const j in passengers.childrenAges) {\n                                    if (passengers.childrenAges[j] !== resultPassenger.childrenAges[j]) {\n                                        isNewSearch = true;\n                                        break;\n                                    }\n                                }\n                            }\n                            break;\n                    }\n                    if (isNewSearch) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (selectedServices.transport && tempSearch.context.travelType !== travelType) {\n            isNewSearch = true;\n        }\n\n        if (calField) {\n            search[calField].stopFocus = undefined;\n            if (!isNewSearch) {\n                search[calField].stopFocus = true;\n            }\n        }\n\n        return isNewSearch;\n    }\n\n    public static getServiceInfo(serviceId: ServiceId): any {\n        switch (serviceId) {\n            case ServiceId.ACC:\n            case ServiceId.ACC_DETAILS:\n                return { service: { accommodation: true }, icon: 'tz-icon service-icon-hotel tz-icon-service-hotel' };\n            case ServiceId.FLIGHT:\n            case ServiceId.TRAIN:\n            case ServiceId.FLIGHT_TRAIN:\n                return { service: { transport: true }, icon: 'tz-icon-inline-content icon-transport' };\n            case ServiceId.TRANSFER:\n                return { service: { transfer: true }, icon: 'tz-icon service-icon-transfer' };\n            case ServiceId.CAR_RENTAL:\n                return { service: { rentCar: true }, icon: 'tz-icon service-icon-car' };\n        }\n    }\n\n    public static clearPassengerFormArray(formArray: FormArray): void {\n        while (formArray.length !== 0) {\n            formArray.removeAt(0);\n        }\n    }\n    public static saveSortingValue(serviceId: ServiceId, value: string): void {\n        StorageManagerUtil.set('resultSortBy' + serviceId.toString(), value, true);\n    }\n\n    public static getSortingValue(serviceId: ServiceId): string | null {\n        return StorageManagerUtil.get('resultSortBy' + serviceId.toString(), true);\n    }\n\n    public static resetSortingValue(): void {\n        Object.keys(ServiceId).forEach((serviceIdStr: string) => {\n            if (!isNaN(Number(serviceIdStr))) {\n                StorageManagerUtil.remove('resultSortBy' + serviceIdStr);\n            }\n        });\n    }\n    /* public static hasObjectsDifferentValues(\n         obj: { [key: string]: string },\n         obj2: { [key: string]: string },\n         skipKeys: string[] = []\n     ): boolean {\n         for (const [key, value] of Object.entries(obj)) {\n             if (skipKeys.length && skipKeys.includes(key)) {\n                 continue;\n             }\n\n             if (obj[key] !== obj2[key]) {\n                 return true;\n             }\n         }\n\n         return false;\n     }*/\n\n    private static sameCoord(field1: any, field2: any): boolean {\n        return (\n            Math.trunc(field1.latitude * 10000) === Math.trunc(field2.latitude * 10000) &&\n            Math.trunc(field1.longitude * 10000) === Math.trunc(field2.longitude * 10000)\n        );\n    }\n\n    /*public static hasArraysDifferentValues(arr: number[], arr2: number[]): boolean {\n        return JSON.stringify(arr.sort()) !== JSON.stringify(arr2.sort());\n    }\n\n    public static createSearchData(\n        data: ISearchData | PassengerReq,\n        type: 'search' | 'passenger'\n    ): { [key: string]: string } {\n        const newSearchData: any = {};\n\n        for (const [key, value] of Object.entries(data)) {\n            if (type === 'search') {\n                if (key === 'from' || key === 'to' || key === 'address') {\n                    newSearchData[key] = value.displayStr;\n                }\n\n                if (key === CalTypes.CAL_TRIP_TYPE || key === CalTypes.CAL_RENTAL_TYPE || key === CalTypes.CAL_TRANSFER_TYPE) {\n                    newSearchData.fromDate = value.fromDate;\n                    newSearchData.toDate = value.toDate;\n                    newSearchData.twoDates = value.twoDates;\n                }\n            }\n\n            if (type === 'passenger') {\n                if (key === 'displayStr' || key === 'rooms' || key === 'childrenAges') {\n                    newSearchData[key] = value;\n                }\n            }\n        }\n\n        return newSearchData;\n    }*/\n}\n","import { ServiceId } from '@core/constants/service-id.const';\nimport { ServiceTab } from '@schemas/modules/service-tabs/service-tab';\n\nexport class TabUtils {\n    public static displayMinimalPriceFromPreSearch(tab: ServiceTab): boolean {\n        return (\n            tab.selectedService &&\n            ((tab.preSearch && !tab.loader) || (tab.enable && (!tab.inCart || tab.isInError))) &&\n            tab.minPrice > 0 &&\n            tab.serviceId !== ServiceId.SUMMARY\n        );\n    }\n\n    public static displayPriceFromCart(tab: ServiceTab): boolean {\n        return tab.enable && tab.inCart && !tab.preSearch && !tab.loader && !tab.isInError;\n    }\n\n    public static displayNoResult(tab: ServiceTab): boolean {\n        if (\n            tab.serviceId === 1 &&\n            tab.selectedService &&\n            !tab.loader &&\n            tab.preSearch &&\n            tab.resultCount === 0 &&\n            tab.minPrice === 0\n        ) {\n            console.error(\n                'no res:',\n                tab.selectedService,\n                tab.loader,\n                tab.resultCount,\n                tab.minPrice,\n                tab.preSearch,\n                tab.selectedService && !tab.loader && tab.preSearch && tab.resultCount === 0 && tab.minPrice === 0\n            );\n        }\n        return tab.selectedService && !tab.loader && tab.preSearch && tab.resultCount === 0 && tab.minPrice === 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { EngineRuleService } from '@services/searchEngine/services/engine-rule-service';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { LinkedFieldInfo, SearchAddress } from '@schemas/modules/core/search-address';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { StorageKeys } from '@schemas/modules/core/storage-keys';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RecentSearchService {\n    private readonly VERSION = 1.2;\n    private readonly MAX_RECENT = 3;\n\n    private recentAddress: any = {\n        version: this.VERSION,\n        data: {},\n    };\n\n    constructor(private engineRuleService: EngineRuleService, private toolsService: ToolsService) {\n        this.initRecentSearch();\n    }\n\n    private static getUniqueKey(addr: SearchAddress): string {\n        if (!addr) {\n            return '';\n        }\n\n        return addr.placeId + addr.placeType + addr.code + addr.name;\n    }\n\n    private static isSameAddress(addr1: SearchAddress, addr2: SearchAddress): boolean {\n        return RecentSearchService.getUniqueKey(addr1) === RecentSearchService.getUniqueKey(addr2);\n    }\n\n    private static isOutsideRange(loc: SearchAddress, dep: LinkedFieldInfo): boolean {\n        if (!dep.lat || !dep.lng || !loc.latitude || !loc.longitude) {\n            return false;\n        }\n\n        return ToolsService.distance(loc.latitude, loc.longitude, dep.lat, dep.lng) > dep.radius;\n    }\n\n    public setRecentAddress(selectedLocation: SearchAddress, providerBool: boolean, filterType: string): void {\n        if (!selectedLocation) {\n            return;\n        }\n\n        const fieldName = selectedLocation.inputName;\n        const provider = providerBool.toString();\n\n        if (!this.recentAddress.data[provider]) {\n            this.recentAddress.data[provider] = {};\n        }\n\n        if (!this.recentAddress.data[provider][fieldName]) {\n            this.recentAddress.data[provider][fieldName] = {};\n        }\n\n        if (!this.recentAddress.data[provider][fieldName][filterType]) {\n            this.recentAddress.data[provider][fieldName][filterType] = [];\n        }\n\n        const recentContent = this.recentAddress.data[provider][fieldName][filterType];\n        if (!this.isInCache(selectedLocation, fieldName, provider, filterType)) {\n            selectedLocation.isRecent = true;\n            recentContent.unshift(selectedLocation);\n        } else {\n            recentContent.forEach((address: SearchAddress) => {\n                address.recentSelected = false;\n                address.recentSelected = RecentSearchService.isSameAddress(address, selectedLocation);\n            });\n\n            this.recentAddress.data[provider][fieldName][filterType] = recentContent;\n        }\n    }\n\n    public storeRecentAddress(searchInfos: any, services: { [key: string]: boolean }, travelType: string): void {\n        const conf = EngineRuleService.buildSearchFieldsObj(services, travelType);\n        if (!conf) {\n            return;\n        }\n\n        for (const confContent of conf) {\n            for (const fieldName in confContent) {\n                if (!confContent.hasOwnProperty(fieldName)) {\n                    continue;\n                }\n\n                switch (fieldName) {\n                    case 'from':\n                    case 'to':\n                    case 'address':\n                        if (\n                            searchInfos.searchData[fieldName] &&\n                            EngineRuleService.checkLoc(searchInfos.searchData[fieldName], false)\n                        ) {\n                            this.validateAddress(\n                                fieldName,\n                                confContent[fieldName].provider,\n                                confContent[fieldName].type\n                            );\n                        }\n                        break;\n                    default:\n                }\n            }\n        }\n\n        this.removeInvalidAddresses();\n        this.limitMaxAddressLength();\n        StorageManagerUtil.set(StorageKeys.RECENT_ADDR, this.recentAddress);\n    }\n\n    public getRecentAddress(\n        provider: string,\n        filterType: string,\n        fieldName: string,\n        linkedField?: LinkedFieldInfo\n    ): SearchAddress[] {\n        const noAddressFound =\n            !this.recentAddress.data[provider] ||\n            !this.recentAddress.data[provider][fieldName] ||\n            !this.recentAddress.data[provider][fieldName][filterType];\n        if (noAddressFound) {\n            return [];\n        }\n\n        const recent = [];\n        const recentContent = ToolsService.deepCopy(this.recentAddress.data[provider][fieldName][filterType]);\n\n        for (const k in recentContent) {\n            if (recentContent[k]) {\n                const nonValidatedAddress =\n                    recentContent[k].isRecent || !recentContent[k].isCached || recentContent[k].inputName !== fieldName;\n                if (nonValidatedAddress) {\n                    continue;\n                }\n\n                const sameLocation = linkedField && linkedField.placeId === recentContent[k].placeId;\n                const outsideRange =\n                    linkedField &&\n                    linkedField.radius !== 0 &&\n                    RecentSearchService.isOutsideRange(recentContent[k], linkedField);\n                if (sameLocation || outsideRange) {\n                    continue;\n                }\n\n                recent.push(recentContent[k]);\n            }\n        }\n        return recent;\n    }\n\n    private validateAddress(fieldName: string, provider: string, filterType: string): void {\n        const addressCached =\n            this.recentAddress.data[provider] &&\n            this.recentAddress.data[provider][fieldName] &&\n            this.recentAddress.data[provider][fieldName][filterType];\n        if (addressCached) {\n            const recentContent = this.recentAddress.data[provider][fieldName][filterType];\n\n            for (const recent of recentContent) {\n                if (recent && recent.isRecent) {\n                    recent.isRecent = false;\n                }\n            }\n        } else {\n            console.error('validating an address which is not in recent:' + fieldName);\n        }\n    }\n\n    private removeInvalidAddresses(): void {\n        for (const provider in this.recentAddress.data) {\n            if (!this.recentAddress.data.hasOwnProperty(provider)) {\n                continue;\n            }\n\n            for (const fieldName in this.recentAddress.data[provider]) {\n                if (!this.recentAddress.data[provider].hasOwnProperty(fieldName)) {\n                    continue;\n                }\n\n                for (const filterType in this.recentAddress.data[provider][fieldName]) {\n                    if (!this.recentAddress.data[provider][fieldName].hasOwnProperty(filterType)) {\n                        continue;\n                    }\n\n                    let recentContent = this.recentAddress.data[provider][fieldName][filterType];\n                    for (const recent of recentContent) {\n                        if (!recent || !recent.recentSelected) {\n                            continue;\n                        }\n\n                        const selectedAddress = ToolsService.deepCopy(recent);\n                        delete selectedAddress.recentSelected;\n\n                        const temp = [selectedAddress];\n                        recentContent.forEach((address: SearchAddress) => {\n                            if (!RecentSearchService.isSameAddress(address, selectedAddress)) {\n                                temp.push(address);\n                            }\n                        });\n                        recentContent = temp;\n\n                        this.recentAddress.data[provider][fieldName][filterType] = recentContent;\n                    }\n\n                    for (let i = 0; i < recentContent.length; i++) {\n                        if (!recentContent[i]) {\n                            delete recentContent[i];\n                        } else if (recentContent[i].isRecent) {\n                            delete recentContent[i];\n                        } else {\n                            recentContent[i].isCached = true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private isInCache(\n        selectedLocation: SearchAddress,\n        fieldName: string,\n        provider: string,\n        filterType: string\n    ): boolean {\n        const recentContent = this.recentAddress.data[provider][fieldName][filterType];\n        for (let i = 0; i < recentContent.length; i++) {\n            if (!recentContent[i] || !recentContent[i].isCached) {\n                delete recentContent[i];\n            } else if (RecentSearchService.isSameAddress(recentContent[i], selectedLocation)) {\n                // recentContent[i] = selectedLocation;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private limitMaxAddressLength(): void {\n        for (const provider in this.recentAddress.data) {\n            if (!this.recentAddress.data.hasOwnProperty(provider)) {\n                continue;\n            }\n\n            for (const fieldName in this.recentAddress.data[provider]) {\n                if (!this.recentAddress.data[provider].hasOwnProperty(fieldName)) {\n                    continue;\n                }\n\n                for (const filterType in this.recentAddress.data[provider][fieldName]) {\n                    if (!this.recentAddress.data[provider][fieldName].hasOwnProperty(filterType)) {\n                        continue;\n                    }\n\n                    const recentContent = this.recentAddress.data[provider][fieldName][filterType];\n                    for (let i = 0; i < recentContent.length; ) {\n                        if (!recentContent[i]) {\n                            recentContent.splice(i, 1);\n                        } else {\n                            i++;\n                        }\n                    }\n\n                    if (recentContent.length > this.MAX_RECENT) {\n                        recentContent.splice(this.MAX_RECENT, recentContent.length);\n                    }\n                }\n            }\n        }\n    }\n\n    private initRecentSearch(): void {\n        const recentAddrTmp = StorageManagerUtil.get(StorageKeys.RECENT_ADDR);\n        if (!recentAddrTmp) {\n            return;\n        }\n\n        if (recentAddrTmp && recentAddrTmp.version && recentAddrTmp.version === this.VERSION) {\n            this.recentAddress = recentAddrTmp;\n            this.limitMaxAddressLength();\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TransferUtils {\n    private currentSelectedTransfers = [];\n\n    constructor(private toolsService: ToolsService, private translateService: TranslateService) {}\n\n    public formatVehicleDesc(description: string) {\n        if (!description) {\n            return;\n        }\n        if (!description.includes('similar') && description !== '') {\n            description = description + ' ' + this.translateService.instant('TRANSFER.BE.Or_similar');\n        }\n        return description;\n    }\n\n    public setSelectedInfoInServices(transfers: any) {\n        if (!transfers) {\n            transfers = [];\n        }\n        this.currentSelectedTransfers = ToolsService.deepCopy(transfers);\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ResultService } from '@services/modules/core/dataservices/result.service';\nimport { Observable, of } from 'rxjs';\nimport { Flight, FlightTerm } from '@schemas/modules/flights/flight';\nimport { HttpRequestType } from '@core/constants/http-request-type';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { FlightPackagesResponse } from '@schemas/modules/flights/flight-packages.response';\nimport { map, tap } from 'rxjs/operators';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { FlightUtils } from '@services/modules/transport/flights/services/flight.utils';\nimport { IFlightsCartData } from '@schemas/modules/flights/flights-cart-data';\n// eslint-disable-next-line max-len\nimport { FlightTermsDialogComponent } from 'src/app/modules/results/transport/flights/components/flight-terms-dialog/flight-terms-dialog.component';\n// eslint-disable-next-line max-len\nimport { MobFlightTermsConditionsModalComponent } from 'src/app/modules/results/transport/flights/components/mob-flight-terms-conditions-modal/mob-flight-terms-conditions-modal.component';\n@Injectable({\n    providedIn: 'root',\n})\nexport class FlightsService extends ResultService {\n    public override readonly serviceId = ServiceId.FLIGHT;\n    public minFlightsPrice!: number;\n\n    private flightTermsCache: { [key: string]: FlightTerm[] } = {};\n\n    public getPackages(selectedFlight: any): Observable<Flight[]> {\n        const queryParam = {\n            entity: 'upgrade',\n            id: this.searchDataService.getCombId(),\n            dataId: this.searchDataService.getDataId(this.serviceId),\n            currency: this.settingsService.getCurrency(),\n            hideLoading: false,\n            lang: this.settingsService.langCode,\n            refreshFilter: false,\n            serviceId: this.serviceId,\n        };\n        const params = FlightUtils.getQueryParamsForFlightPackages(selectedFlight);\n        return this.apiCall(HttpRequestType.POST, queryParam, params).pipe(\n            map((response: FlightPackagesResponse) => response.results)\n        );\n    }\n\n    public addFlightToCart(flight: Flight): Observable<ICart> {\n        const options = [\n            {\n                bookingOptions: [{}],\n                sameTrip: false,\n                id: flight.id,\n            },\n        ];\n        return this.addToCart(options);\n    }\n\n    public getSelectedFLightsFromCart(): IFlightsCartData {\n        return this.getServiceCartItems();\n    }\n\n    public showFlightTrems(flight: Flight, mobile?: boolean): void {\n        const openFlightTerms = (terms: FlightTerm[]) => {\n            terms = terms && terms.length > 0 ? terms : [];\n            if (terms.length === 0) {\n                flight.termsUnavailable = true;\n            }\n            if (mobile) {\n                this.modalService.createMainModal(MobFlightTermsConditionsModalComponent, {\n                    data: { terms },\n                    cssClass: 'mob-terms-modal',\n                    title: this.translateService.instant('FLIGHT_TRAIN.CONDITIONS'),\n                });\n            } else {\n                this.dialogService.openServiceDialog(FlightTermsDialogComponent, {\n                    width: undefined,\n                    maxHeight: '90vh',\n                    panelClass: 'tz-terms-dialog-large',\n                    maxWidth: '940px',\n                    autoFocus: false,\n                    data: { terms },\n                });\n            }\n        };\n        if (flight.terms && flight.terms.length > 0) {\n            openFlightTerms(flight.terms);\n            return;\n        }\n\n        this.getFlightTerms(flight).subscribe(\n            (terms) => {\n                openFlightTerms(terms);\n            },\n            (failure: any) => {\n                openFlightTerms([]);\n                console.log('Unable to get flight terms got ', failure);\n            }\n        );\n    }\n\n    public showFlightCheckinAllowance(allowanceType: number): void {\n        if (allowanceType !== 1 && allowanceType !== 2) {\n            return;\n        }\n\n        const checkinKey = allowanceType === 1 ? 'FREE' : 'AIRPORT';\n        this.dialogService.openConfirmationDialog({\n            title: this.translateService.instant(`POPUPS.CHECKIN.TITLE_${checkinKey}`),\n            multipleContent: [this.translateService.instant(`POPUPS.CHECKIN.${checkinKey}`)],\n            confirmBtnTitle: this.translateService.instant('POPUPS.OK'),\n        });\n    }\n\n    private getFlightTerms(flight: Flight): Observable<FlightTerm[]> {\n        if (this.flightTermsCache[flight.id]) {\n            return of(this.flightTermsCache[flight.id]);\n        }\n\n        const params = {\n            entity: 'getFlightSupplierInfo',\n            provider: flight.broker,\n            itemId: flight.id,\n            dataId: this.searchDataService.getDataId(this.serviceId),\n            deviceId: this.settingsService.getDeviceID(),\n            closeLoader: true,\n        };\n\n        this.showLoader(true, 'LOADER_MESSAGES.TERMS_FLIGHT');\n        return this.apiCall(HttpRequestType.POST, params, params).pipe(\n            tap((terms) => {\n                this.flightTermsCache[flight.id] = terms;\n            })\n        );\n    }\n}\n","import { Flight } from '@schemas/modules/flights/flight';\nimport { FlightPackageRequestParams } from '@schemas/modules/flights/flight-package-request-params';\n\nexport class FlightUtils {\n    public static getQueryParamsForFlightPackages(flight: Flight): FlightPackageRequestParams {\n        const departureFlightId = flight.departureSummary.route ? flight?.departureSummary?.route[0]?.flightID : '';\n        const returnFlightId = flight.returnSummary?.route ? flight?.returnSummary?.route[0]?.flightID : '';\n        const flightIds = departureFlightId + '|' + returnFlightId;\n        const travelClassDep = flight.departureSummary.cabin !== '' ? flight.departureSummary.cabin : 'null';\n        const travelClassRet = flight.returnSummary.cabin !== '' ? flight.returnSummary.cabin : 'null';\n        const travelClass = travelClassDep + '|' + travelClassRet;\n\n        return {\n            depDate: flight.departureSummary.departureTzFormat ? flight.departureSummary.departureTzFormat : '',\n            entity: 'upgrade',\n            flightIds,\n            provider: flight.broker,\n            retDate: flight.returnSummary.departureTzFormat ? flight.returnSummary.departureTzFormat : '',\n            travelClass,\n            tripId: flight.tripId,\n            vendor: flight.vendor.split(' ').join(''),\n        };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ResultService } from '@services/modules/core/dataservices/result.service';\nimport { Observable, Subject } from 'rxjs';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { ITrainsCartData } from '@schemas/modules/trains/train-cart-data';\nimport {\n    SelectedOption,\n    SupplierClassMinPrice,\n    TrainSelection,\n} from '@schemas/modules/trains/train-search-query-params';\nimport { TrainsResponseSection } from '@schemas/modules/trains/train.response';\nimport { TRAIN } from '@schemas/modules/trains/train';\nimport { SupplierClass, TrainClass } from '@schemas/modules/trains/train-class';\nimport { ServicePrices } from '@schemas/modules/core/service-prices';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TrainService extends ResultService {\n    public override readonly serviceId = ServiceId.TRAIN;\n    public selectedOption: SelectedOption = {};\n    public updateTrainSelection: Subject<TrainSelection> = new Subject<TrainSelection>();\n\n    public getTrainSelections(): SelectedOption {\n        if (\n            this.selectedOption.dataId === '' ||\n            this.selectedOption.dataId !== this.searchDataService.getDataId(this.serviceId)\n        ) {\n            this.selectedOption = {};\n        }\n\n        return this.selectedOption;\n    }\n\n    public setTrainSelections(selection: SelectedOption): void {\n        if (Object.keys(selection).length) {\n            selection.dataId = this.searchDataService.getDataId(this.serviceId);\n        }\n\n        this.selectedOption = selection;\n    }\n\n    public clearTrainsSelection(): void {\n        this.selectedOption = {};\n    }\n\n    public addTrainToCart(selectedOption: SelectedOption): Observable<ICart> {\n        return this.addToCart(this.formAddCartReq(selectedOption));\n    }\n\n    public getSelectedTrainsFromCart(): ITrainsCartData {\n        return this.getServiceCartItems();\n    }\n\n    public getSelectedTrainFromCart(id: string): ITrainsCartData | null {\n        const cartData = this.getServiceCartItems();\n        for (const item of cartData.items) {\n            if (item.id === id) {\n                return item;\n            }\n        }\n        return null;\n    }\n\n    public getSelectedClass(\n        train: TRAIN,\n        trainClass: string,\n        selectedTrain: TrainSelection | null\n    ): TrainClass | undefined {\n        const trainClasses = train.trainClasses;\n        let minPriceClass: TrainClass | undefined;\n        let minPrice: number | undefined;\n\n        trainClasses.forEach((tc) => {\n            if (trainClass !== tc.trainClass.tzClass) {\n                return;\n            }\n\n            if (selectedTrain && trainClass === selectedTrain.tzClass) {\n                if (selectedTrain.classId === tc.id) {\n                    minPriceClass = tc;\n                }\n                return;\n            }\n\n            if (!minPrice || !minPriceClass) {\n                minPrice = tc.prices.listPrice;\n                minPriceClass = tc;\n            } else if (tc.prices.listPrice < minPrice) {\n                minPrice = tc.prices.listPrice;\n                minPriceClass = tc;\n            }\n            return;\n        });\n\n        return minPriceClass;\n    }\n\n    public formTrainSelectionInfo(\n        train: TRAIN,\n        trainClass: TrainClass,\n        isSelected: boolean,\n        showDetails: boolean\n    ): TrainSelection {\n        return {\n            id: train.id,\n            journeyType: train.journeyType,\n            fromLocation: train.departure.location.city,\n            toLocation: train.arrival.location.city,\n            classId: trainClass.id,\n            groupId: trainClass.groupId,\n            tripId: trainClass.tripID,\n            tzClass: trainClass.trainClass.tzClass,\n            selected: isSelected,\n            tzSubClass: trainClass.trainClass.tzSubClass,\n            showDetails,\n        } as TrainSelection;\n    }\n\n    public isValidTicket(train: TRAIN, supplierClass: SupplierClass, subClass?: TrainClass): boolean {\n        if (supplierClass.count === 0) {\n            return false;\n        }\n        if (train.journeyType === 'onwardJourney') {\n            return true;\n        }\n        if (subClass) {\n            return !subClass.disabled;\n        }\n        let valid = false;\n        train.trainClasses.some((tc) => {\n            if (tc.trainClass.tzClass === supplierClass.class) {\n                valid = !tc.disabled;\n            }\n            return valid;\n        });\n        return valid;\n    }\n\n    public getServicePrices(train: TRAIN, selectedTrain: TrainSelection | null): { [key: string]: ServicePrices } {\n        const supplierClassMinPrice: SupplierClassMinPrice = {};\n        train.supplierClasses.forEach((supplierClass) => {\n            const tc = this.getSelectedClass(train, supplierClass.class, selectedTrain);\n            if (tc) {\n                supplierClassMinPrice[supplierClass.class] = tc.prices;\n            }\n        });\n        return supplierClassMinPrice;\n    }\n\n    public filterTrainsRemoveCartItem(data: TrainsResponseSection[], cartIds: string[]): TrainsResponseSection[] {\n        return data.map((trains: TrainsResponseSection) => {\n            trains.data = trains.data.filter((item: TRAIN) => !cartIds.includes(item.id));\n            return trains;\n        });\n    }\n\n    private formAddCartReq(selectedOption: SelectedOption): any[] {\n        console.log('$scope.selected train', selectedOption);\n        const groupingId = `T${+new Date()}`;\n        const req: any[] = [];\n\n        [selectedOption.onward, selectedOption.return].forEach((option) => {\n            if (option && option.tripId) {\n                req.push({\n                    id: option.id,\n                    type: option.journeyType,\n                    bookingOptions: [\n                        {\n                            classId: option.classId,\n                            tripId: option.tripId,\n                            groupingId,\n                        },\n                    ],\n                });\n            }\n        });\n        return req;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { HttpRequestType } from '@core/constants/http-request-type';\nimport { CustomerInfo } from '@shared/schemas/tz-customer-info';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserDataService extends ApiAccessService {\n    public getUserInfo() {\n        return this.apiCallObs(HttpRequestType.GET, {\n            entity: 'loggedInCustomer',\n        });\n    }\n\n    public updateUserInfo(customerInformation: CustomerInfo) {\n        this.showLoader(true);\n        return this.apiCallObs(\n            HttpRequestType.PUT,\n            {\n                entity: 'customers',\n                id: customerInformation.id,\n                closeLoader: true,\n                language: this.settingsService.langCode,\n            },\n            customerInformation\n        );\n    }\n\n    public changeTzPassword(\n        customerId: string,\n        passwordDetail: {\n            currentPassword?: string;\n            newPassword: string;\n            confirmPassword: string;\n            updateType: string;\n        }\n    ) {\n        const params = {\n            entity: 'customers',\n            action: 'changePassword',\n            id: customerId,\n            closeLoader: true,\n            language: this.settingsService.langCode,\n        };\n\n        this.showLoader(true);\n        return this.apiCallObs(HttpRequestType.PUT, params, passwordDetail);\n    }\n\n    public resetTzPassword(passwordDetail: { token: string; password: string; confirmPassword: string }) {\n        const params = {\n            entity: 'resetPassword',\n            closeLoader: true,\n            language: this.settingsService.langCode,\n        };\n\n        this.showLoader(true);\n        return this.apiCallObs(HttpRequestType.PUT, params, passwordDetail);\n    }\n\n    public deleteUserAccount(customerInformation: CustomerInfo) {\n        return this.apiCallObs(HttpRequestType.DELETE, {\n            entity: 'customers',\n            id: customerInformation.id,\n        });\n    }\n\n    public forgotPassword(emailID: string) {\n        const params = {\n            entity: 'forgotPassword',\n            emailID,\n            langCode: this.settingsService.langCode,\n        };\n\n        return this.apiCallObs(HttpRequestType.POST, params);\n    }\n\n    public checkPasswordToken(token: string): Observable<{ customerMail: string }> {\n        const params = {\n            entity: 'checkCustomerToken',\n            token,\n            closeLoader: true,\n        };\n\n        this.showLoader(true);\n        return this.apiCallObs(HttpRequestType.GET, params);\n    }\n\n    public subscribeToTz(emailId: string): Observable<void> {\n        const params = {\n            entity: 'subscribe',\n            langCode: this.settingsService.langCode,\n        };\n\n        return this.apiCallObs(HttpRequestType.POST, params, { emailId });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { CustomerInfo } from '@shared/schemas/tz-customer-info';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserDataService } from '../dataservices/user.data.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport { SignInComponent } from '@shared/components/sign-in/sign-in.component';\nimport { PlatformService } from '@services/platform.service';\nimport { ModalService } from '@services/modal.service';\nimport { MobSignInComponent } from '@shared/components/mobile/mob-sign-in/mob-sign-in.component';\nimport { DialogService } from '@services/dialog.service';\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserService {\n    public loggedIn$ = new BehaviorSubject<boolean>(false);\n    public subscribeProcessing = false;\n\n    private customerInformation!: CustomerInfo;\n\n    constructor(\n        private translateService: TranslateService,\n        private userDataService: UserDataService,\n        private bootstrapModel: NgbModal,\n        private router: Router,\n        private platformService: PlatformService,\n        private modalService: ModalService,\n        private dialogService: DialogService\n    ) {}\n\n    get formProfileName(): string {\n        if (this.IsLogged()) {\n            const loggedInCustomer = this.getCustomerInformation();\n            if (loggedInCustomer.firstName) {\n                const customerName = `${loggedInCustomer.firstName} ${\n                    loggedInCustomer.lastName ? loggedInCustomer.lastName : ''\n                }`;\n\n                return customerName.length > 20 ? customerName.substring(0, 20) + '...' : customerName;\n            }\n\n            if (!loggedInCustomer.firstName && loggedInCustomer.emailID) {\n                return loggedInCustomer.emailID;\n            }\n        }\n\n        return this.translateService.instant('SIGN_IN');\n    }\n\n    get firstLettersFromName(): string | null {\n        if (this.IsLogged()) {\n            const loggedInCustomer = this.getCustomerInformation();\n            let str = '';\n\n            if (loggedInCustomer.firstName) {\n                str += loggedInCustomer.firstName.charAt(0);\n            }\n\n            if (loggedInCustomer.lastName) {\n                str += loggedInCustomer.lastName.charAt(0);\n            }\n\n            return str ? str : null;\n        }\n\n        return null;\n    }\n\n    public setCustomerInformation(sessionCustomer: CustomerInfo): void {\n        this.customerInformation = sessionCustomer;\n        this.loggedIn$.next(this.IsLogged());\n    }\n\n    public getSessionID(): string {\n        return this.customerInformation.id;\n    }\n\n    public getCustomerInformation(): CustomerInfo {\n        if (this.IsLogged()) {\n            return JSON.parse(JSON.stringify(this.customerInformation)) as CustomerInfo;\n        }\n\n        return {} as CustomerInfo;\n    }\n\n    public IsLogged(): boolean {\n        return (\n            this.customerInformation && this.customerInformation.id !== undefined && this.customerInformation.id !== ''\n        );\n    }\n\n    public SignOut(): void {\n        StorageManagerUtil.remove('trazler_customer_token');\n        this.setCustomerInformation({} as CustomerInfo);\n        this.loggedIn$.next(false);\n    }\n\n    public getCustomer(noReject: boolean): Promise<CustomerInfo> {\n        return new Promise((resolve, reject) => {\n            if (!StorageManagerUtil.get('trazler_customer_token', true)) {\n                if (noReject) {\n                    resolve({} as CustomerInfo);\n                } else {\n                    reject();\n                }\n                return;\n            }\n\n            this.userDataService.getUserInfo().subscribe(\n                (customer: CustomerInfo) => {\n                    console.log('Customer profile: ', customer);\n                    this.setCustomerInformation(customer);\n                    resolve(customer);\n                },\n                (err: any) => {\n                    console.log('Error fetching customer info: ', err);\n\n                    if (noReject) {\n                        resolve({} as CustomerInfo);\n                    } else {\n                        reject(err);\n                    }\n                }\n            );\n        });\n    }\n\n    public updateCustomerInfo(customerInformation: CustomerInfo): Promise<CustomerInfo> {\n        return new Promise((resolve, reject) => {\n            console.log('profile = ', customerInformation);\n            this.userDataService.updateUserInfo(customerInformation).subscribe(\n                (success: any) => {\n                    // $rootScope.showPrimaryAlert(true, \"Data successfully saved\");\n                    // console.log('success', success);\n                    // this.getCustomer(true);\n                    // resolve({} as CustomerInfo);\n                    this.customerInformation = customerInformation;\n                },\n                (failure) => {\n                    console.log(failure);\n                    /*if (failure.data.errors && failure.data.errors.phoneNumber && failure.data.errors.phoneNumber !== \"\") {\n                        $rootScope.showPrimaryAlert(true, failure.data.errors.phoneNumber);\n                    } else {\n                        $rootScope.showPrimaryAlert(true, \"Unable to save Data\");\n                    }*/\n                    reject(failure);\n                }\n            );\n        });\n    }\n\n    public deleteCustomer(): void {\n        this.dialogService\n            .openConfirmationDialog({\n                title: `${this.translateService.instant('ACCOUNT.DELETE.TITLE')}?`,\n                multipleContent: [this.translateService.instant('ACCOUNT.DELETE.MESSAGE')],\n                cancelBtnTitle: this.translateService.instant('GENERAL.CANCEL'),\n                confirmBtnTitle: this.translateService.instant('ACCOUNT.DELETE.TITLE'),\n            })\n            .afterClosed()\n            .subscribe((proceedDelete: TzDialogReturn) => {\n                if (proceedDelete !== CONFIRM) {\n                    return;\n                }\n\n                this.userDataService.deleteUserAccount(this.customerInformation).subscribe(() => {\n                    this.SignOut();\n                    this.dialogService.openSnackBar({\n                        message: this.translateService.instant('NOTIFS.DELETE_ANSWER'),\n                    });\n\n                    this.router.navigate(['/search'], { skipLocationChange: false });\n                });\n            });\n    }\n\n    public openLoginModel(loginMailId?: string, fromCheckout?: boolean): Promise<CustomerInfo> {\n        if (this.platformService.isMobileDevice) {\n            return new Promise((resolve, reject) => {\n                this.modalService\n                    .createMainModal(MobSignInComponent, {\n                        data: { loginMailId, showSignin: true, fromCheckout },\n                        title: 'ACCOUNT.SIGN.SIGN_IN',\n                    })\n                    .then((modal: any) => {\n                        if (modal.data) {\n                            resolve(modal.data);\n                        } else {\n                            reject();\n                        }\n                    });\n            });\n        }\n\n        const signInModalRef = this.bootstrapModel.open(SignInComponent, {\n            modalDialogClass: this.router.url.includes('/checkout') ? 'checkout-login-modal' : 'login-modal',\n            centered: true,\n        });\n\n        if (loginMailId && loginMailId !== '') {\n            signInModalRef.componentInstance.emailId = loginMailId;\n        }\n\n        return signInModalRef.result;\n    }\n\n    public subscribeToTrazler(email: string): void {\n        if (this.subscribeProcessing) {\n            return;\n        }\n\n        this.subscribeProcessing = true;\n        this.userDataService.subscribeToTz(email).subscribe(\n            () => {\n                this.subscribeProcessing = false;\n\n                this.dialogService.openConfirmationDialog({\n                    title: this.translateService.instant('FOOTER.Thank You!'),\n                    content: this.translateService.instant('NOTIFS.SUBSCRIBE_SUCCESS'),\n                    showCloseBtn: true,\n                });\n            },\n            (error) => {\n                this.subscribeProcessing = false;\n                this.dialogService.openMainDialog({ content: error.error.message, showCloseBtn: true });\n            }\n        );\n    }\n}\n","import { Platform } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PlatformService {\n    private isPlatformMobile = false;\n    private isPlatformMobileDevice = false;\n    private isPlatformBrowser = false;\n    private isPlatformMobileDevice$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    private isPlatformMobile$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    private isPlatformMobileBrowser$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    private screenSize!: number;\n    // set to 0 to disable, to a value below 920 to activate when screensize <= that value\n    private forceMobileOnSmallDisplay = 920;\n\n    constructor(private platform: Platform) {\n        platform.ready().then(() => {\n            this.screenSize = platform.width();\n            this.setPlatformType();\n        });\n\n        this.platform.resize.subscribe(async () => {\n            this.screenSize = platform.width();\n            this.setPlatformType();\n        });\n    }\n\n    get isMobileBrowser(): boolean {\n        return this.isPlatformBrowser;\n    }\n\n    get isMobile(): boolean {\n        return this.isPlatformMobile;\n    }\n\n    get isMobileDevice(): boolean {\n        return this.isPlatformMobileDevice;\n    }\n\n    get isMobileDevice$(): BehaviorSubject<boolean> {\n        return this.isPlatformMobileDevice$;\n    }\n\n    get isMobile$(): BehaviorSubject<boolean> {\n        return this.isPlatformMobile$;\n    }\n\n    get isMobileBrowser$(): BehaviorSubject<boolean> {\n        return this.isPlatformMobileBrowser$;\n    }\n\n    private forceMobile(): boolean {\n        return !!(this.forceMobileOnSmallDisplay && this.screenSize <= this.forceMobileOnSmallDisplay);\n    }\n\n    private setPlatformType(): void {\n        this.setMobileDevice();\n        this.setMobileType();\n        this.setMobileBrowserType();\n    }\n\n    private setMobileDevice(): void {\n        if (\n            this.screenSize < 920 &&\n            (this.forceMobile() || this.platform.is('mobile') || this.platform.is('mobileweb'))\n        ) {\n            this.isPlatformMobileDevice$.next(true);\n            this.isPlatformMobileDevice = true;\n        } else {\n            this.isPlatformMobileDevice$.next(false);\n            this.isPlatformMobileDevice = false;\n        }\n    }\n\n    private setMobileType(): void {\n        if (this.screenSize < 920 && this.platform.is('mobile')) {\n            this.isPlatformMobile$.next(true);\n            this.isPlatformMobile = true;\n        } else {\n            this.isPlatformMobile$.next(false);\n            this.isPlatformMobile = false;\n        }\n    }\n\n    private setMobileBrowserType(): void {\n        if (this.screenSize < 920 && this.platform.is('mobileweb')) {\n            this.isPlatformMobileBrowser$.next(true);\n            this.isPlatformBrowser = true;\n        } else {\n            this.isPlatformMobileBrowser$.next(false);\n            this.isPlatformBrowser = false;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { Router } from '@angular/router';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { SettingsService } from '@services/services/settings-service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { SearchErrorService } from '@services/searchEngine/services/search-error-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { SearchEvents } from '@core/constants/search-events';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { SERVICE_DEFAULT_SORT } from '@core/constants/default-sort';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { PreSearchService } from '@services/modules/core/dataservices/pre-search.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AccSearchService {\n    constructor(\n        private router: Router,\n        private apiAccessService: ApiAccessService,\n        private settingsService: SettingsService,\n        private searchMetadataService: SearchMetadataService,\n        private listenersService: ListenersService,\n        private searchDataService: SearchDataService,\n        private searchErrorService: SearchErrorService,\n        private tripPlannerService: TripPlannerService,\n        private cartRoutingService: CartRoutingService,\n        private preSearchService: PreSearchService\n    ) {}\n\n    public SearchAcc(serviceSearch: any, eventId: any, combRef: any, params: any): void {\n        params.id = this.searchDataService.getCombId();\n        params.serviceId = ServiceId.ACC;\n        //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, true);\n        this.preSearchService.preSearchData(params, serviceSearch, eventId).then(\n            (success: any) => {\n                //const serviceSearchRes = success.serviceSearch;\n                /*const metaData = success.metaData;\n\n                    if (metaData.count === 0) {\n                        this.searchErrorService.searchErr(\n                            {\n                                status: 400,\n                                message: '',\n                            },\n                            ServiceId.ACC,\n                            SearchEvents.EVENT_SEARCH_WEB\n                        );\n                        if (this.router.url === '/search') {\n                            return;\n                        }\n                    }*/\n                /*this.searchMetadataService.saveSearch(success, eventId);\n                    if (success.metaData.complete) {\n                        this.tripPlannerService.setComplete(success.metaData.serviceId);\n                    }*/\n                /*if (serviceSearchRes.searchData.hotelCode) {\n                        const accRepriceListener = this.listenersService.registerListener(\n                            ListenerId.LISTEN_ACC_REPRICED,\n                            () => {\n                                this.listenersService.unregisterListener(accRepriceListener);\n                                this.cartRoutingService.goToState(\n                                    ServiceId.ACC,\n                                    serviceSearchRes.searchData.hotelCode,\n                                    true,\n                                    StateFrom.SEARCH\n                                );\n                            }\n                        );\n                    } else {\n                        this.cartRoutingService.currentServiceId.next(ServiceId.ACC);\n                        /!*if (this.router.url === 'home.results.accommodations') {\n                        this.listenersService.NotifyListeners(ListenerId.LISTEN_SEARCH_EDIT_UPDATE);\n                        return;\n                    }*!/\n                        this.cartRoutingService.goToState(ServiceId.ACC, undefined, true, StateFrom.SEARCH);\n                    }*/\n            },\n            (failure: any) => {\n                //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, false);\n                /*this.searchErrorService.searchErr(\n                        {\n                            status: 400,\n                            message: '',\n                        },\n                        ServiceId.ACC,\n                        eventId\n                    );\n                    if (this.router.url !== '/search') {\n                        if (failure.status === 412 && failure.data) {\n                            failure.data.metaData.complete = true;\n                            this.tripPlannerService.setComplete(ServiceId.ACC);\n                            this.searchMetadataService.saveSearch(failure.data, eventId);\n                        }\n                        this.cartRoutingService.currentServiceId.next(ServiceId.ACC);\n                        this.router.navigate(['/results/accommodations'], {\n                            queryParams: {\n                                sort_by: '1',\n                            },\n                        });\n                    }*/\n            }\n        );\n        /*.catch(() => {\n                this.loaderService.triggerLoading.emit({ loading: false });\n            });*/\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { SettingsService } from '@services/services/settings-service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { BaseService } from '@services/modules/core/dataservices/BaseService';\nimport { HttpClient, HttpContext, HttpDownloadProgressEvent, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { HttpRequestType } from '@core/constants/http-request-type';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { Observable, Subscriber, throwError } from 'rxjs';\nimport { ConfigService } from '@services/config.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { Passenger } from '@shared/schemas/tz-customer-info';\nimport { BookingReq } from '@schemas/modules/checkout/booking-request';\nimport { DebugInfo } from '@schemas/modules/cart/debug-cart-item';\nimport { LoaderService, SEARCH_RESULT_PROCESSING } from '@services/modules/core/loader.service';\nimport { CombinationId, DataId } from '@schemas/modules/core/base-types';\n\ninterface IQueryAndParams {\n    url: string;\n    queryParams?: any;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApiAccessService extends BaseService {\n    protected settingsService: SettingsService;\n    protected listenersService: ListenersService;\n    protected configService: ConfigService;\n    protected searchDataService: SearchDataService;\n    protected loaderService: LoaderService;\n\n    constructor(injector: Injector, http: HttpClient) {\n        super(http);\n        this.settingsService = injector.get(SettingsService);\n        this.listenersService = injector.get(ListenersService);\n        this.configService = injector.get(ConfigService);\n        this.searchDataService = injector.get(SearchDataService);\n        this.loaderService = injector.get(LoaderService);\n    }\n\n    private static decodeChunk(encodedRes: string | undefined): string[] {\n        if (encodedRes === undefined || encodedRes == null || encodedRes.trim().length <= 0) {\n            return [];\n        }\n\n        //remove not terminated line and transform data into json readable array\n        let res = encodedRes.replace(/((.*\\n)*).*/, '$1');\n        res = '[' + res.replace(/}\\n/g, '}\\n,') + ']';\n        res = res.replace(/,]/, ']');\n\n        return JSON.parse(res);\n    }\n\n    private static sendChunkData(start: number, subscriber: Subscriber<string>, encoded: string | undefined): number {\n        let sent = 0;\n        const decoded = ApiAccessService.decodeChunk(encoded);\n\n        for (let i = start; i < decoded.length; i++) {\n            console.log('sending: ' + JSON.stringify(decoded[i]));\n            subscriber.next(decoded[i]);\n            sent++;\n        }\n\n        return start + sent;\n    }\n\n    public searchFromRoute() {\n        const params = {\n            entity: 'searchFromRoute',\n            deviceId: this.settingsService.getDeviceID(),\n            routePath: window.location.pathname,\n        };\n\n        return this.apiCallAccess(HttpRequestType.GET, params);\n    }\n\n    public checkDep(combId: CombinationId, dataId: DataId, serviceId: ServiceId, editMode: boolean): Promise<any> {\n        const params = {\n            entity: 'checkDep',\n            id: combId,\n            serviceId,\n            dataId,\n            editMode,\n            deviceId: this.settingsService.getDeviceID(),\n        };\n\n        if (!params.id) {\n            return this.paramsError('invalid device id');\n        } else {\n            return this.apiCallAccess(HttpRequestType.POST, params);\n        }\n    }\n\n    public preSearch(params: any, request: any): Promise<any> {\n        params.entity = 'preSearch';\n        params.deviceId = this.settingsService.getDeviceID();\n        request = {\n            toReset: params.toReset,\n            editMode: params.editMode,\n            refId: params.refId,\n            partialSettings: {\n                lang: this.settingsService.langCode,\n                userCurReq: this.settingsService.getCurrency(),\n            },\n            nightChoice: params.nightChoice ? params.nightChoice : 0,\n        };\n        if (!params.id || (!params.serviceId && params.serviceId !== 0)) {\n            return this.paramsError('invalid data id');\n        } else {\n            const options = {\n                context: new HttpContext().set(SEARCH_RESULT_PROCESSING, true),\n            };\n            return this.apiCallAccessOptions(HttpRequestType.POST, params, options, request);\n        }\n    }\n\n    public newCombination(request: any, tripPlanner: any): Promise<any> {\n        const params = {\n            entity: 'newCombination',\n            id: this.settingsService.getDeviceID(),\n        };\n\n        request.searchSettings = {\n            partialSettings: {\n                lang: this.settingsService.langCode,\n                userCurReq: this.settingsService.getCurrency(),\n            },\n            ctryCode: SettingsService.getIpCountry().country,\n        };\n\n        if (!params.id) {\n            return this.paramsError('Invalid device id');\n        } else {\n            return this.apiCallAccess(HttpRequestType.POST, params, request);\n        }\n    }\n\n    public updServiceSearch(\n        combId: CombinationId,\n        dataId: DataId,\n        serviceId: ServiceId,\n        dryRun: boolean,\n        searchData: any\n    ): Promise<any> {\n        const params = {\n            entity: 'updCombination',\n            id: combId,\n            serviceId,\n            dataId,\n            deviceId: this.settingsService.getDeviceID(),\n            dryRun,\n        };\n\n        searchData.searchSettings = {\n            partialSettings: {\n                lang: this.settingsService.langCode,\n                userCurReq: this.settingsService.getCurrency(),\n            },\n        };\n\n        if (!params.id) {\n            return this.paramsError('invalid device id');\n        } else {\n            return this.apiCallAccess(HttpRequestType.POST, params, searchData);\n        }\n    }\n\n    public checkTmpPreSearch(combId: string, success: any, failure: any): Promise<any> {\n        const params = {\n            entity: 'checkTmpPreSearch',\n            id: combId,\n            deviceId: this.settingsService.getDeviceID(),\n        };\n        if (params.id === '') {\n            return this.paramsError('combId is mandatory');\n        } else {\n            // parallel call ignore loader\n            return this.apiCallAccess(HttpRequestType.GET, params);\n        }\n    }\n\n    public tripPlannerChecker(\n        combId: CombinationId,\n        lastVal: number,\n        loader: boolean,\n        refId: string\n    ): Observable<string> {\n        const params = {\n            entity: 'tripPlannerChecker',\n            action: combId,\n            actionEntity: lastVal,\n            refId,\n            closeLoader: loader,\n        };\n        if (combId === '' || lastVal === undefined) {\n            throw throwError('combId and lastVal are mandatory');\n        } else {\n            if (loader) {\n                this.showLoader(true);\n            }\n\n            return this.apiCallChunk(HttpRequestType.GET, params);\n        }\n    }\n\n    public repriceCart(combId: CombinationId): Promise<any> {\n        const params = {\n            entity: 'cart',\n            id: combId,\n            action: 'reprice',\n            curCode: this.settingsService.getCurrency(),\n            deviceId: this.settingsService.getDeviceID(),\n            lang: this.settingsService.langCode,\n        };\n        if (!params.deviceId) {\n            return this.paramsError('invalid data id');\n        } else {\n            // this.showLoader(true);\n            // Recheck price is called at background.\n            //Make ignore loader false to invoke loader false on failure case only\n            return this.apiCallAccess(HttpRequestType.POST, params, {});\n        }\n    }\n\n    public getCartList(silentMode?: boolean, success?: any, failure?: any) {\n        const params = {\n            entity: 'cart',\n            deviceId: this.settingsService.getDeviceID(),\n            curCode: this.settingsService.getCurrency(),\n            closeLoader: !silentMode,\n        };\n        if (!params.deviceId) {\n            return new Promise((resolve, reject) => {\n                reject('invalid data id');\n            });\n        } else {\n            if (!silentMode) {\n                this.showLoader(true);\n            }\n            return this.apiCallAccess(HttpRequestType.GET, params);\n        }\n    }\n\n    public getPlace(placeId: string, inputType: string): Promise<any> {\n        const params = {\n            entity: 'googlePlace',\n            placeId,\n            inputType,\n            deviceID: this.settingsService.getDeviceID(),\n            language: this.settingsService.langCode,\n        };\n\n        return this.apiCallAccess(HttpRequestType.GET, params);\n    }\n\n    public dropDown(isGoogle: boolean, params: any): Observable<any> {\n        if (isGoogle) {\n            params.entity = 'googleDropDowns';\n        } else {\n            params.entity = 'mapboxDropdowns';\n        }\n        params.language = this.settingsService.langCode;\n        params.deviceID = this.settingsService.getDeviceID();\n        params.requestCount = 1;\n\n        return this.apiCallObs(HttpRequestType.GET, params);\n    }\n\n    public SearchAirportCities(params: any): Observable<any> {\n        params.entity = 'searchAirportCities';\n        params.requestCount = '12';\n        params.language = this.settingsService.langCode;\n\n        return this.apiCallObs(HttpRequestType.GET, params);\n    }\n\n    public SignIn(customer: { emailID: string; password: string }): Promise<any> {\n        this.showLoader(true);\n        return this.apiCallAccess(\n            HttpRequestType.POST,\n            {\n                entity: 'authenticate',\n                action: 'customer',\n                closeLoader: true,\n                langCode: this.settingsService.langCode,\n            },\n            customer\n        );\n    }\n\n    public Register(customer: { emailID: string; password: string }): Promise<any> {\n        this.showLoader(true);\n        return this.apiCallAccess(\n            HttpRequestType.POST,\n            {\n                entity: 'customers',\n                closeLoader: true,\n                langCode: this.settingsService.langCode,\n            },\n            customer\n        );\n    }\n\n    public GenerateLoginToken(dataKey: string): Promise<any> {\n        return this.apiCallAccess(\n            HttpRequestType.POST,\n            {\n                entity: 'socialLogin',\n                action: 'generateToken',\n            },\n            {\n                dataKey,\n            }\n        );\n    }\n\n    public SocialMediaSignIn(socialLoginToken: string): Promise<any> {\n        return this.apiCallAccess(HttpRequestType.POST, {\n            entity: 'socialMediaAuth',\n            action: socialLoginToken,\n            langCode: this.settingsService.langCode,\n        });\n    }\n\n    public SavePassenger(sessionID: string, passenger: Passenger): Promise<any> {\n        this.showLoader(true);\n        return this.apiCallAccess(\n            HttpRequestType.PUT,\n            {\n                entity: 'customers',\n                id: sessionID,\n                action: 'passengers',\n                closeLoader: true,\n            },\n            passenger\n        );\n    }\n\n    public UpdatePassenger(sessionID: string, passenger: Passenger): Promise<any> {\n        this.showLoader(true);\n        return this.apiCallAccess(\n            HttpRequestType.PUT,\n            {\n                entity: 'customers',\n                id: sessionID,\n                action: 'passengers',\n                actionId: passenger.id,\n                closeLoader: true,\n            },\n            passenger\n        );\n    }\n\n    public RemovePassenger(sessionID: string, passengerId: string): Promise<any> {\n        this.showLoader(true);\n        return this.apiCallAccess(\n            HttpRequestType.PUT,\n            {\n                entity: 'customers',\n                id: sessionID,\n                action: 'passengers',\n                actionId: passengerId,\n                actionEntity: 'remove',\n                closeLoader: true,\n            },\n            {}\n        );\n    }\n\n    public getMetaRes(combId: CombinationId, serviceId: ServiceId, dataId: DataId): Promise<any> {\n        const params = this.genSearchParams(undefined, combId, serviceId, dataId);\n        params.entity = 'searchMeta';\n        if (!params.id) {\n            return this.paramsError('invalid combination id');\n        } else {\n            return this.apiCallAccess(HttpRequestType.GET, params, {});\n            // return this.addCanceller(api.cancelId, api.res.get(params, undefined, success, failure));\n        }\n    }\n\n    public resetSession(combId: CombinationId): Promise<any> {\n        const params = {\n            entity: 'restSession',\n            id: combId,\n            deviceId: this.settingsService.getDeviceID(),\n            closeLoader: true,\n        };\n        if (!params.id) {\n            return this.paramsError('invalid combination id');\n        } else {\n            this.showLoader(true);\n            return this.apiCallAccess(HttpRequestType.POST, params, {});\n        }\n    }\n\n    public getPlaceMapboxData(url: string): Promise<any> {\n        return this.requestNoCredential(HttpRequestType.GET, url).toPromise();\n    }\n\n    public Booking(bookingReq: BookingReq): Promise<any> {\n        const params = {\n            entity: 'bookings',\n        };\n\n        bookingReq.deviceId = this.settingsService.getDeviceID();\n        bookingReq.userSettings = {\n            partialSettings: {\n                lang: this.settingsService.langCode,\n                userCurReq: this.settingsService.getCurrency(),\n            },\n            langSettings: {\n                code: this.settingsService.langCode,\n                i18nCode: this.settingsService.i18nCode,\n            },\n            ctryCode: SettingsService.getIpCountry().country,\n        };\n\n        if (!bookingReq.deviceId || bookingReq.deviceId === '') {\n            return this.paramsError('invalid deviceID' + bookingReq.deviceId);\n        } else {\n            this.showLoader(true, 'LOADER_MESSAGES.BOOKING_CONFIRM');\n            return this.apiCallAccess(HttpRequestType.POST, params, bookingReq);\n        }\n    }\n    public getDestinations() {\n        const params = {\n            entity: 'destinations',\n        };\n\n        return this.apiCallAccess(HttpRequestType.GET, params);\n    }\n    public getAllMetaRes(combId: CombinationId): Promise<any> {\n        const params = {\n            id: combId,\n            entity: 'searchMeta',\n            serviceId: -1,\n            deviceId: this.settingsService.getDeviceID(),\n        };\n        if (!combId) {\n            return this.paramsError('invalid combination id' + combId);\n        } else {\n            return this.apiCallAccess(HttpRequestType.GET, params);\n        }\n    }\n\n    public pollService(dataId: DataId, combId: CombinationId): Promise<any> {\n        return this.checkResults(dataId, combId);\n    }\n\n    public setCartDebugInfo(combId: CombinationId, optionId: string, debugInfo: DebugInfo): Promise<any> {\n        const params = {\n            entity: 'cart',\n            id: combId,\n            action: 'setDebugInfo',\n            deviceId: this.settingsService.getDeviceID(),\n            optionId,\n        };\n        if (!params.id) {\n            return this.paramsError('invalid combId id');\n        } else {\n            return this.apiCallAccess(HttpRequestType.POST, params, debugInfo);\n        }\n    }\n\n    public recoverBookingData(combId: string): Observable<any> {\n        const params = {\n            entity: 'recoverBookingData',\n            id: combId,\n            deviceId: this.settingsService.getDeviceID(),\n        };\n\n        return this.apiCallObs(HttpRequestType.GET, params);\n    }\n\n    public verifyEmailID(mailToken: string): Observable<{ message: string }> {\n        const params = {\n            entity: 'customer',\n            id: mailToken,\n            action: 'verifyemail',\n            langCode: this.settingsService.langCode,\n        };\n\n        return this.apiCallObs(HttpRequestType.GET, params);\n    }\n\n    protected showLoader(show: boolean, msg?: string, title?: string): void {\n        this.loaderService.triggerLoading.emit({\n            loading: show,\n            type: 'small',\n            textKey: msg,\n            title,\n        });\n    }\n\n    protected apiCallAccessOptions(\n        requestMethod: HttpRequestType,\n        params: any,\n        httpOptions: any,\n        data?: any\n    ): Promise<any> {\n        const urlAndQueryParams = this.buildUrlAndQueryParams(params);\n        const { url, queryParams } = urlAndQueryParams;\n        return this.request(requestMethod, url, queryParams, data, httpOptions).toPromise();\n    }\n\n    protected apiCallAccess(requestMethod: HttpRequestType, params: any, data?: any): Promise<any> {\n        return this.apiCallAccessOptions(requestMethod, params, undefined, data);\n    }\n\n    protected apiCallChunk(\n        requestMethod: HttpRequestType,\n        params: any,\n        data?: any,\n        ignoreLoader: boolean = false\n    ): Observable<string> {\n        let chunkCount = 0;\n\n        const urlAndQueryParams = this.buildUrlAndQueryParams({ ...params, chunk: true });\n        const { url, queryParams } = urlAndQueryParams;\n\n        return new Observable((subscriber) => {\n            const toUnsubscribe = this.request(requestMethod, url, queryParams, data, {\n                reportProgress: true,\n                responseType: 'text',\n                observe: 'events',\n                context: new HttpContext().set(SEARCH_RESULT_PROCESSING, true),\n            }).subscribe(\n                (event: HttpEvent<any>) => {\n                    console.log(event);\n\n                    switch (event.type) {\n                        case HttpEventType.DownloadProgress:\n                            {\n                                chunkCount = ApiAccessService.sendChunkData(\n                                    chunkCount,\n                                    subscriber,\n                                    (event as HttpDownloadProgressEvent).partialText\n                                );\n                            }\n                            break;\n                        case HttpEventType.Response:\n                            if (event.ok) {\n                                chunkCount = ApiAccessService.sendChunkData(chunkCount, subscriber, event.body);\n                            } else {\n                                console.error('got a status error on chunk request:' + event.status);\n                                subscriber.error({ status: event.status });\n                            }\n                            toUnsubscribe.unsubscribe();\n                            subscriber.complete();\n                            break;\n                    }\n                },\n                (error) => {\n                    subscriber.error(error);\n                    toUnsubscribe.unsubscribe();\n                    subscriber.complete();\n                }\n            );\n        });\n    }\n\n    protected apiCallObsOptions(\n        requestMethod: HttpRequestType,\n        params: any,\n        httpOptions: any,\n        data?: any\n    ): Observable<any> {\n        const urlAndQueryParams = this.buildUrlAndQueryParams(params);\n        const { url, queryParams } = urlAndQueryParams;\n        return this.request(requestMethod, url, queryParams, data, httpOptions);\n    }\n\n    protected apiCallObs(requestMethod: HttpRequestType, params: any, data?: any): Observable<any> {\n        return this.apiCallObsOptions(requestMethod, params, undefined, data);\n    }\n\n    protected buildUrlAndQueryParams(params: any): IQueryAndParams {\n        let url = this.configService.baseUrl;\n\n        const queryParams = {\n            ...params,\n        };\n        const { entity, id, action, actionId, actionEntity } = queryParams;\n        if (entity) {\n            url += '/' + entity;\n            delete queryParams.entity;\n        }\n        if (id) {\n            url += '/' + id;\n            delete queryParams.id;\n        }\n        if (action) {\n            url += '/' + action;\n            delete queryParams.action;\n        }\n        if (actionId) {\n            url += '/' + actionId;\n            delete queryParams.actionId;\n        }\n        if (actionEntity || actionEntity === 0) {\n            url += '/' + actionEntity;\n            delete queryParams.actionEntity;\n        }\n        return {\n            url,\n            queryParams,\n        };\n    }\n\n    // used to send back an error to caller failure function when a param is invalid\n    protected paramsError(err: any): any {\n        const myErr = {\n            err,\n            status: 404,\n        };\n        console.error('API error:' + err);\n\n        return new Promise((resolve, reject) => {\n            reject(myErr);\n        });\n    }\n\n    private checkResults(dataId: DataId, combId: CombinationId): Promise<any> {\n        const params = {\n            entity: 'checkResults',\n            action: dataId,\n            lang: this.settingsService.langCode,\n            combId,\n        };\n        if (dataId === '') {\n            return this.paramsError('dataId is mandatory');\n        } else {\n            const options = {\n                context: new HttpContext().set(SEARCH_RESULT_PROCESSING, true),\n            };\n            return this.apiCallAccessOptions(HttpRequestType.GET, params, options, {});\n        }\n    }\n\n    private genSearchParams(params: any, combId: CombinationId, serviceId: ServiceId, dataId: DataId): any {\n        if (!params) {\n            params = {};\n        }\n        params.id = combId;\n        params.serviceId = serviceId;\n        params.dataId = dataId;\n        if (!params.sort_by) {\n            params.sort_by = 'bestValue';\n        }\n        params.currency = this.settingsService.getCurrency();\n        params.lang = this.settingsService.langCode;\n\n        return params;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TabRoutingService } from '@services/searchEngine/services/tab-routing.service';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserSearchService } from '@services/searchEngine/services/user-search-service';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { INightCheckResult, NightChoiceService } from '@services/modules/nightChoice/night-choice.service';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { DialogService } from '@services/dialog.service';\nimport {\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CheckInconsistentService {\n    constructor(\n        private nightChoiceService: NightChoiceService,\n        private tabRoutingService: TabRoutingService,\n        private tripPlannerService: TripPlannerService,\n        private userSearchService: UserSearchService,\n        private searchDataService: SearchDataService,\n        private translateService: TranslateService,\n        private cartService: CartService,\n        private dialogService: DialogService\n    ) {}\n\n    public checkInconsistent(serviceId: ServiceId, stateParams: StateFrom, deferred?: any) {\n        const promise = new Promise((resolve, reject) => {\n            this.tripPlannerService.isRunning(this.searchDataService.getCombId(), resolve);\n        });\n        //we must wait for poller to finish or we can get invalid consistency values\n        promise.then(() => {\n            const nextIsSummary = stateParams === StateFrom.SUMMARY && this.tabRoutingService.hasMovedToSummary();\n\n            if (!nextIsSummary && !this.tabRoutingService.isConsistent(serviceId)) {\n                this.dialogService\n                    .openConfirmationDialog({\n                        title: this.translateService.instant('POPUPS.TRIP_INCONSISTENT.TITLE'),\n                        content: this.tabRoutingService.getConsistentMsg(serviceId),\n                        confirmBtnTitle: this.translateService.instant('POPUPS.TRIP_INCONSISTENT.1_YES'),\n                        cancelBtnTitle: this.translateService.instant('POPUPS.TRIP_INCONSISTENT.2_NO'),\n                        icon: { name: 'trip-inconsistancy-dialog', iconStyle: { 'width.px': 66, 'height.px': 66 } },\n                    })\n                    .afterClosed()\n                    .subscribe((confirmed: TzDialogReturn) => {\n                        if (confirmed === CONFIRM) {\n                            const toReset: { [key in ServiceId]?: true } = {};\n                            toReset[serviceId] = true;\n                            this.tabRoutingService.setConsistent(serviceId, true, '');\n                            this.userSearchService.search({\n                                forceLoader: true,\n                                serviceId,\n                                serviceIdMapToUpd: toReset,\n                                anticipatedList: toReset,\n                            });\n                            if (deferred) {\n                                deferred.reject();\n                            }\n                        } else {\n                            // user does not want to change anything we set to consistent\n                            this.tabRoutingService.setConsistent(serviceId, true, '');\n                            if (deferred) {\n                                deferred.resolve();\n                            }\n                            if (stateParams !== StateFrom.CHECKOUT && stateParams !== StateFrom.TAB) {\n                                this.userSearchService.search({\n                                    serviceId: this.tabRoutingService.setNext(serviceId).serviceId,\n                                    serviceIdMapToUpd: undefined,\n                                });\n                            }\n                        }\n                    });\n            } else if (serviceId === ServiceId.ACC) {\n                //do not re-ask for just received results\n                this.nightChoiceService.checkNightArrival().then((res: INightCheckResult) => {\n                    switch (res.ignore) {\n                        case true:\n                            //nothing\n                            break;\n                        case false:\n                            switch (res.changed) {\n                                case true:\n                                    this.userSearchService.search({\n                                        serviceId: ServiceId.ACC,\n                                        nightChoice: res.curChoice,\n                                    });\n                                    if (deferred) {\n                                        deferred.reject();\n                                    }\n                                    break;\n                                case false:\n                                    //save current choice\n                                    this.searchDataService.setNightChoice(res.curChoice);\n                                    if (\n                                        stateParams !== StateFrom.CHECKOUT &&\n                                        !this.cartService.isVirtual(ServiceId.ACC)\n                                    ) {\n                                        this.userSearchService.searchCheckDep(\n                                            ServiceId.FLIGHT,\n                                            true,\n                                            false,\n                                            true,\n                                            true\n                                        );\n                                    }\n                                    break;\n                            }\n                    }\n                    if (deferred) {\n                        deferred.resolve();\n                    }\n                });\n            } else if (deferred) {\n                deferred.resolve();\n            }\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TabRoutingService } from '@services/searchEngine/services/tab-routing.service';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { SearchHelpers } from '@services/searchEngine/services/search-helpers';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DialogService } from '@services/dialog.service';\nimport {\n    CANCEL,\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CheckDepService {\n    constructor(\n        private trazlerAPI: ApiAccessService,\n        private cartService: CartService,\n        private tabRoutingService: TabRoutingService,\n        private translateService: TranslateService,\n        private searchDataService: SearchDataService,\n        private listenersService: ListenersService,\n        private dialogService: DialogService\n    ) {}\n\n    private static canTriggerInconsistency(triggerServiceId: ServiceId, modifiedServiceId: ServiceId) {\n        switch (triggerServiceId) {\n            case ServiceId.FLIGHT_TRAIN:\n            case ServiceId.FLIGHT:\n            case ServiceId.TRAIN:\n            case ServiceId.ACC:\n                return !SearchHelpers.isTransport(modifiedServiceId);\n            case ServiceId.TRANSFER:\n            case ServiceId.CAR_RENTAL:\n                return !SearchHelpers.isPrimaryService(modifiedServiceId);\n        }\n        return true;\n    }\n\n    //checkDep\n    // returns:\n    //      hasDep if there are dependencies\n    //      serviceIdMapToUpd list of dependencies inconsistent\n    //      toRest: true - we need to search for new dependencies values ( user confirmed the reset or all are in pre-selection)\n    //              false - we must not recompute value but move to next service\n    //      isPreCheck: when true we are checking the impact, when false operation is done we get its impact\n\n    public checkDep(serviceId: ServiceId, isUpdComb: boolean, isNewService: boolean, fromPrimary: any) {\n        return new Promise((resolve, reject) => {\n            const dependenciesList = this.tabRoutingService.hasDependencies(serviceId, true);\n\n            if (dependenciesList.length) {\n                this.trazlerAPI\n                    .checkDep(\n                        this.searchDataService.getCombId(),\n                        this.searchDataService.getDataId(serviceId),\n                        serviceId,\n                        isUpdComb\n                    )\n                    .then(\n                        (res: any) => {\n                            this.tabRoutingService.setCleanCheckDep();\n                            this.checkDepSuccess(res, resolve, serviceId, isUpdComb, isNewService, fromPrimary);\n                        },\n                        (error: any) => {\n                            reject(error);\n                        }\n                    );\n            } else {\n                resolve({\n                    hasDep: false,\n                    toReset: !!isUpdComb,\n                });\n            }\n        });\n    }\n\n    public checkUpdCombination(curServiceId: ServiceId, serviceSearch: any): Promise<unknown> {\n        return new Promise((resolve, reject) => {\n            const dependenciesList = this.tabRoutingService.hasDependencies(curServiceId, true);\n\n            if (dependenciesList.length) {\n                const dataId = this.searchDataService.getDataId(curServiceId);\n                this.trazlerAPI\n                    .updServiceSearch(\n                        this.searchDataService.getCombId(),\n                        dataId,\n                        this.getTransportServicesId(curServiceId),\n                        true,\n                        serviceSearch\n                    )\n                    .then(\n                        (res: any) => {\n                            this.tabRoutingService.setCleanCheckDep();\n                            this.checkDepSuccess(\n                                res,\n                                resolve,\n                                curServiceId,\n                                true,\n                                false,\n                                SearchHelpers.isPrimaryService(curServiceId)\n                            );\n                        },\n                        (error: any) => {\n                            reject(error);\n                        }\n                    );\n            } else {\n                resolve({\n                    hasDep: false,\n                    toReset: true,\n                });\n            }\n        });\n    }\n\n    // check what is the inconsistent status (used on page refresh and when a service has been added)\n    public reCheckDep() {\n        const firstServiceId = this.getTransportServicesId(\n            SearchHelpers.getFirstServiceId(this.searchDataService.services)\n        );\n\n        return this.checkDep(firstServiceId, false, false, SearchHelpers.isPrimaryService(firstServiceId)).then(\n            () => {\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_CONSISTENCIES);\n            },\n            () => {}\n        );\n    }\n\n    private getTransportServicesId(servicesId: ServiceId) {\n        if (servicesId === ServiceId.FLIGHT_TRAIN) {\n            if (this.cartService.getCartItemData(ServiceId.TRAIN, 'all').found) {\n                return ServiceId.TRAIN;\n            } else {\n                return ServiceId.FLIGHT;\n            }\n        }\n        return servicesId;\n    }\n\n    private checkDepSuccess(\n        res: any,\n        resolver: any,\n        serviceId: any,\n        isUpdComb: any,\n        isNewService: any,\n        fromPrimary: any\n    ) {\n        let serviceListTxt = '';\n        let details = '';\n        const serviceIdMapToUpd: any = {};\n        let hasModified = false;\n        const preCheckInconsistent: any[] = [];\n        let noPartial = false;\n        let mainChange: any = null;\n        // when only from field modified on transport we want to ignore all inconsistencies\n        let ignoreAll = res && res.onlyFromField; // when true no inconsistencies will be reported\n        let roomChanged = false; // set to true when number of rooms is modified TRAZ-6613\n\n        if (isUpdComb) {\n            hasModified = true;\n        }\n        let validatedModified = 0;\n        if (res && res.servicesStatus) {\n            let sep = '';\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let i = 0; i < res.servicesStatus.length; i++) {\n                let serviceInfo = '';\n\n                if (res.servicesStatus[i].modified) {\n                    hasModified = true;\n                    serviceInfo = this.getInconsistentInfos(res.servicesStatus[i]);\n                } else {\n                    this.tabRoutingService.setConsistent(\n                        res.servicesStatus[i].serviceId,\n                        true,\n                        '',\n                        res.servicesStatus[i].inconsistentId\n                    );\n                    continue;\n                }\n\n                if (\n                    !isUpdComb &&\n                    !CheckDepService.canTriggerInconsistency(serviceId, res.servicesStatus[i].serviceId)\n                ) {\n                    continue;\n                }\n\n                const isATransport = SearchHelpers.isTransport(serviceId);\n                // when TO is modified we do not ask for partial update TRAZ-5470\n                if (\n                    isUpdComb &&\n                    SearchHelpers.isPrimaryService(serviceId) &&\n                    (res.servicesStatus[i].serviceId === serviceId ||\n                        (SearchHelpers.isTransport(res.servicesStatus[i].serviceId) && isATransport)) &&\n                    res.servicesStatus[i].changedData &&\n                    res.servicesStatus[i].changedData.length\n                ) {\n                    if (\n                        (isATransport && res.servicesStatus[i].changedData[0].fieldName !== 'from') ||\n                        (!isATransport && res.servicesStatus[i].changedData[0].fieldName === 'tripCal')\n                    ) {\n                        mainChange = {\n                            changedData: this.translateService.instant('Fields.destination'),\n                        };\n                        noPartial = true;\n                    } else if (\n                        res.servicesStatus[i].changedData[0].fieldName === 'rooms' &&\n                        serviceId === ServiceId.ACC\n                    ) {\n                        // when only rooms is changed we want to ignore all inconsistencies\n                        ignoreAll = true;\n                        roomChanged = true;\n                    }\n                }\n                if (!ignoreAll && !noPartial) {\n                    if (!res.servicesStatus[i].changedData) {\n                        if (mainChange) {\n                            mainChange.servicesChanged +=\n                                sep + this.translateService.instant('Services.' + res.servicesStatus[i].serviceId);\n                        } else {\n                            mainChange = {\n                                servicesChanged: this.translateService.instant(\n                                    'Services.' + res.servicesStatus[i].serviceId\n                                ),\n                            };\n                        }\n                        sep = ' ,';\n                    } else {\n                        for (let j = 1; j < res.servicesStatus[i].changedData.length; j++) {\n                            if (res.servicesStatus[i].changedData[j].ui) {\n                                if (\n                                    serviceId === res.servicesStatus[i].serviceId ||\n                                    (isATransport && SearchHelpers.isTransport(res.servicesStatus[i].serviceId))\n                                ) {\n                                    if (mainChange) {\n                                        mainChange.changedData = this.translateService.instant(\n                                            'Fields.' + res.servicesStatus[i].changedData[0].fieldName\n                                        );\n                                        mainChange.fieldChanged = this.translateService.instant(\n                                            'Fields.hl.' + res.servicesStatus[i].changedData[0].fieldName\n                                        );\n                                    } else {\n                                        mainChange = {\n                                            changedData: this.translateService.instant(\n                                                'Fields.' + res.servicesStatus[i].changedData[0].fieldName\n                                            ),\n                                            servicesChanged: '',\n                                            fieldChanged: this.translateService.instant(\n                                                'Fields.hl.' + res.servicesStatus[i].changedData[0].fieldName\n                                            ),\n                                        };\n                                    }\n                                } else {\n                                    if (mainChange) {\n                                        if (\n                                            (serviceId !== res.servicesStatus[i].serviceId && !isATransport) ||\n                                            (isATransport &&\n                                                !SearchHelpers.isTransport(res.servicesStatus[i].serviceId))\n                                        ) {\n                                            mainChange.servicesChanged +=\n                                                sep +\n                                                this.translateService.instant(\n                                                    'Services.' + res.servicesStatus[i].serviceId\n                                                );\n                                            sep = ', ';\n                                        }\n                                    } else {\n                                        mainChange = {\n                                            servicesChanged: this.translateService.instant(\n                                                'Services.' + res.servicesStatus[i].serviceId\n                                            ),\n                                        };\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (this.cartService.isVirtual(res.servicesStatus[i].serviceId)) {\n                    if (isUpdComb) {\n                        preCheckInconsistent.push({\n                            serviceId: res.servicesStatus[i].serviceId,\n                            infos: serviceInfo,\n                        });\n                    } else {\n                        this.tabRoutingService.setConsistent(\n                            res.servicesStatus[i].serviceId,\n                            false,\n                            serviceInfo,\n                            res.servicesStatus[i].inconsistentId\n                        );\n                    }\n                    if (fromPrimary || !SearchHelpers.isPrimaryService(res.servicesStatus[i].serviceId)) {\n                        serviceIdMapToUpd[res.servicesStatus[i].serviceId] = true;\n                    }\n                    continue;\n                }\n                if (!fromPrimary && (isUpdComb || SearchHelpers.isPrimaryService(res.servicesStatus[i].serviceId))) {\n                    continue;\n                }\n                if (\n                    res.servicesStatus[i].serviceId !== serviceId &&\n                    (!SearchHelpers.isTransport(res.servicesStatus[i].serviceId) ||\n                        (!SearchHelpers.isTransport(serviceId) &&\n                            SearchHelpers.isTransport(res.servicesStatus[i].serviceId)))\n                ) {\n                    validatedModified++;\n                }\n                if (isUpdComb) {\n                    if (!ignoreAll || (res.servicesStatus[i].serviceId === ServiceId.ACC && roomChanged)) {\n                        preCheckInconsistent.push({\n                            serviceId: res.servicesStatus[i].serviceId,\n                            infos: serviceInfo,\n                        });\n                        serviceIdMapToUpd[res.servicesStatus[i].serviceId] = true;\n                    }\n                } else {\n                    this.tabRoutingService.setConsistent(\n                        res.servicesStatus[i].serviceId,\n                        false,\n                        serviceInfo,\n                        res.servicesStatus[i].inconsistentId\n                    );\n                    serviceIdMapToUpd[res.servicesStatus[i].serviceId] = true;\n                }\n                if (serviceInfo !== '') {\n                    details +=\n                        '<br>' +\n                        this.translateService.instant('Services.' + res.servicesStatus[i].serviceId) +\n                        ':' +\n                        serviceInfo;\n                }\n                serviceListTxt += sep + this.translateService.instant('Services.' + res.servicesStatus[i].serviceId);\n                sep = ', ';\n                details += serviceInfo;\n            }\n        }\n        if (!ignoreAll && serviceListTxt !== '') {\n            if (isUpdComb) {\n                if (validatedModified >= 1) {\n                    console.log('no partial:' + noPartial);\n                    let dialogObservableReference;\n                    if (mainChange) {\n                        if (!mainChange.changedData) {\n                            mainChange.changedData = this.translateService.instant('Fields.search');\n                        }\n                        if (!mainChange.fieldChanged) {\n                            mainChange.fieldChanged = this.translateService.instant('Fields.hl.search');\n                        }\n                    }\n                    if (noPartial) {\n                        dialogObservableReference = this.dialogService.openConfirmationDialog({\n                            title: this.translateService.instant('POPUPS.RESET_NO_PARTIAL.TITLE'),\n                            content: this.translateService.instant('POPUPS.RESET_NO_PARTIAL.BODY', mainChange),\n                            confirmBtnTitle: this.translateService.instant('POPUPS.RESET_NO_PARTIAL.1_YES'),\n                            cancelBtnTitle: this.translateService.instant('POPUPS.RESET_NO_PARTIAL.2_NO'),\n                            showCloseBtn: false,\n                            icon: { name: 'reset-no-partial-dialog', iconStyle: { 'width.px': 80, 'height.px': 80 } },\n                        });\n                    } else {\n                        dialogObservableReference = this.dialogService.openConfirmationDialog({\n                            content: this.translateService.instant('POPUPS.RESET_BOOKED.BODY', mainChange),\n                            title: this.translateService.instant('POPUPS.RESET_BOOKED.TITLE'),\n                            confirmBtnTitle: this.translateService.instant('POPUPS.RESET_BOOKED.CONFIRM'),\n                            cancelBtnTitle: this.translateService.instant('POPUPS.RESET_BOOKED.CANCEL'),\n                            closeBtnTitle: this.translateService.instant('POPUPS.RESET_BOOKED.CLOSE'),\n                            icon: { name: 'reset-booked-dialog', iconStyle: { 'width.px': 80, 'height.px': 93.16 } },\n                        });\n                    }\n                    dialogObservableReference.afterClosed().subscribe((dialogReturn: TzDialogReturn) => {\n                        if (dialogReturn === CONFIRM) {\n                            // recompute all\n                            this.tabRoutingService.unsetBookedDependencies(serviceIdMapToUpd);\n                            resolver({\n                                hasDep: true,\n                                resetList: serviceIdMapToUpd,\n                                toReset: true,\n                                preCheckInconsistent,\n                            });\n                        } else if (dialogReturn === CANCEL && !noPartial) {\n                            //partial case\n                            if (!SearchHelpers.isTransport(serviceId)) {\n                                // in partial case, we do not want to trigger inconsistency\n                                // on transport when acc is changed. Remove transport from list\n                                // of inconsistent\n                                this.tabRoutingService.setConsistent(ServiceId.FLIGHT_TRAIN, true, '');\n                                for (let i = 0; i < preCheckInconsistent.length; i++) {\n                                    if (SearchHelpers.isTransport(preCheckInconsistent[i].serviceId)) {\n                                        preCheckInconsistent.splice(i, 1);\n                                        i--;\n                                    }\n                                }\n                            }\n                            resolver({\n                                hasDep: true,\n                                resetList: {},\n                                toReset: true,\n                                preCheckInconsistent,\n                            });\n                        } else {\n                            //cancel\n                            resolver({\n                                hasDep: true,\n                                resetList: serviceIdMapToUpd,\n                                toReset: false,\n                            });\n                        }\n                    });\n                } else {\n                    this.tabRoutingService.unsetBookedDependencies(serviceIdMapToUpd);\n                    resolver({\n                        hasDep: true,\n                        resetList: serviceIdMapToUpd,\n                        toReset: true,\n                        preCheckInconsistent,\n                    });\n                }\n            } else if (isNewService) {\n                resolver({\n                    hasDep: true,\n                    resetList: undefined,\n                    toReset: false,\n                });\n            } else {\n                resolver({\n                    hasDep: true,\n                    resetList: serviceIdMapToUpd,\n                    toReset: false,\n                });\n            }\n        } else {\n            if (hasModified) {\n                // when it is an edit search and there is no identified confirmed service\n                // we set resetlist to undefined to check all services again\n                // this is done to solve issue on flight / acc where the date does not change\n                // but from change making the start date of the hotel being the next day\n                // if (ignoreAll) {\n                //     preCheckInconsistent = [ServiceId.ACC];\n                //     serviceIdMapToUpd[ServiceId.ACC] = true;\n                // }\n                resolver({\n                    hasDep: true,\n                    resetList: serviceIdMapToUpd, //isUpdComb ? undefined : serviceIdMapToUpd,\n                    toReset: true,\n                    preCheckInconsistent,\n                });\n            } else {\n                resolver({\n                    hasDep: res && res.servicesStatus && res.servicesStatus.length > 0,\n                    resetList: undefined,\n                    toReset: false,\n                });\n            }\n        }\n    }\n\n    private getInconsistentInfos(data: any) {\n        let details = '';\n\n        if (data.changedData && data.changedData.length) {\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let j = 0; j < data.changedData.length; j++) {\n                if (data.changedData[j].ui) {\n                    if (data.changedData[j].oldVal !== '' && data.changedData[j].newVal !== '') {\n                        details +=\n                            '<li>' +\n                            this.translateService.instant('INCONSISTENT_MSG.' + data.changedData[j].fieldName, {\n                                oldVal: data.changedData[j].oldVal,\n                                newVal: data.changedData[j].newVal,\n                                service: this.translateService.instant('Services.' + data.serviceId),\n                            }) +\n                            '</li>';\n                    } else {\n                        details +=\n                            '<li>' +\n                            this.translateService.instant('INCONSISTENT_MSG.SearchInfo', {\n                                fieldName: this.translateService.instant('FIELD_NAME.' + data.changedData[j].fieldName),\n                                changedValue:\n                                    data.changedData[j].newVal !== ''\n                                        ? data.changedData[j].newVal\n                                        : data.changedData[j].oldVal,\n                                service: this.translateService.instant('Services.' + data.serviceId),\n                            }) +\n                            '</li>';\n                    }\n                }\n            }\n        }\n\n        if (details !== '') {\n            details = '</span><br><ul class=\"inconsistent\">' + details + '</ul>';\n        }\n        return details;\n    }\n}\n","/* eslint-disable no-bitwise */\nimport { Injectable } from '@angular/core';\nimport { CalTypes } from '@core/constants/call-types.const';\nimport { CombServiceIds } from '@core/constants/comb-service-ids';\nimport { Trip } from '@core/constants/trip';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { SearchHelpers } from '@services/searchEngine/services/search-helpers';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { CSS_MAPPING } from '@core/constants/css-mapping';\nimport { SearchUtilsService } from '@services/modules/search/utils/search.utils';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { TzPassengerUtil } from '@core/utils/tz-passenger.util';\n\nenum TYPES_GOOGLE_MAPBOX {\n    'TYPE_BOX_AIR_STATION' = 'type2',\n    'TYPE_GOOG_TRANSFER' = 'type3',\n    'TYPE_GOOG_ADDR' = 'type4',\n    'TYPE_GOOG_ACC_ADDR' = 'type5',\n    'TYPE_MAPBOX_RENT' = 'type6',\n    'TYPE_GOOG_RENT' = 'type6',\n    'TYPE_GOOG_ADDR_TEST' = 'type7',\n    'TYPE_MABOX_ADDR_STATION' = 'type8',\n}\n\nenum PLACEHOLDERS {\n    PLACEHOLDER_FROM = 'SEARCH.FROM',\n    PLACE_HOLDER_TO = 'SEARCH.TO',\n    PLACE_HOLDER_TRIPS = 'SEARCH.TRIP_DATES',\n    PLACE_HOLDER_TRIP = 'SEARCH.TRIP_DATE',\n    PLACE_HOLDER_DESTINATION = 'SEARCH.DESTINATION',\n    PLACE_HOLDER_ADDR = 'SEARCH.ADDRESS',\n    PLACE_HOLDER_ADDR_EDIT = 'SEARCH.EDIT_ADDRESS',\n    PLACE_HOLDER_TRANSFER_TO = 'SEARCH.TRANSFER_TO',\n    PLACE_HOLDER_TRANSFER_FROM = 'SEARCH.TRANSFER_FROM',\n    PLACE_HOLDER_TRANSFER_DATE = 'SEARCH.TRANSFER_DATE_TIME',\n    PLACE_HOLDER_OPTIONAL_PICKUP = 'SEARCH.CAR_RENTAL_OPTIONAL_PICK_UP',\n    PLACE_HOLDER_MEETING = 'SEARCH.MEETING_DATE_TIME',\n    PLACE_HOLDER_RENTAL_PICKUP = 'SEARCH.PICKUP_CITY',\n    PLACE_HOLDER_RENTAL_DROP = 'SEARCH.DROP_OFF_IF_DIFFERENT',\n    PLACE_HOLDER_RENTAL_DATE = 'SEARCH.CAR_RENTAL_DATES_TIME',\n    PLACE_HOLDER_RENTAL_DATE_OPTIONAL = 'SEARCH.CAR_RENTAL_DATES_TIME_OPTIONAL',\n    PLACE_HOLDER_CHECK_IN_OUT = 'SEARCH.CHECKIN_CHECKOUT',\n}\n\nexport interface IValidSearch {\n    isValid: boolean;\n    firstField: string;\n}\n@Injectable({\n    providedIn: 'root',\n})\nexport class EngineRuleService {\n    public static SERVICE_MAP: {\n        [key: number]: { [key: string]: any }[];\n    } = {};\n    public static readonly GOOGLE = true;\n    public static readonly MAPBOX = false;\n    public static readonly ACTIVE_GOOGLE = true;\n    public static readonly TYPE_BOX_AIR_STATION = 'type2';\n    public static readonly FIELD_ROLE_TRIP_TRANSPORT: number = 0;\n    public static readonly FIELD_ROLE_LOCATION = 1;\n    public static readonly FIELD_ROLE_TRANSFER = 2;\n    public static readonly FIELD_ROLE_RENTAL = 3;\n    private static readonly FIELD_ROLE_MEETING = 4;\n    private static readonly MIN_TRANSPORT_DISTANCE = 10;\n    private static readonly SMALL_FIELD = 'col-xl-4 col-md-4 order3';\n    private static readonly LARGE_FIELD = 'col-xl-8 col-md-8 order3';\n\n    private static readonly MAX_TRIP_DAYS = 84;\n    private static readonly MAX_ACC_BOOK_DAYS = 28;\n    private static readonly MAX_RENTAL_BOOK_DAYS = 56;\n\n    private static readonly MIN_DRIVER_AGE = 21;\n    private static readonly MAX_DRIVER_AGE = 80;\n\n    constructor(\n        private translateService: TranslateService,\n        private toolsService: ToolsService,\n        private searchDataService: SearchDataService,\n        private listenersService: ListenersService\n    ) {\n        EngineRuleService.initMap();\n        this.listenersService.registerListener(ListenerId.LISTEN_LANG, EngineRuleService.initMap, this);\n    }\n\n    public static checkLoc(loc: any, redundantParam?: any) {\n        return loc && loc.latitude && loc.longitude;\n    }\n\n    public static getTravelMap(mapRes: any, services: CombServiceIds, travelType: Trip) {\n        if (!mapRes) {\n            return null;\n        }\n        if (mapRes.length > 2) {\n            return EngineRuleService.getTravelMapForType(mapRes, travelType);\n        } else {\n            for (const k in mapRes[0]) {\n                if (mapRes[0][k].dateRange !== undefined && mapRes[0][k].dateRange === CalTypes.CAL_RANGE_TRAVEL) {\n                    switch (true) {\n                        // if acc is selected the calendar must be with two dates\n                        case travelType === Trip.ROUND_TRIP &&\n                            (services & CombServiceIds.HOTEL) === CombServiceIds.HOTEL:\n                            mapRes[0][k].twoDates = true;\n                            mapRes[0][k].placeholder = PLACEHOLDERS.PLACE_HOLDER_TRIPS;\n                            mapRes[0][k].minDays = !mapRes[0][k].minDays ? 1 : mapRes[0][k].minDays;\n                            break;\n                        case travelType === Trip.ONE_WAY:\n                            mapRes[0][k].twoDates = false;\n                            mapRes[0][k].dateRange = CalTypes.CAL_RANGE_ONE_DATE;\n                            mapRes[0][k].placeholder = PLACEHOLDERS.PLACE_HOLDER_TRIP;\n                            break;\n                    }\n                }\n            }\n        }\n        return mapRes;\n    }\n\n    public static buildSearchFields(services: any, travelType: any) {\n        if (!EngineRuleService.SERVICE_MAP[CombServiceIds.HOTEL]) {\n            EngineRuleService.initMap();\n        }\n        return EngineRuleService.getTravelMap(\n            ToolsService.deepCopy(EngineRuleService.SERVICE_MAP[services]),\n            services,\n            travelType\n        );\n    }\n\n    public static buildSearchFieldsObj(selectedServiceObj: any, travelType: any) {\n        return EngineRuleService.buildSearchFields(SearchHelpers.getServiceValue(selectedServiceObj), travelType);\n    }\n\n    public static validSearch(\n        search: any,\n        passengers: any,\n        selectedServices: any,\n        travelType: any,\n        editMode: any\n    ): IValidSearch {\n        let isValid = true;\n        let firstErrorField = '';\n        let err;\n        const combinationParams = EngineRuleService.buildSearchFieldsObj(selectedServices, travelType);\n        /* if (editMode && selectedServices.accommodation) {\n            for (let confIdx = combinationParams.length - 1; confIdx >= 0; confIdx--) {\n                for (const field in combinationParams[confIdx]) {\n                    if (field === 'address') {\n                        combinationParams[confIdx][field].optional = false;\n                    }\n                }\n            }\n        }*/\n\n        const fieldsList = [];\n        for (const combination of combinationParams) {\n            for (const k in combination) {\n                if (combination.hasOwnProperty(k)) {\n                    if (editMode && combination[k].editOrder === -1) {\n                        continue;\n                    }\n                    switch (k) {\n                        case 'from':\n                        case 'to':\n                        case 'address':\n                            if (search[k] && (!combination[k].optional || (editMode && combination[k].editMandatory))) {\n                                fieldsList.push(k);\n                            }\n                            if (\n                                !(\n                                    (((combination[k].optional && !editMode) ||\n                                        (combination[k].optional && editMode && !combination[k].editMandatory)) &&\n                                        (!search[k] || (search[k] && !search[k].placeId))) ||\n                                    (editMode && combination[k].editOrder === undefined) ||\n                                    EngineRuleService.checkLoc(search[k])\n                                )\n                            ) {\n                                if (search[k] && search[k].displayStr && !search[k].isDirty && !search[k].waitForReq) {\n                                    search[k].invalid = true;\n                                }\n                                if (!firstErrorField) {\n                                    firstErrorField = k;\n                                }\n                                isValid = false;\n                                break;\n                            }\n                            if (combination[k].optional && search[k]) {\n                                if (!EngineRuleService.checkLoc(search[k])) {\n                                    if (search[k] && search[k].displayStr) {\n                                        isValid = false;\n                                        search[k].invalid = !search[k].isDirty && !search[k].waitForReq;\n                                    } else {\n                                        search[k].invalid = true;\n                                    }\n                                } else {\n                                    search[k].invalid = false;\n                                }\n                            } else {\n                                if (search[k]) {\n                                    search[k].invalid = false;\n                                }\n                            }\n                            break;\n                        case CalTypes.CAL_TRIP_TYPE:\n                        case CalTypes.CAL_RENTAL_TYPE:\n                        case CalTypes.CAL_TRANSFER_TYPE:\n                        case CalTypes.CAL_MEETING_TYPE:\n                            if (!combination[k].optional) {\n                                //if (i === 0) {\n                                if (search[k]) {\n                                    if (!EngineRuleService.checkCal(search[k], combination[k], travelType)) {\n                                        search[k].invalid = true;\n                                        isValid = false;\n                                        if (!firstErrorField) {\n                                            firstErrorField = 'calendar';\n                                        }\n                                        break;\n                                    }\n                                    search[k].invalid = false;\n                                } else {\n                                    if (!firstErrorField) {\n                                        firstErrorField = 'calendar';\n                                    }\n                                    isValid = false;\n                                }\n                            } else {\n                                if (search[k]) {\n                                    search[k].invalid = !EngineRuleService.checkCal(\n                                        search[k],\n                                        combination[k],\n                                        travelType\n                                    );\n                                }\n                            }\n\n                            break;\n                        case 'persons':\n                            const { valid, errMsg } = EngineRuleService.checkPersons(passengers, selectedServices);\n                            if (!valid) {\n                                passengers.invalid = true;\n                                if (!firstErrorField) {\n                                    firstErrorField = k;\n                                    err = errMsg;\n                                }\n                                isValid = false;\n                                break;\n                            }\n                            if (passengers) {\n                                passengers.invalid = false;\n                            }\n                            break;\n                        default:\n                            console.error('unhandled combination field:' + k);\n                            if (search[k]) {\n                                search[k].invalid = true;\n                            }\n                            isValid = false;\n                    }\n                }\n            }\n        }\n        if (fieldsList.length > 1) {\n            if (EngineRuleService.areInconsistent(search[fieldsList[0]], search[fieldsList[1]])) {\n                search[fieldsList[1]].invalid = true;\n                if (!firstErrorField) {\n                    firstErrorField = fieldsList[1];\n                }\n                isValid = false;\n            }\n        }\n\n        return {\n            isValid,\n            firstField: firstErrorField,\n        };\n    }\n\n    public static areInconsistent(addr1: any, addr2: any): boolean {\n        let activeTextBox;\n        if (addr1.fieldRole === EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT && addr1.cityName && addr1.countryCode) {\n            activeTextBox = addr1.cityName + '-' + addr1.countryCode;\n        }\n        let filledTextBox = '';\n        let code = addr1.code;\n\n        if (!code && addr1.iataCode) {\n            code = addr1.iataCode;\n        }\n\n        if (\n            addr2.fieldRole === EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT &&\n            addr2.cityName &&\n            addr2.cityName !== '' &&\n            addr2.countryCode &&\n            addr2.countryCode !== ''\n        ) {\n            filledTextBox = addr2.cityName + '-' + addr2.countryCode;\n        }\n\n        return (\n            (activeTextBox && filledTextBox && activeTextBox === filledTextBox) ||\n            (addr1.uniqueKey && addr1.uniqueKey === addr2.uniqueKey) ||\n            (addr1.stationType === 'city' && code && addr2.isMyLocation && addr2.placeId === code) ||\n            (addr1.stationType === 'city' && code && addr2.codes === code) ||\n            (addr1.cityCode &&\n                addr2.cityCode === addr1.cityCode &&\n                addr1.fieldRole !== EngineRuleService.FIELD_ROLE_TRANSFER &&\n                addr1.fieldRole !== EngineRuleService.FIELD_ROLE_LOCATION &&\n                addr2.fieldRole !== EngineRuleService.FIELD_ROLE_TRANSFER &&\n                addr2.fieldRole !== EngineRuleService.FIELD_ROLE_LOCATION) ||\n            (addr1.placeId && addr1.placeId !== '' && addr1.placeId !== 'dummy' && addr1.placeId === addr2.placeId)\n        );\n    }\n\n    private static getTravelMapForType(mapRes: any, travelType: any): any {\n        if (!mapRes) {\n            return null;\n        }\n        if (mapRes.length > 2) {\n            if (travelType === Trip.ROUND_TRIP) {\n                return mapRes.slice(0, 2);\n            } else {\n                return mapRes.slice(2, 4);\n            }\n        } else {\n            return mapRes;\n        }\n    }\n\n    private static checkAges(ages: any, expected: any, minAge: any, maxAge: any): boolean {\n        if (!expected) {\n            return true;\n        }\n        if (ages.length !== expected) {\n            return false;\n        }\n        for (const age of ages) {\n            if (age >= maxAge || age < minAge) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private static checkCal(cal: any, calConf: any, travelType: any) {\n        if (cal && cal.fromDate) {\n            switch (calConf.dateRange) {\n                case CalTypes.CAL_RANGE_TRAVEL:\n                    if (travelType === Trip.ROUND_TRIP && !cal.toDate) {\n                        return false;\n                    }\n                    break;\n                case CalTypes.CAL_RANGE_FREE:\n                case CalTypes.CAL_RANGE_ONE_DATE:\n                    break;\n                case CalTypes.CAL_RANGE_TWO_DATES:\n                    if (!cal.toDate || (calConf.minDays && cal.toDate === cal.fromDate)) {\n                        return false;\n                    }\n                    break;\n                default:\n                    return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private static isValidDriverAge(mandatory: boolean, age: number): boolean {\n        return !mandatory || (age >= EngineRuleService.MIN_DRIVER_AGE && age <= EngineRuleService.MAX_DRIVER_AGE);\n    }\n\n    private static checkPersons(persons: any, selectedServices: any) {\n        let valid = false;\n        let errMsg;\n        if (\n            !persons ||\n            (persons.adults <= 0 && !TzPassengerUtil.rentalOnly(selectedServices)) ||\n            persons.adults < persons.infants\n        ) {\n            return { valid, errMsg };\n        }\n\n        if (\n            selectedServices.rentCar &&\n            !EngineRuleService.isValidDriverAge(selectedServices.rentCar, persons.driversAge)\n        ) {\n            // errMsg = $filter('translate')('VALIDATION.Invalid_driver_age', { min: minDriverAge, max: maxDriverAge });\n            return { valid, errMsg };\n        }\n\n        valid =\n            EngineRuleService.checkAges(persons.childrenAges, persons.children, 2, 18) &&\n            EngineRuleService.checkAges(persons.infantAges, persons.infants, 0, 2);\n        return { valid, errMsg };\n    }\n\n    private static initMap() {\n        const TIME1TEXT_PICK = 'SEARCH.PICK_UP_TIME';\n        const TIME2TEXT_RETURN = 'SEARCH.RETURN_PICK_UP_TIME';\n        const TIME2TEXT_DROP = 'SEARCH.DROP_OFF_TIME';\n        const TIME_RENTAL_DEF = '09';\n        const TIME_TRANSFER_DEF = '09';\n        const TIME_TRAVEL_DEF = '09';\n        const TIME_ACC_DEF = '09';\n        const TIME_MEETING_DEF = '09';\n\n        // SERVICE_MAP: define content of search fields on home page\n        // for each service selection, we have an array with two of four elements\n        // services selection id is the sum of services values\n        // each service as a value assigned with is a power of 2\n        // transport = 1, acc = 2, transfer = 4, car rental = 8 (3 means transport + hotel for instance)\n        // When there is only one group of element, the group applies to roundTrip and oneWay\n        // when there are four elements, the first group applies to roundTrip the second group to oneWay\n        // for each group the first index is the first search line content, the second indice defines the second\n        // line of the search page\n        // each element can contain is of the form:\n        // {\n        //      from: {\n        //          provider: defines if fields get data from map box or google\n        //          type: the search type filtering to use\n        //          class: define if the field is small or large (note that there is no real choice here. if you\n        //              have have three entries on a line you need to define the size to small, with two to large\n        //          placeholder: placeholder to display on the input field\n        //          iconDisabled: icon to display when field is disabled\n        //          iconActive: icon to display when field is enabled,\n        //          linked: information passed to google where 100 is the distance in km and field the field name the radius apply to\n        //              format example: {radius:100, field: 'to'}. When the linked field content ('to' typically)\n        //              change the current one is erased ('address' typically)\n        //          optional: true/false when true, user is not required to fill that field (false when omitted)\n        //          linkedField: field on which this field is linked to (default to is linked to from and reverse,\n        //              address is linked to to (or from if no to))\n        //              can take value 'from', 'to', 'address'\n        //      }\n        //      fromToDate: {\n        //          time: when true time selection is offered\n        //          time1Text: text displayed above the first time when time is true\n        //          time2Text: text displayed above the second time when time is true (second time requires roundTrip)\n        //          defaultTime: default time value\n        //          content: define the calendar type use (to set to one of CalTypes.CAL_TYPES constants)\n        //          optional: true/false when true, user is not required to fill that field (false when omitted)\n        //          dateRange: can take three values:\n        //              CalTypes.CAL_RANGE_TWO_DATES: user is asked to select a range dates\n        //              CalTypes.CAL_RANGE_ONE_DATE: only one date to select\n        //              CalTypes.CAL_RANGE_TRAVEL: date range is automatically set based on travelOption field\n        //                (oneWay = false/roundTrip = true)\n        //              CalTypes.CAL_RANGE_FREE: date range is independent from other settings\n        //          maxDays: define the number days allowed on a date range\n        //          showNights: define if we display the number of nights field\n        //          minDays: minimum number of days in a date range\n        //          placeholder: placeholder to display on the input field\n        //          linked: { fromDate: caltype, toDate: calType}\n        //          minDate: first date which can be selected (default to today) - deprecated use linked\n        //          maxDate: max date selectable (also internally computed using the maxDays) - deprecated use linked\n        //          calStyle: css style to apply\n        //      }\n        //      meeting\n        //      to: {\n        //          same description than from field\n        //      }\n        //      address: {\n        //          same description than from field\n        //      }\n        //      persons: {\n        //          person: true/false when true\n        //          age: true/false travellers ages selection activated (default false)\n        //          rooms: true/false number of rooms selection field activated (default false)\n        //          driver: true/false, specify if we need to select the driver (default false)\n        //      }\n        //\n        // COMMON TO ALL FIELDS\n        //      fieldRole: DEPRECATED - kept to ease reading of configuration and see what field is for what (not used anymore)\n        //      Role of the field, used to find out where to use it when analyzing combinations\n        //      tabOrder: for all fields, property tabOrder let you specify fields orders on tab search fields (not implemented yet).\n        //          tabOrder starts at 1\n        //      mainOrder: order of display field in home page (not used in persons)\n        //      editOrder: order of display field in edit page (individual services ONLY, not used in persons)\n        //          editOrder starts at 1 when set to -1, field does not exists in edit search\n        // }\n        // remarks:\n        //      - when you have only one destination (hotel only for instance) do not set the from field but the to field\n        //      - address field is currently only available on second line of search page\n\n        EngineRuleService.SERVICE_MAP = {\n            1: [\n                // flight\n                {\n                    from: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACEHOLDER_FROM,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        editOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        extra: {\n                            myLoc: true,\n                        },\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'to',\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        defaultTime: TIME_TRAVEL_DEF,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        showNights: false,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRIPS,\n                        dateRange: CalTypes.CAL_RANGE_TRAVEL,\n                        minDays: 0,\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        editOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        showTripOption: true,\n                    },\n                },\n                {\n                    to: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TO,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        editOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'from',\n                        },\n                    },\n                    persons: {\n                        person: true,\n                        age: true,\n                        rooms: false,\n                        tabOrder: 4,\n                        driver: false,\n                    },\n                },\n            ],\n            2: [\n                // Hotels\n                {\n                    to: {\n                        provider: EngineRuleService.ACTIVE_GOOGLE ? EngineRuleService.GOOGLE : EngineRuleService.MAPBOX,\n                        type: EngineRuleService.ACTIVE_GOOGLE\n                            ? TYPES_GOOGLE_MAPBOX.TYPE_GOOG_ACC_ADDR\n                            : TYPES_GOOGLE_MAPBOX.TYPE_MABOX_ADDR_STATION,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_DESTINATION,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        editOrder: -1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                        extra: {\n                            myLoc: true,\n                            map: true,\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        defaultTime: TIME_ACC_DEF,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        maxDays: EngineRuleService.MAX_ACC_BOOK_DAYS,\n                        minDays: 1,\n                        showNights: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_CHECK_IN_OUT,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        editOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                    },\n                },\n                {\n                    address: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_GOOG_ADDR,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.search,\n                        optional: true,\n                        editMandatory: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_ADDR,\n                        editPlaceHolder: PLACEHOLDERS.PLACE_HOLDER_ADDR_EDIT,\n                        linked: {\n                            radius: 100,\n                            field: 'to',\n                            notInEdit: true,\n                        }, //notInEdit when true the restriction does not apply to edit mode\n                        editOrder: 1,\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                        extra: {\n                            map: true,\n                        },\n                        classes: ['two-width'],\n                    },\n                    persons: {\n                        person: true,\n                        age: true,\n                        rooms: true,\n                        tabOrder: 4,\n                        driver: false,\n                    },\n                },\n            ],\n            3: [\n                // hotels and flights\n                {\n                    from: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACEHOLDER_FROM,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        extra: {\n                            myLoc: true,\n                        },\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'to',\n                        },\n                    },\n                    to: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TO,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'from',\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        defaultTime: TIME_TRAVEL_DEF,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        maxDays: EngineRuleService.MAX_ACC_BOOK_DAYS,\n                        minDays: 1,\n                        showNights: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRIPS,\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        editOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        showTripOption: true,\n                    },\n                },\n                {\n                    address: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_GOOG_ADDR,\n                        class: EngineRuleService.LARGE_FIELD,\n                        //ngClass: 'search.address.isValid?' + EngineRuleService.SMALL_FIELD + ':' + EngineRuleService.LARGE_FIELD + ')',\n                        icon: CSS_MAPPING.generalIcons.search,\n                        optional: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_ADDR,\n                        linked: {\n                            radius: 100,\n                            field: 'to',\n                        },\n                        tabOrder: 4,\n                        mainOrder: 4,\n                        editOrder: 4,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    persons: {\n                        person: true,\n                        age: true,\n                        rooms: true,\n                        tabOrder: 5,\n                        driver: false,\n                    },\n                },\n            ],\n            4: [\n                // transfer\n                {\n                    to: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_GOOG_TRANSFER,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRANSFER_FROM,\n                        linked: {\n                            radius: 300,\n                            field: 'address',\n                        },\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        editOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRANSFER,\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    transferCal: {\n                        time: true,\n                        dateRange: CalTypes.CAL_RANGE_FREE,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_TRANSFER_TYPE,\n                        maxDays: EngineRuleService.MAX_TRIP_DAYS,\n                        minDays: 0,\n                        showNights: false,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRANSFER_DATE,\n                        defaultTime: TIME_TRANSFER_DEF,\n                        time1Text: TIME1TEXT_PICK,\n                        time2Text: TIME2TEXT_RETURN,\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        editOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRANSFER,\n                    },\n                },\n                {\n                    address: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_GOOG_TRANSFER,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRANSFER_TO,\n                        linked: {\n                            radius: 300,\n                            field: 'to',\n                        }, // LM depend de Radius de From - mais je pence qu'on doit définir une dépendance plus pertinente par la suite\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        editOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRANSFER,\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    persons: {\n                        person: true,\n                        age: true,\n                        rooms: false,\n                        tabOrder: 4,\n                        driver: false,\n                    },\n                },\n            ],\n            5: [\n                // flight + transfer\n                {\n                    from: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACEHOLDER_FROM,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        extra: {\n                            myLoc: true,\n                        },\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'to',\n                        },\n                    },\n                    to: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TO,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'from',\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        defaultTime: TIME_TRAVEL_DEF,\n                        dateRange: CalTypes.CAL_RANGE_TRAVEL,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        // maxDays: EngineRuleService.MAX_TRIP_DAYS,\n                        minDays: 0,\n                        showNights: false,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRIPS,\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        showTripOption: true,\n                    },\n                },\n                {\n                    address: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_GOOG_TRANSFER,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRANSFER_TO,\n                        linked: { radius: 100, field: 'to' },\n                        tabOrder: 4,\n                        mainOrder: 4,\n                        optional: false,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRANSFER,\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    persons: {\n                        age: true,\n                        rooms: false,\n                        driver: false,\n                        tabOrder: 5,\n                    },\n                },\n            ],\n            6: [\n                // hotel + transfer\n                {\n                    to: {\n                        provider: EngineRuleService.ACTIVE_GOOGLE ? EngineRuleService.GOOGLE : EngineRuleService.MAPBOX,\n                        type: EngineRuleService.ACTIVE_GOOGLE\n                            ? TYPES_GOOGLE_MAPBOX.TYPE_GOOG_ACC_ADDR\n                            : TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_DESTINATION,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                        extra: {\n                            myLoc: true,\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        defaultTime: TIME_ACC_DEF,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        maxDays: EngineRuleService.MAX_ACC_BOOK_DAYS,\n                        minDays: 1,\n                        showNights: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_CHECK_IN_OUT,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                    },\n                },\n                {\n                    address: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_GOOG_TRANSFER,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRANSFER_FROM,\n                        linked: {\n                            radius: 100,\n                            field: 'to',\n                        },\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRANSFER,\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    transferCal: {\n                        time: true,\n                        dateRange: CalTypes.CAL_RANGE_FREE,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_TRANSFER_TYPE,\n                        maxDays: EngineRuleService.MAX_ACC_BOOK_DAYS,\n                        minDays: 0,\n                        showNights: false,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRANSFER_DATE,\n                        time1Text: TIME1TEXT_PICK,\n                        time2Text: TIME2TEXT_RETURN,\n                        defaultTime: TIME_TRANSFER_DEF,\n                        linked: {\n                            fromDate: CalTypes.CAL_TRIP_TYPE,\n                            toDate: CalTypes.CAL_TRIP_TYPE,\n                        },\n                        tabOrder: 4,\n                        mainOrder: 4,\n                        calStyle: '{\"left\":\"-280px\"}',\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRANSFER,\n                    },\n                    persons: {\n                        age: true,\n                        rooms: true,\n                        driver: false,\n                        tabOrder: 5,\n                    },\n                },\n            ],\n            7: [\n                // flight + hotel + transfer\n                {\n                    from: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACEHOLDER_FROM,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        extra: {\n                            myLoc: true,\n                        },\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'to',\n                        },\n                    },\n                    to: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TO,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'from',\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        defaultTime: TIME_TRAVEL_DEF,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        maxDays: EngineRuleService.MAX_ACC_BOOK_DAYS,\n                        showNights: true,\n                        minDays: 1,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRIPS,\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        showTripOption: true,\n                    },\n                },\n                {\n                    address: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_GOOG_ADDR,\n                        class: EngineRuleService.LARGE_FIELD,\n                        optional: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_ADDR,\n                        linked: {\n                            radius: 100,\n                            field: 'to',\n                        },\n                        icon: CSS_MAPPING.generalIcons.search,\n                        tabOrder: 4,\n                        mainOrder: 4,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    persons: {\n                        age: true,\n                        rooms: true,\n                        driver: false,\n                        tabOrder: 5,\n                    },\n                },\n            ],\n            8: [\n                // car rental\n                {\n                    to: {\n                        provider: EngineRuleService.ACTIVE_GOOGLE ? EngineRuleService.GOOGLE : EngineRuleService.MAPBOX,\n                        type: EngineRuleService.ACTIVE_GOOGLE\n                            ? TYPES_GOOGLE_MAPBOX.TYPE_GOOG_RENT\n                            : TYPES_GOOGLE_MAPBOX.TYPE_MABOX_ADDR_STATION,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_RENTAL_PICKUP,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        editOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_RENTAL,\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    rentalCal: {\n                        time: true,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_RENTAL_TYPE,\n                        maxDays: EngineRuleService.MAX_RENTAL_BOOK_DAYS,\n                        minDays: 0,\n                        showNights: false,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_RENTAL_DATE,\n                        time1Text: TIME1TEXT_PICK,\n                        time2Text: TIME2TEXT_DROP,\n                        defaultTime: TIME_RENTAL_DEF,\n                        tabOrder: 2,\n                        mainOrder: 3,\n                        editOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_RENTAL,\n                    },\n                },\n                {\n                    address: {\n                        provider: EngineRuleService.ACTIVE_GOOGLE ? EngineRuleService.GOOGLE : EngineRuleService.MAPBOX,\n                        type: EngineRuleService.ACTIVE_GOOGLE\n                            ? TYPES_GOOGLE_MAPBOX.TYPE_GOOG_RENT\n                            : TYPES_GOOGLE_MAPBOX.TYPE_MAPBOX_RENT,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_RENTAL_DROP,\n                        optional: true,\n                        tabOrder: 3,\n                        mainOrder: 2,\n                        editOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_RENTAL,\n                        linked: {\n                            radius: 2000,\n                            field: 'to',\n                        },\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    persons: {\n                        driver: true,\n                        age: true,\n                        rooms: false,\n                        tabOrder: 4,\n                    },\n                },\n            ],\n            9: [\n                // roundTrip flight + car rental\n                {\n                    from: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACEHOLDER_FROM,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        extra: {\n                            myLoc: true,\n                        },\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'to',\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        defaultTime: TIME_TRAVEL_DEF,\n                        class: EngineRuleService.SMALL_FIELD,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        // maxDays: EngineRuleService.MAX_TRIP_DAYS,\n                        minDays: 1,\n                        showNights: false,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRIPS,\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        showTripOption: true,\n                    },\n                },\n                {\n                    to: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TO,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'from',\n                        },\n                    },\n                    persons: {\n                        driver: true,\n                        age: true,\n                        rooms: false,\n                        tabOrder: 4,\n                    },\n                },\n                // oneWay flight + car rental\n                {\n                    from: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACEHOLDER_FROM,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        extra: {\n                            myLoc: true,\n                        },\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'to',\n                        },\n                    },\n                    to: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TO,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'from',\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        defaultTime: TIME_TRAVEL_DEF,\n                        class: EngineRuleService.SMALL_FIELD,\n                        dateRange: CalTypes.CAL_RANGE_ONE_DATE,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        maxDays: EngineRuleService.MAX_RENTAL_BOOK_DAYS,\n                        minDays: 0,\n                        showNights: false,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRIP,\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        showTripOption: true,\n                    },\n                },\n                {\n                    /*address: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: EngineRuleService.ACTIVE_GOOGLE\n                            ? TYPES_GOOGLE_MAPBOX.TYPE_GOOG_RENT\n                            : TYPES_GOOGLE_MAPBOX.TYPE_MABOX_ADDR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_RENTAL_DROP,\n                        optional: true,\n                        linked: {\n                            radius: 100,\n                            field: 'to',\n                        },\n                        tabOrder: 4,\n                        mainOrder: 4,\n                        fieldRole: EngineRuleService.FIELD_ROLE_RENTAL,\n                        extra: {\n                            map: true,\n                        },\n                    },*/\n                    rentalCal: {\n                        time: true,\n                        class: EngineRuleService.SMALL_FIELD,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        content: CalTypes.CAL_RENTAL_TYPE,\n                        maxDays: EngineRuleService.MAX_RENTAL_BOOK_DAYS,\n                        minDays: 1,\n                        linked: { fromDate: CalTypes.CAL_TRIP_TYPE },\n                        showNights: false,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_RENTAL_DATE,\n                        time1Text: TIME1TEXT_PICK,\n                        time2Text: TIME2TEXT_DROP,\n                        defaultTime: TIME_RENTAL_DEF,\n                        optional: false,\n                        calStyle: '{\"left\":\"-280px\"}',\n                        tabOrder: 5,\n                        mainOrder: 5,\n                        fieldRole: EngineRuleService.FIELD_ROLE_RENTAL,\n                    },\n                    persons: {\n                        driver: true,\n                        age: true,\n                        rooms: false,\n                        tabOrder: 6,\n                    },\n                },\n            ],\n            10: [\n                // hotel + car rental\n                {\n                    to: {\n                        provider: EngineRuleService.ACTIVE_GOOGLE ? EngineRuleService.GOOGLE : EngineRuleService.MAPBOX,\n                        type: EngineRuleService.ACTIVE_GOOGLE\n                            ? TYPES_GOOGLE_MAPBOX.TYPE_GOOG_ACC_ADDR\n                            : TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_DESTINATION,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                        extra: {\n                            myLoc: true,\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        defaultTime: TIME_ACC_DEF,\n                        class: EngineRuleService.SMALL_FIELD,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        minDays: 1,\n                        maxDays: EngineRuleService.MAX_ACC_BOOK_DAYS,\n                        showNights: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_CHECK_IN_OUT,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                    },\n                },\n                {\n                    address: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_GOOG_RENT,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.search,\n                        optional: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_OPTIONAL_PICKUP,\n                        linked: {\n                            radius: 300,\n                            field: 'to',\n                        },\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_RENTAL,\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    rentalCal: {\n                        content: CalTypes.CAL_RENTAL_TYPE,\n                        time: true,\n                        class: EngineRuleService.SMALL_FIELD,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        maxDays: EngineRuleService.MAX_ACC_BOOK_DAYS,\n                        minDays: 1,\n                        showNights: false,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_RENTAL_DATE_OPTIONAL,\n                        time1Text: TIME1TEXT_PICK,\n                        time2Text: TIME2TEXT_DROP,\n                        defaultTime: TIME_RENTAL_DEF,\n                        calStyle: '{\"left\":\"-280px\"}',\n                        linked: {\n                            fromDate: CalTypes.CAL_TRIP_TYPE,\n                            toDate: CalTypes.CAL_TRIP_TYPE,\n                        },\n                        tabOrder: 4,\n                        mainOrder: 4,\n                        optional: true,\n                        fieldRole: EngineRuleService.FIELD_ROLE_RENTAL,\n                    },\n                    persons: {\n                        driver: true,\n                        age: true,\n                        rooms: true,\n                        tabOrder: 5,\n                    },\n                },\n            ],\n            11: [\n                // flight + hotel + car rental\n                {\n                    from: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACEHOLDER_FROM,\n                        tabOrder: 1,\n                        mainOrder: 1,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        extra: {\n                            myLoc: true,\n                        },\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'to',\n                        },\n                    },\n                    to: {\n                        provider: EngineRuleService.MAPBOX,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_BOX_AIR_STATION,\n                        class: EngineRuleService.SMALL_FIELD,\n                        icon: CSS_MAPPING.generalIcons.location,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TO,\n                        tabOrder: 2,\n                        mainOrder: 2,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        linked: {\n                            minRadius: EngineRuleService.MIN_TRANSPORT_DISTANCE,\n                            field: 'from',\n                        },\n                    },\n                    tripCal: {\n                        time: false,\n                        defaultTime: TIME_TRAVEL_DEF,\n                        dateRange: CalTypes.CAL_RANGE_TWO_DATES,\n                        class: EngineRuleService.SMALL_FIELD,\n                        content: CalTypes.CAL_TRIP_TYPE,\n                        minDays: 1,\n                        maxDays: EngineRuleService.MAX_ACC_BOOK_DAYS,\n                        showNights: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_TRIPS,\n                        tabOrder: 3,\n                        mainOrder: 3,\n                        fieldRole: EngineRuleService.FIELD_ROLE_TRIP_TRANSPORT,\n                        showTripOption: true,\n                    },\n                },\n                {\n                    address: {\n                        provider: EngineRuleService.GOOGLE,\n                        type: TYPES_GOOGLE_MAPBOX.TYPE_GOOG_ADDR,\n                        class: EngineRuleService.LARGE_FIELD,\n                        icon: CSS_MAPPING.generalIcons.search,\n                        optional: true,\n                        placeholder: PLACEHOLDERS.PLACE_HOLDER_ADDR,\n                        linked: {\n                            radius: 100,\n                            field: 'to',\n                        },\n                        tabOrder: 4,\n                        mainOrder: 4,\n                        fieldRole: EngineRuleService.FIELD_ROLE_LOCATION,\n                        extra: {\n                            map: true,\n                        },\n                    },\n                    persons: {\n                        driver: true,\n                        age: true,\n                        rooms: true,\n                        tabOrder: 5,\n                    },\n                },\n            ],\n        };\n        EngineRuleService.SERVICE_MAP[14] = EngineRuleService.SERVICE_MAP[10]; // hotel rental transfer = hotel rental\n        EngineRuleService.SERVICE_MAP[15] = EngineRuleService.SERVICE_MAP[11]; // flight hotel rental transfer = flight hotel rental\n    }\n\n    public isValidSearch(serviceId: ServiceId): any {\n        const serviceInfo = SearchUtilsService.getServiceInfo(serviceId);\n        const search = this.searchDataService.getSearch(serviceId);\n\n        return EngineRuleService.validSearch(\n            search.searchData,\n            search.passengers,\n            serviceInfo.service,\n            search.context.travelType,\n            true\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SearchEvents } from '@core/constants/search-events';\nimport { Router } from '@angular/router';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { SERVICE_DEFAULT_SORT } from '@core/constants/default-sort';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { SearchErrorService } from '@services/searchEngine/services/search-error-service';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { PreSearchService } from '@services/modules/core/dataservices/pre-search.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RentalSearchService {\n    constructor(\n        private router: Router,\n        private apiAccessService: ApiAccessService,\n        private listenersService: ListenersService,\n        private searchMetadataService: SearchMetadataService,\n        private searchDataService: SearchDataService,\n        private searchErrService: SearchErrorService,\n        private tripPlannerService: TripPlannerService,\n        private cartRoutingService: CartRoutingService,\n        private preSearchService: PreSearchService\n    ) {}\n\n    public SearchRental(\n        serviceSearch: any,\n        eventId: SearchEvents,\n        dataAvailable: any,\n        params: any,\n        onUpdateSearchCb: (newCal: any) => void\n    ) {\n        params.id = this.searchDataService.getCombId();\n        params.serviceId = ServiceId.CAR_RENTAL;\n        params.dataId = this.searchDataService.getDataId('rentCar');\n        console.log(serviceSearch, '*** checking changes search  *** ');\n        //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, true);\n        this.preSearchService.preSearchData(params, serviceSearch, eventId).then(\n            (success: any) => {},\n            (failure: any) => {\n                //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, false);\n                console.log('FAILURE', failure);\n                if (failure.error && failure.error.code === 8024) {\n                    //\n                    const cal = failure.error.params.errData;\n                    const dataFailure: any = {\n                        status: failure.error.status,\n                        message: failure.error.message,\n                    };\n                    if (cal) {\n                        dataFailure.remove = this.router.url !== '/search';\n                        dataFailure.status = failure.error.code;\n                        dataFailure.cal = cal;\n                        dataFailure.confirmCb = onUpdateSearchCb;\n                    }\n\n                    const results = failure.error.params.data;\n                    results.serviceSearch.failureCode = failure.error.code;\n                    results.serviceSearch.modifyData = cal;\n                    if (results.metaData.complete) {\n                        this.tripPlannerService.setComplete(ServiceId.CAR_RENTAL);\n                    }\n                    this.searchMetadataService.saveSearch(results, eventId);\n                    this.searchErrService.searchErr(dataFailure, ServiceId.CAR_RENTAL, eventId);\n                }\n\n                /* if (failure.status === 412 && failure.data) {\n                        if (failure.data.metaData.complete) {\n                            this.tripPlannerService.setComplete(ServiceId.CAR_RENTAL);\n                        }\n                        this.searchMetadataService.saveSearch(failure.data, eventId);\n                    }*/\n                /* if (eventId !== SearchEvents.EVENT_SEARCH_EDIT && !this.isHomePage()) {\n                        this.gotoRentalPage();\n                    }*/\n                //this.apiAccessService.handleHttpError(failure);\n            }\n        );\n        /*.catch(() => {\n                this.loaderService.triggerLoading.emit({ loading: false });\n            });*/\n    }\n\n    /* private gotoRentalPage(): void {\n        this.cartRoutingService.currentServiceId.next(ServiceId.CAR_RENTAL);\n        this.router.navigate(['/results/car-rentals'], {\n            queryParams: {\n                sort_by: SERVICE_DEFAULT_SORT[ServiceId.CAR_RENTAL],\n            },\n        });\n    }\n\n    private isHomePage(): boolean {\n        return this.router.url === '/search';\n    }*/\n}\n","import { Injectable } from '@angular/core';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { CombServiceIds } from '@core/constants/comb-service-ids';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { Trip } from '@core/constants/trip';\nimport { SearchEvents } from '@core/constants/search-events';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { SearchHelpers } from '@services/searchEngine/services/search-helpers';\nimport { CalTypes } from '@core/constants/call-types.const';\nimport { SearchConfigOrder } from '@schemas/modules/core/search-address';\nimport { IPassengers, ISearchData, ISSIBase, NightChoices } from '@schemas/modules/search/search';\nimport { CombinationId, DataId } from '@schemas/modules/core/base-types';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { EngineRuleService } from '@services/searchEngine/services/engine-rule-service';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { IRoutingIds } from '@services/modules/cart/services/cart-routing.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SearchDataService {\n    // search data from home page\n    public searchInfos: any;\n    // services are chosen one by one by customer\n    public readonly RUN_NORMAL = 0;\n    // we automatically get for all selected service the best\n    // value and provide a direct bookingOptions capacity to user\n    public readonly RUN_FAST = 1;\n    // to be defined - unused\n    public readonly RUN_FAMILY = 2;\n    // to be defined - unused\n    public readonly RUN_BUSINESS = 3;\n\n    public readonly mapServiceIdToVal: any = {\n        0: CombServiceIds.HOTEL,\n        1: CombServiceIds.FLIGHT_TRAIN,\n        2: CombServiceIds.RENTAL,\n        3: CombServiceIds.TRANSFER,\n        5: CombServiceIds.FLIGHT_TRAIN,\n        6: CombServiceIds.FLIGHT_TRAIN,\n    };\n\n    public resetSearch$: Subject<void> = new Subject<void>();\n    public closeSearchEditingMode$: Subject<void> = new Subject<void>();\n    public isSearchDropDownOpen$: Subject<boolean> = new Subject<boolean>();\n    public isUpdatedSearch$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    // public readonly mapOldService = MAP_SERVICE_ID_TO_VAL;\n\n    private readonly curVersion = '1.2'; // when version is changed stored search data are removed\n    private searchServiceInfos: any;\n    private resetFromStorage?: boolean;\n    private searchResults: any[] = [];\n    private context = {\n        services: [], // list of services enabled\n        travelType: Trip.ROUND_TRIP, // round trip or one way\n        runningMode: this.RUN_NORMAL,\n    };\n\n    private calendarData = {\n        fromDate: null,\n        toDate: null,\n        fromTime: '00:00',\n        toTime: '00:00',\n    };\n\n    private calendarDataOneWay = {\n        fromDate: null,\n        toDate: null,\n        fromTime: '00:00',\n        toTime: '00:00',\n    };\n\n    private searchData = {\n        from: location,\n        to: location,\n        address: location,\n        tripCal: this.calendarData,\n        meetingCal: this.calendarDataOneWay,\n        rentalCal: this.calendarData,\n        transferCal: this.calendarData,\n    };\n    // all data selected by user about its trips (where, dates, number of passengers/guests...)\n    private defaultSearchInfos = {\n        searchData: this.searchData,\n        passengers: {\n            isDefault: true,\n        },\n        context: this.context, // information about selected services, roundtrip, running mode\n        v: this.curVersion, // used to discard old versions of the structure\n    };\n\n    constructor(private toolsService: ToolsService, private listenersService: ListenersService) {\n        this.init();\n    }\n\n    get travelType(): Trip {\n        return this.searchInfos.context.travelType;\n    }\n\n    public get services(): CombServiceIds {\n        return this.searchInfos.context.services;\n    }\n\n    public static formSearchFieldOrder(\n        selectedServiceConf: any,\n        fieldOrderType: string,\n        isEditMode: boolean\n    ): SearchConfigOrder[] {\n        const ordered: SearchConfigOrder[] = [];\n\n        for (let confIdx = 0; confIdx < selectedServiceConf.length; confIdx++) {\n            for (const field in selectedServiceConf[confIdx]) {\n                if (!selectedServiceConf[confIdx].hasOwnProperty(field) || !selectedServiceConf[confIdx][field]) {\n                    continue;\n                }\n\n                const fieldConfig = selectedServiceConf[confIdx][field];\n                if (field === 'persons' || fieldConfig[fieldOrderType] === undefined) {\n                    continue;\n                }\n\n                const fieldType = SearchDataService.getFieldType(field);\n                let styles = [fieldType];\n                if (Array.isArray(fieldConfig.classes)) {\n                    styles = [...styles, ...fieldConfig.classes];\n                }\n\n                ordered[fieldConfig[fieldOrderType]] = {\n                    field,\n                    confIdx,\n                    fieldType,\n                    class: styles,\n                    fieldOrder: fieldConfig[fieldOrderType],\n                    tabOrder: isEditMode ? fieldConfig.editOrder : fieldConfig.tabOrder,\n                } as SearchConfigOrder;\n            }\n        }\n\n        return ordered;\n    }\n\n    public static getNewLoc(): any {\n        return ToolsService.deepCopy({\n            codes: '',\n            id: '',\n            header: true,\n            countryCode: '',\n            stationType: '',\n            cityCode: '',\n            latitude: null,\n            longitude: null,\n            name: '',\n            isCity: false,\n            displayStr: '',\n            selectedStr: '',\n            places: [],\n            placeId: '',\n            trainCodes: [],\n            cityName: '',\n            countryName: '',\n        });\n    }\n\n    private static loadFromStorage(): any | void {\n        return StorageManagerUtil.get('searchInfos');\n    }\n\n    private static getFieldType(field: string): string {\n        let fieldType = '';\n        switch (field) {\n            case CalTypes.CAL_TRIP_TYPE:\n            case CalTypes.CAL_MEETING_TYPE:\n            case CalTypes.CAL_RENTAL_TYPE:\n            case CalTypes.CAL_TRANSFER_TYPE:\n                fieldType = 'cal';\n                break;\n            case 'from':\n            case 'to':\n            case 'address':\n                fieldType = 'loc-field';\n                break;\n            case 'persons':\n                // ignored\n                break;\n\n            default:\n                console.error('unknown search field:' + field);\n        }\n\n        return fieldType;\n    }\n\n    // remove unused calendars entries (or they contain old data from previous search....)\n    private static cleanUpCal(searchData: any, def: any): void {\n        const lisAllCall: any = {};\n        lisAllCall[CalTypes.CAL_RENTAL_TYPE] = true;\n        lisAllCall[CalTypes.CAL_TRANSFER_TYPE] = true;\n        lisAllCall[CalTypes.CAL_TRIP_TYPE] = true;\n        lisAllCall[CalTypes.CAL_MEETING_TYPE] = true;\n\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (const curDef of def) {\n            for (const field in curDef) {\n                if (curDef.hasOwnProperty(field) && lisAllCall[field]) {\n                    delete lisAllCall[field];\n                    if (searchData[field]) {\n                        searchData[field].showCalendar = false;\n                    }\n                }\n            }\n        }\n        for (const k in searchData) {\n            if (searchData.hasOwnProperty(k) && lisAllCall[k]) {\n                searchData[k] = null;\n            }\n        }\n    }\n\n    private static addMissingFields(searchData: any, services?: any, travelType?: Trip): void {\n        const def = EngineRuleService.buildSearchFields(services, travelType);\n\n        const validField: { [key in string]: boolean } = {};\n        for (const curDef of def) {\n            // eslint-disable-next-line guard-for-in\n            for (const field in curDef) {\n                if (curDef.hasOwnProperty(field)) {\n                    validField[field] = true;\n                }\n            }\n        }\n        for (const k in validField) {\n            if (validField.hasOwnProperty(k) && !searchData[k]) {\n                switch (k) {\n                    case 'from':\n                    case 'to':\n                    case 'address':\n                    case 'meetingAddress':\n                        searchData[k] = {};\n                }\n            }\n        }\n    }\n\n    private static cleanUpAddresses(searchData: any, def: { [key in string]: any }[]): void {\n        const validField: { [key in string]: boolean } = {};\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (const curDef of def) {\n            // eslint-disable-next-line guard-for-in\n            for (const field in curDef) {\n                if (curDef.hasOwnProperty(field)) {\n                    validField[field] = true;\n                }\n            }\n        }\n        // eslint-disable-next-line guard-for-in\n        for (const k in searchData) {\n            if (searchData.hasOwnProperty(k) && searchData[k]) {\n                switch (k) {\n                    case 'from':\n                    case 'to':\n                    case 'address':\n                    case 'meetingAddress':\n                        if (!validField[k]) {\n                            searchData[k] = {};\n                        }\n                }\n            }\n        }\n    }\n    /*\n        cleanString: replace space by - and remove '(' and ')' from string\n     */\n    private static cleanString(urlPathToClean: string): string {\n        return urlPathToClean ? urlPathToClean.replace(/[^A-zÀ-ú0-9]+/gi, '-').toLowerCase() : 'undefined';\n    }\n\n    public getCombId(): CombinationId {\n        return this.searchInfos.combId;\n    }\n\n    public getRoutingParam(serviceId: ServiceId, ids: IRoutingIds | undefined): string[] | undefined {\n        const infoServiceId = serviceId === ServiceId.ACC_DETAILS ? ServiceId.ACC : serviceId;\n        const ssi = this.searchServiceInfos.services[infoServiceId];\n        if (ssi) {\n            switch (serviceId) {\n                case ServiceId.ACC:\n                    if (ssi.searchData.address) {\n                        return [\n                            SearchDataService.cleanString(ssi.searchData.address.country),\n                            SearchDataService.cleanString(ssi.searchData.address.cityName),\n                        ];\n                    }\n                    break;\n                case ServiceId.ACC_DETAILS:\n                    if (ssi.searchData.address) {\n                        return [\n                            SearchDataService.cleanString(ssi.searchData.address.cityName),\n                            SearchDataService.cleanString(ids && ids.hotelName ? ids.hotelName : ''),\n                        ];\n                    }\n                    break;\n                case ServiceId.TRAIN:\n                    if (ssi.searchData.from && ssi.searchData.to) {\n                        return [\n                            SearchDataService.cleanString(ssi.searchData.from.cityName) +\n                                '-' +\n                                SearchDataService.cleanString(ssi.searchData.to.cityName),\n                        ];\n                    }\n                    break;\n                case ServiceId.FLIGHT:\n                    if (ssi.searchData.from && ssi.searchData.to) {\n                        return [\n                            SearchDataService.cleanString(ssi.searchData.from.cityName) +\n                                '-' +\n                                SearchDataService.cleanString(ssi.searchData.to.cityName),\n                        ];\n                    }\n                    break;\n                case ServiceId.FLIGHT_TRAIN:\n                    if (ssi.searchData.from && ssi.searchData.to) {\n                        return [\n                            SearchDataService.cleanString(ssi.searchData.from.cityName) +\n                                '-' +\n                                SearchDataService.cleanString(ssi.searchData.to.cityName),\n                        ];\n                    }\n                    break;\n                case ServiceId.CAR_RENTAL:\n                    if (ssi.searchData.to) {\n                        return [\n                            SearchDataService.cleanString(ssi.searchData.to.country),\n                            ((ssi.searchData.to.cityName &&\n                                SearchDataService.cleanString(ssi.searchData.to.cityName)) ||\n                                (!ssi.searchData.to.cityName &&\n                                    SearchDataService.cleanString(ssi.searchData.to.displayStr))) +\n                                (ssi.searchData.address &&\n                                ssi.searchData.address.displayStr &&\n                                ssi.searchData.address.displayStr !== ssi.searchData.to.displayStr\n                                    ? '-' + SearchDataService.cleanString(ssi.searchData.address.displayStr)\n                                    : ''),\n                        ];\n                    }\n                    break;\n                case ServiceId.TRANSFER:\n                    if (ssi.searchData.to && ssi.searchData.address) {\n                        return [\n                            SearchDataService.cleanString(ssi.searchData.to.country),\n                            SearchDataService.cleanString(ssi.searchData.to.displayStr) +\n                                '-' +\n                                SearchDataService.cleanString(ssi.searchData.address.displayStr),\n                        ];\n                    }\n            }\n        }\n        return undefined;\n    }\n\n    public getAllSearchResults(): any {\n        return ToolsService.deepCopy(this.searchResults);\n    }\n\n    public init(): void {\n        this.resetSearchServiceInfos();\n        this.searchResults = StorageManagerUtil.get('searchResults');\n        if (!this.searchResults) {\n            this.resetSearchResults();\n        }\n        this.reloadServiceInfoFromStorage();\n    }\n\n    public addService(serviceId: ServiceId): CombServiceIds {\n        // eslint-disable-next-line no-bitwise\n        this.searchInfos.context.services |= this.mapServiceIdToVal[serviceId];\n        this.saveInfos(this.searchInfos);\n\n        return this.searchInfos.context.services;\n    }\n\n    public getDataId(serviceId: any): DataId {\n        const data = this.getSearchResult(serviceId);\n        if (data) {\n            return data.dataId;\n        }\n        return '';\n    }\n\n    public updSearchResult(serviceId: ServiceId, partialData: any, eventId: any): void {\n        for (const k in partialData) {\n            if (partialData.hasOwnProperty(k) && this.searchResults[serviceId][k] !== undefined) {\n                this.searchResults[serviceId][k] = partialData[k];\n            }\n        }\n        const resultInfo = this.searchResults[serviceId];\n\n        console.log('BEFORE UPDATE ', {\n            resultInfo,\n        });\n\n        this.saveResult(serviceId, resultInfo, eventId);\n    }\n\n    public getEmptySearch(): any {\n        return ToolsService.deepCopy(this.defaultSearchInfos);\n    }\n\n    public updateTzServiceSelection(servicesStr: any): void {\n        this.searchInfos.context.services = SearchHelpers.getServiceValue(servicesStr);\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_SERVICES, servicesStr);\n    }\n\n    public changeFlyType(travelOption: { travelType: string; runMode?: string }): void {\n        if (travelOption.travelType && travelOption.travelType !== '') {\n            this.searchInfos.context.travelType = travelOption.travelType;\n        }\n\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_TRAVEL_OPTION, travelOption);\n    }\n\n    public clear(): void {\n        StorageManagerUtil.remove('searchInfos');\n        StorageManagerUtil.remove('sessionEndTime');\n        StorageManagerUtil.remove('preSearchInfos');\n        StorageManagerUtil.remove('searchInfosLocal');\n        StorageManagerUtil.remove('searchServiceInfos');\n        StorageManagerUtil.remove('searchResults');\n        this.setEmptySearch();\n    }\n\n    public setNightChoice(newChoice: NightChoices): void {\n        this.searchServiceInfos.services[ServiceId.ACC].searchData.nightChoice = newChoice;\n        this.saveServicesInfos(this.searchServiceInfos.services[ServiceId.ACC], ServiceId.ACC);\n    }\n\n    public getSearchResult(serviceId: ServiceId): any {\n        // const serviceIdMapped: any = typeof serviceId === 'number' ? serviceId : this.mapOldService[serviceId];\n        return this.searchResults[serviceId];\n    }\n\n    public saveResult(serviceId: ServiceId, results: any, eventId?: any): void {\n        this.searchResults[serviceId] = results;\n        StorageManagerUtil.set('searchResults', this.searchResults);\n        if (eventId === SearchEvents.EVENT_FILTER) {\n        }\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_RESULT_UPDATE, results);\n    }\n\n    public setFastSearch(fastMode: boolean): void {\n        if (fastMode) {\n            this.searchInfos.context.runningMode = this.RUN_FAST;\n        } else {\n            this.searchInfos.context.runningMode = this.RUN_NORMAL;\n        }\n    }\n\n    public saveInfos(search: any, newSearch?: any): void {\n        let combId = search.combId;\n        if (!combId && this.getCombId()) {\n            combId = this.getCombId();\n        }\n        this.setSearchInfo(search);\n        this.searchInfos.combId = combId;\n\n        this.searchInfos.v = this.curVersion;\n        StorageManagerUtil.set('searchInfos', this.searchInfos);\n        if (newSearch) {\n            // $cookies.put(\"searchInfos\", JSON.stringify(searchInfos));\n            StorageManagerUtil.set('searchInfosLocal', this.searchInfos);\n        }\n        this.resetFromStorage = false;\n    }\n\n    public setCombId(combinationId: CombinationId): void {\n        this.searchInfos.combId = combinationId;\n    }\n\n    public resetSearchServiceInfos(): void {\n        this.searchServiceInfos = {\n            services: {},\n            combId: '',\n        };\n        // search data after service search info editions\n    }\n\n    public saveServicesInfos(search: ISSIBase, serviceId: ServiceId): void {\n        this.searchServiceInfos.combId = this.getCombId();\n        this.editSearchToggle();\n        if (!this.searchInfos.context) {\n            this.searchInfos.context = search.context;\n        }\n        if (search.passengers.infantAges === null) {\n            search.passengers.infantAges = [] as number[];\n        }\n        if (search.passengers.childrenAges === null) {\n            search.passengers.childrenAges = [] as number[];\n        }\n        if (search.passengers.youthAges === null) {\n            search.passengers.youthAges = [] as number[];\n        }\n        if (!this.searchInfos.passengers) {\n            this.searchInfos.passengers = search.passengers;\n        }\n        const contextInfo = {\n            runningMode: this.searchInfos.context.runningMode,\n            services: this.mapServiceIdToVal[serviceId],\n            travelType: this.searchInfos.context.travelType,\n        };\n        search.context = contextInfo;\n        switch (serviceId) {\n            case ServiceId.TRANSFER:\n                if (search.searchData.transferCal && !search.searchData.transferCal.twoDates) {\n                    contextInfo.travelType = Trip.ONE_WAY;\n                }\n                break;\n            case ServiceId.ACC:\n                this.searchInfos.passengers.rooms = search.passengers.rooms;\n                this.saveInfos(this.searchInfos);\n                break;\n            case ServiceId.CAR_RENTAL:\n                this.searchInfos.passengers.driversAge = search.passengers.driversAge;\n                this.saveInfos(this.searchInfos);\n                break;\n        }\n\n        if (serviceId === ServiceId.TRANSFER) {\n            console.log(search, 'SEARCH');\n            // is set to differentiate between home page and results page when opening a calendar\n            if (!search.searchData.transferCal) {\n                search.searchData.transferCal = {\n                    fromDate: '', //2006-01-02\n                    fromTime: '',\n                    toDate: '',\n                    toTime: '',\n                    twoDates: false, // when true the calendar has the fromDate activated (round trip)\n                    computeTransferTime: 0, // internal field, contains a single service\n                    arrival: '', //Arrival date time on intermediary place (typically rental arrival in hotel)\n                    departure: '',\n                };\n            }\n            search.searchData.transferCal.resultSet = true;\n        }\n        // add missing field with default values\n        SearchDataService.addMissingFields(\n            search.searchData,\n            this.mapServiceIdToVal[serviceId],\n            contextInfo.travelType\n        );\n        this.searchServiceInfos.services[serviceId] = ToolsService.deepCopy(search);\n        this.editSearchToggle();\n        StorageManagerUtil.set('searchServiceInfos', this.searchServiceInfos);\n    }\n\n    public reloadServiceInfoFromStorage(): any {\n        this.resetFromStorage = false;\n        const tmpSearchInfos = SearchDataService.loadFromStorage();\n\n        if (tmpSearchInfos) {\n            // check stored version by current version structure of search infos\n            if (tmpSearchInfos.v === this.curVersion) {\n                this.setSearchInfo(tmpSearchInfos);\n                if (!this.searchInfos.context) {\n                    this.searchInfos.context = JSON.parse(JSON.stringify(this.context));\n                }\n\n                const tmpSearchServiceInfos = StorageManagerUtil.get('searchServiceInfos');\n                if (tmpSearchServiceInfos) {\n                    if (this.searchInfos && tmpSearchServiceInfos.combId === this.searchInfos.combId) {\n                        this.searchServiceInfos = tmpSearchServiceInfos;\n                        this.editSearchToggle();\n                    }\n                }\n            }\n        }\n\n        // searchInfos was not set, set it to default value\n        if (!this.searchInfos) {\n            this.setEmptySearch();\n        }\n\n        return this.searchInfos;\n    }\n\n    public getSearchData(serviceId: ServiceId): ISearchData | void {\n        if (serviceId !== undefined) {\n            if (this.searchServiceInfos.services[serviceId]) {\n                return this.searchServiceInfos.services[serviceId].searchData;\n            }\n        } else {\n            return ToolsService.deepCopy(this.searchInfos.searchData);\n        }\n    }\n\n    public getSearch(serviceId?: ServiceId): any {\n        if (serviceId === ServiceId.ACC_DETAILS) {\n            serviceId = ServiceId.ACC;\n        }\n        if (serviceId !== undefined && this.searchServiceInfos.services[serviceId]) {\n            return ToolsService.deepCopy(this.searchServiceInfos.services[serviceId]);\n        }\n        return ToolsService.deepCopy(this.searchInfos);\n    }\n\n    public getSearchServiceInfos(): any {\n        return ToolsService.deepCopy(this.searchServiceInfos);\n    }\n\n    public resetSearchResults(): void {\n        this.searchResults = [];\n    }\n\n    public removeService(serviceId: ServiceId): CombServiceIds {\n        if (serviceId === ServiceId.FLIGHT || serviceId === ServiceId.TRAIN) {\n            serviceId = ServiceId.FLIGHT_TRAIN;\n        }\n        // eslint-disable-next-line no-bitwise\n        this.searchInfos.context.services -= this.searchInfos.context.services & this.mapServiceIdToVal[serviceId];\n        if (serviceId === ServiceId.FLIGHT_TRAIN) {\n            this.removeSearchResult(ServiceId.TRAIN);\n            this.removeSearchResult(ServiceId.FLIGHT);\n            this.searchInfos.searchData.from = ToolsService.deepCopy(location);\n            if (this.searchServiceInfos.services[ServiceId.FLIGHT_TRAIN]) {\n                this.searchServiceInfos.services[ServiceId.FLIGHT_TRAIN].searchData.from =\n                    ToolsService.deepCopy(location);\n                this.saveServicesInfos(\n                    this.searchServiceInfos.services[ServiceId.FLIGHT_TRAIN],\n                    ServiceId.FLIGHT_TRAIN\n                );\n            }\n            if (this.searchServiceInfos.services[ServiceId.FLIGHT]) {\n                this.searchServiceInfos.services[ServiceId.FLIGHT].searchData.from = ToolsService.deepCopy(location);\n                this.saveServicesInfos(this.searchServiceInfos.services[ServiceId.FLIGHT], ServiceId.FLIGHT);\n            }\n            if (this.searchServiceInfos.services[ServiceId.TRAIN]) {\n                this.searchServiceInfos.services[ServiceId.TRAIN].searchData.from = ToolsService.deepCopy(location);\n                this.saveServicesInfos(this.searchServiceInfos.services[ServiceId.TRAIN], ServiceId.TRAIN);\n            }\n        } else {\n            this.removeSearchResult(serviceId);\n        }\n        this.saveInfos(this.searchInfos);\n\n        return this.searchInfos.context.services;\n    }\n\n    public getSelectedServicesMap(): any {\n        return SearchHelpers.getServicesListMap(this.searchInfos.context.services);\n    }\n\n    public getPassengers(): IPassengers {\n        return this.searchInfos.passengers;\n    }\n\n    public reloadTravelType(): void {\n        const tmpSearchInfos = SearchDataService.loadFromStorage();\n        if (tmpSearchInfos) {\n            this.searchInfos.context.travelType = tmpSearchInfos.context.travelType;\n        }\n    }\n\n    public isCombination(): boolean {\n        const combId = this.searchInfos.context.services;\n        switch (combId) {\n            case CombServiceIds.HOTEL:\n            case CombServiceIds.FLIGHT_TRAIN:\n            case CombServiceIds.TRANSFER:\n            case CombServiceIds.RENTAL:\n                return false;\n            default:\n                return true;\n        }\n    }\n\n    /*public isServicesSelected(): boolean {\n    return this.searchInfos.context.services > 0;\n  }*/\n\n    public hasAcc(): boolean {\n        // eslint-disable-next-line no-bitwise\n        return (this.searchInfos.context.services & CombServiceIds.HOTEL) === CombServiceIds.HOTEL;\n    }\n\n    public cleanUpSearch(searchData?: any, services?: any, travelType?: Trip): void {\n        this.resetSearchResults();\n        this.resetSearchServiceInfos();\n        if (searchData) {\n            const def = EngineRuleService.buildSearchFields(services, travelType);\n            SearchDataService.cleanUpCal(searchData, def);\n            SearchDataService.cleanUpAddresses(searchData, def);\n        }\n    }\n\n    public isMap(serviceId: ServiceId): boolean {\n        const data = this.getSearchResult(serviceId);\n        return data && data.showMap === true;\n    }\n\n    private editSearchToggle(): void {\n        this.isUpdatedSearch$.next(!this.isUpdatedSearch$.getValue());\n    }\n\n    private removeSearchResult(serviceId: ServiceId): void {\n        this.searchResults[serviceId] = null;\n        this.saveResult(serviceId, this.searchResults[serviceId], null);\n    }\n\n    private setEmptySearch(): any {\n        //resetFromStorage = reset;\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_PASSENGER_RESET, this.defaultSearchInfos.passengers);\n        this.setSearchInfo(ToolsService.deepCopy(this.defaultSearchInfos));\n        return this.searchInfos;\n    }\n\n    // _validateSearchDate : validate the min date and reset to default calendarData\n    private validateSearchDate = (searchInfos: any): void => {\n        const calTypes = [\n            CalTypes.CAL_TRIP_TYPE,\n            CalTypes.CAL_TRANSFER_TYPE,\n            CalTypes.CAL_RENTAL_TYPE,\n            CalTypes.CAL_MEETING_TYPE,\n        ];\n        calTypes.forEach((calType) => {\n            const cal = searchInfos.searchData[calType];\n            if (cal) {\n                const calDate = new Date(`${cal.fromDate}T${cal.fromTime}`);\n                const now = new Date();\n                // now.setDate(now.getDate() + 1) // to debug\n                if (calType === CalTypes.CAL_TRIP_TYPE) {\n                    now.setHours(0, 0, 0, 0);\n                }\n                if (calDate.getTime() < now.getTime()) {\n                    searchInfos.searchData[calType] = this.calendarData;\n                }\n            }\n        });\n    };\n\n    private setSearchInfo = (search: any): void => {\n        this.validateSearchDate(search);\n        this.searchInfos = search;\n    };\n}\n","import { Injectable } from '@angular/core';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { TabRoutingService } from '@services/searchEngine/services/tab-routing.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { CartRemoveService } from '@services/modules/cart/services/cart-remove-service';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { DialogService } from '@services/dialog.service';\nimport {\n    CANCEL,\n    CONFIRM,\n    TzDialogReturn,\n} from '@shared/components/dialogs/trazler-confirmation-dialog/trazler-confirmation-dialog.component';\nimport { EngineRuleService } from '@services/searchEngine/services/engine-rule-service';\n\ninterface IDataFailure {\n    remove: true;\n    status: number;\n    cal: any;\n    confirmCb: (newCal: any) => void;\n    message?: string;\n    checkContinue?: boolean;\n    field: string;\n}\n\ninterface IFailure {\n    invalid: boolean;\n    //actionId: number;\n    addService?: boolean;\n    dataFailure?: IDataFailure;\n}\n\nexport interface ISearchErr {\n    failure: IFailure;\n    serviceId: ServiceId;\n    cb: (serviceId: ServiceId, shouldEdit: boolean) => void;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SearchErrorService {\n    private translateFieldMap: {\n        [key in ServiceId]?: any;\n    } = {};\n    private inErrorFlag = false;\n    private curFailureData: ISearchErr = {} as ISearchErr;\n\n    constructor(\n        private listenersService: ListenersService,\n        private tabRoutingService: TabRoutingService,\n        private searchDataService: SearchDataService,\n        private removeService: CartRemoveService,\n        private router: Router,\n        private translateService: TranslateService,\n        private dialogService: DialogService,\n        private engineRuleService: EngineRuleService\n    ) {\n        this.initializeListenerAndMap();\n    }\n\n    public unsetErrorFlag(): void {\n        this.inErrorFlag = false;\n        this.curFailureData = {} as ISearchErr;\n    }\n\n    public setErrorFlag(): void {\n        this.inErrorFlag = true;\n    }\n\n    public getInErrorFlag(): boolean {\n        return this.inErrorFlag;\n    }\n\n    public getCurServiceErr(serviceId: ServiceId): ISearchErr | null {\n        if (this.curFailureData && this.curFailureData.serviceId === serviceId) {\n            return this.curFailureData;\n        }\n        return null;\n    }\n\n    public searchErr(failure: any, serviceId: ServiceId, actionId: any): void {\n        if (this.router.url !== '/results-summary') {\n            const isValid = this.engineRuleService.isValidSearch(serviceId);\n            let invalid = false;\n            if (!isValid.isValid) {\n                invalid = true;\n                failure.field = isValid.field;\n            }\n            this.listenersService.NotifyListeners(ListenerId.LISTEN_SEARCH_ERR, {\n                serviceId,\n                failure: {\n                    //actionId,\n                    dataFailure: failure,\n                    invalid,\n                },\n            } as ISearchErr);\n        }\n        this.tabRoutingService.setSearchError(serviceId);\n    }\n\n    public newError(searchErrData: ISearchErr): void {\n        /* if (\n            false &&\n            this.curFailureData &&\n            this.curFailureData.serviceId === searchErrData.serviceId &&\n            this.curFailureData?.failure?.dataFailure?.status === searchErrData.failure.dataFailure?.status\n        ) {\n            this.curFailureData = searchErrData;\n            //error already exists we do not want to trigger again workflow\n            //just update it with new data and return\n            console.error('skipping error');\n            return;\n        }*/\n        console.error('triggering error');\n        this.curFailureData = searchErrData;\n        const isValidSearch = this.engineRuleService.isValidSearch(this.curFailureData.serviceId);\n        this.setErrorFlag();\n        if (!isValidSearch.isValid && this.curFailureData.cb) {\n            this.curFailureData.cb(this.curFailureData.serviceId, true);\n            return;\n        }\n\n        this.searchErrHdl(false);\n    }\n\n    public searchErrHdl(checkContinue: boolean): void {\n        const failure = this.curFailureData.failure;\n\n        //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, false);\n        const isCombination: boolean = this.searchDataService.isCombination();\n        const actionBtn = this.translateService.instant(\n            isCombination ? 'POPUPS.MISSING_SEARCH_PARAMS.2_CONTINUE' : 'POPUPS.MISSING_SEARCH_PARAMS.3_NEW_SEARCH'\n        );\n        if (failure && failure.dataFailure && failure.dataFailure.status === 8024) {\n            this.promptAdjustTime(failure.dataFailure, this.curFailureData.serviceId, this.curFailureData.cb);\n        } else if (\n            failure &&\n            failure.dataFailure &&\n            ((failure.dataFailure.message && failure.dataFailure.message !== '') || failure.dataFailure.status === 412)\n        ) {\n            if (failure.dataFailure.status === 412) {\n                if (checkContinue) {\n                    if (failure.invalid) {\n                        let field: any = failure.dataFailure.field;\n                        if (\n                            this.translateFieldMap[this.curFailureData.serviceId as ServiceId] &&\n                            this.translateFieldMap[this.curFailureData.serviceId as ServiceId][\n                                failure.dataFailure.field\n                            ]\n                        ) {\n                            field =\n                                this.translateFieldMap[this.curFailureData.serviceId as ServiceId][\n                                    failure.dataFailure.field\n                                ];\n                        }\n                        this.dialogService\n                            .openConfirmationDialog({\n                                title: this.translateService.instant('POPUPS.MISSING_SEARCH_PARAMS.TITLE'),\n                                content: this.translateService.instant('POPUPS.MISSING_SEARCH_PARAMS.BODY', {\n                                    errField: this.translateService.instant('MissingField.' + field),\n                                    andOthers: this.translateService.instant('MissingField.andOthers'),\n                                }),\n                                confirmBtnTitle: this.translateService.instant('POPUPS.MISSING_SEARCH_PARAMS.1_ADJUST'),\n                                cancelBtnTitle: actionBtn,\n                                showCloseBtn: true,\n                            })\n                            .afterClosed()\n                            .subscribe((dialogReturn: TzDialogReturn) => {\n                                if (dialogReturn === CANCEL) {\n                                    this.removeAnswerHandling(\n                                        dialogReturn,\n                                        this.curFailureData.serviceId,\n                                        this.curFailureData.cb\n                                    );\n                                } else {\n                                    if (this.curFailureData.cb) {\n                                        this.curFailureData.cb(this.curFailureData.serviceId, true);\n                                    }\n                                }\n                            });\n                    } else {\n                        this.dialogService\n                            .openConfirmationDialog({\n                                title: this.translateService.instant('POPUPS.PROCESS_SEARCH.TITLE'),\n                                content: this.translateService.instant('POPUPS.PROCESS_SEARCH.BODY'),\n                                confirmBtnTitle: this.translateService.instant('POPUPS.PROCESS_SEARCH.1_ADJUST'),\n                                cancelBtnTitle: this.translateService.instant(\n                                    isCombination\n                                        ? 'POPUPS.PROCESS_SEARCH.2_CONTINUE'\n                                        : 'POPUPS.PROCESS_SEARCH.3_NEW_SEARCH'\n                                ),\n                                showCloseBtn: true,\n                            })\n                            .afterClosed()\n                            .subscribe((dialogReturn: any) => {\n                                if (dialogReturn === CANCEL) {\n                                    this.removeAnswerHandling(\n                                        dialogReturn,\n                                        this.curFailureData.serviceId,\n                                        this.curFailureData.cb\n                                    );\n                                } else {\n                                    if (this.curFailureData.cb) {\n                                        this.curFailureData.cb(this.curFailureData.serviceId, true);\n                                    }\n                                }\n                            });\n                    }\n                } else if (this.curFailureData.cb) {\n                    this.curFailureData.cb(this.curFailureData.serviceId, true);\n                }\n            } else {\n                this.dialogService\n                    .openConfirmationDialog({\n                        title: this.translateService.instant('POPUPS.NO_RESULTS.TITLE'),\n                        content: this.translateService.instant('POPUPS.PROCESS_SEARCH.BODY'),\n                        confirmBtnTitle: this.translateService.instant('GENERAL.NoResults1'),\n                        showCloseBtn: false,\n                    })\n                    .afterClosed()\n                    .subscribe((dialogReturn: TzDialogReturn) => {\n                        if (this.curFailureData.cb) {\n                            this.curFailureData.cb(this.curFailureData.serviceId, true);\n                        }\n                    });\n            }\n        } else {\n            if (this.router.url === 'reCreateTrip') {\n                this.router.navigate(['/search']);\n                setTimeout(() => {\n                    this.dialogService\n                        .openConfirmationDialog({\n                            title: this.translateService.instant('POPUPS.NO_RESULTS.TITLE'),\n                            content: this.translateService.instant('POPUPS.NO_RESULTS.BODY'),\n                            confirmBtnTitle: this.translateService.instant('POPUPS.NO_RESULTS.1_OK'),\n                            showCloseBtn: false,\n                            icon: { name: 'no-results-dialog', iconStyle: { 'width.px': 64, 'height.px': 70 } },\n                        })\n                        .afterClosed()\n                        .subscribe((dialogReturn: TzDialogReturn) => {});\n                }, 1000);\n            } else if (this.router.url === '/search') {\n                this.dialogService\n                    .openConfirmationDialog({\n                        title: this.translateService.instant('POPUPS.NO_RESULTS.TITLE'),\n                        content: this.translateService.instant('POPUPS.NO_RESULTS.BODY'),\n                        confirmBtnTitle: this.translateService.instant('POPUPS.NO_RESULTS.1_OK'),\n                        showCloseBtn: false,\n                        icon: { name: 'no-results-dialog', iconStyle: { 'width.px': 64, 'height.px': 70 } },\n                    })\n                    .afterClosed()\n                    .subscribe((dialogReturn: TzDialogReturn) => {});\n            } else if (failure && failure.invalid) {\n                this.dialogService\n                    .openConfirmationDialog({\n                        title: this.translateService.instant('POPUPS.NO_GOOD_OPTIONS.TITLE'),\n                        content: this.translateService.instant(\n                            isCombination ? 'POPUPS.NO_GOOD_OPTIONS.BODY_COMBINATION' : 'POPUPS.NO_GOOD_OPTIONS.BODY'\n                        ),\n                        cancelBtnTitle: this.translateService.instant(\n                            isCombination ? 'POPUPS.NO_GOOD_OPTIONS.2_CONTINUE' : 'POPUPS.NO_GOOD_OPTIONS.3_NEW_SEARCH'\n                        ),\n                        confirmBtnTitle: this.translateService.instant('POPUPS.NO_GOOD_OPTIONS.1_ADJUST'),\n                        showCloseBtn: false,\n                        icon: { name: 'no-results-dialog', iconStyle: { 'width.px': 64, 'height.px': 70 } },\n                    })\n                    .afterClosed()\n                    .subscribe((dialogReturn: TzDialogReturn) => {\n                        this.removeAnswerHandling(dialogReturn, this.curFailureData.serviceId, this.curFailureData.cb);\n                    });\n            } else {\n                this.dialogService\n                    .openConfirmationDialog({\n                        title: this.translateService.instant('POPUPS.ADD_SERVICE_NO_RESULTS.TITLE'),\n                        content: this.translateService.instant(\n                            isCombination\n                                ? 'POPUPS.ADD_SERVICE_NO_RESULTS.BODY_CONTINUE'\n                                : 'POPUPS.ADD_SERVICE_NO_RESULTS.BODY_NEW_SEARCH'\n                        ),\n                        cancelBtnTitle: this.translateService.instant(\n                            isCombination\n                                ? 'POPUPS.ADD_SERVICE_NO_RESULTS.2_CONTINUE'\n                                : 'POPUPS.ADD_SERVICE_NO_RESULTS.3_NEW_SEARCH'\n                        ),\n                        showCloseBtn: false,\n                        confirmBtnTitle: this.translateService.instant('POPUPS.ADD_SERVICE_NO_RESULTS.1_ADJUST'),\n                        icon: { name: 'no-results-dialog', iconStyle: { 'width.px': 64, 'height.px': 70 } },\n                    })\n                    .afterClosed()\n                    .subscribe((dialogReturn: TzDialogReturn) => {\n                        this.removeAnswerHandling(dialogReturn, this.curFailureData.serviceId, this.curFailureData.cb);\n                    });\n            }\n        }\n    }\n\n    private removeAnswerHandling(\n        dialogReturn: TzDialogReturn,\n        serviceId: ServiceId,\n        onUpdateCb: (serviceId: ServiceId, shouldEdit: boolean) => void\n    ): void {\n        if (dialogReturn === CONFIRM) {\n            if (onUpdateCb) {\n                onUpdateCb(serviceId, true);\n            }\n        } else {\n            this.unsetErrorFlag();\n            if (!this.searchDataService.isCombination()) {\n                this.router.navigate(['/search']);\n                return;\n            }\n            this.removeService.removeCartData(serviceId, undefined, true).subscribe(\n                () => {\n                    if (onUpdateCb) {\n                        onUpdateCb(serviceId, false);\n                    }\n                },\n                () => {\n                    if (onUpdateCb) {\n                        onUpdateCb(serviceId, false);\n                    }\n                }\n            );\n        }\n    }\n\n    private searchErrNotifyHdl(failure: ISearchErr): void {\n        // discard subj\n        this.newError(failure);\n    }\n\n    private initializeListenerAndMap(): void {\n        this.listenersService.registerListener(ListenerId.LISTEN_SEARCH_ERR, this.searchErrNotifyHdl.bind(this));\n        this.translateFieldMap[ServiceId.TRANSFER] = {\n            to: 'from',\n            address: 'to',\n        };\n        this.translateFieldMap[ServiceId.CAR_RENTAL] = {\n            to: 'pickup',\n            address: 'dropoff',\n            persons: 'driver',\n        };\n    }\n\n    private promptAdjustTime(failure: IDataFailure, serviceId: any, onUpdateCb?: any): void {\n        let cancelTxt = 'POPUPS.ADJUST_RENTAL_SEARCH.3_NO';\n        if (failure.remove) {\n            cancelTxt = 'POPUPS.ADJUST_RENTAL_SEARCH.2_CONTINUE';\n        }\n        this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant('POPUPS.ADJUST_RENTAL_SEARCH.TITLE'),\n                confirmBtnTitle: this.translateService.instant('POPUPS.ADJUST_RENTAL_SEARCH.1_YES'),\n                cancelBtnTitle: this.translateService.instant(cancelTxt),\n                closeBtnTitle: failure.remove ? this.translateService.instant('POPUPS.ADJUST_RENTAL_SEARCH.3_NO') : '',\n                content: this.translateService.instant('POPUPS.ADJUST_RENTAL_SEARCH.BODY', {\n                    openingHour: failure.cal.fromTime,\n                }),\n                icon: { name: 'adjust-rental-search-dialog', iconStyle: { 'width.px': 44, 'height.px': 44 } },\n            })\n            .afterClosed()\n            .subscribe((dialogReturn: TzDialogReturn) => {\n                if (dialogReturn === CONFIRM) {\n                    if (failure.confirmCb) {\n                        failure.confirmCb(failure.cal);\n                    }\n                } else if (dialogReturn === CANCEL && failure.remove) {\n                    this.removeAnswerHandling(false, serviceId, onUpdateCb);\n                } else {\n                    if (onUpdateCb) {\n                        onUpdateCb(serviceId, true);\n                    }\n                }\n            });\n    }\n}\n","/* eslint-disable no-bitwise */\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CombServiceIds } from '@core/constants/comb-service-ids';\n\nexport class SearchHelpers {\n    public static getServicesList(servicesVal: CombServiceIds): ServiceId[] {\n        const serviceList = [];\n\n        if ((servicesVal & CombServiceIds.FLIGHT_TRAIN) > 0) {\n            serviceList.push(ServiceId.FLIGHT_TRAIN);\n        }\n        if ((servicesVal & CombServiceIds.FLIGHT) > 0) {\n            serviceList.push(ServiceId.FLIGHT);\n        }\n        if ((servicesVal & CombServiceIds.TRAIN) > 0) {\n            serviceList.push(ServiceId.TRAIN);\n        }\n        if ((servicesVal & CombServiceIds.HOTEL) > 0) {\n            serviceList.push(ServiceId.ACC);\n        }\n        if ((servicesVal & CombServiceIds.TRANSFER) > 0) {\n            serviceList.push(ServiceId.TRANSFER);\n        }\n        if ((servicesVal & CombServiceIds.RENTAL) > 0) {\n            serviceList.push(ServiceId.CAR_RENTAL);\n        }\n\n        return serviceList;\n    }\n\n    public static getServiceValue(selectedServiceObj: any): number {\n        let serviceCount = 0;\n\n        if (selectedServiceObj.transport) {\n            serviceCount += CombServiceIds.FLIGHT_TRAIN;\n        }\n        if (selectedServiceObj.accommodation) {\n            serviceCount += CombServiceIds.HOTEL;\n        }\n        if (selectedServiceObj.transfer) {\n            serviceCount += CombServiceIds.TRANSFER;\n        }\n        if (selectedServiceObj.rentCar) {\n            serviceCount += CombServiceIds.RENTAL;\n        }\n\n        return serviceCount;\n    }\n\n    public static getServicesListMap(servicesVal: CombServiceIds, ignoreId?: ServiceId): any {\n        const serviceList: {\n            [key in ServiceId]?: true;\n        } = {};\n        if ((servicesVal & CombServiceIds.FLIGHT_TRAIN) > 0 && !this.isTransport(ignoreId)) {\n            serviceList[ServiceId.FLIGHT_TRAIN] = true;\n        }\n        if ((servicesVal & CombServiceIds.FLIGHT) > 0 && !this.isTransport(ignoreId)) {\n            serviceList[ServiceId.FLIGHT] = true;\n        }\n        if ((servicesVal & CombServiceIds.TRAIN) > 0 && !this.isTransport(ignoreId)) {\n            serviceList[ServiceId.TRAIN] = true;\n        }\n        if ((servicesVal & CombServiceIds.HOTEL) > 0 && ignoreId !== ServiceId.ACC) {\n            serviceList[ServiceId.ACC] = true;\n        }\n        if ((servicesVal & CombServiceIds.TRANSFER) > 0 && ignoreId !== ServiceId.TRANSFER) {\n            serviceList[ServiceId.TRANSFER] = true;\n        }\n        if ((servicesVal & CombServiceIds.RENTAL) > 0 && ignoreId !== ServiceId.CAR_RENTAL) {\n            serviceList[ServiceId.CAR_RENTAL] = true;\n        }\n\n        return serviceList;\n    }\n\n    public static newToOldServices(newServices: number) {\n        const selectedServices: any = {};\n\n        selectedServices.transport = (newServices & 1) > 0;\n        selectedServices.flight = (newServices & 16) > 0;\n        selectedServices.train = (newServices & 32) > 0;\n        selectedServices.accommodation = (newServices & 2) > 0;\n        selectedServices.transfer = (newServices & 4) > 0;\n        selectedServices.rentCar = (newServices & 8) > 0;\n\n        return selectedServices;\n    }\n\n    public static getFirstServiceId(servicesVal: CombServiceIds): ServiceId {\n        if ((servicesVal & CombServiceIds.FLIGHT_TRAIN) > 0) {\n            return ServiceId.FLIGHT_TRAIN;\n        }\n        if ((servicesVal & CombServiceIds.FLIGHT) > 0) {\n            return ServiceId.FLIGHT_TRAIN;\n        }\n        if ((servicesVal & CombServiceIds.TRAIN) > 0) {\n            return ServiceId.FLIGHT_TRAIN;\n        }\n        if ((servicesVal & CombServiceIds.HOTEL) > 0) {\n            return ServiceId.ACC;\n        }\n        if ((servicesVal & CombServiceIds.TRANSFER) > 0) {\n            return ServiceId.TRANSFER;\n        }\n        if ((servicesVal & CombServiceIds.RENTAL) > 0) {\n            return ServiceId.CAR_RENTAL;\n        }\n        return ServiceId.INVALID;\n    }\n\n    public static isTransport(servicesId?: ServiceId): boolean {\n        return (\n            servicesId === ServiceId.FLIGHT_TRAIN || servicesId === ServiceId.TRAIN || servicesId === ServiceId.FLIGHT\n        );\n    }\n\n    public static isPrimaryService(serviceId: ServiceId): boolean {\n        return this.isTransport(serviceId) || serviceId === ServiceId.ACC;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { SearchHelpers } from '@services/searchEngine/services/search-helpers';\nimport { InconsistentIds } from '@core/constants/comb-service-ids';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\n\nconst DEP_DIRTY = {\n    CLEAN: false,\n    DIRTY: true,\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TabRoutingService {\n    private servicesToBook: any[] = [];\n    private curServiceIdx = -1;\n    private checkDepDirty = DEP_DIRTY.CLEAN;\n    private movedToSummary = false;\n    private servicesOrder: any = {};\n\n    constructor(\n        private cartService: CartService,\n        private searchDataService: SearchDataService,\n        private translateService: TranslateService,\n        private listenersService: ListenersService\n    ) {\n        this.setServicesOrder();\n        this.listenersService.registerListener(ListenerId.LISTEN_CART_CHANGED, this.refreshBookingStatus, this);\n    }\n\n    private static isInError(searchResults: any, serviceId?: ServiceId) {\n        /* if (serviceId === ServiceId.FLIGHT_TRAIN) {\n    serviceId = ServiceId.FLIGHT;\n    }\n    if (searchResults[serviceId] && searchResults[serviceId].count === 0) {\n    if (serviceId === ServiceId.FLIGHT_TRAIN) {\n    return this.isInError(ServiceId.TRAIN);\n    } else {\n    return true\n    }\n    }*/\n        return false;\n    }\n\n    public refreshBookingStatus() {\n        const cartItems = this.cartService.getCartData();\n        this.resetBookingStatus();\n        if (cartItems && cartItems.items) {\n            for (const cartItem of cartItems.items) {\n                if (!cartItem.isVirtual) {\n                    this.setBooked(cartItem.serviceId);\n                }\n            }\n        }\n    }\n\n    public setBooked(bookedServiceId?: ServiceId) {\n        if (bookedServiceId !== undefined && typeof bookedServiceId === 'number') {\n            if (bookedServiceId === ServiceId.FLIGHT || bookedServiceId === ServiceId.TRAIN) {\n                bookedServiceId = ServiceId.FLIGHT_TRAIN;\n            }\n            const idx = this.getIdxFromServiceId(bookedServiceId);\n            if (idx !== -1) {\n                this.servicesToBook[idx].booked = true;\n            }\n            this.curServiceIdx = -1;\n        }\n        return this.setNext(-1);\n    }\n\n    public setConsistent(\n        serviceId: any,\n        val: any,\n        infos: any,\n        inconsistentId: number = InconsistentIds.NOT_SPECIFIC\n    ): void {\n        console.log('consistent for service id ' + serviceId + ' set to:' + val);\n        if (serviceId !== undefined) {\n            if (typeof serviceId !== 'number') {\n                serviceId = parseInt(serviceId, 10);\n            }\n            const idx = this.getIdxFromServiceId(serviceId);\n            if (idx !== -1) {\n                this.servicesToBook[idx].consistent = val;\n                if (!val) {\n                    this.servicesToBook[idx].consistentInfos = infos;\n                    this.servicesToBook[idx].inconsistentId = inconsistentId;\n                } else {\n                    this.servicesToBook[idx].consistentInfos = '';\n                    this.servicesToBook[idx].inconsistentId = InconsistentIds.NOT_SPECIFIC;\n                }\n            }\n        }\n    }\n\n    public getConsistentMsg(serviceId: any): string {\n        if (serviceId !== undefined && typeof serviceId === 'number') {\n            const idx = this.getIdxFromServiceId(serviceId);\n            if (idx !== -1) {\n                switch (this.servicesToBook[idx].inconsistentId) {\n                    case InconsistentIds.ADD_TRANSFER_TO_1001:\n                        return this.translateService.instant('POPUPS.TRIP_INCONSISTENT.RECOMPUTE_CAR_RENTAL_TRANS');\n                    case InconsistentIds.ADD_TRANSFER_TO_1101:\n                        return this.translateService.instant('POPUPS.TRIP_INCONSISTENT.RECOMPUTE_CAR_RENTAL_ACC');\n                }\n            }\n            return this.translateService.instant('POPUPS.TRIP_INCONSISTENT.BODY', {\n                services: 'services',\n                service: this.translateService.instant('SERVICES.' + serviceId).toLowerCase(),\n            });\n        }\n        return '';\n    }\n\n    public addService(serviceId: ServiceId): void {\n        this.initRouting(this.searchDataService.addService(serviceId), false);\n    }\n\n    public initRouting(services: any, reset: any): void {\n        this.initRoutingInternal(\n            SearchHelpers.getServicesList(services),\n            this.searchDataService.getAllSearchResults(),\n            reset\n        );\n    }\n\n    // change state to next one\n    public setNext(bookedServiceId?: ServiceId) {\n        this.curServiceIdx = this.getNext(bookedServiceId);\n        if (this.servicesToBook.length > this.curServiceIdx) {\n            return this.getCurService(this.curServiceIdx);\n        }\n    }\n\n    // return next service id after provided one\n    // return ServiceId.INVALID if next is not a combination service\n\n    public getNextInOrder(serviceId: ServiceId): ServiceId {\n        let serviceIdx = this.getIdxFromServiceId(serviceId);\n        let found = false;\n\n        if (serviceIdx === -1) {\n            serviceIdx = 0;\n            found = true;\n            serviceId = ServiceId.INVALID;\n        }\n\n        if (serviceId === ServiceId.FLIGHT || serviceId === ServiceId.TRAIN) {\n            serviceId = ServiceId.FLIGHT_TRAIN;\n        }\n\n        while (this.servicesToBook.length > serviceIdx) {\n            if (this.servicesToBook[serviceIdx].serviceId === ServiceId.SUMMARY) {\n                return ServiceId.INVALID;\n            }\n            if (this.servicesToBook[serviceIdx].serviceId === serviceId) {\n                found = true;\n            } else if (found && !this.cartService.isServicesBooked(this.servicesToBook[serviceIdx].serviceId)) {\n                return this.servicesToBook[serviceIdx].serviceId;\n            }\n            serviceIdx++;\n        }\n        // never reached normally\n        return ServiceId.INVALID;\n    }\n\n    public getServiceInfos(serviceId: ServiceId) {\n        const idx = this.getIdxFromServiceId(serviceId);\n        if (idx !== -1) {\n            return this.servicesToBook[idx];\n        }\n    }\n\n    // set all bookingOptions status based on cart\n    // used by trip planner to set statuses after the server\n    // created cart on user behalf\n\n    public setDirtyCheckDep(): void {\n        this.checkDepDirty = DEP_DIRTY.DIRTY;\n    }\n\n    public setCleanCheckDep(): void {\n        this.checkDepDirty = DEP_DIRTY.CLEAN;\n    }\n\n    public isCheckDepDirty(): boolean {\n        return this.checkDepDirty;\n    }\n\n    public hasMovedToSummary(): boolean {\n        return this.movedToSummary;\n    }\n\n    public setMovedToSummary(status: boolean): void {\n        this.movedToSummary = status;\n    }\n\n    public setSearchError(serviceId: ServiceId): void {\n        for (const serviceToBook of this.servicesToBook) {\n            if (serviceToBook.serviceId === serviceId) {\n                serviceToBook.searchError = true;\n                return;\n            }\n        }\n    }\n\n    public unsetBookedDependencies(serviceIdMapToUpd: any) {\n        if (serviceIdMapToUpd) {\n            for (const service of this.servicesToBook) {\n                if (\n                    serviceIdMapToUpd[service.serviceId] ||\n                    (service.serviceId === ServiceId.FLIGHT_TRAIN &&\n                        (serviceIdMapToUpd[ServiceId.FLIGHT] || serviceIdMapToUpd[ServiceId.TRAIN]))\n                ) {\n                    service.booked = false;\n                }\n            }\n        }\n    }\n\n    // when checkAll is set we return list of dependent services, booked or not\n    public hasDependencies(curServiceId: ServiceId, checkAll: boolean) {\n        let idx = checkAll ? this.getIdxFromServiceId(curServiceId) : 0;\n        if (idx === -1) {\n            idx = 0;\n        }\n        if (curServiceId === ServiceId.ACC || curServiceId === ServiceId.FLIGHT || curServiceId === ServiceId.TRAIN) {\n            if (curServiceId === ServiceId.FLIGHT || curServiceId === ServiceId.TRAIN) {\n                curServiceId = ServiceId.FLIGHT_TRAIN;\n            }\n        }\n\n        const serviceList = [];\n        while (this.servicesToBook.length > idx) {\n            if (curServiceId !== this.servicesToBook[idx].serviceId && (checkAll || this.servicesToBook[idx].booked)) {\n                serviceList.push(this.servicesToBook[idx].serviceId);\n            }\n            idx++;\n        }\n        return serviceList;\n    }\n\n    public removeService(serviceId: ServiceId) {\n        if (serviceId === ServiceId.FLIGHT || serviceId === ServiceId.TRAIN) {\n            serviceId = ServiceId.FLIGHT_TRAIN;\n        }\n        for (let i = 0; i < this.servicesToBook.length; i++) {\n            if (this.servicesToBook[i].serviceId === serviceId) {\n                this.servicesToBook.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    public areAllBooked(): boolean {\n        let transportFound = false;\n        let ignoreTransport = false;\n\n        for (const serviceToBook of this.servicesToBook) {\n            if (SearchHelpers.isTransport(serviceToBook.serviceId)) {\n                if (ignoreTransport) {\n                    continue;\n                }\n                if (transportFound && !serviceToBook.booked && !TabRoutingService.isInError(serviceToBook.serviceId)) {\n                    return false;\n                } else {\n                    transportFound = true;\n                    ignoreTransport = serviceToBook.booked || TabRoutingService.isInError(serviceToBook.serviceId);\n                }\n            }\n            if (\n                serviceToBook.serviceId !== ServiceId.SUMMARY &&\n                serviceToBook.serviceId !== ServiceId.BOOKING &&\n                (!serviceToBook.booked || TabRoutingService.isInError(serviceToBook.serviceId))\n            ) {\n                return false;\n            }\n        }\n\n        return !(transportFound && !ignoreTransport);\n    }\n\n    public isConsistent(inconsistentServiceId: ServiceId): boolean {\n        if (inconsistentServiceId !== undefined && typeof inconsistentServiceId === 'number') {\n            const idx = this.getIdxFromServiceId(inconsistentServiceId);\n            if (idx !== -1) {\n                return this.servicesToBook[idx].consistent;\n            }\n        }\n        return false;\n    }\n\n    private resetBookingStatus(): void {\n        for (const serviceToBook of this.servicesToBook) {\n            serviceToBook.booked = false;\n        }\n    }\n\n    private initRoutingInternal(serviceList: any, searchResults: any, reset: any) {\n        this.buildRouting(serviceList);\n        if (reset) {\n            this.setMovedToSummary(false);\n        } else {\n            const bookedService = this.cartService.getUserValidatedServices() as any;\n            let last = -1;\n\n            for (let i = 0; i < this.servicesToBook.length; i++) {\n                this.servicesToBook[i].searchError = TabRoutingService.isInError(\n                    searchResults,\n                    this.servicesToBook[i].serviceId\n                );\n                if (\n                    bookedService[this.servicesToBook[i].serviceId] ||\n                    (this.servicesToBook[i].serviceId === ServiceId.FLIGHT_TRAIN &&\n                        (bookedService[ServiceId.TRAIN] || bookedService[ServiceId.FLIGHT]))\n                ) {\n                    this.servicesToBook[i].booked = true;\n                    if (last === i - 1) {\n                        last = i;\n                    }\n                } else {\n                    if (last === -1) {\n                        last = i;\n                    }\n                }\n            }\n            this.curServiceIdx = last;\n        }\n    }\n\n    private getIdxFromServiceId(serviceId: any): number {\n        for (let i = 0; i < this.servicesToBook.length; i++) {\n            if (\n                this.servicesToBook[i].serviceId === serviceId ||\n                (this.servicesToBook[i].serviceId === ServiceId.FLIGHT_TRAIN &&\n                    (serviceId === ServiceId.FLIGHT || serviceId === ServiceId.TRAIN))\n            ) {\n                return i;\n            }\n        }\n        console.error('get service idx not found for serviceId:' + serviceId);\n        return -1;\n    }\n\n    private getCurService(serviceIdx: ServiceId) {\n        if (this.servicesToBook[serviceIdx]) {\n            return this.servicesToBook[serviceIdx];\n        }\n        console.error('get cur service not found for curServiceIdx:' + serviceIdx);\n    }\n\n    private getNext(bookedServiceId?: ServiceId) {\n        let serviceIdx = 0; //this.curServiceIdx < 0 ? 0 : this.curServiceIdx; //movedToSummary ? curServiceIdx : 0;\n        // skip service which are at the same priority level of current one or next service is already booked\n        // this is done typically for train / flights, one of them should be used not both\n        while (\n            this.servicesToBook.length > serviceIdx &&\n            this.servicesToBook[serviceIdx].booked &&\n            (this.cartService.isServicesBooked(this.servicesToBook[serviceIdx].serviceId) ||\n                this.servicesToBook[serviceIdx].consistent ||\n                this.servicesToBook[serviceIdx].serviceId === bookedServiceId)\n        ) {\n            if (this.movedToSummary && this.servicesToBook[serviceIdx].serviceId === ServiceId.SUMMARY) {\n                break;\n            }\n            serviceIdx++;\n        }\n\n        return serviceIdx;\n    }\n\n    private buildRouting(serviceList: any[]) {\n        const serviceToOrder: any[] = [];\n\n        for (const service of serviceList) {\n            if (this.servicesOrder[service] !== undefined) {\n                if (!serviceToOrder[this.servicesOrder[service]]) {\n                    serviceToOrder[this.servicesOrder[service]] = [];\n                }\n                serviceToOrder[this.servicesOrder[service]].push(parseInt(service, 10));\n            } else {\n                console.log('Error: unknown service: ' + service);\n            }\n        }\n\n        // build ordered list of services to book\n        this.servicesToBook = [];\n        for (const orderingService of serviceToOrder) {\n            if (orderingService !== undefined) {\n                for (const serviceId of orderingService) {\n                    this.servicesToBook.push({\n                        serviceId,\n                        booked: false,\n                        searchError: false,\n                        consistent: true,\n                        consistentInfos: '',\n                    });\n                }\n            }\n        }\n        // add summary and bookingOptions service at the end if there is at least one service to book\n        if (this.servicesToBook.length > 0) {\n            this.servicesToBook.push({\n                serviceId: ServiceId.SUMMARY,\n                booked: false,\n                consistent: true,\n                consistentInfos: '',\n            });\n            this.servicesToBook.push({\n                serviceId: ServiceId.BOOKING,\n                booked: false,\n                consistent: true,\n                consistentInfos: '',\n            });\n        }\n\n        this.curServiceIdx = -1;\n    }\n\n    private setServicesOrder(): void {\n        this.servicesOrder[ServiceId.FLIGHT] = 0;\n        this.servicesOrder[ServiceId.FLIGHT_TRAIN] = 0;\n        this.servicesOrder[ServiceId.TRAIN] = 0;\n        this.servicesOrder[ServiceId.ACC] = 1;\n        this.servicesOrder[ServiceId.TRANSFER] = 2;\n        this.servicesOrder[ServiceId.CAR_RENTAL] = 3;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { SearchErrorService } from '@services/searchEngine/services/search-error-service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { SearchEvents } from '@core/constants/search-events';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { TransferUtils } from '@services/modules/transfers/utils/TransferUtils';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { PreSearchService } from '@services/modules/core/dataservices/pre-search.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TransferSearchService {\n    constructor(\n        private router: Router,\n        private apiAccessService: ApiAccessService,\n        private transferUtils: TransferUtils,\n        private searchMetadataService: SearchMetadataService,\n        private listenersService: ListenersService,\n        private searchDataService: SearchDataService,\n        private searchErrorService: SearchErrorService,\n        private tripPlannerService: TripPlannerService,\n        private cartRoutingService: CartRoutingService,\n        private loaderService: LoaderService,\n        private preSearchService: PreSearchService\n    ) {}\n\n    public searchTransfers(serviceSearch: any, eventId: any, unused: any, params: any): void {\n        this.transferUtils.setSelectedInfoInServices(null);\n        //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, true);\n        params.id = this.searchDataService.getCombId();\n        params.serviceId = ServiceId.TRANSFER;\n        this.preSearchService.preSearchData(params, serviceSearch, eventId).then(\n            (success: any) => {\n                //const metaData = success.metaData;\n                //console.log('SUCCESS', metaData);\n                //this.searchMetadataService.saveSearch(success, eventId);\n                /* if (success.metaData.complete) {\n                        this.tripPlannerService.setComplete(success.metaData.serviceId);\n                    }*/\n                /* if (metaData.count === 0 && this.router.url === '/search') {\n                        this.searchErrorService.searchErr(\n                            {\n                                status: 400,\n                                message: '',\n                            },\n                            ServiceId.TRANSFER,\n                            SearchEvents.EVENT_SEARCH_WEB\n                        );\n                        return;\n                    }*/\n                // V2 check later\n                /*        if ($state.$current.name === \"home.results.transfer\") {\n                  this.router.navigate($state.current, {from: StateFrom.NONE}, {reload: true});\n                  return\n                }*/\n                //this.gotoTransferPage();\n            },\n            (failure: any) => {\n                //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, false);\n                /* if (failure.status === 412 && failure.data) {\n                        if (failure.data.metaData.complete) {\n                            this.tripPlannerService.setComplete(failure.data.metaData.serviceId);\n                        }\n                        this.searchMetadataService.saveSearch(failure.data, eventId);\n                    }*/\n                /*if (this.router.url === 'home.results.summary') {\n                        this.gotoTransferPage();\n                    } else {\n                        if (eventId !== SearchEvents.EVENT_SEARCH_EDIT && this.router.url !== '/search') {\n                            this.gotoTransferPage(this.router.url === 'home.results.transfer');\n                        }\n                        if (this.router.url === '/search' || this.router.url === 'home.results.transfer') {\n                            this.searchErrorService.searchErr(\n                                {\n                                    status: failure && failure.status ? failure.status : 400,\n                                    message: '',\n                                },\n                                ServiceId.TRANSFER,\n                                SearchEvents.EVENT_SEARCH_WEB\n                            );\n                        }\n                    }*/\n            }\n        );\n        // .catch(() => {\n        //     this.loaderService.triggerLoading.emit({ loading: false });\n        // });\n    }\n\n    private gotoTransferPage(reload?: boolean) {\n        this.cartRoutingService.goToState(ServiceId.TRANSFER, undefined, true, StateFrom.SEARCH);\n    }\n}\n","/*\nService for pre-Search minimal data\n */\n\nimport { Injectable } from '@angular/core';\nimport { TabRoutingService } from '@services/searchEngine/services/tab-routing.service';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { SearchEvents } from '@core/constants/search-events';\nimport { PollerService } from '@services/modules/core/poller.service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { CombinationId, DataId } from '@schemas/modules/core/base-types';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TripPlannerService {\n    private activeCombId: CombinationId = '';\n    private preSearchInfos?: any = null;\n    private runningRequest: any = {};\n    private notifyWaiters: { [key: CombinationId]: [(params?: any) => void] } = {}; // list of waiters to notify when poller has finished\n    private onErrorCb: any;\n    private accPollerId: any = null;\n    private flightPollerId: any = null;\n\n    constructor(\n        private tabRoutingService: TabRoutingService,\n        private listenersService: ListenersService,\n        private apiAccessService: ApiAccessService,\n        private cartService: CartService,\n        private pollerService: PollerService,\n        private searchDataService: SearchDataService,\n        private searchMetadataService: SearchMetadataService\n    ) {\n        this.initiatePreSearchInfo();\n    }\n\n    private static isTransport(serviceId: number): boolean {\n        return serviceId === ServiceId.TRAIN || serviceId === ServiceId.FLIGHT;\n    }\n\n    public reInit(combId: any, searchResults: any) {\n        this.activeCombId = combId;\n        this.preSearchInfos = {\n            services: {},\n            combId,\n            complete: true,\n        };\n        for (const serviceId in searchResults) {\n            if (searchResults[serviceId]) {\n                this.preSearchInfos.services[serviceId] = searchResults[serviceId];\n                this.preSearchInfos.services[serviceId].complete = true;\n                this.preSearchInfos.services[serviceId].count = searchResults[serviceId].resultLength;\n                this.tabRoutingService.setConsistent(serviceId, true, '');\n            }\n        }\n        this.set(this.preSearchInfos);\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n    }\n\n    // refId is used to uniquely identify messages from this trip planner request\n    // and more importantly get messages after trip planner ended\n    // when refId is provided use it, otherwise create a fresh one\n    public poller(combId: CombinationId, isNewCombi: boolean, anticipatedList: any, onError: any, refId?: string) {\n        if (onError) {\n            this.onErrorCb = onError;\n        }\n        this.preSearchInfos.complete = false;\n        if (isNewCombi) {\n            this.clear(combId);\n        } else {\n            this.activeCombId = combId;\n        }\n        // set complete to false to display loader upfront\n        // not all anticipatedList will end up being recomputed\n        console.log('anticipated list', {\n            anticipatedList,\n        });\n        for (const serviceId in anticipatedList) {\n            if (anticipatedList.hasOwnProperty(serviceId)) {\n                if (parseInt(serviceId, 10) === ServiceId.FLIGHT_TRAIN) {\n                    this.preSearchInfos.services[ServiceId.FLIGHT] = {\n                        complete: false,\n                    };\n                    this.preSearchInfos.services[ServiceId.TRAIN] = {\n                        complete: false,\n                    };\n                } else {\n                    this.preSearchInfos.services[serviceId] = {\n                        complete: false,\n                    };\n                }\n            }\n        }\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n        console.log('trip planner poller requested for combId:' + combId);\n\n        // unique number to identify this poller request\n        if (!refId) {\n            refId = '' + Math.floor(Math.random() * 1000000);\n        }\n        this.preSearchInfos.refId = refId;\n        this.callTripPlanner(combId, -1, false, refId, this.firstPoller.bind(this, refId), this.pollErr.bind(this));\n        return refId;\n    }\n\n    public get(serviceId: ServiceId): any {\n        let res: any = {\n            enable: false,\n            loader: false,\n            complete: false,\n        };\n        if (!this.preSearchInfos) {\n            return res;\n        }\n\n        // handle transport case with tab listening to both flight and train\n        // TODO prefer best user choice\n        if (serviceId === ServiceId.FLIGHT_TRAIN) {\n            if (\n                this.preSearchInfos.services[ServiceId.FLIGHT] &&\n                this.preSearchInfos.services[ServiceId.FLIGHT].complete\n            ) {\n                serviceId = ServiceId.FLIGHT;\n            } else if (\n                this.preSearchInfos.services[ServiceId.TRAIN] &&\n                this.preSearchInfos.services[ServiceId.TRAIN].complete\n            ) {\n                serviceId = ServiceId.TRAIN;\n            } else {\n                serviceId = ServiceId.FLIGHT;\n            }\n        }\n        const info = this.preSearchInfos.services[serviceId];\n        if (info) {\n            res = {\n                enable: !info.complete || info.count > 0,\n                loader: !info.complete && !this.preSearchInfos.complete,\n                price: info.recommendedItemPrice,\n                cur: info.recommendedItemPriceCur,\n                complete: info.complete,\n            };\n        }\n        return res;\n    }\n\n    // used when a service is removed\n    public removeServiceSearchInfos(serviceId: ServiceId) {\n        delete this.preSearchInfos.services[serviceId];\n        if (serviceId === ServiceId.FLIGHT || serviceId === ServiceId.FLIGHT_TRAIN) {\n            delete this.preSearchInfos.services[ServiceId.TRAIN];\n        }\n        if (serviceId === ServiceId.TRAIN || serviceId === ServiceId.FLIGHT_TRAIN) {\n            delete this.preSearchInfos.services[ServiceId.FLIGHT];\n        }\n        this.set(this.preSearchInfos);\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n    }\n\n    public isRunning(combId: string, deferred?: (params?: any) => void): boolean | void {\n        if (!deferred) {\n            return this.runningRequest[combId] === true;\n        }\n        if (this.runningRequest[combId]) {\n            console.log('store waiter, for poller ends');\n            if (!this.notifyWaiters[combId]) {\n                this.notifyWaiters[combId] = [deferred];\n            } else {\n                this.notifyWaiters[combId].push(deferred);\n            }\n        } else {\n            deferred();\n        }\n    }\n\n    public setCartData(combId: CombinationId, serviceId: ServiceId, dataId: DataId, cartReq: any): Observable<any> {\n        if (this.isRunning(combId)) {\n            return new Observable((subscriber) => {\n                console.log('starting notifier waiter');\n                const resolver = () => {\n                    console.log('poller notification received');\n                    this.cartService\n                        .setCartData(combId, serviceId, dataId, cartReq)\n                        .pipe(take(1))\n                        .subscribe(\n                            (res: any) => {\n                                console.log('cart service finished in success');\n                                subscriber.next(res);\n                                subscriber.complete();\n                            },\n                            (res: any) => {\n                                console.log('cart service finished in error');\n                                subscriber.error(res);\n                                subscriber.complete();\n                            }\n                        );\n                };\n                this.isRunning(combId, resolver);\n            });\n        } else {\n            return this.cartService.setCartData(combId, serviceId, dataId, cartReq);\n        }\n    }\n\n    public registerPoller(combId: CombinationId, dataId: DataId, serviceId: any, cb: any) {\n        console.log('register poller for service id:' + serviceId + ' on data id:' + dataId);\n        switch (serviceId) {\n            case ServiceId.ACC:\n                if (this.accPollerId) {\n                    if (this.accPollerId.dataId === dataId) {\n                        return this.pollerService.registerPoller(combId, dataId, ServiceId.ACC, cb);\n                    } else {\n                        return this.pollerService.registerPoller(\n                            combId,\n                            dataId,\n                            ServiceId.ACC,\n                            this.hdlPollerResult.bind(this, ServiceId.ACC, cb)\n                        );\n                    }\n                } else {\n                    this.accPollerId = this.pollerService.registerPoller(\n                        combId,\n                        dataId,\n                        ServiceId.ACC,\n                        this.hdlPollerResult.bind(this, ServiceId.ACC, cb)\n                    );\n                    return this.accPollerId;\n                }\n            case ServiceId.FLIGHT:\n                if (this.flightPollerId) {\n                    if (this.flightPollerId.dataId === dataId) {\n                        return this.pollerService.registerPoller(combId, dataId, ServiceId.FLIGHT, cb);\n                    } else {\n                        return this.pollerService.registerPoller(\n                            combId,\n                            dataId,\n                            ServiceId.FLIGHT,\n                            this.hdlPollerResult.bind(this, ServiceId.FLIGHT, cb)\n                        );\n                    }\n                } else {\n                    this.flightPollerId = this.pollerService.registerPoller(\n                        combId,\n                        dataId,\n                        ServiceId.FLIGHT,\n                        this.hdlPollerResult.bind(this, ServiceId.FLIGHT, cb)\n                    );\n                    return this.flightPollerId;\n                }\n        }\n\n        return null;\n    }\n\n    public unregisterPoller(pollerId: any) {\n        this.pollerService.unregisterPoller(pollerId);\n    }\n\n    public setComplete(serviceId: ServiceId): void {\n        if (this.preSearchInfos && this.preSearchInfos.services[serviceId]) {\n            this.preSearchInfos.services[serviceId].complete = true;\n            if (serviceId === ServiceId.FLIGHT && this.preSearchInfos.services[ServiceId.TRAIN]) {\n                this.preSearchInfos.services[ServiceId.TRAIN].complete = true;\n            }\n            this.set(this.preSearchInfos);\n            this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n        }\n    }\n\n    public clear(combId: CombinationId) {\n        this.activeCombId = combId;\n        this.preSearchInfos = {\n            services: {},\n            combId,\n            complete: false,\n        };\n        this.set(this.preSearchInfos);\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n    }\n\n    private firstPoller(refId: any, decodedRes: any) {\n        if (decodedRes.completed) {\n            if (this.activeCombId) {\n                delete this.runningRequest[this.activeCombId];\n            }\n        }\n        this.pollResult(refId, decodedRes);\n    }\n\n    private initiatePreSearchInfo(): void {\n        const infos: any = StorageManagerUtil.get('preSearchInfos');\n        if (infos) {\n            this.cartService.InitDone.then(() => {\n                this.preSearchInfos = infos;\n                this.syncCarts(this.cartService.getCartData());\n                this.set(this.preSearchInfos);\n                if (this.preSearchInfos && !this.preSearchInfos.complete) {\n                    const combId = this.preSearchInfos.combId;\n                    this.clear(combId);\n                    this.fetch(combId, this.preSearchInfos.refId);\n                }\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n            });\n        } else {\n            this.preSearchInfos = {\n                services: {},\n            };\n        }\n    }\n\n    private set(searchInfos: any): void {\n        this.preSearchInfos = searchInfos;\n        StorageManagerUtil.set('preSearchInfos', this.preSearchInfos);\n        //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, !this.isCompleted());\n    }\n\n    private isCompleted(): boolean {\n        if (!this.preSearchInfos || this.preSearchInfos.complete === undefined) {\n            return true;\n        }\n\n        //On mobile, we want to hide Progress bar when all services are completed including\n        // flight upgrade for instance\n\n        for (const serviceId in this.preSearchInfos.services) {\n            if (!this.preSearchInfos.services[serviceId].complete) {\n                if (\n                    parseInt(serviceId, 10) !==\n                    ServiceId.FLIGHT /*|| $rootScope.stateName === \"home.results.travel.flights\"*/\n                ) {\n                    return false;\n                }\n            }\n        }\n        return this.preSearchInfos.complete;\n    }\n\n    // validate takes true/false based on retry/new-fetch.\n    private fetch(combId: CombinationId, refId: string) {\n        if (!this.isValidCombId(combId)) {\n            return;\n        }\n        this.apiAccessService.checkTmpPreSearch(\n            combId,\n            (res: any) => {\n                console.log(res);\n                this.decodeRes(res, combId);\n                if (!res.completed) {\n                    // get further results\n                    this.callTripPlanner(\n                        this.activeCombId,\n                        res.lastVal,\n                        false,\n                        refId,\n                        this.pollResult,\n                        this.pollErr.bind(this)\n                    );\n                }\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n            },\n            (failure: any) => {\n                console.log(failure);\n                // @Todo: handle error\n            }\n        );\n    }\n\n    // isValidCombId is validated to check current combination is invoked or not.\n    // And also to avoid unnecessary api calls\n    private isValidCombId(combId: CombinationId) {\n        return this.activeCombId === combId;\n    }\n\n    private callTripPlanner(\n        activeCombId: CombinationId,\n        lastVal: number,\n        loader: any,\n        refId: string,\n        _pollResult: any,\n        _pollErr: any\n    ) {\n        if (!this.runningRequest[activeCombId]) {\n            this.runningRequest[activeCombId] = true;\n            const mySubscriber = this.apiAccessService\n                .tripPlannerChecker(activeCombId, lastVal, loader, refId)\n                .subscribe(\n                    (success: any) => {\n                        console.log('next:' + success);\n                        _pollResult(success);\n                    },\n                    (failure: any) => {\n                        console.log('next failure:' + failure);\n                        mySubscriber.unsubscribe();\n                    },\n                    () => {\n                        console.log('complete');\n                        mySubscriber.unsubscribe();\n                    }\n                );\n        } else {\n            console.log('skipping trip planner checker call');\n        }\n    }\n\n    private pollResult(refId: any, res: any) {\n        switch (true) {\n            case res.serviceList !== null:\n                // eslint-disable-next-line\n                for (const serviceId in res.serviceList) {\n                    this.preSearchInfos.services[serviceId] = {\n                        complete: false,\n                        count: 0,\n                    };\n                }\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n                break;\n            case res.tripPlannerSearchInfos !== undefined:\n                //set search data with values from server (TRAZ-8527)\n                //console.log('getting search infos:'+res.tripPlannerSearchInfos);\n                this.searchMetadataService.saveTripPlannerSearchInfos(\n                    res.tripPlannerSearchInfos,\n                    res.tripPlannerSearchInfos.serviceId\n                );\n                //trigger refresh of edit bar content with new values\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_EXT_CHANGE);\n                break;\n            case res.results !== null:\n                console.log('got tmp search res:', res);\n                this.setPreSearchInfos(res.results, this.activeCombId, res.completed);\n                this.set(this.preSearchInfos);\n                switch (res.results.metaData.serviceId) {\n                    case ServiceId.ACC:\n                        this.accPollerId = res.results.metaData.dataId;\n                        this.pollerService.registerPoller(\n                            this.activeCombId,\n                            res.results.metaData.dataId,\n                            ServiceId.ACC,\n                            this.hdlPollerResult.bind(this, ServiceId.ACC, null)\n                        );\n                        break;\n                    case ServiceId.FLIGHT:\n                        this.flightPollerId = res.results.metaData.dataId;\n                        this.pollerService.registerPoller(\n                            this.activeCombId,\n                            res.results.metaData.dataId,\n                            ServiceId.FLIGHT,\n                            this.hdlPollerResult.bind(this, ServiceId.FLIGHT, null)\n                        );\n                        break;\n                }\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n            // eslint-disable-next-line no-fallthrough\n            default:\n                if (!res.completed) {\n                    // get further results\n                    this.cartService.reInit(true).then(() => {\n                        this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n                    });\n                } else {\n                    console.log('getting complete status');\n                    for (const serviceId in this.preSearchInfos.services) {\n                        if (this.preSearchInfos.services[serviceId].count === 0) {\n                            this.preSearchInfos.services[serviceId].complete = true;\n                        }\n                    }\n                    this.preSearchInfos.complete = true;\n                    if (res.status === 410) {\n                        this.hdlErrorCB();\n                    } else {\n                        //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, !this.isCompleted());\n                        this.cartService.reInit(true).then(\n                            (cartData: any) => {\n                                this.syncCarts(cartData);\n                                this.listenersService.NotifyListeners(\n                                    ListenerId.LISTEN_REPRICED,\n                                    this.preSearchInfos.complete\n                                );\n                                this.end(this.activeCombId);\n                                this.listenersService.NotifyListeners(ListenerId.LISTEN_CART_CHANGED, true);\n                            },\n                            (failure: any) => {\n                                console.error(failure);\n                                this.end(this.activeCombId);\n                                this.listenersService.NotifyListeners(ListenerId.LISTEN_CART_CHANGED, true);\n                            }\n                        );\n                    }\n                }\n        }\n    }\n\n    private end(combId: CombinationId) {\n        delete this.runningRequest[combId];\n\n        // notify waiters if any\n        if (this.notifyWaiters[combId]) {\n            console.log('notify waiters of poller ends');\n            for (const notifyWaiter of this.notifyWaiters[combId]) {\n                console.log('notifying');\n                notifyWaiter();\n            }\n            delete this.notifyWaiters[combId];\n        }\n    }\n\n    // remove from preSearchInfos cart that does not exists\n    private syncCarts(cartData: any) {\n        const existsServices: any = {};\n        let modified = false;\n\n        if (cartData && cartData.items) {\n            for (const cartItem of cartData.items) {\n                existsServices[cartItem.serviceId] = true;\n            }\n        }\n\n        for (const serviceId in this.preSearchInfos.services) {\n            if (!existsServices[serviceId]) {\n                modified = true;\n                if (this.preSearchInfos.services[serviceId]) {\n                    this.preSearchInfos.services[serviceId].recommendedItemPrice = 0;\n                    this.preSearchInfos.services[serviceId].nbOnwards = 0;\n                    this.preSearchInfos.services[serviceId].nbReturns = 0;\n                    this.preSearchInfos.services[serviceId].count = 0;\n                }\n            }\n        }\n        if (modified) {\n            this.set(this.preSearchInfos);\n        }\n    }\n\n    private hdlErrorCB() {\n        if (this.onErrorCb) {\n            const promise = this.onErrorCb();\n            if (promise) {\n                Promise.resolve(promise).then(\n                    () => {\n                        this.end(this.activeCombId);\n                    },\n                    () => {\n                        this.end(this.activeCombId);\n                    }\n                );\n            } else {\n                this.end(this.activeCombId);\n            }\n        } else {\n            this.end(this.activeCombId);\n        }\n    }\n\n    private pollErr(err: any) {\n        console.error('error on pre tmp search received:' + err);\n        if (this.activeCombId) {\n            delete this.runningRequest[this.activeCombId];\n        }\n        for (const serviceId in this.preSearchInfos.services) {\n            if (\n                !this.preSearchInfos.services[serviceId].complete &&\n                this.preSearchInfos.services[serviceId].count === 0\n            ) {\n                this.preSearchInfos.services[serviceId] = {\n                    complete: true,\n                    count: 0,\n                };\n            }\n        }\n\n        // on validation error from server side update the service search in local\n        const res = err.error;\n        if (res && res.results !== null) {\n            const results = res.results;\n            results.serviceSearch.failureCode = res.failureCode;\n            results.serviceSearch.modifyData = res.adjustData;\n            this.setPreSearchInfos(results, this.activeCombId, true);\n        }\n\n        this.set(this.preSearchInfos);\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, this.preSearchInfos.complete);\n        this.hdlErrorCB();\n    }\n\n    private hdlPollerResult(servicesId: any, cb: any, metaData: any, error: any) {\n        const consoleString =\n            'get poller result for service id:' +\n            servicesId +\n            ' complete is:' +\n            (metaData ? metaData.complete : undefined);\n        console.log(consoleString);\n        if (metaData && metaData.complete) {\n            switch (servicesId) {\n                case ServiceId.ACC:\n                    this.accPoller(metaData);\n                    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                    cb && cb(metaData, null);\n                    break;\n                case ServiceId.FLIGHT:\n                    this.flightPoller();\n                    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                    cb && cb(metaData, null);\n                    break;\n                default:\n            }\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            cb && cb(null, error);\n        }\n    }\n\n    private flightPoller() {\n        const data = this.searchDataService.getSearchResult(ServiceId.FLIGHT);\n        if (data) {\n            data.complete = true;\n        }\n        this.searchDataService.saveResult(ServiceId.FLIGHT, data, SearchEvents.EVENT_SEARCH_WEB);\n        this.cartService.reInit(true);\n        this.setComplete(ServiceId.FLIGHT);\n    }\n\n    private accPoller(metaData: any) {\n        metaData.resultLength = metaData.count;\n        delete metaData.count;\n        const data = this.searchDataService.getSearchResult(ServiceId.ACC);\n        if (data && data.minimalPrice < metaData.minimalPrice) {\n            metaData.minimalPrice = data.minimalPrice;\n        }\n        metaData.sortBy = data.sortBy;\n        console.log('Current poll minimum price', metaData.minimalPrice);\n\n        this.searchDataService.saveResult(ServiceId.ACC, metaData, SearchEvents.EVENT_SEARCH_WEB);\n        this.searchDataService.updSearchResult(\n            ServiceId.ACC,\n            {\n                minimalPrice: metaData.minimalPrice,\n            },\n            SearchEvents.EVENT_FILTER\n        );\n        this.setComplete(ServiceId.ACC);\n        this.listenersService.NotifyListeners(ListenerId.LISTEN_ACC_REPRICED, this.preSearchInfos.complete);\n    }\n\n    private setPreSearchInfos(results: any, combId: any, completed: any) {\n        this.preSearchInfos.services[results.metaData.serviceId] = ToolsService.deepCopy(results.metaData);\n        this.preSearchInfos.services[results.metaData.serviceId].complete = results.metaData.complete;\n        this.preSearchInfos.complete = completed;\n        this.preSearchInfos.combId = combId;\n        this.searchMetadataService.saveSearch(results);\n        if (results.metaData.complete) {\n            this.setComplete(results.metaData.serviceId);\n        }\n        this.tabRoutingService.setConsistent(results.metaData.serviceId, true, '');\n        if (\n            completed &&\n            results.metaData.count === 0 &&\n            TripPlannerService.isTransport(results.metaData.serviceId) &&\n            results.metaData.secondDataId\n        ) {\n            const serviceId = results.metaData.serviceId === ServiceId.TRAIN ? ServiceId.FLIGHT : ServiceId.TRAIN;\n            this.apiAccessService.getMetaRes(combId, serviceId, results.metaData.secondDataId).then(\n                (res: any) => {\n                    if (res.metaData.complete) {\n                        this.setComplete(results.metaData.serviceId);\n                    }\n                    this.searchMetadataService.saveSearch(res);\n                },\n                (error: any) => {\n                    console.error(error);\n                }\n            );\n        }\n    }\n\n    private decodeRes(res: any, combId: CombinationId) {\n        console.log('[tmpSearch][check]', { res });\n\n        for (const serviceId in res.metaResMap) {\n            if (res.metaResMap[serviceId] != null) {\n                this.setPreSearchInfos(res.metaResMap[serviceId], combId, res.completed);\n            } else {\n                this.preSearchInfos.services[serviceId] = {\n                    complete: false,\n                    count: 0,\n                };\n            }\n        }\n        this.set(this.preSearchInfos);\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { AccSearchService } from '@services/searchEngine/services/acc-search.service';\nimport { FlightTrainSearchService } from '@services/services/flight-train-search.service';\nimport { RentalSearchService } from '@services/searchEngine/services/rental-search-service';\nimport { TransferSearchService } from '@services/searchEngine/services/transfer-search-service';\nimport { TabRoutingService } from '@services/searchEngine/services/tab-routing.service';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { RecentSearchService } from '@services/modules/services/recent-search.service';\nimport { CalTypes } from '@core/constants/call-types.const';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { NightChoiceService } from '@services/modules/nightChoice/night-choice.service';\nimport { ToolsService } from '@core/utils/tools-service';\nimport { EngineRuleService } from '@services/searchEngine/services/engine-rule-service';\nimport { SearchHelpers } from '@services/searchEngine/services/search-helpers';\nimport { InactivityHandler } from '@services/modules/inactivity/inactivity-handler';\nimport { CheckDepService } from '@services/searchEngine/services/check-dep.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { SearchErrorService } from '@services/searchEngine/services/search-error-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { Trip } from '@core/constants/trip';\nimport { CombServiceIds } from '@core/constants/comb-service-ids';\nimport { SearchEvents } from '@core/constants/search-events';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { CurrencyService } from '@services/services/currency-service';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { Subject, Subscription } from 'rxjs';\nimport { ISSIBase, NightChoices } from '@schemas/modules/search/search';\nimport { CombinationId } from '@schemas/modules/core/base-types';\nimport { skip } from 'rxjs/operators';\nimport { SettingsService } from '@services/services/settings-service';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { PlatformService } from '@services/platform.service';\nimport { LANGUAGES } from '@core/constants/languages.const';\n\nexport interface ISearchParams {\n    editMode?: boolean;\n    serviceId?: ServiceId;\n    serviceIdMapToUpd?: { [key in ServiceId]?: boolean } | undefined;\n    anticipatedList?: { [key in ServiceId]?: boolean } | undefined;\n    isNewService?: boolean;\n    bookedServiceId?: ServiceId;\n    forceLoader?: boolean;\n    nightChoice?: NightChoices;\n}\n\nexport interface ISearchStatus {\n    needEditRefresh: boolean;\n    searchInProgress: boolean;\n    error: any;\n    combRes: any;\n}\n\ninterface ISearchBuild extends ISearchStatus {\n    combRes: any;\n    curServiceId: ServiceId;\n    event: SearchEvents;\n    noSearch: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserSearchService implements OnDestroy {\n    public isNewCombination = false;\n\n    private searchHandler = new Subject<{ params: any; serviceSearch?: any }>();\n    private readonly searchHandlerSubscription!: Subscription;\n\n    constructor(\n        private router: Router,\n        private trazlerAPI: ApiAccessService,\n        private accSearchService: AccSearchService,\n        private flightTrainSearchService: FlightTrainSearchService,\n        private rentalSearchService: RentalSearchService,\n        private transferSearchService: TransferSearchService,\n        private tabRoutingService: TabRoutingService,\n        private listenersService: ListenersService,\n        private cartService: CartService,\n        private cartRoutingService: CartRoutingService,\n        private recentSearchService: RecentSearchService,\n        private tripPlannerService: TripPlannerService,\n        private nightChoiceService: NightChoiceService,\n        private toolsService: ToolsService,\n        private settingsService: SettingsService,\n        private inactivityHandler: InactivityHandler,\n        private checkDepService: CheckDepService,\n        private searchDataService: SearchDataService,\n        private searchMetadataService: SearchMetadataService,\n        private searchErrService: SearchErrorService,\n        private currencyService: CurrencyService,\n        private loaderService: LoaderService,\n        private platformService: PlatformService\n    ) {\n        this.searchDataService.init();\n        this.reloadServiceInfoFromStorage();\n        this.inactivityHandler.startSessionTimer(null, this.searchDataService.getCombId(), this.searchHandler);\n        this.currencyService.selectedCurrencySubject.pipe(skip(1)).subscribe(() => {\n            this.repriceCarts();\n        });\n        this.settingsService.selectedLanguageSubject.pipe(skip(1)).subscribe(() => {\n            this.repriceCarts(true);\n        });\n\n        this.searchHandlerSubscription = this.searchHandler.subscribe(\n            (searchObject: { params: any; serviceSearch?: any }) => {\n                this.search(searchObject.params, searchObject.serviceSearch);\n            }\n        );\n    }\n\n    private static setPurpose(serviceSearch: any, searchInfos: any, services: CombServiceIds, travelType: Trip) {\n        const mapRes = ToolsService.deepCopy(EngineRuleService.SERVICE_MAP[services]);\n        const searchMapInfos = EngineRuleService.getTravelMap(mapRes, searchInfos.context.services, travelType);\n        if (searchMapInfos) {\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let i = 0; i < searchMapInfos.length; i++) {\n                // eslint-disable-next-line guard-for-in\n                for (const fieldName in searchMapInfos[i]) {\n                    switch (fieldName) {\n                        case 'from':\n                        case 'to':\n                        case 'address':\n                            if (serviceSearch.searchData[fieldName]) {\n                                serviceSearch.searchData[fieldName].fieldRole = searchMapInfos[i][fieldName].fieldRole;\n                            }\n                    }\n                }\n            }\n        }\n    }\n\n    // searchCheckDep\n    // called by each service once item is added to cart\n    // move user to next relevant page\n    // serviceId just booked service Id when not isNewService\n    // nextIsSummary true when user reached current page from summary (change options/change ticket/tab click)\n    public searchCheckDep(\n        serviceId: ServiceId,\n        nextIsSummary: boolean,\n        isNewService: boolean,\n        sameTrip: boolean,\n        isValidated: boolean\n    ) {\n        if (SearchHelpers.isTransport(serviceId) && !sameTrip) {\n            // when new transport is selected we reset user night pref selection\n            this.nightChoiceService.resetNightPreference();\n        }\n        nextIsSummary = nextIsSummary && this.tabRoutingService.hasMovedToSummary();\n        let nextServiceId = serviceId;\n        if (!isNewService) {\n            if (isValidated) {\n                nextServiceId = this.tabRoutingService.setBooked(serviceId).serviceId;\n                this.tabRoutingService.setConsistent(serviceId, true, '');\n            } else {\n                nextServiceId = this.tabRoutingService.setBooked().serviceId;\n            }\n            const nextServiceId2 = this.tabRoutingService.getNextInOrder(serviceId);\n            if (nextServiceId2 !== ServiceId.INVALID) {\n                nextServiceId = nextServiceId2;\n            }\n        }\n        if (nextServiceId !== ServiceId.INVALID && nextServiceId !== ServiceId.SUMMARY) {\n            this.checkDepService\n                .checkDep(nextServiceId, false, isNewService, SearchHelpers.isPrimaryService(serviceId))\n                .then(\n                    (checkRes: any) => {\n                        console.log(checkRes);\n                        if (isNewService) {\n                            this.search({\n                                serviceId,\n                                serviceIdMapToUpd: checkRes.resetList,\n                                anticipatedList: checkRes.resetList,\n                                isNewService: true,\n                            });\n                            this.tabRoutingService.setDirtyCheckDep();\n                            return;\n                        }\n                        if (\n                            (!checkRes.resetList || !checkRes.resetList[ServiceId.ACC]) &&\n                            serviceId === ServiceId.FLIGHT &&\n                            this.nightChoiceService.requestNightArrivalCheck().askNightDate &&\n                            !this.cartService.isServicesBooked(ServiceId.ACC)\n                        ) {\n                            this.cartRoutingService.changeState(ServiceId.ACC, undefined, false, StateFrom.SUMMARY);\n                        } else {\n                            if (checkRes.toReset !== false) {\n                                this.tabRoutingService.setMovedToSummary(false);\n                                this.search({\n                                    bookedServiceId: serviceId,\n                                    serviceIdMapToUpd: checkRes.resetList,\n                                    anticipatedList: checkRes.resetList,\n                                });\n                            } else {\n                                if (\n                                    serviceId === ServiceId.FLIGHT &&\n                                    this.nightChoiceService.requestNightArrivalCheck().askNightDate &&\n                                    !this.cartService.isServicesBooked(ServiceId.ACC)\n                                ) {\n                                    this.cartRoutingService.changeState(\n                                        ServiceId.ACC,\n                                        undefined,\n                                        false,\n                                        nextIsSummary ? StateFrom.SUMMARY : StateFrom.SEARCH\n                                    );\n                                } else {\n                                    if (isValidated) {\n                                        this.search({\n                                            bookedServiceId: serviceId,\n                                        });\n                                    } else {\n                                        this.search({});\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    (error) => {\n                        console.error(error);\n                    }\n                );\n        } else {\n            this.cartRoutingService.goToState(ServiceId.SUMMARY, undefined, false, StateFrom.SEARCH);\n        }\n    }\n\n    public searchFromRoute(): Promise<any> {\n        return this.trazlerAPI.searchFromRoute().then(\n            (searchData) => this.search({}, searchData),\n            (failure) => {\n                console.error(failure);\n                return '';\n            }\n        );\n    }\n\n    // Search: Main search function used to call services with data to search on\n    // function Search(bookedServiceId, editMode, serviceId, serviceSearch, serviceIdMapToUpd) {\n    // params definition\n    //      editMode:\n    //          When no routing is true, we do not move to next service, instead we make a search\n    //          on current service Id provided (typically used for service search edit)\n    //          bookedServiceId: just booked service id, will search for next service (or go to summary)\n    //      serviceId:\n    //      bookedServiceId:\n    //          Is set to undefined when called from home page search, otherwise,\n    //          it is set with the caller serviceId. We use that field to move to\n    //          next service to work on\n    //      nightChoice:\n    //          for acc request to trigger a search with a different date\n    //      serviceIdMapToUpd:\n    //          List of services to reset\n    public search(params: ISearchParams, serviceSearch?: any): Promise<ISearchStatus> {\n        return new Promise<ISearchStatus>((searchResolve, searchReject) => {\n            let buildSearch: Promise<ISearchBuild>;\n\n            if (params.editMode) {\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_SEARCH);\n                // search from service edit bar\n                buildSearch = this.editSearchBuild(params, serviceSearch);\n            } else {\n                if (serviceSearch && params.bookedServiceId === undefined) {\n                    // new search from home page\n                    buildSearch = this.newSearchBuild(params, serviceSearch);\n                } else {\n                    // automatic search after service change/selection\n                    buildSearch = Promise.resolve(this.buildOngoingSearch(params));\n                }\n            }\n\n            if (params.bookedServiceId === undefined) {\n                this.recentSearchService.storeRecentAddress(\n                    this.searchDataService.searchInfos,\n                    this.searchDataService.searchInfos.context.services,\n                    this.searchDataService.searchInfos.context.travelType\n                );\n            }\n\n            buildSearch.then(\n                (res: ISearchBuild) => {\n                    // if no search just send data received back\n                    searchResolve(\n                        res.noSearch\n                            ? (res as ISearchStatus)\n                            : this.executeSearch(res.curServiceId, params, res.combRes, res.event)\n                    );\n                },\n                (searchStatus: ISearchBuild) => {\n                    if (searchStatus.error) {\n                        console.error(searchStatus.error);\n                    }\n                    this.loaderService.triggerLoading.emit({ loading: false });\n                    searchReject(searchStatus as ISearchStatus);\n                }\n            );\n        });\n    }\n\n    public reSearch(serviceId: ServiceId): void {\n        const lsSearchInfos = StorageManagerUtil.get('searchInfos');\n        if (lsSearchInfos) {\n            this.search(\n                {\n                    serviceId,\n                    editMode: true,\n                },\n                lsSearchInfos\n            );\n        }\n    }\n\n    public updateRentalSearch(newCal: any): void {\n        const searchInfos = this.searchDataService.getSearch(ServiceId.CAR_RENTAL);\n        const searchData = searchInfos.searchData;\n\n        if (!searchData[CalTypes.CAL_RENTAL_TYPE]) {\n            return;\n        }\n        searchData[CalTypes.CAL_RENTAL_TYPE].fromDate = newCal.fromDate;\n        searchData[CalTypes.CAL_RENTAL_TYPE].fromTime = newCal.fromTime;\n\n        const lsSearchInfos = StorageManagerUtil.get('searchInfos');\n        if (!lsSearchInfos) {\n            return;\n        }\n        const newSearch: ISSIBase = {\n            searchData,\n            context: lsSearchInfos.context,\n            passengers: searchInfos.passengers,\n        };\n\n        const editMode = !this.isHomePage();\n        if (editMode) {\n            this.searchDataService.saveServicesInfos(newSearch, ServiceId.CAR_RENTAL);\n            //this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_EXT_CHANGE);\n        } else {\n            this.listenersService.NotifyListeners(\n                ListenerId.LISTENER_UPDATE_RENTAL_CAL,\n                newSearch.searchData.rentalCal\n            );\n        }\n        if (this.platformService.isMobileDevice) {\n            this.loaderService.triggerLoading.emit({\n                loading: true,\n                textKey: 'LOADER_MESSAGES.SEARCH_OPTIONS_MOB',\n            });\n        } else {\n            this.loaderService.triggerLoading.emit({ loading: true, textKey: 'LOADER_MESSAGES.SEARCH_OPTIONS' });\n        }\n        this.search(\n            {\n                editMode,\n                serviceId: ServiceId.CAR_RENTAL,\n            },\n            newSearch\n        );\n    }\n\n    ngOnDestroy(): void {\n        if (this.searchHandlerSubscription) {\n            this.searchHandlerSubscription.unsubscribe();\n        }\n    }\n\n    private repriceCarts(updateLang = false): void {\n        this.cartService.reprice(this.searchDataService.getCombId(), updateLang).finally(() => {\n            this.listenersService.NotifyListeners(ListenerId.LISTEN_REPRICED, true);\n        });\n    }\n\n    private handleNewCombinationSettings(params: any, searchInfos: any, combRes: any) {\n        console.log('before res is:', combRes);\n        this.searchDataService.setCombId(combRes.combId);\n        this.searchDataService.saveInfos(searchInfos, true);\n        this.inactivityHandler.sessionTimer(\n            combRes.combTimeout,\n            this.searchDataService.getCombId(),\n            this.searchHandler\n        );\n        this.tabRoutingService.initRouting(searchInfos.context.services, true);\n        params.isNewCombi = true;\n    }\n\n    private handleNormalMode(params: any, combRes: any, services: CombServiceIds): ISearchBuild {\n        this.searchPoller(\n            combRes.combId,\n            true,\n            SearchHelpers.getServicesListMap(services, ServiceId.INVALID),\n            combRes.refId\n        );\n        params.refId = combRes.refId;\n        return {\n            curServiceId: this.tabRoutingService.setNext().serviceId,\n            event: SearchEvents.EVENT_SEARCH,\n        } as ISearchBuild;\n    }\n\n    private handleFastMode(combRes: any, services: CombServiceIds) {\n        return this.cartService.reInit().then(\n            () => {\n                this.tripPlannerService.clear(combRes.combId);\n                this.searchMetadataService.fillFastRunMeta();\n                if (combRes.results.metaData.complete) {\n                    this.tripPlannerService.setComplete(combRes.results.metaData.serviceId);\n                }\n                this.searchMetadataService.saveSearch(combRes.results, SearchEvents.EVENT_TRIP_PLANNER);\n\n                this.searchPoller(\n                    combRes.combId,\n                    true,\n                    SearchHelpers.getServicesListMap(services, combRes.results.metaData.serviceId),\n                    combRes.refId\n                );\n                return {\n                    combRes,\n                    curServiceId: ServiceId.SUMMARY,\n                    event: SearchEvents.EVENT_SEARCH,\n                } as ISearchBuild;\n            },\n            (error: any) => {\n                console.log(error);\n                return {\n                    needEditRefresh: false,\n                    searchInProgress: false,\n                    error,\n                } as ISearchBuild;\n            }\n        );\n    }\n\n    private newSearchBuild(params: any, serviceSearch: any): Promise<ISearchBuild> {\n        this.nightChoiceService.resetNightPreference();\n        if (this.isNewCombination) {\n            console.log('double search prevented');\n            return new Promise<ISearchBuild>((resolve, reject) => {\n                reject({\n                    needEditRefresh: false,\n                    searchInProgress: false,\n                    error: null,\n                } as ISearchStatus);\n            });\n        }\n        let searchInfos = this.searchDataService.searchInfos;\n\n        this.isNewCombination = true;\n        serviceSearch.context.runningMode = this.searchDataService.RUN_NORMAL;\n        // initial search from home page, we create the combination\n        this.searchDataService.cleanUpSearch(serviceSearch.searchData, serviceSearch.context.services);\n        UserSearchService.setPurpose(\n            serviceSearch,\n            searchInfos,\n            serviceSearch.context.services,\n            this.searchDataService.travelType\n        );\n        searchInfos = ToolsService.deepCopy(serviceSearch);\n        this.searchDataService.resetSearchServiceInfos();\n\n        return new Promise<ISearchBuild>((resolve, reject) => {\n            this.trazlerAPI\n                .newCombination(searchInfos, searchInfos.context.runningMode === this.searchDataService.RUN_FAST)\n                .then(\n                    (combRes: any) => {\n                        this.handleNewCombinationSettings(params, searchInfos, combRes);\n\n                        if (searchInfos.context.runningMode !== this.searchDataService.RUN_FAST) {\n                            resolve(this.handleNormalMode(params, combRes, searchInfos.context.services));\n                        } else {\n                            this.handleFastMode(combRes, searchInfos.context.services).then(\n                                (res) => resolve(res),\n                                (res: ISearchBuild) => reject(res)\n                            );\n                        }\n                    },\n                    (error: any) => {\n                        this.isNewCombination = false;\n                        console.log(error);\n                        reject({\n                            needEditRefresh: false,\n                            searchInProgress: false,\n                            error,\n                        } as ISearchStatus);\n                    }\n                );\n        });\n    }\n\n    private buildOngoingSearch(params: any): ISearchBuild {\n        let curService;\n        let curServiceId: ServiceId;\n\n        if (params.bookedServiceId !== undefined) {\n            curService = this.tabRoutingService.setBooked(params.bookedServiceId);\n            curServiceId = curService.serviceId;\n        } else {\n            if (params.serviceId === undefined) {\n                curServiceId = this.tabRoutingService.setNext().serviceId;\n            } else {\n                curServiceId = params.serviceId;\n            }\n            curService = this.tabRoutingService.getServiceInfos(curServiceId);\n        }\n        if (curService.booked && !curService.consistent) {\n            if (this.cartService.isServicesBooked(curServiceId)) {\n                this.cartRoutingService.goToState(ServiceId.SUMMARY, undefined, false, StateFrom.SEARCH);\n            } else {\n                this.cartRoutingService.changeState(curService.serviceId, undefined, false, StateFrom.SEARCH);\n            }\n            return {\n                needEditRefresh: false,\n                searchInProgress: false,\n                curServiceId,\n                event: SearchEvents.EVENT_SEARCH,\n                noSearch: true,\n            } as ISearchBuild;\n        }\n        // check it is not summary or bookingOptions id\n        if (curServiceId !== ServiceId.BOOKING && curServiceId !== ServiceId.SUMMARY) {\n            let serviceListMap: any = {};\n            if (params.serviceIdMapToUpd) {\n                serviceListMap = params.serviceIdMapToUpd;\n            }\n            serviceListMap[curServiceId] = true;\n            params.refId = this.searchPoller(this.searchDataService.getCombId(), false, serviceListMap);\n        }\n\n        return {\n            curServiceId,\n            event: SearchEvents.EVENT_SEARCH,\n        } as ISearchBuild;\n    }\n\n    private executeSearch(curServiceId: ServiceId, params: any, combRes: any, event: SearchEvents): ISearchStatus {\n        const searchInfos = this.searchDataService.searchInfos;\n        this.isNewCombination = false;\n\n        console.log('search service:' + curServiceId);\n\n        const reqParams = {\n            editMode: params.editMode,\n            toReset: params.serviceIdMapToUpd,\n            refId: params.refId,\n            isNewCombi: params.isNewCombi,\n            isNewService: params.isNewService,\n            nightChoice: params.nightChoice ? params.nightChoice : 0,\n            forceLoader: params.forceLoader,\n            forceResultPage: params.forceResultPage,\n        };\n        this.tabRoutingService.setConsistent(curServiceId, true, '');\n        switch (curServiceId) {\n            case ServiceId.ACC:\n                this.accSearchService.SearchAcc(undefined, event, searchInfos.context.services, reqParams);\n                break;\n            case ServiceId.FLIGHT:\n            case ServiceId.TRAIN:\n            case ServiceId.FLIGHT_TRAIN:\n                this.flightTrainSearchService.searchFlightTrain(\n                    undefined,\n                    event,\n                    searchInfos.context.services,\n                    reqParams\n                );\n                break;\n            case ServiceId.CAR_RENTAL:\n                this.rentalSearchService.SearchRental(\n                    undefined,\n                    event,\n                    searchInfos.context.services,\n                    reqParams,\n                    this.updateRentalSearch.bind(this)\n                );\n                break;\n            case ServiceId.TRANSFER:\n                this.transferSearchService.searchTransfers(undefined, event, searchInfos.context.services, reqParams);\n                break;\n            case ServiceId.SUMMARY:\n                if (\n                    searchInfos.context.runningMode === this.searchDataService.RUN_FAST &&\n                    combRes.length > 0 &&\n                    combRes[0].results.metaData.count === 0\n                ) {\n                    this.searchErrService.searchErr(\n                        {\n                            status: 400,\n                            message: '',\n                        },\n                        ServiceId.SUMMARY,\n                        SearchEvents.EVENT_SEARCH_WEB\n                    );\n                    return {\n                        needEditRefresh: false,\n                        searchInProgress: false,\n                        error: 'no result in fast mode',\n                    } as ISearchStatus;\n                }\n                this.cartRoutingService.goToState(ServiceId.SUMMARY, undefined, false, StateFrom.SEARCH);\n                this.searchDataService.setFastSearch(false);\n                break;\n            case ServiceId.BOOKING:\n                this.router.navigate(['/search']);\n                break;\n            default:\n                console.error('unknown service to move to');\n                return {\n                    needEditRefresh: params.editMode,\n                    searchInProgress: false,\n                    error: 'unknown service to move to',\n                } as ISearchStatus;\n        }\n\n        return {\n            needEditRefresh: false,\n            searchInProgress: true,\n            error: null,\n        } as ISearchStatus;\n    }\n\n    private editSearchBuild(params: any, serviceSearch: any): Promise<ISearchBuild> {\n        // user updated edit data, we search with these new information\n        const curServiceId = params.serviceId;\n        if (curServiceId === ServiceId.FLIGHT_TRAIN || curServiceId === ServiceId.ACC) {\n            this.nightChoiceService.resetNightPreference();\n        }\n        const searchInfos = this.searchDataService.searchInfos;\n\n        UserSearchService.setPurpose(\n            serviceSearch,\n            searchInfos,\n            this.searchDataService.mapServiceIdToVal[curServiceId],\n            searchInfos.context.travelType\n        );\n        serviceSearch.context.services = searchInfos.context.services;\n\n        console.log(this.searchDataService.getDataId(curServiceId), 'Data id for updating');\n\n        return new Promise<ISearchBuild>((resolve, reject) => {\n            this.checkDepService.checkUpdCombination(curServiceId, serviceSearch).then(\n                (checkRes: any) => {\n                    if (checkRes.toReset !== false) {\n                        this.trazlerAPI\n                            .updServiceSearch(\n                                this.searchDataService.getCombId(),\n                                this.searchDataService.getDataId(curServiceId),\n                                curServiceId,\n                                false,\n                                serviceSearch\n                            )\n                            .then(() => {\n                                this.tabRoutingService.setMovedToSummary(false);\n                                // eslint-disable-next-line @typescript-eslint/prefer-for-of\n                                for (let i = 0; i < checkRes.preCheckInconsistent.length; i++) {\n                                    this.tabRoutingService.setConsistent(\n                                        checkRes.preCheckInconsistent[i].serviceId,\n                                        false,\n                                        checkRes.preCheckInconsistent[i].infos\n                                    );\n                                }\n\n                                this.searchDataService.saveServicesInfos(serviceSearch, curServiceId);\n                                this.recentSearchService.storeRecentAddress(\n                                    serviceSearch,\n                                    this.searchDataService.mapServiceIdToVal[curServiceId],\n                                    searchInfos.context.travelType\n                                );\n                                checkRes.resetList[curServiceId] = true;\n                                params.refId = this.searchPoller(\n                                    this.searchDataService.getCombId(),\n                                    false,\n                                    checkRes.resetList\n                                );\n                                params.serviceIdMapToUpd = checkRes.resetList;\n                                resolve({\n                                    curServiceId,\n                                    event: SearchEvents.EVENT_SEARCH_EDIT,\n                                } as ISearchBuild);\n                            });\n                    } else {\n                        // rollback edit search content\n                        this.searchDataService.reloadTravelType();\n                        this.reloadServiceInfoFromStorage();\n                        //this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_EXT_CHANGE);\n                        this.loaderService.skeletonLoading = false;\n                        reject({\n                            needEditRefresh: true,\n                            searchInProgress: false,\n                            error: null,\n                        } as ISearchStatus);\n                    }\n                },\n                (error: any) => {\n                    this.reloadServiceInfoFromStorage();\n                    //this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_EXT_CHANGE);\n                    reject({\n                        needEditRefresh: true,\n                        searchInProgress: false,\n                        error,\n                    } as ISearchStatus);\n                }\n            );\n        });\n    }\n\n    private hdlPollerErr() {\n        console.log('poller on error callback called');\n        return this.searchMetadataService.fillFastRunMeta().then(() => {\n            this.cartService.reInit(true).then(\n                () => {\n                    this.tabRoutingService.refreshBookingStatus();\n                    this.tripPlannerService.reInit(\n                        this.searchDataService.getCombId(),\n                        this.searchDataService.getAllSearchResults()\n                    );\n                },\n                (failure: any) => {\n                    console.log(failure);\n                    this.tripPlannerService.reInit(\n                        this.searchDataService.getCombId(),\n                        this.searchDataService.getAllSearchResults()\n                    );\n                }\n            );\n        });\n    }\n\n    /*private cleanUpAddresses(searchData: any, def: any) {\n        const validField: any = {};\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < def.length; i++) {\n            // eslint-disable-next-line guard-for-in\n            for (const field in def[i]) {\n                validField[field] = true;\n            }\n        }\n        // eslint-disable-next-line guard-for-in\n        for (const k in searchData) {\n            if (!searchData[k]) {\n                continue;\n            }\n            switch (k) {\n                case 'from':\n                case 'to':\n                case 'address':\n                case 'meetingAddress':\n                    if (!validField[k]) {\n                        searchData[k] = {};\n                    }\n            }\n        }\n    }*/\n\n    private searchPoller(combId: CombinationId, isNewCombi: boolean, anticipatedList: any, refId?: string) {\n        return this.tripPlannerService.poller(combId, isNewCombi, anticipatedList, this.hdlPollerErr.bind(this), refId);\n    }\n\n    private reloadServiceInfoFromStorage(): void {\n        if (this.searchDataService.searchInfos.context) {\n            this.tabRoutingService.initRouting(this.searchDataService.searchInfos.context.services, false);\n        }\n\n        if (this.searchDataService.searchInfos.combId !== '') {\n            this.checkDepService.reCheckDep();\n        }\n    }\n\n    private isHomePage(): boolean {\n        return this.router.url === '/search';\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Currency } from '@schemas/modules/core/currency';\nimport { BehaviorSubject } from 'rxjs';\nimport { StorageKeys } from '@schemas/modules/core/storage-keys';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CurrencyService {\n    private readonly defaultCurCode = 'EUR';\n    private readonly allowedCurrencies: {\n        [key in string]: Currency;\n    } = {\n        EUR: {\n            code: 'EUR',\n            name: 'Euro',\n            trazlerSymbol: '€',\n            symbol: '€',\n            selectedLable: '€ EUR',\n        },\n        USD: {\n            code: 'USD',\n            name: 'US dollar',\n            trazlerSymbol: 'US$',\n            symbol: '$',\n            selectedLable: '$ USD',\n        },\n    };\n\n    private readonly selectedCur: BehaviorSubject<Currency>;\n\n    constructor() {\n        this.selectedCur = this.initCurrency();\n    }\n\n    get currencyCode(): string {\n        return this.selectedCur.getValue().code;\n    }\n\n    get currency(): Currency {\n        return this.selectedCur.getValue();\n    }\n\n    get selectedCurrencySubject(): BehaviorSubject<Currency> {\n        return this.selectedCur;\n    }\n\n    get currencies(): Currency[] {\n        const data: Currency[] = [];\n        for (const curCode in this.allowedCurrencies) {\n            if (this.allowedCurrencies[curCode]) {\n                data.push(this.allowedCurrencies[curCode]);\n            }\n        }\n        return data;\n    }\n\n    // set current cur as cur provided, default cur if no newCur provided\n    public setCurrency(curCode?: string) {\n        if (!curCode) {\n            curCode = this.defaultCurCode;\n        }\n\n        if (curCode === this.currencyCode) {\n            return;\n        }\n\n        const cur = this.allowedCurrencies[curCode];\n        if (cur) {\n            StorageManagerUtil.set(StorageKeys.CURRENCY_CODE, cur.code);\n            this.selectedCur.next(cur);\n        }\n    }\n\n    public setCartCurrency(curCode: string): void {\n        StorageManagerUtil.set('cartCurrency', curCode);\n        this.setCurrency(curCode);\n    }\n\n    private initCurrency(): BehaviorSubject<Currency> {\n        let curCode = StorageManagerUtil.get(StorageKeys.CURRENCY_CODE);\n        if (!curCode) {\n            curCode = this.defaultCurCode;\n        }\n\n        const cartCur = StorageManagerUtil.get('cartCurrency');\n        if (cartCur !== null && cartCur !== '') {\n            curCode = cartCur;\n        }\n\n        return new BehaviorSubject(this.allowedCurrencies[curCode]);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { SearchErrorService } from '@services/searchEngine/services/search-error-service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { SearchEvents } from '@core/constants/search-events';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { PreSearchService } from '@services/modules/core/dataservices/pre-search.service';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface IHasTransport {\n    has: boolean | null;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FlightTrainSearchService {\n    public searchComplete: any = {};\n    public twoTransports: BehaviorSubject<IHasTransport> = new BehaviorSubject({ has: null } as IHasTransport);\n\n    private states: any = {};\n\n    private waitedServiceId: number | undefined;\n\n    private readonly resultData: any = {\n        [ServiceId.FLIGHT]: {},\n        [ServiceId.TRAIN]: {},\n    };\n\n    constructor(\n        private router: Router,\n        private apiAccessService: ApiAccessService,\n        private searchMetadataService: SearchMetadataService,\n        private listenersService: ListenersService,\n        private cartService: CartService,\n        private tripPlannerService: TripPlannerService,\n        private searchDataService: SearchDataService,\n        private searchErrorService: SearchErrorService,\n        private cartRoutingService: CartRoutingService,\n        private loaderService: LoaderService,\n        private preSearchService: PreSearchService\n    ) {\n        this.init();\n    }\n\n    // help private to send back the reverse of current service id (if train send flight and reverse)\n    private static reverseId(serviceId: ServiceId): ServiceId.FLIGHT | ServiceId.TRAIN {\n        return serviceId === ServiceId.TRAIN ? ServiceId.FLIGHT : ServiceId.TRAIN;\n    }\n\n    // Based on the search parameter check the preferred service result to show\n    private static checkPreference(serviceSearch: any, serviceId: ServiceId) {\n        const from = serviceSearch.searchData.from;\n        const to = serviceSearch.searchData.to;\n        if (serviceId === ServiceId.TRAIN) {\n            return (\n                from.placeType === 'TRAIN' ||\n                ((from.placeType === 'CITY' || from.placeType === '') && to.placeType === 'TRAIN')\n            );\n        }\n        // Always flight has first priority, check whether it is other than train\n        return (\n            from.placeType !== 'TRAIN' &&\n            !((from.placeType === 'CITY' || from.placeType === '') && to.placeType === 'TRAIN')\n        );\n    }\n\n    public searchFlightTrain(serviceSearch: any, eventId: SearchEvents, combRef: any, params: any) {\n        this.searchDataService.saveResult(ServiceId.FLIGHT, null);\n        this.searchDataService.saveResult(ServiceId.TRAIN, null);\n        const waitedServiceId =\n            eventId === SearchEvents.EVENT_SEARCH\n                ? -1\n                : this.router.url === this.states[ServiceId.TRAIN]\n                ? ServiceId.TRAIN\n                : ServiceId.FLIGHT;\n        this.resetSearchComplete(waitedServiceId);\n\n        //this.listenersService.NotifyListeners(ListenerId.LISTEN_PROGRESS_BAR, true);\n        this.search(ServiceId.FLIGHT, serviceSearch, eventId, combRef, params);\n        this.search(ServiceId.TRAIN, serviceSearch, eventId, combRef, params);\n    }\n\n    public hasResults(serviceId: ServiceId): boolean {\n        const prevRes = this.searchDataService.getSearchResult(serviceId);\n        return !!(prevRes && prevRes.resultLength > 0);\n    }\n\n    public setData(data: any, serviceId: number): void {\n        this.resetData();\n        data.forEach((obj: any) => {\n            if (!this.resultData[serviceId][obj.id]) {\n                this.resultData[serviceId][obj.id] = obj;\n            } else {\n                console.error('Duplicated data for:' + obj.id);\n            }\n        });\n    }\n\n    public hasTwoTransport(): IHasTransport {\n        return this.twoTransports.getValue();\n    }\n\n    private hasNullResults(serviceId: ServiceId): boolean {\n        return this.searchDataService.getSearchResult(serviceId) === null;\n    }\n\n    private resetData(): void {\n        this.resultData[ServiceId.FLIGHT] = {};\n        this.resultData[ServiceId.TRAIN] = {};\n    }\n\n    private resetSearchComplete(waitedId: ServiceId) {\n        this.searchComplete[ServiceId.FLIGHT] = false;\n        this.searchComplete[ServiceId.TRAIN] = false;\n        this.twoTransports.next({ has: null });\n        this.waitedServiceId = waitedId;\n    }\n\n    private allCompleted() {\n        return this.searchComplete[ServiceId.FLIGHT] && this.searchComplete[ServiceId.TRAIN];\n    }\n\n    private setTransportHas() {\n        if (this.hasNullResults(ServiceId.FLIGHT) || this.hasNullResults(ServiceId.TRAIN)) {\n            this.twoTransports.next({ has: null });\n        } else {\n            this.twoTransports.next({ has: this.hasResults(ServiceId.FLIGHT) && this.hasResults(ServiceId.TRAIN) });\n        }\n    }\n\n    private initSearchComplete(): void {\n        // @Todo: Check if result length is zero also we are marking not complete. Have to validate\n        this.searchComplete[ServiceId.FLIGHT] = !this.hasNullResults(ServiceId.FLIGHT);\n        this.searchComplete[ServiceId.TRAIN] = !this.hasNullResults(ServiceId.TRAIN);\n        this.setTransportHas();\n    }\n\n    private init(): void {\n        this.resetSearchComplete(-1);\n        this.initSearchComplete();\n        this.states[ServiceId.TRAIN] = '/travel/trains';\n        this.states[ServiceId.FLIGHT] = '/travel/flights';\n        this.states[ServiceId.FLIGHT_TRAIN] = '/travel/flights';\n    }\n\n    private isTransportState(): boolean {\n        return (\n            this.router.url.indexOf(this.states[ServiceId.TRAIN]) >= 0 ||\n            this.router.url.indexOf(this.states[ServiceId.FLIGHT]) >= 0\n        );\n    }\n\n    private checkRes(serviceSearch: any, metaData: any): ServiceId {\n        if (FlightTrainSearchService.checkPreference(serviceSearch, metaData.serviceId)) {\n            return metaData.serviceId;\n        }\n        const id = FlightTrainSearchService.reverseId(metaData.serviceId);\n        if (this.allCompleted() && !this.hasResults(id)) {\n            return metaData.serviceId;\n        }\n        return -1;\n    }\n\n    private checkZeroRes(serviceId: ServiceId, statusCode: number) {\n        this.setTransportHas();\n        if (!this.allCompleted()) {\n            return -1;\n        }\n        if (!this.hasResults(ServiceId.FLIGHT) && !this.hasResults(ServiceId.TRAIN)) {\n            // no result for previous result, we stay where we are\n            if (this.router.url === '/search') {\n                this.searchErrorService.searchErr(\n                    {\n                        status: statusCode,\n                        message: '',\n                    },\n                    ServiceId.FLIGHT,\n                    SearchEvents.EVENT_SEARCH_WEB\n                );\n                /*setTimeout(\n                    () => {\n                        this.searchErrorService.searchErr(\n                            {\n                                status: statusCode,\n                                message: '',\n                            },\n                            ServiceId.FLIGHT,\n                            SearchEvents.EVENT_SEARCH_WEB\n                        );\n                    },\n                    1000,\n                    false\n                );*/\n            } else {\n                /*this.listenersService.NotifyListeners(ListenerId.LISTEN_NO_RESULT, {\n                    addService: this.router.url === '/results/results-summary',\n                    serviceId: ServiceId.FLIGHT_TRAIN,\n                    status: statusCode,\n                    message: '',\n                });*/\n                this.searchErrorService.searchErr(\n                    {\n                        status: statusCode,\n                        message: '',\n                    },\n                    ServiceId.FLIGHT,\n                    SearchEvents.EVENT_SEARCH_WEB\n                );\n            }\n            this.listenersService.NotifyListeners(ListenerId.RESET_SEARCH_DATA, true);\n            this.tripPlannerService.setComplete(ServiceId.FLIGHT);\n            this.tripPlannerService.setComplete(ServiceId.TRAIN);\n            return -1;\n        }\n        // we change state there is no result for current one\n        return FlightTrainSearchService.reverseId(serviceId);\n    }\n\n    private onTravelSearchSuccess(metaData: any, eventId: any, serviceSearch: any, forceResultPage: boolean): any {\n        let moveToServiceId = -1;\n\n        if (eventId === SearchEvents.EVENT_SEARCH) {\n            // we searched from home page or from combination we need to move to first service with results\n            if (metaData.count > 0) {\n                moveToServiceId = this.checkRes(serviceSearch, metaData);\n            } else {\n                moveToServiceId = this.checkZeroRes(metaData.serviceId, 200);\n            }\n        } else {\n            if (!forceResultPage && !this.isTransportState()) {\n                // user change state, do not move somewhere else\n                return;\n            }\n            // we search from edit, we stay on current state unless there is no result for it\n            if (metaData.count > 0) {\n                moveToServiceId = this.checkRes(serviceSearch, metaData);\n            } else {\n                moveToServiceId = this.checkZeroRes(metaData.serviceId, 200);\n            }\n        }\n\n        if (moveToServiceId === -1) {\n            return -1;\n        }\n\n        if (this.router.url !== this.states[moveToServiceId]) {\n            this.cartRoutingService.goToState(moveToServiceId, undefined, true, StateFrom.SUMMARY);\n            return;\n        }\n        // we refresh current service data\n        switch (moveToServiceId) {\n            case ServiceId.FLIGHT:\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_FLIGHT, true);\n                break;\n            case ServiceId.TRAIN:\n                this.listenersService.NotifyListeners(ListenerId.LISTEN_EDIT_TRAIN, true);\n                break;\n            default:\n                console.error('unhandled service id:' + moveToServiceId);\n        }\n    }\n\n    private search(serviceId: ServiceId, serviceSearch: any, eventId: any, combRef: any, params: any) {\n        console.log('starting search for transport;' + serviceId);\n        params.id = this.searchDataService.getCombId();\n        params.serviceId = serviceId;\n        this.preSearchService.preSearchData(params, serviceSearch, eventId).then(\n            (success: any) => {\n                console.log('getting success for transport:' + serviceId);\n                this.searchComplete[serviceId] = true;\n                this.setTransportHas();\n                /*this.searchMetadataService.saveSearch(success);\n                if (success.metaData.complete) {\n                    this.tripPlannerService.setComplete(success.metaData.serviceId);\n                }*/\n                if (\n                    this.onTravelSearchSuccess(\n                        success.metaData,\n                        eventId,\n                        success.serviceSearch,\n                        params.forceResultPage\n                    ) === -1\n                ) {\n                    if (this.allCompleted() && !this.isTransportState()) {\n                        if (eventId !== SearchEvents.EVENT_SEARCH) {\n                            if (this.router.url === '/results-summary') {\n                                this.cartRoutingService.goToState(ServiceId.FLIGHT, undefined, true, StateFrom.SUMMARY);\n                            } else if (this.router.url !== '/search') {\n                                this.cartRoutingService.goToState(ServiceId.FLIGHT, undefined, true, StateFrom.SEARCH);\n                            }\n                        } else {\n                            this.loaderService.triggerLoading.emit({ loading: false });\n                        }\n                    }\n                } else {\n                    this.searchErrorService.unsetErrorFlag();\n                }\n            },\n            (error: any) => {\n                console.log('getting failure for transport;' + serviceId);\n                this.searchComplete[serviceId] = true;\n                this.twoTransports.next({ has: false });\n                //this.tripPlannerService.setComplete(serviceId); // on error set result is completed\n                if (this.allCompleted()) {\n                    console.log('getting all transport completed');\n                    const state = this.checkZeroRes(serviceId, error.status);\n                    if (state === -1 && this.router.url !== '/search') {\n                        this.cartRoutingService.goToState(ServiceId.FLIGHT, undefined, true, StateFrom.SUMMARY);\n                    }\n                }\n                console.log(`ERROR:${serviceId}`, error);\n\n                //this.loaderService.triggerLoading.emit({ loading: false });\n            }\n        );\n    }\n}\n","import { LOCALE_ID, Provider } from '@angular/core';\nimport { LocaleService } from './locale.service';\n\nexport class LocaleId extends String {\n    constructor(private localeService: LocaleService) {\n        super();\n    }\n\n    public override toString(): string {\n        return this.localeService.currentLocale;\n    }\n\n    public override valueOf(): string {\n        return this.toString();\n    }\n}\n\nexport const LocaleProvider: Provider = {\n    provide: LOCALE_ID,\n    useClass: LocaleId,\n    deps: [LocaleService],\n};\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouteReuseStrategy } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { noop } from 'rxjs';\nimport { SettingsService } from '@services/services/settings-service';\n\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LocaleService {\n    constructor(private router: Router, private settingsService: SettingsService) {}\n\n    get currentLocale(): string {\n        return this.settingsService.langCode;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DialogService } from '@services/dialog.service';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { environment } from '@environments/environment';\nimport { CustomerInfo } from '@shared/schemas/tz-customer-info';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalService } from '@services/modal.service';\nimport { ValidatorPatterns } from '@core/constants/validation-patterns.const';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LogInService {\n    constructor(\n        private trazlerAPI: ApiAccessService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private userService: UserService\n    ) {}\n\n    public static createLoginForm(): FormGroup {\n        return new FormGroup({\n            emailID: new FormControl('', [Validators.required, Validators.pattern(ValidatorPatterns.EMAIL)]),\n            password: new FormControl('', [\n                Validators.required,\n                Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$'),\n            ]),\n        });\n    }\n\n    public static guid(): string {\n        const getRd = () =>\n            Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n\n        return getRd() + getRd() + '-' + getRd() + '-' + getRd() + '-' + getRd() + '-' + getRd() + getRd() + getRd();\n    }\n\n    public loginWithSocialMedia(media: string, activeModal: NgbActiveModal | ModalService) {\n        const dataKey = LogInService.guid();\n        this.trazlerAPI.GenerateLoginToken(dataKey).then(\n            (data: string) => {\n                StorageManagerUtil.set('trazler_socialLogin_token', dataKey, true);\n                StorageManagerUtil.set('trazler_socialLogin_close_window', 'true', true);\n\n                const serverUrl = `${\n                    environment.baseUrl\n                }/socialMediaAuth/${media}?time=${new Date().getMilliseconds()}&host=${\n                    environment.uiUrl\n                }/&dataKey=${dataKey}&loginToken=${data}`;\n\n                const popupWinWidth = screen.width > 600 ? 600 : screen.width;\n                const popupWinHeight = 500;\n                const left = (screen.width - popupWinWidth) / 2;\n                const top = (screen.height - popupWinHeight) / 4;\n                const win = window.open(\n                    serverUrl,\n                    'popup',\n                    'left=' +\n                        left +\n                        ',top=' +\n                        top +\n                        ',menubar=no,status=no,titlebar=yes,toolbar=no,scrollbars=no,location=no,width=' +\n                        popupWinWidth +\n                        ',height=' +\n                        popupWinHeight\n                );\n\n                const timer = setInterval(() => {\n                    if (!win) {\n                        clearInterval(timer);\n                        return;\n                    }\n\n                    if (win.closed) {\n                        this.makeSignInForSocialMedia(activeModal);\n                        StorageManagerUtil.remove('trazler_socialLogin_close_window');\n                        clearInterval(timer);\n                    }\n                }, 1000);\n            },\n            (err) => {\n                console.log('Login token error: ', err);\n            }\n        );\n    }\n\n    public proceedSignIn(\n        signIn: boolean,\n        customer: { emailID: string; password: string },\n        activeModal: NgbActiveModal | ModalService\n    ): Promise<any> {\n        if (signIn) {\n            return this.signIn(customer, activeModal);\n        }\n\n        return this.registerAccount(customer, activeModal);\n    }\n\n    private makeSignInForSocialMedia(activeModal: NgbActiveModal | ModalService): void {\n        const socialLoginToken = StorageManagerUtil.get('trazler_socialLogin_token', true);\n        if (socialLoginToken === null) {\n            return;\n        }\n        StorageManagerUtil.remove('trazler_socialLogin_token');\n\n        this.trazlerAPI.SocialMediaSignIn(socialLoginToken).then(\n            (resp: { token: string; customer: CustomerInfo }) => {\n                StorageManagerUtil.set('trazler_customer_token', resp.token, true);\n                this.userService.getCustomer(true);\n                if (activeModal instanceof NgbActiveModal) {\n                    activeModal.close(resp.customer);\n                } else {\n                    activeModal.dismiss(resp.customer);\n                }\n            },\n            (err) => {\n                console.log('Auth error: ', err);\n            }\n        );\n    }\n\n    private signIn(customer: { emailID: string; password: string }, activeModal: NgbActiveModal | ModalService) {\n        const signIn = this.trazlerAPI.SignIn(customer);\n        signIn.then(\n            (data: { token: string }) => {\n                StorageManagerUtil.set('trazler_customer_token', data.token, true);\n\n                this.userService.getCustomer(true).then(\n                    (customerInfo: CustomerInfo) => {\n                        if (activeModal instanceof NgbActiveModal) {\n                            activeModal.close(customerInfo);\n                        } else {\n                            activeModal.dismiss(customerInfo);\n                        }\n                    },\n                    (err: any) => {\n                        console.log('Error fetching customer info: ', err);\n                    }\n                );\n            },\n            (err) => {\n                console.log('Auth error: ', err);\n            }\n        );\n        return signIn;\n    }\n\n    private registerAccount(\n        customer: { emailID: string; password: string },\n        activeModal: NgbActiveModal | ModalService\n    ) {\n        const register = this.trazlerAPI.Register(customer);\n        register.then(\n            () => {\n                activeModal.dismiss({} as CustomerInfo);\n                this.dialogService.openConfirmationDialog({\n                    title: this.translateService.instant('POPUPS.REGISTRATION_MAIL.TITLE'),\n                    multipleContent: [\n                        this.translateService.instant('POPUPS.REGISTRATION_MAIL.BODY', {\n                            emailaddr: customer.emailID,\n                        }),\n                    ],\n                    confirmBtnTitle: this.translateService.instant('POPUPS.REGISTRATION_MAIL.BTN'),\n                    icon: { name: 'registration-dialog', iconStyle: { 'width.px': 55.5, 'height.px': 55.49 } },\n                });\n            },\n            (err) => {\n                console.log('Auth error: ', err);\n            }\n        );\n\n        return register;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { StorageKeys } from '@schemas/modules/core/storage-keys';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\nimport { LANGUAGES } from '@core/constants/languages.const';\nimport { ILanguage } from '@schemas/modules/core/ILanguage';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CurrencyService } from './currency-service';\nimport { EN_LOCALE } from '@core/utils/locales/en';\nimport { FR_LOCALE } from '@core/utils/locales/fr';\nimport { EN_US_LOCALE } from '@core/utils/locales/en-us';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService {\n    private readonly selectedLanguage: BehaviorSubject<ILanguage>;\n    private deviceId: string | undefined | null;\n    // in discover mode we cannot book\n    // user is currently viewing search results shared\n    // we move to non discover mode when edit search is used\n    private discoverMode = false;\n    private xsfrToken = '';\n\n    private appLocales: any = {\n        'en-gb': EN_LOCALE,\n        'fr-fr': FR_LOCALE,\n        'en-us': EN_US_LOCALE,\n    };\n\n    /*private readonly defaultCur: Currency = {\n        code: 'EUR',\n        symbol: '€',\n        name: 'Euro',\n        trazlerSymbol: '€',\n    };*/\n\n    constructor(private translateService: TranslateService, private currencyService: CurrencyService) {\n        this.selectedLanguage = this.initLanguage();\n        this.getDeviceID();\n        if (this.deviceId && this.deviceId.indexOf('nb_ID') === 0) {\n            this.discoverMode = true;\n        }\n    }\n\n    get langCode(): string {\n        return this.selectedLanguage.getValue().code;\n    }\n\n    get locales(): any {\n        return this.appLocales[this.i18nCode];\n    }\n\n    get isDiscoverMode(): boolean {\n        return this.discoverMode;\n    }\n\n    get i18nCode(): string {\n        return this.selectedLanguage.getValue().i18nCode;\n    }\n\n    get selectedLanguageObject(): ILanguage {\n        return this.selectedLanguage.getValue();\n    }\n\n    get selectedLanguageSubject(): BehaviorSubject<ILanguage> {\n        return this.selectedLanguage;\n    }\n\n    public static getIpCountry() {\n        const ipTzCountry = StorageManagerUtil.get('ip_country');\n        return ipTzCountry ? ipTzCountry : {};\n    }\n\n    public getCurrency(): string {\n        return this.currencyService.currencyCode;\n    }\n\n    public getDeviceID(): string {\n        if (this.deviceId) {\n            return this.deviceId;\n        }\n        const queryParams = new URLSearchParams(window.location.search);\n\n        const deviceId = queryParams.get('deviceId');\n        if (deviceId) {\n            this.storeDeviceId({ deviceID: deviceId });\n            return deviceId;\n        }\n        const deviceID = StorageManagerUtil.get('deviceId', true);\n        if (deviceID !== null) {\n            this.setDeviceId(deviceID);\n            return deviceID;\n        }\n\n        return '';\n    }\n\n    public setDeviceId(deviceId: string, discoverMode?: boolean) {\n        this.discoverMode = !!discoverMode;\n        this.deviceId = deviceId;\n    }\n\n    public storeDeviceId(response: any) {\n        StorageManagerUtil.set('deviceId', response.deviceID, true);\n        StorageManagerUtil.set('xsfrToken', response.xsfrToken, true);\n        this.xsfrToken = response.xsfrToken;\n        this.setDeviceId(response.deviceID, response.discoverMode);\n        const sf: any = StorageManagerUtil.get('searchInfosLocal');\n        if (sf) {\n            sf.combId = '';\n            StorageManagerUtil.set('searchInfos', sf);\n        }\n    }\n\n    public clearDeviceId(): void {\n        StorageManagerUtil.remove('deviceId');\n        this.deviceId = null;\n    }\n\n    public setLanguage(selectedLanguage: ILanguage) {\n        const lang = LANGUAGES.list.find((language: ILanguage) => language.i18nCode === selectedLanguage.i18nCode);\n        const selectedLanguageObject = lang ? lang : LANGUAGES.list[0];\n        StorageManagerUtil.set(StorageKeys.LANG, selectedLanguage);\n        this.translateService.use(selectedLanguageObject.code).subscribe(() => {\n            this.selectedLanguage.next(selectedLanguageObject);\n        });\n    }\n\n    private initLanguage(): BehaviorSubject<ILanguage> {\n        const selectedLanguage = StorageManagerUtil.get(StorageKeys.LANG);\n        let selectedLanguageObject: ILanguage | undefined;\n        if (selectedLanguage) {\n            selectedLanguageObject = LANGUAGES.list.find(\n                (language: ILanguage) => language.i18nCode === selectedLanguage.i18nCode\n            );\n            if (!selectedLanguageObject) {\n            }\n        } else {\n            selectedLanguageObject = LANGUAGES.list.find((language: ILanguage) => language.code === LANGUAGES.default);\n        }\n        if (!selectedLanguageObject) {\n            selectedLanguageObject = LANGUAGES.list[0];\n        }\n        this.translateService.setDefaultLang(LANGUAGES.default);\n        this.translateService.use(selectedLanguageObject.code);\n        return new BehaviorSubject(selectedLanguageObject);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, FormGroup } from '@angular/forms';\nimport { Validators, FormControl } from '@angular/forms';\nimport * as moment from 'moment';\n\nimport { Passenger } from '@shared/schemas/tz-customer-info';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { DatesUtils } from '@core/utils/dates-utils';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { FlightTrainCartInfo, ACCInfoCartInfo, CheckoutTraveller } from '@schemas/modules/checkout/cart-traveller';\nimport { TravellerType } from '@core/constants/traveller-type';\nimport { ValidatorPatterns } from '@core/constants/validation-patterns.const';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subject } from 'rxjs';\nimport { DefaultLuggage } from '@services/modules/checkout/utils/transport-luggages.utils';\nimport { SettingsService } from '@services/services/settings-service';\n\n@Injectable({ providedIn: 'root' })\nexport class TzTravellerService {\n    public updateTravellerForm$ = new Subject<boolean>();\n\n    constructor(\n        private apiAccessService: ApiAccessService,\n        private userService: UserService,\n        private listenersService: ListenersService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private settingsService: SettingsService\n    ) {}\n\n    get tzFormDateFormat(): string {\n        return this.settingsService.locales.DATETIME_FORMATS.tzTravelerShortDate;\n    }\n\n    public static invalidControl(form: FormGroup, key: string): boolean {\n        const control = form.controls[key];\n        return (\n            control?.invalid &&\n            (control.touched ||\n                (key !== 'phone' && control.dirty) ||\n                (control.value && control.value !== null && control.value !== ''))\n        );\n    }\n\n    /** form&returns the validation object based on the service the traveller form is used */\n    public createTravellerGroup(mode: string, docNotRequired = true) {\n        const isMode = (service: string) => mode === service;\n        const isDefault = mode === 'profile';\n\n        /**\n         * mode((profile === flight)|rental|acc|transfer)\n         * 1. firstName, 2. last name - (required for all)\n         * 2. gender - (required for flight/profile/rental)\n         * 3. dateOfBirth - (required for flight/profile/rental)\n         * 4. nationality - (required for flight/profile)\n         * 5. idCardType, idCardNumber, idCardValidity, idCardIssuedDate, idCardIssuedCountry - (required for flight/profile)\n         * 6. phoneNumber - (required for transfer)\n         */\n        const travellerGrp: any = {\n            firstName: new FormControl('', [\n                Validators.required,\n                Validators.maxLength(20),\n                Validators.pattern(ValidatorPatterns.NAME),\n            ]),\n            lastName: new FormControl('', [\n                Validators.required,\n                Validators.maxLength(20),\n                Validators.pattern(ValidatorPatterns.NAME),\n            ]),\n        };\n\n        if (isMode('transfer')) {\n            travellerGrp.phone = new FormControl('', Validators.required);\n        }\n\n        if (isDefault || isMode('transport') || isMode('rental')) {\n            travellerGrp.gender = new FormControl('', Validators.required);\n            travellerGrp.dateOfBirth = new FormControl('', Validators.required);\n        }\n\n        if (isDefault || isMode('transport')) {\n            travellerGrp.middleName = new FormControl('', [\n                Validators.maxLength(20),\n                Validators.pattern(ValidatorPatterns.NAME),\n            ]);\n            travellerGrp.nationality = new FormControl('', Validators.required);\n        }\n\n        if (isDefault || !docNotRequired) {\n            travellerGrp.idCardType = new FormControl('');\n            travellerGrp.idCardNumber = new FormControl('', [\n                Validators.maxLength(30),\n                Validators.pattern(ValidatorPatterns.TRAVELLERID),\n            ]);\n            travellerGrp.dateOfIssue = new FormControl('');\n            travellerGrp.idCardValidity = new FormControl('');\n            travellerGrp.idIssuedCountry = new FormControl('');\n        }\n\n        if (!docNotRequired) {\n            travellerGrp.idCardType.setValidators(Validators.required);\n            travellerGrp.idCardNumber.addValidators(Validators.required);\n            travellerGrp.dateOfIssue.setValidators(Validators.required);\n            travellerGrp.idCardValidity.setValidators(Validators.required);\n            travellerGrp.idIssuedCountry.setValidators(Validators.required);\n        }\n\n        return travellerGrp;\n    }\n\n    public dateValidation(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const momentObj = moment(control.value, this.tzFormDateFormat);\n            if (!control.value || control.value === '') {\n                return null;\n            }\n\n            if (control.value.length !== this.tzFormDateFormat.length) {\n                return {\n                    INVALID_DATE: true,\n                };\n            }\n\n            if (!momentObj.isValid()) {\n                return {\n                    INVALID_DATE_FORMAT: 'TZ_FORM_VALIDATION.DATE.INVALID_DATE_FORMAT',\n                    INVALID_MESSAGE_PARAMS: {\n                        format: this.tzFormDateFormat,\n                    },\n                };\n            }\n\n            return null;\n        };\n    }\n\n    public dobValidation(\n        type: string,\n        selectedAge?: number,\n        travelDate = { startDate: new Date(), endDate: new Date() },\n        ageLimit = { min: -1, max: 100 }\n    ): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const momentObj = moment(control.value, this.tzFormDateFormat);\n            const selectedDate = momentObj.toDate();\n            const today = new Date();\n\n            const age = DatesUtils.getAgeDiff(selectedDate, travelDate.endDate);\n            switch (true) {\n                case age > 100: {\n                    return { INVALID_DOB: 'TZ_FORM_VALIDATION.DATE.LOWER_DATE' };\n                }\n                case ageLimit.min !== -1 && ageLimit.min > age: {\n                    return {\n                        INVALID_DOB: 'TZ_FORM_VALIDATION.DATE.MINIMUN_AGE_NEEDED',\n                        INVALID_MESSAGE_PARAMS: {\n                            age: ageLimit.min,\n                        },\n                    };\n                }\n                case ageLimit.max < age: {\n                    return {\n                        INVALID_DOB: 'TZ_FORM_VALIDATION.DATE.MAXIMUM_AGE_ALLOWED',\n                        INVALID_MESSAGE_PARAMS: {\n                            age: ageLimit.max,\n                        },\n                    };\n                }\n            }\n\n            if (type !== '') {\n                switch (true) {\n                    case type === TravellerType.ADULT && age < 18: {\n                        return {\n                            INVALID_DOB: 'TZ_FORM_VALIDATION.DATE.ADULT_AGE_NEEDED',\n                        };\n                    }\n                    case type === TravellerType.CHILD && (age >= 18 || age < 2): {\n                        return {\n                            INVALID_DOB: 'TZ_FORM_VALIDATION.DATE.CHILD_AGE_NEEDED',\n                        };\n                    }\n                    case type === TravellerType.INFANT && age >= 2: {\n                        return {\n                            INVALID_DOB: 'TZ_FORM_VALIDATION.DATE.INFANT_AGE_NEEDED',\n                        };\n                    }\n                }\n            }\n\n            if (selectedAge && selectedAge !== -1 && selectedAge !== age) {\n                return {\n                    INVALID_DOB: 'TZ_FORM_VALIDATION.DATE.INVALID_SELECTED_DATE',\n                    INVALID_MESSAGE_PARAMS: {\n                        currentAge: age,\n                        reqAge: selectedAge,\n                    },\n                };\n            }\n\n            const maxDays = 14;\n            const minYears = 100;\n            const startDate = travelDate.startDate;\n            const minLimit = new Date(today.getFullYear() - minYears, today.getMonth(), today.getDate());\n            const maxLimit = new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate() - maxDays);\n            if (Date.parse(selectedDate.toString()) > Date.parse(maxLimit.toString())) {\n                return { INVALID_DOB: 'TZ_FORM_VALIDATION.DATE.FUTURE_DATE' };\n            } else if (Date.parse(selectedDate.toString()) < Date.parse(minLimit.toString())) {\n                return { INVALID_DOB: 'TZ_FORM_VALIDATION.DATE.LOWER_DATE' };\n            }\n\n            control.parent?.get('dateOfIssue')?.updateValueAndValidity();\n\n            return null;\n        };\n    }\n\n    public idIssueValidation(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const momentObj = moment(control.value, this.tzFormDateFormat);\n            const selectedDate = momentObj.toDate();\n            const today = new Date();\n            const minLimit = new Date(today.getFullYear() - 20, today.getMonth(), today.getDate());\n            const selectedDOB = moment(control.parent?.get('dateOfBirth')?.value, this.tzFormDateFormat);\n\n            if (Date.parse(selectedDate.toString()) > Date.parse(today.toString())) {\n                return { INVALID_ISSUED_DATE: 'TZ_FORM_VALIDATION.DATE.FUTURE_DATE' };\n            } else if (\n                Date.parse(selectedDate.toString()) < Date.parse(minLimit.toString()) ||\n                (selectedDOB?.isValid() && Date.parse(selectedDate.toString()) < Date.parse(selectedDOB?.toString()))\n            ) {\n                return { INVALID_ISSUED_DATE: 'TZ_FORM_VALIDATION.DATE.LOWER_DATE' };\n            }\n\n            return null;\n        };\n    }\n\n    public idExpiryValidation(travelDate: Date): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const momentObj = moment(control.value, this.tzFormDateFormat);\n            const selectedDate = momentObj.toDate();\n\n            const today = new Date();\n            let minDate = today;\n            if (moment(travelDate).format(this.tzFormDateFormat) !== moment(today).format(this.tzFormDateFormat)) {\n                minDate = new Date(travelDate.getFullYear(), travelDate.getMonth() + 3, travelDate.getDate());\n            }\n\n            if (Date.parse(selectedDate.toString()) < Date.parse(minDate.toString())) {\n                if (\n                    Date.parse(today.toString()) < Date.parse(selectedDate.toString()) &&\n                    Date.parse(selectedDate.toString()) < Date.parse(travelDate.toString())\n                ) {\n                    return {\n                        INVALID_EXPIRY_DATE: 'TZ_FORM_VALIDATION.DATE.ID_EXPIRED',\n                    };\n                } else if (travelDate !== today && Date.parse(today.toString()) < Date.parse(selectedDate.toString())) {\n                    return {\n                        INVALID_EXPIRY_DATE: 'TZ_FORM_VALIDATION.DATE.EXPIRY_ALERT',\n                    };\n                } else {\n                    return {\n                        INVALID_EXPIRY_DATE: 'TZ_FORM_VALIDATION.DATE.ID_EXPIRED',\n                    };\n                }\n            }\n\n            return null;\n        };\n    }\n\n    public duplicateIdValidation(currentFormIdx: number): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const travelers = control.parent?.parent?.controls;\n            if (!travelers) {\n                return null;\n            }\n\n            const travellerIdMap = new Map();\n            for (const [idx, traveler] of (travelers as FormGroup[]).entries()) {\n                if (!traveler.value) {\n                    continue;\n                }\n\n                const idCardNumberCtrl = traveler.get('idCardNumber');\n                const idCardType = traveler.get('idCardType')?.value ?? '';\n                const idCardNumber = idCardNumberCtrl?.value ?? '';\n\n                if (!idCardNumberCtrl || idCardType === '' || idCardNumber === '') {\n                    continue;\n                }\n\n                const idStr = `${idCardType}-${idCardNumber}`;\n\n                if (travellerIdMap.get(idStr)) {\n                    const error = { DUPLICATE_ID: 'TZ_FORM_VALIDATION.ID_CARD_NUMBER.DUPLICATE_ID' };\n                    if (idx === currentFormIdx) {\n                        return error;\n                    }\n\n                    idCardNumberCtrl.setErrors(error);\n                } else if (idCardNumberCtrl.hasError('DUPLICATE_ID')) {\n                    idCardNumberCtrl.setErrors(null);\n                }\n\n                travellerIdMap.set(idStr, true);\n            }\n\n            return null;\n        };\n    }\n\n    public saveTraveller(traveller: Passenger) {\n        this.apiAccessService.SavePassenger(this.userService.getSessionID(), traveller).then(\n            (resp: any) => {\n                console.log('passenger save success:', resp);\n                traveller.id = resp.cardID;\n                this.dialogService.openSnackBar({ message: this.translateService.instant('NOTIFS.DATA_SAVED') });\n                this.listenersService.NotifyListeners(ListenerId.CUSTOMER_INFO_UPDATED);\n                this.userService.getCustomer(true);\n            },\n            (failure: any) => {\n                console.log('passenger save failure:', failure);\n            }\n        );\n    }\n\n    public updateTraveller(traveller: Passenger) {\n        this.apiAccessService.UpdatePassenger(this.userService.getSessionID(), traveller).then(\n            (resp: any) => {\n                console.log('passenger update success:', resp);\n                this.dialogService.openSnackBar({ message: this.translateService.instant('NOTIFS.DATA_UPDATED') });\n                this.listenersService.NotifyListeners(ListenerId.CUSTOMER_INFO_UPDATED);\n                this.userService.getCustomer(true);\n            },\n            (failure: any) => {\n                console.log('traveller update failure:', failure);\n            }\n        );\n    }\n\n    public removeTraveller(travelleId: string) {\n        this.apiAccessService.RemovePassenger(this.userService.getSessionID(), travelleId).then(\n            (resp: any) => {\n                console.log('Success on customer passenger delete', resp);\n                this.dialogService.openSnackBar({ message: this.translateService.instant('NOTIFS.DATA_REMOVED') });\n                this.listenersService.NotifyListeners(ListenerId.CUSTOMER_INFO_UPDATED);\n                this.userService.getCustomer(true);\n            },\n            (failureResp: any) => {\n                console.log('traveller delete failure', failureResp);\n            }\n        );\n    }\n\n    public newFlightTrainTravellers(cartInfo: FlightTrainCartInfo): CheckoutTraveller[] {\n        const checkoutTraveller: CheckoutTraveller[] = [];\n        const passengers = cartInfo.passengers;\n        const totalTravellers = passengers.adults + passengers.children + passengers.infants;\n\n        for (let idx = 1; idx <= totalTravellers; idx++) {\n            const travellerType =\n                idx > passengers.adults\n                    ? idx > passengers.adults + passengers.children\n                        ? TravellerType.INFANT\n                        : TravellerType.CHILD\n                    : TravellerType.ADULT;\n            const newTraveller = {\n                type: travellerType,\n                selectedAge: -1,\n                saveTraveller: true,\n                updateTraveller: true,\n                additionalLuggage: JSON.parse(JSON.stringify(DefaultLuggage)),\n            } as CheckoutTraveller;\n\n            if (travellerType === TravellerType.CHILD) {\n                newTraveller.selectedAge = passengers.childrenAges[idx - passengers.adults - 1];\n            }\n            newTraveller.docNotRequired = !this.checkDocRequired(cartInfo.travelCondition, idx);\n            checkoutTraveller.push(newTraveller);\n        }\n        return checkoutTraveller;\n    }\n\n    public newAccTravellers(cartInfo: ACCInfoCartInfo): CheckoutTraveller[] {\n        const checkoutTraveller: CheckoutTraveller[] = [];\n\n        cartInfo.roomTypes.forEach((offer, idx) => {\n            checkoutTraveller.push({\n                type: TravellerType.ADULT,\n                roomType: offer.roomType,\n                roomOfferId: offer.roomOfferId,\n                optionId: offer.optionId,\n            } as CheckoutTraveller);\n        });\n        return checkoutTraveller;\n    }\n\n    public isExpiringSoon(idCardValidity: string, travelDate: Date): boolean {\n        const today = new Date();\n        let minLimit = new Date(today.getFullYear(), today.getMonth() + 3, today.getDate());\n        if (moment(travelDate).format(this.tzFormDateFormat) !== moment(today).format(this.tzFormDateFormat)) {\n            minLimit = new Date(travelDate.getFullYear(), travelDate.getMonth() + 3, travelDate.getDate());\n        }\n\n        const momentObj = moment(idCardValidity, this.tzFormDateFormat);\n        const validity = Date.parse(momentObj.toDate().toDateString());\n        if (validity <= Date.parse(minLimit.toString()) && validity >= Date.parse(today.toString())) {\n            this.dialogService.openConfirmationDialog({\n                title: this.translateService.instant('POPUPS.ALERT_ID_INVALID.TITLE'),\n                multipleContent: [this.translateService.instant('POPUPS.ALERT_ID_INVALID.MESSAGE')],\n                confirmBtnTitle: this.translateService.instant('POPUPS.OK'),\n            });\n            return true;\n        }\n        return false;\n    }\n\n    public formProfileTraveller(traveller: CheckoutTraveller): CheckoutTraveller {\n        const customer = this.userService.getCustomerInformation();\n        for (const passenger of customer.passengers) {\n            if (passenger.id === traveller.id) {\n                traveller = {\n                    ...traveller,\n                    idCardType: passenger.idCardType,\n                    idCardNumber: passenger.idCardNumber,\n                    dateOfIssue: passenger.dateOfIssue,\n                    idCardValidity: passenger.idCardValidity,\n                    issuedCountryName: passenger.issuedCountryName,\n                    idIssuedCountry: passenger.idIssuedCountry,\n                };\n            }\n        }\n\n        return traveller;\n    }\n\n    private checkDocRequired(travellerConditions: any, travellerId: number) {\n        let doc = true;\n        if (!Array.isArray(travellerConditions)) {\n            return doc;\n        }\n\n        travellerConditions.some((tc: { travellerId: string; documentRequired: boolean }) => {\n            if (tc.travellerId === travellerId.toString()) {\n                doc = tc.documentRequired;\n            }\n        });\n\n        return doc;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { loadStripe } from '@stripe/stripe-js/pure';\n\nimport { StripeKeys } from '@core/constants/stripe.const';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { environment } from '@environments/environment';\nimport { Stripe, StripeCardNumberElement } from '@stripe/stripe-js';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StripeService {\n    public updateStripe = new Subject<void>();\n    public readonly stripeFieldStyle = {\n        base: {\n            fontSize: '14px',\n            fontWeight: 600,\n            fontFamily:\n                //eslint-disable-next-line max-len\n                '\\'Segoe UI\\',-apple-system,BlinkMacSystemFont,\\'Roboto\\',\\'Oxygen\\',\\'Ubuntu\\',\\'Fira Sans\\',\\'Droid Sans\\',\\'Helvetica Neue\\',sans-serif',\n            color: '#2F0A4DA',\n            ':-webkit-autofill': {\n                color: '#2F0A4D',\n            },\n            '::placeholder': {\n                fontWeight: 400,\n            },\n        },\n        invalid: {\n            color: '#2F0A4D',\n            iconColor: '#fa755a',\n        },\n    };\n\n    public readonly stripeMobileFieldStyle = {\n        base: {\n            fontSize: '14px',\n            fontWeight: 400,\n            fontFamily:\n                //eslint-disable-next-line max-len\n                '\\'Segoe UI\\',-apple-system,BlinkMacSystemFont,\\'Roboto\\',\\'Oxygen\\',\\'Ubuntu\\',\\'Fira Sans\\',\\'Droid Sans\\',\\'Helvetica Neue\\',sans-serif',\n            color: '#202124',\n            ':-webkit-autofill': {\n                color: '#202124',\n            },\n            '::placeholder': {\n                fontWeight: 400,\n            },\n        },\n        invalid: {\n            color: '#202124',\n            iconColor: '#fa755a',\n        },\n    };\n\n    private stripe!: Stripe;\n    private cardEl!: StripeCardNumberElement;\n    private stripeLoaded = new BehaviorSubject<boolean>(false);\n\n    constructor() {}\n\n    public async loadStripeKey(): Promise<any> {\n        const stripe = await loadStripe(environment.production ? StripeKeys.PROD : StripeKeys.TEST);\n\n        if (stripe) {\n            this.stripe = stripe;\n            console.log('stripe key set');\n            this.stripeLoaded.next(true);\n        } else {\n            console.log('delaying stripe loading');\n            return this.loadStripeKey();\n        }\n    }\n\n    public isStripLoaded(): Observable<boolean> {\n        return this.stripeLoaded.asObservable();\n    }\n\n    public getStripe(): Stripe {\n        return this.stripe;\n    }\n\n    public setCartElement(el: StripeCardNumberElement): void {\n        this.cardEl = el;\n    }\n\n    public getCartElement(): StripeCardNumberElement {\n        return this.cardEl;\n    }\n}\n","export const environment = {\n    production: false,\n    baseUrl: 'https://api.dev.trazler.com',\n    uiUrl: 'https://dev.trazler.com',\n    mapboxGLToken: 'pk.eyJ1IjoidGVhbS10cmF6bGVyIiwiYSI6ImNsMXhvNHI5ZDA0azEzanFvOGsxZXZuM2sifQ.CD5hFm6xzFtTTp5roqBxzg',\n    version: '1.0.178',\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from '@environments/environment';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\nif (environment.production) {\n    enableProdMode();\n}\nconsole.log(environment);\n\nconst closeWindow = StorageManagerUtil.get('trazler_socialLogin_close_window');\nif (closeWindow != null) {\n    StorageManagerUtil.remove('trazler_socialLogin_close_window');\n    window.close();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.log(err));\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t70079,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t25593,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t13225,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t4812,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t86655,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t44856,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t13059,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t58648,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t98308,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t44690,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t64090,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t36214,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t69447,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t79689,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t18840,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t40749,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t69667,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t83288,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t35473,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t53634,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t22855,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t495,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t58737,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t99632,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t54446,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t32275,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t48050,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t18994,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t23592,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t35454,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t290,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t92666,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t64816,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t45534,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t94902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t91938,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t78179,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t90668,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t61624,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t19989,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t28902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t70199,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t48395,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t96357,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t38268,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t15269,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t32875,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 50863;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 63069,\n\t\"./bg.js\": 63069,\n\t\"./bm\": 13466,\n\t\"./bm.js\": 13466,\n\t\"./bn\": 18516,\n\t\"./bn-bd\": 90557,\n\t\"./bn-bd.js\": 90557,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 19878,\n\t\"./en-ca.js\": 19878,\n\t\"./en-gb\": 3924,\n\t\"./en-gb.js\": 3924,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-il\": 91579,\n\t\"./en-il.js\": 91579,\n\t\"./en-in\": 30940,\n\t\"./en-in.js\": 30940,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./en-sg\": 44301,\n\t\"./en-sg.js\": 44301,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es-mx\": 12584,\n\t\"./es-mx.js\": 12584,\n\t\"./es-us\": 63425,\n\t\"./es-us.js\": 63425,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fil\": 52521,\n\t\"./fil.js\": 52521,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 23821,\n\t\"./ga.js\": 23821,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 92762,\n\t\"./gom-deva.js\": 92762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 82809,\n\t\"./gu.js\": 82809,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it-ch\": 51124,\n\t\"./it-ch.js\": 51124,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ku\": 16003,\n\t\"./ku.js\": 16003,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mn\": 52325,\n\t\"./mn.js\": 52325,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./mt\": 63570,\n\t\"./mt.js\": 63570,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./oc-lnc\": 50563,\n\t\"./oc-lnc.js\": 50563,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 11848,\n\t\"./si.js\": 11848,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./tg\": 42500,\n\t\"./tg.js\": 42500,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tk\": 77761,\n\t\"./tk.js\": 77761,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./ug-cn\": 30845,\n\t\"./ug-cn.js\": 30845,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-mo\": 98262,\n\t\"./zh-mo.js\": 98262,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["DeviceIdForceResolver","constructor","appConfigDataService","resolve","route","state","initDeviceId","catch","i0","factory","providedIn","DeviceIdResolver","LANGUAGES","RouteIdResolver","userSearchService","settingsService","langEntry","list","i18nCode","url","path","setLanguage","console","log","langCode","then","deviceId","searchFromRoute","searchStatus","take","SearchPageResolver","deviceIdForceResolver","setCountryIP","pipe","subscribe","TripIdResolver","searchMetadataService","tripQuery","parseTripUrl","window","location","search","code","lang","setDeviceId","openTrip","EventEmitter","NavigationEnd","ListenerId","BehaviorSubject","StorageManagerUtil","ctx_r3","ctx_r0","ctx_r7","_r5","ctx_r9","ctx_r11","ctx_r12","ctx_r13","HeaderComponent","router","userService","currencyService","searchDataService","listenersService","changeDetectorRef","cartService","searchErrorService","renderer","scrollService","platformService","currencies","currencyCode","events","event","scrollToTop","onStateChange","selectedLanguage","selectedLanguageObject","ngOnInit","isSearchDropDownOpen$","val","isSearchDropDownOpen","detectChanges","gotoRoute","includes","currentState","targetUrl","serializeUrl","createUrlTree","open","navigate","onTrazlerLogoClicked","$event","NotifyListeners","LISTEN_SERVICE_REINIT","unsetErrorFlag","skipLocationChange","stopPropagation","preventDefault","removeClass","document","body","onLanguageChange","language","onHeaderClick","closeSearchEditingMode$","next","onCurrencyChange","currency","setCurrency","onSignOut","signOut","emit","logIn","openLoginModel","result","reloadAccDetails","reason","isInMyTripOrCheckout","cartData","getCartData","cartCur","get","isCartFinalised","undefined","cartCurrency","hideCurrency$","selectors","outputs","decls","vars","consts","template","ctx","FormGroup","FormControl","Validators","ValidatorPatterns","ctx_r20","ctx_r22","ctx_r24","ctx_r26","BillingInfoComponent","fb","isProfile","billingAddress","customerInformation","formReadonly","addressUpdated","isMobileDevice","buildBillingForm","loadForm","formGroup","toggoleEdit","setDefaultFormValues","markAsPristine","updateBilling","values","value","companyName","vatNo","address","zipCode","city","country","name","countryCode","updateBillingAddress","updateCustomerInfo","customer","setFieldOptions","controlStr","fieldCtrl","controls","setValue","IsLogged","group","pattern","STRING","maxLength","ZIPCODE","inputs","MAT_DIALOG_DATA","DialogButtonsStyles","ctx_r5","ctx_r1","ctx_r14","ctx_r16","CLOSE","CONFIRM","CANCEL","TrazlerConfirmationDialogComponent","data","mdDialogRef","dialogService","dialogData","onClose","closeDialog","onCancel","onConfirm","ctx_r4","MobPickerComponent","setPickerData","togglePicker","openPicker","selectOption","selectedOption","pickerChange","options","map","option","index","selectedIndex","label","text","first","timer","ctx_r19","ctx_r21","ctx_r23","ctx_r25","ctx_r27","ctx_r29","ProfileInfoComponent","translateService","firstName","required","NAME","lastName","emailID","EMAIL","phone","deleteCustomer","usageType","profUpdated","toggleEdit","updateProfile","number","internationalNumber","callingCode","dialCode","onEmailFieldClicked","openSnackBarDialog","instant","updatedPhone","validPhone","phoneNumber","updatePhoneNumber","statusChanges","timer$","CountryISO","TzCountryFieldComponent","countryList","getCountryList","formCtrl","selectedISO","Object","entries","counrty","replace","readonly","countyFocus","moment","TzTravellerService","ToolsService","Subject","takeUntil","DatesUtils","ctx_r18","ctx_r28","ctx_r35","_r30","ctx_r41","ctx_r43","ctx_r8","ctx_r54","_r49","ctx_r45","ctx_r57","ctx_r47","ctx_r48","ctx_r60","_r59","ctx_r74","_r73","ctx_r62","ctx_r77","ctx_r79","ctx_r66","ctx_r67","ctx_r83","ctx_r84","ctx_r68","ctx_r69","ctx_r86","_r85","ctx_r70","ctx_r92","ctx_r94","ctx_r96","ctx_r98","ctx_r100","ctx_r108","TzTravellerComponent","tzTravellerService","startDate","Date","endDate","dateFormat","tzFormDateFormat","updateTraveler","formData","formTravellerInfo","travellerUpdated","saveTraveler","_a","savedTraveller","selectedTraveller","id","setDateValidators","setTraveller","traveller","loggedIn$","destroy$","updateTravellerForm$","selectedLanguageSubject","formatFieldDates","ngOnChanges","changes","updateTravellerForm","reset","setSelectedTraveller","checkExpiringSoon","ngOnDestroy","complete","isInValidField","controlName","invalidControl","saveTraveller","travellerInfo","updateTraveller","removeTraveller","expiryAlertShown","formValue","isExpiringSoon","idCardValidity","travelDate","onFocus","field","setDirty","fieldControl","markAsDirty","markAsTouched","markFormAsVisited","dobCtrl","addValidators","dateValidation","dobValidation","travellerType","selectedAge","ageLimit","dateOfIssue","idIssueValidation","idExpiryValidation","idCardNumber","formIdx","duplicateIdValidation","idCardType","updateValueAndValidity","currentFormat","reqFromat","formatDate","fieldValue","momentObj","isValid","date","format","setFieldValue","formDate","dateStr","savedDateFormat","savedTzTravelerFormat","middleName","gender","dateOfBirth","nationalityName","nationality","issuedCountryName","idIssuedCountry","curFormat","updateTzFormDate","docNotRequired","selectedProfileTrvaller","getCustomerInformation","selectedId","passenger","passengers","savedTraveler","deepCopy","isDatesModified","savedDate","toDateString","isValueModified","savedValue","formStr","features","MobMainModalComponent","MobMainDetailsModalComponent","MobPickerModalComponent","ModalOpenOptions","ModalService","modalController","animationCtrl","create","opts","iconModel","addSlideAnimation","createMainModal","component","props","openOptions","TOP","modal","componentProps","title","hideHeader","cssClass","present","onWillDismiss","historyBack","onDidDismiss","historyPushIfHasModal","createDetailsPage","LEFT","isHeaderBottomDivider","modalCustomClasses","openSummeryModal","openPickerModal","selectBtnText","cancelBtnText","openDatePickerModal","dismiss","role","getTop","historyPushModal","history","pushState","back","ionModel","baseEl","root","shadowRoot","backDrop","querySelector","model","backdropAnimation","addElement","fromTo","wrapperAnimation","keyframes","modalAnimations","modelEnterAnimation","easing","duration","addAnimation","enterAnimation","leaveAnimation","direction","modalOpenOptions","offset","opacity","transform","RIGHT","BOTTOM","PlatformService","platform","ready","screenSize","width","setPlatformType","resize","isMobileBrowser","isPlatformBrowser","isMobile","isPlatformMobile","isPlatformMobileDevice","isMobileDevice$","isPlatformMobileDevice$","isMobile$","isPlatformMobile$","isMobileBrowser$","isPlatformMobileBrowser$","forceMobile","forceMobileOnSmallDisplay","setMobileDevice","setMobileType","setMobileBrowserType","is","loadStripe","StripeKeys","environment","StripeService","base","fontSize","fontWeight","fontFamily","color","invalid","iconColor","loadStripeKey","stripe","production","PROD","TEST","stripeLoaded","isStripLoaded","asObservable","getStripe","setCartElement","el","cardEl","getCartElement"],"sourceRoot":"webpack:///"}