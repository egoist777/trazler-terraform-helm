{"version":3,"file":"src_app_modules_results_transport_flights_flights_module_ts.js","mappings":"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","sources":["./src/app/modules/results/transport/flights/components/flight-list-result-information/flight-list-result-information.component.ts","./src/app/modules/results/transport/flights/components/flight-list-result-information/flight-list-result-information.component.html","./src/app/modules/results/transport/flights/components/flights-list/flights-list.component.ts","./src/app/modules/results/transport/flights/components/flights-list/flights-list.component.html","./src/app/modules/results/transport/flights/flights-routing.module.ts","./src/app/modules/results/transport/flights/flights.component.ts","./src/app/modules/results/transport/flights/flights.component.html","./src/app/modules/results/transport/flights/flights.module.ts","./src/app/modules/results/transport/flights/flights.sort.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { Flight } from '@schemas/modules/flights/flight';\nimport { CartUtils } from '@services/modules/cart/utils/cart.utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FlightsService } from '@services/modules/transport/flights/flights.service';\n\n@Component({\n    selector: 'tz-flight-list-result-information',\n    templateUrl: './flight-list-result-information.component.html',\n    styleUrls: ['./flight-list-result-information.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FlightListResultInformationComponent implements OnInit, OnChanges {\n    @Input() selectedFlight: Flight | undefined | null = null;\n    @Input() count: number | undefined = 0;\n    @Input() twoWayFlight = false;\n    @Input() isPreSelected = false;\n    @Input() preSelectedFlight: Flight | null = null;\n    @Output() cancelSelection: EventEmitter<void> = new EventEmitter();\n    @Output() selectedOnwardFlight: EventEmitter<string | undefined> = new EventEmitter<string | undefined>();\n    @Output() selectedReturnFlight: EventEmitter<string | undefined> = new EventEmitter<string | undefined>();\n    public selectedFlightSummary: string | null = null;\n    public selectedFlightsCount = 0;\n\n    //public isRoundTrip: boolean = false;\n\n    constructor(private translateService: TranslateService, private flightService: FlightsService) {}\n\n    public ngOnInit(): void {\n        //  this.isRoundTrip = this.selectedFlight ? this.selectedFlight.isRoundTrip:false;\n        this.updateSelectedFlightsCount();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this.updateSelectedFlightsCount();\n\n        if (changes['selectedFlight'] && changes['selectedFlight'].currentValue) {\n            this.buildSummary(changes['selectedFlight'].currentValue);\n        }\n        if (changes['isPreSelected'] && changes['isPreSelected'].currentValue) {\n            this.buildSummary(this.preSelectedFlight);\n        }\n    }\n\n    public onOnwardFlightChanged(): void {\n        this.selectedOnwardFlight.emit();\n    }\n\n    public onReturnFlightChanged(): void {\n        this.selectedReturnFlight.emit();\n    }\n\n    public onCancelSelection() {\n        this.cancelSelection.emit();\n    }\n\n    private buildSummary(flight: Flight | null) {\n        if (flight) {\n            this.selectedFlightSummary = CartUtils.buildFlightTitleSummary(flight, this.translateService, false);\n            /*const departureCity = flight.departureSummary.originCity;\n            const arrivalCity = flight.departureSummary.destinationCity;\n            const destinations = [departureCity, arrivalCity];\n            const returnCity = flight.returnSummary.destinationCity;\n            if (returnCity) {\n                destinations.push(returnCity);\n            }\n            //    this.isRoundTrip = true;\n            this.selectedFlightSummary = destinations.join(' - ');*/\n        } else {\n            this.selectedFlightSummary = '';\n        }\n    }\n\n    private updateSelectedFlightsCount(): void {\n        this.selectedFlightsCount = this.flightService.getSelectedFLightsFromCart()?.items.length;\n    }\n}\n","<div class=\"tz-block-separator-title\" *ngIf=\"selectedFlight || isPreSelected\">\n    <tz-block-separator>{{ selectedFlightSummary }}</tz-block-separator>\n</div>\n<div class=\"flight-list-item\" *ngIf=\"selectedFlight\">\n    <tz-flight-list-item\n        [returnSelected]=\"true\"\n        [onWardSelected]=\"true\"\n        [twoWayFlight]=\"twoWayFlight\"\n        (selectedOnwardFlight)=\"onOnwardFlightChanged()\"\n        (selectedReturnFlight)=\"onReturnFlightChanged()\"\n        [flight]=\"selectedFlight\"\n    >\n    </tz-flight-list-item>\n</div>\n\n<div class=\"tz-block-separator-title no-bottom-margin\" *ngIf=\"!selectedFlight && count && !isPreSelected\">\n    <tz-block-separator>\n        <span class=\"flight-separator__text\">\n            {{ (twoWayFlight ? 'FLIGHT.ROUND_TRIP' : 'FLIGHT.ONE_WAY') | translate }}\n            {{\n                (count - selectedFlightsCount > 1 ? 'GENERAL.OPTIONS_FOUND' : 'GENERAL.OPTION_FOUND')\n                    | translate\n                        : {\n                              resultsCount: count - selectedFlightsCount,\n                              tripType: ''\n                          }\n            }}\n        </span>\n    </tz-block-separator>\n</div>\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { CachedFlights, Flight } from '@schemas/modules/flights/flight';\nimport { FlightListMetadata } from '@schemas/modules/flights/flight-list-metadata';\nimport { ServiceListComponent } from '@core/components/paginate.component.ts/service.list.component';\nimport { IInfiniteScrollEvent } from 'ngx-infinite-scroll';\nimport { VirtualScrollerComponent } from 'ngx-virtual-scroller';\nimport { PlatformService } from '@services/platform.service';\nimport { ToolsService } from '@core/utils/tools-service';\n\n@Component({\n    selector: 'tz-flights-list',\n    templateUrl: './flights-list.component.html',\n    styleUrls: ['./flights-list.component.scss'],\n})\nexport class FlightsListComponent extends ServiceListComponent implements OnInit, OnChanges, AfterViewInit {\n    @ViewChild('flightsScroller', { static: false }) virtualScroller: VirtualScrollerComponent | undefined = undefined;\n    @ViewChild('flightsListContainer', { static: false }) listContainer: ElementRef | undefined = undefined;\n    @Input() flights: Flight[] = [];\n    @Input() isMobile$?: BehaviorSubject<boolean>;\n    @Input() twoWayFlight = false;\n    @Input() notComplete = false;\n    @Input() cancelFlights$!: Subject<boolean>;\n    @Input() flightListMetadata: FlightListMetadata = { count: 0 };\n    @Input() isListCompleted = false;\n    @Input() cachedFlights: CachedFlights = {};\n    @Input() selectedOnWardId: string | undefined;\n    @Input() selectedReturnId: string | undefined;\n    @Input() selectedId: string | undefined | null = '';\n    @Input() scrollElementIndex = 0;\n    @Input() totalPassengers = 0;\n    @Input() flightSelected = false;\n\n    @Output() nextPage: EventEmitter<void> = new EventEmitter<void>();\n    @Output() selectedOnwardFlight: EventEmitter<string | undefined> = new EventEmitter<string | undefined>();\n    @Output() selectedReturnFlight: EventEmitter<string | undefined> = new EventEmitter<string | undefined>();\n    @Output() selectFlight: EventEmitter<Flight> = new EventEmitter<Flight>();\n    @Output() selectPackage: EventEmitter<{ package: Flight; flightId: string }> = new EventEmitter<{\n        package: Flight;\n        flightId: string;\n    }>();\n    @Output() toggleFlight: EventEmitter<Flight> = new EventEmitter<Flight>();\n    @Output() cancelSelection: EventEmitter<void> = new EventEmitter<void>();\n    @Output() submitBooking: EventEmitter<Flight> = new EventEmitter<Flight>();\n    @Output() scrollElementIndexChange: EventEmitter<number> = new EventEmitter<number>();\n    @Output() openTerms: EventEmitter<Flight> = new EventEmitter<Flight>();\n    @Output() showFlightDetails: EventEmitter<Flight> = new EventEmitter<Flight>();\n    @Output() openCheckinAllowanceInfo: EventEmitter<number> = new EventEmitter<number>();\n\n    public openedId = '';\n    public packageStartIdx = 0;\n    public selectedPackageIndex: number | null = null;\n    public selectedFlight: Flight | null | undefined;\n    public isOpenFlightDes: boolean | undefined;\n    private currentScrolledListAmount = 0;\n\n    constructor(private renderer: Renderer2, public platformService: PlatformService) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.cancelFlights$.subscribe((cancel) => {\n            this.isOpenFlightDes = false;\n            this.openedId = '';\n            this.selectedFlight = null;\n            this.selectedOnWardId = undefined;\n            this.selectedReturnId = undefined;\n            this.selectedPackageIndex = null;\n            this.checkAndScrollToSelectedIndex();\n        });\n    }\n\n    ngAfterViewInit() {\n        this.setScrollingContainer();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['flightSelected'] && this.flightSelected) {\n            this.renderer.addClass(this.listContainer?.nativeElement, 'flights-list--selected-flight');\n            this.renderer.setStyle(this.listContainer?.nativeElement, 'height', 'auto');\n            this.handleScrollOnContainer();\n        }\n\n        if (changes['flights'] && this.flights.length === 1 && !this.flightSelected) {\n            this.openedId = '';\n            this.onToggleFlightItem(this.flights[0], 0);\n        }\n    }\n\n    public onOnwardFlightChanged(selected: boolean, id: string): void {\n        this.resetScrollSelectedIndex();\n        this.isOpenFlightDes = false;\n        this.openedId = '';\n        const index = this.flights.findIndex((flight) => flight.id === id);\n        if (selected) {\n            const flight = this.flights[index];\n            if (this.twoWayFlight && this.selectedReturnId) {\n                this.selectedId = flight.id;\n                this.selectedPackageIndex = 0;\n                this.emitSelectedFlight(flight);\n            } else if (!this.twoWayFlight) {\n                this.selectedId = flight.id;\n                this.selectedPackageIndex = 0;\n                this.toggleFlight.emit(flight);\n                this.refreshScroller();\n                this.emitSelectedFlight(flight);\n            } else {\n                this.selectedOnwardFlight.emit(flight.departureSummary.tripID);\n            }\n            this.selectedOnWardId = flight.departureSummary.tripID;\n        } else {\n            this.selectedPackageIndex = null;\n            this.selectedOnWardId = undefined;\n            this.selectedOnwardFlight.emit();\n        }\n    }\n\n    public onReturnFlightChanged(selected: boolean, id: string): void {\n        this.isOpenFlightDes = false;\n        this.openedId = '';\n        const index = this.flights.findIndex((flight) => flight.id === id);\n        this.resetScrollSelectedIndex();\n        if (selected) {\n            const flight = this.flights[index];\n            if (this.twoWayFlight && this.selectedOnWardId) {\n                this.selectedId = flight.id;\n                this.selectedPackageIndex = 0;\n                this.emitSelectedFlight(flight);\n            } else {\n                this.selectedReturnFlight.emit(flight.returnSummary.tripID);\n            }\n            this.selectedReturnId = flight.returnSummary.tripID;\n        } else {\n            this.selectedPackageIndex = null;\n            this.selectedReturnId = undefined;\n            this.selectedReturnFlight.emit();\n        }\n    }\n\n    public onCancelSelection(): void {\n        this.cancelSelection.emit();\n        this.selectedFlight = null;\n        if (this.selectedId) {\n            this.selectFlight.emit(this.cachedFlights[this.selectedId][0]);\n        }\n        this.selectedId = '';\n        this.openedId = '';\n        this.selectedPackageIndex = 0;\n        this.packageStartIdx = 0;\n    }\n\n    public onToggleFlightItem(flight: Flight, i: number): void {\n        let scrollToElement = false;\n        if (this.openedId === flight.id) {\n            this.isOpenFlightDes = false;\n            this.openedId = '';\n            this.resetScrollSelectedIndex();\n            this.refreshScroller();\n        } else {\n            const index = this.flights.findIndex((flightListItem) => flightListItem.id === flight.id);\n            scrollToElement = true;\n            this.isOpenFlightDes = true;\n            this.openedId = flight.id;\n            this.packageStartIdx = 0;\n            this.scrollElementIndexChange.emit(index);\n        }\n\n        if (this.isOpenFlightDes) {\n            this.selectedId =\n                ((this.twoWayFlight && this.selectedReturnId) || !this.twoWayFlight) && this.selectedOnWardId\n                    ? flight.id\n                    : this.selectedId === flight.id\n                    ? ''\n                    : flight.id;\n\n            this.toggleFlight.emit(flight);\n            this.refreshScroller();\n        }\n        //reset back user to top position of expanded item\n        setTimeout(() => {\n            if (scrollToElement) {\n                const offset = i === 0 ? -80 : -60;\n                this.virtualScroller?.scrollInto(flight, true, offset, 100);\n            }\n        }, 500);\n    }\n\n    public showPackages(flight: Flight): boolean {\n        return !!(\n            this.cachedFlights[this.selectedId ? this.selectedId : this.openedId] &&\n            this.cachedFlights[this.selectedId ? this.selectedId : this.openedId].length > 1 &&\n            (this.openedId === flight.id ||\n                (this.selectedOnWardId && this.selectedReturnId) ||\n                (!this.twoWayFlight && this.selectedOnWardId))\n        );\n    }\n\n    public onSelectPackage(packgeDetail: { pkgIndex: number; packageStartIdx: number }, flightId: string) {\n        this.selectedPackageIndex = packgeDetail.pkgIndex;\n        this.packageStartIdx = packgeDetail.packageStartIdx;\n        const flight = this.cachedFlights[flightId][this.selectedPackageIndex];\n        this.selectedOnWardId = flight.departureSummary.tripID;\n        this.selectedReturnId = flight.returnSummary.tripID;\n        if (this.isOpenFlightDes) {\n            this.openedId = flight.id;\n        }\n        this.selectPackage.emit({ package: flight, flightId });\n    }\n\n    public onSubmitBooking(flight: Flight): void {\n        this.submitBooking.emit(flight);\n    }\n\n    public onScroll($event: IInfiniteScrollEvent) {\n        if (!this.isListCompleted) {\n            this.nextPage.emit();\n        }\n    }\n\n    public identify(index: number, item: Flight): string {\n        return item.id;\n    }\n\n    public handleScrollOnContainer(double = true, event?: any): void {\n        requestAnimationFrame(() => {\n            if (this.virtualScroller) {\n                let height = 0;\n                const paddingElement = document.querySelector('.total-padding');\n                if (paddingElement) {\n                    height = ToolsService.getTransFormTranslateOfElement(paddingElement);\n                }\n                if (\n                    height === this.currentScrolledListAmount ||\n                    Math.abs(height - this.currentScrolledListAmount) < 30\n                ) {\n                    return;\n                } else {\n                    this.currentScrolledListAmount = height;\n                }\n\n                if (this.flights.length === 1) {\n                    this.renderer.addClass(this.listContainer?.nativeElement, 'flights-list--selected-flight');\n                    this.renderer.setStyle(this.listContainer?.nativeElement, 'height', 'auto');\n                } else {\n                    this.renderer.removeClass(this.listContainer?.nativeElement, 'flights-list--selected-flight');\n                    this.renderer.setStyle(this.listContainer?.nativeElement, 'height', height + 'px');\n                }\n                if (double) {\n                    this.handleScrollOnContainer(false);\n                }\n            }\n        });\n    }\n\n    public setScrollingContainer(): void {\n        const element = this.renderer.selectRootElement('.wrapper', true);\n        this.scrollingContainer = element ? element : window;\n    }\n\n    public async onShowFlightDetails(flight: Flight): Promise<void> {\n        this.showFlightDetails.emit(flight);\n    }\n\n    private emitSelectedFlight(flight: Flight): void {\n        this.selectFlight.emit(flight);\n    }\n\n    private refreshScroller() {\n        if (this.virtualScroller) {\n            this.virtualScroller.refresh();\n        }\n    }\n\n    private resetScrollSelectedIndex(): void {\n        this.scrollElementIndexChange.emit(0);\n    }\n\n    private checkAndScrollToSelectedIndex(): void {\n        if (this.scrollElementIndex) {\n            requestAnimationFrame(() => {\n                this.virtualScroller?.scrollToIndex(this.scrollElementIndex, true, -60, 0);\n            });\n        }\n    }\n}\n","<div class=\"flights\" data-test=\"result-page-flights-bar\">\n    <div class=\"flights-result-information-container\">\n        <tz-flight-list-result-information\n            [count]=\"flightListMetadata.count\"\n            [twoWayFlight]=\"twoWayFlight\"\n            [preSelectedFlight]=\"flights.length ? flights[0] : null\"\n            [isPreSelected]=\"twoWayFlight ? !!(selectedOnWardId && selectedReturnId) : !!selectedOnWardId\"\n        >\n        </tz-flight-list-result-information>\n    </div>\n    <div\n        #flightsListContainer\n        class=\"flights-list\"\n        *ngIf=\"!selectedFlight\"\n        infiniteScroll\n        [scrollWindow]=\"this.infiniteScrollConfig.scrollWindow\"\n        [infiniteScrollDistance]=\"this.infiniteScrollConfig.infiniteScrollDistance\"\n        [infiniteScrollThrottle]=\"this.infiniteScrollConfig.infiniteScrollThrottle\"\n        (scrolled)=\"onScroll($event)\"\n        [fromRoot]=\"this.infiniteScrollConfig.fromRoot\"\n        [infiniteScrollContainer]=\"this.infiniteScrollConfig.infiniteScrollContainer\"\n    >\n        <ion-accordion-group toggle-icon=\"''\" [animated]=\"false\" [value]=\"openedId\" #flightsVirtualScroller>\n            <virtual-scroller\n                #flightsScroller\n                [items]=\"flights\"\n                [parentScroll]=\"scrollingContainer\"\n                [enableUnequalChildrenSizes]=\"true\"\n                (vsChange)=\"handleScrollOnContainer()\"\n                (vsEnd)=\"handleScrollOnContainer()\"\n                [useMarginInsteadOfTranslate]=\"true\"\n                [resizeBypassRefreshThreshold]=\"200\"\n            >\n                <div\n                    *ngFor=\"let flight of flightsScroller.viewPortItems; trackBy: identify; index as i; let last = last\"\n                    class=\"flight-list-item\"\n                    [class]=\"twoWayFlight ? 'round-trip' : 'one-way'\"\n                >\n                    <div\n                        *ngIf=\"\n                            !selectedOnWardId &&\n                            !selectedReturnId &&\n                            (platformService.isMobileDevice$ | async) === false\n                        \"\n                        class=\"recommended-block\"\n                    ></div>\n\n                    <div *ngIf=\"platformService.isMobileDevice$ | async\" (click)=\"onShowFlightDetails(flight)\">\n                        <tz-mob-flight-list-item\n                            [packages]=\"cachedFlights[selectedId ? selectedId : openedId]\"\n                            [flight]=\"flight\"\n                            [totalPassengers]=\"totalPassengers\"\n                        ></tz-mob-flight-list-item>\n                    </div>\n                    <!--                <tz-flight-skeleton-loader></tz-flight-skeleton-loader>-->\n\n                    <ion-accordion\n                        *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n                        [ngClass]=\"{ 'not-complete': notComplete }\"\n                        class=\"tz-block-with-border\"\n                        [value]=\"flight.id\"\n                        toggle-icon=\"''\"\n                        [class.flight-list-item--is-open]=\"flight.id === openedId\"\n                        (click)=\"onToggleFlightItem(flight, i)\"\n                    >\n                        <ion-item slot=\"header\" class=\"flight-list-accordion-item ion-no-padding\">\n                            <tz-flight-list-item\n                                [flight]=\"\n                                    selectedPackageIndex !== null &&\n                                    cachedFlights[flight.id] &&\n                                    cachedFlights[flight.id][selectedPackageIndex]\n                                        ? cachedFlights[flight.id][selectedPackageIndex]\n                                        : flight\n                                \"\n                                [twoWayFlight]=\"twoWayFlight\"\n                                [onWardSelected]=\"!!selectedOnWardId\"\n                                [returnSelected]=\"!!selectedReturnId\"\n                                [totalPassengers]=\"totalPassengers\"\n                                (selectedOnwardFlight)=\"onOnwardFlightChanged($event, flight.id)\"\n                                (selectedReturnFlight)=\"onReturnFlightChanged($event, flight.id)\"\n                            >\n                            </tz-flight-list-item>\n                        </ion-item>\n\n                        <ion-item slot=\"content\">\n                            <tz-flight-list-item-description\n                                *ngIf=\"flight.id === openedId\"\n                                [flight]=\"\n                                    openedId &&\n                                    selectedPackageIndex !== null &&\n                                    cachedFlights[openedId] &&\n                                    cachedFlights[openedId][selectedPackageIndex]\n                                        ? cachedFlights[openedId][selectedPackageIndex]\n                                        : flight\n                                \"\n                                (openTerms)=\"openTerms.emit(flight)\"\n                                (openCheckinAllowanceInfo)=\"openCheckinAllowanceInfo.emit(flight.checkinAllowance)\"\n                            ></tz-flight-list-item-description>\n                        </ion-item>\n                    </ion-accordion>\n\n                    <tz-flight-item-desc-packages\n                        *ngIf=\"(platformService.isMobileDevice$ | async) === false && showPackages(flight)\"\n                        [packages]=\"cachedFlights[selectedId ? selectedId : openedId]\"\n                        [selectedPackageIndex]=\"selectedPackageIndex\"\n                        [packageStartIdx]=\"packageStartIdx\"\n                        (changeSelectedPackageIndex)=\"onSelectPackage($event, flight.id)\"\n                    ></tz-flight-item-desc-packages>\n\n                    <div\n                        *ngIf=\"\n                            (platformService.isMobileDevice$ | async) === false &&\n                            openedId === flight.id &&\n                            cachedFlights[flight.id]?.length === 1 &&\n                            isOpenFlightDes &&\n                            !(\n                                (twoWayFlight && selectedOnWardId && selectedReturnId) ||\n                                (!twoWayFlight && selectedOnWardId)\n                            )\n                        \"\n                        class=\"confirm-and-continue-block\"\n                    >\n                        <tz-service-booking-confirmation\n                            [hideCancelBtn]=\"\n                                !(\n                                    (twoWayFlight && selectedOnWardId && selectedReturnId) ||\n                                    (!twoWayFlight && selectedOnWardId)\n                                )\n                            \"\n                            (cancelSelection)=\"onCancelSelection()\"\n                            (submitBooking)=\"onSubmitBooking(cachedFlights[flight.id][0])\"\n                        ></tz-service-booking-confirmation>\n                    </div>\n                    <div\n                        class=\"flight-list-item__bottom-divider\"\n                        *ngIf=\"!last && (platformService.isMobileDevice$ | async)\"\n                    ></div>\n                </div>\n            </virtual-scroller>\n        </ion-accordion-group>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FlightsComponent } from './flights.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FlightsComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class FlightsRoutingModule {}\n","import { Component, ElementRef, Injector, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CachedFlights, Flight } from '@schemas/modules/flights/flight';\nimport { FlightsResponse } from '@schemas/modules/flights/flights.response';\nimport { FilterReferenceItem } from '@schemas/modules/core/filters/service-filter';\nimport { Trip } from '@core/constants/trip';\nimport { FlightSearchQueryParams } from '@schemas/modules/flights/flight-search-query-params';\nimport { FlightsService } from '@services/modules/transport/flights/flights.service';\nimport { FlightTrainSearchService, IHasTransport } from '@services/services/flight-train-search.service';\nimport { FlightListMetadata } from '@schemas/modules/flights/flight-list-metadata';\nimport { ICart } from '@schemas/modules/cart/cart';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { BaseServiceComponent } from '../../components/base-service-component/base-service.component';\nimport { IFlightsCartData } from '@schemas/modules/flights/flights-cart-data';\nimport { SortByValueOption } from '@schemas/modules/core/sort-by-value.option';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { finalize, skip, takeUntil, tap } from 'rxjs/operators';\nimport { FlightsSort } from './flights.sort';\nimport { MobFlightDetailsComponent } from './components/mob-flight-details/mob-flight-details.component';\nimport { FilterService } from '@services/modules/inactivity/filter.service';\nimport { SearchUtilsService } from '@services/modules/search/utils/search.utils';\nimport { ResultsFiltersUtils } from '../../results-filters/results-filters.utils.service';\n\n@Component({\n    selector: 'tz-flights',\n    templateUrl: './flights.component.html',\n    styleUrls: ['./flights.component.scss'],\n})\nexport class FlightsComponent extends BaseServiceComponent implements OnInit, OnDestroy {\n    @ViewChild('flightList') flightListElementReference?: ElementRef;\n    @ViewChild('flightListSkeletonLoader') flightListSkeletonLoaderElementReference?: ElementRef;\n    @ViewChild('flightSkeleton') flightSkeleton?: ElementRef;\n    @ViewChild('selectedFlights') selectedFlights?: ElementRef;\n    @ViewChild('confirmationComponent') confirmationComponent?: ElementRef;\n    @ViewChild('confirmationComponentReplacer') confirmationComponentReplacer?: ElementRef;\n    public cancelFlights$: Subject<boolean> = new Subject();\n    public cartData: IFlightsCartData | undefined;\n    public flightListMetadata: FlightListMetadata = { count: 0 };\n    public flights: Flight[] = [];\n    public flightsFilter: FilterReferenceItem = [];\n    public journeyType: Trip;\n    public packages: Flight[] = [];\n    public selectedFlight: Flight | undefined | null = null;\n    public selectedFiltersCount = 0;\n    public cachedFlights: CachedFlights = {};\n    public selectedId = '';\n    public twoWayFlight = false;\n    public selectedFlightId: string | undefined | null;\n    public twoTransports: IHasTransport = { has: null } as IHasTransport;\n    public sortByOptions: SortByValueOption[] = FlightsSort;\n    public filterQueryParams: FlightSearchQueryParams = {};\n    public serviceTitle = '';\n    public isSelectedChangeOptions = false; // set to true when changing selected options\n    public totalPassengers = 0;\n\n    private readonly serviceId = ServiceId.FLIGHT;\n    private editListener = -1;\n    private repriceListenerId = -1;\n    private flightRecommendedID = '';\n    private resultsCount$ = new Subject<number>();\n    private loadPackagesProcessing = false;\n    private backUpResponseForFlights: any = {};\n\n    constructor(\n        private flightService: FlightsService,\n        private flightTrainSearchService: FlightTrainSearchService,\n        private injector: Injector\n    ) {\n        super(injector);\n        this.journeyType = this.searchDataService.travelType;\n        this.isNextSummary = this.nextIsSummary();\n        this.flightTrainSearchService.twoTransports\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((twoTransports) => (this.twoTransports = twoTransports));\n    }\n\n    get isEnableClearFilter(): boolean {\n        return FilterService.enableClearAll(this.flightsFilter);\n    }\n\n    ngOnInit(): void {\n        this.initSearchParams();\n        this.initializeFlightsComponent(true);\n        if (this.searchRunning()) {\n            this.showSkeletonLoader(true);\n        } else {\n            this.loadFlightsData(true);\n            this.settingsService.selectedLanguageSubject.pipe(skip(1), takeUntil(this.destroy$)).subscribe(() => {\n                this.serviceTitle = this.formServiceTitle(ServiceId.FLIGHT_TRAIN, this.twoWayFlight, this.serviceId);\n                this.initializeFlightsComponent(false);\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.listenersService.unregisterListener(this.editListener);\n        this.listenersService.unregisterListener(this.repriceListenerId);\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n\n    public onFilterChanged($event: FilterReferenceItem): void {\n        this.scrollToServiceContainer();\n        this.resetPaginationParameters();\n        this.flightsFilter = $event;\n        this.filterFlights();\n    }\n\n    public sortFlights(sortValue: string): void {\n        this.resetPaginationParameters();\n        SearchUtilsService.saveSortingValue(ServiceId.FLIGHT, sortValue);\n        this.filterQueryParams.sort_by = sortValue;\n        this.loadFlightsData();\n    }\n\n    public onSelectedFlight(selectedFlight: Flight): void {\n        this.confirmable = true;\n        this.selectFlight(selectedFlight);\n        this.scrollToConfirmationBlock();\n    }\n\n    public onSelectPackage(selectedFlight: { package: Flight; flightId: string }): void {\n        this.selectedFlightId = selectedFlight.package.id;\n        if (this.cachedFlights[selectedFlight.flightId]?.length > 1) {\n            this.confirmable = true;\n            this.scrollToConfirmationBlock();\n        }\n\n        this.selectFlight(selectedFlight.package);\n    }\n\n    public toggleFlight(flight: Flight): void {\n        this.selectedId = flight.id;\n        this.loadPackages(flight).subscribe(() => {});\n    }\n\n    public onSubmitBooking(): void {\n        if (this.selectedFlight) {\n            this.addItemToCart(this.selectedFlight);\n        }\n    }\n\n    public onCancelSelection(): void {\n        this.resetData(true);\n        this.scrollToServiceContainer();\n        this.handleFlightsDataResponse(this.backUpResponseForFlights);\n    }\n\n    public onOpenFilterPopup(): void {\n        const filterFlights: BehaviorSubject<FilterReferenceItem> = new BehaviorSubject(this.flightsFilter);\n        filterFlights.pipe(takeUntil(this.destroy$)).subscribe((filter: FilterReferenceItem) => {\n            this.flightsFilter = filter;\n            this.filterFlights();\n        });\n        this.openFilterDialog(filterFlights, this.resultsCount$);\n    }\n\n    public nextPage(): void {\n        if (!this.loading && this.flightListMetadata.count > 0 && this.start < this.flightListMetadata.count) {\n            const params = {\n                start: this.start,\n                limit: this.flightListMetadata.increment,\n                sortBy: this.filterQueryParams.sort_by,\n            };\n            this.loading = true;\n            this.flightService\n                .paginate(this.serviceId, params)\n                .pipe(\n                    finalize(() => {\n                        this.loading = false;\n                    })\n                )\n                .subscribe(\n                    (flights: Flight[]) => {\n                        const flightWithRecommended = this.flightService.handlingData(\n                            flights,\n                            this.flightRecommendedID,\n                            null\n                        );\n                        this.flights = [...this.flights, ...flightWithRecommended];\n\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        if (flights.length >= this.flightListMetadata.count) {\n                            this.isListCompleted = true;\n                        } else {\n                            this.isListCompleted = false;\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            this.start += this.flightListMetadata.increment!;\n                        }\n\n                        if (this.isMainSearch()) {\n                            this.backUpResponseForFlights.results = this.flights;\n                        }\n                    },\n                    (error: any) => {\n                        console.log('pagination error', error);\n                    }\n                );\n        }\n    }\n\n    public onOnwardFlightChanged(onWardFlightId?: string): void {\n        this.filterQueryParams.onwardId = onWardFlightId ? onWardFlightId : '';\n        if (!onWardFlightId) {\n            this.selectedFlight = null;\n            this.filterQueryParams.selected_id = '';\n        }\n        this.onSelectedFlightChanged();\n    }\n\n    public isSelectedShowingPackage(isShowing: boolean): void {\n        this.isSelectedChangeOptions = isShowing;\n    }\n\n    public onReturnFlightChanged(returnFlightId?: string): void {\n        this.filterQueryParams.returnId = returnFlightId ? returnFlightId : '';\n        if (!returnFlightId) {\n            this.selectedFlight = null;\n            this.filterQueryParams.selected_id = '';\n        }\n        this.onSelectedFlightChanged();\n    }\n\n    public addItemToCart(flight: Flight): void {\n        this.flightService\n            .addFlightToCart(flight)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(\n                (response: ICart) => {\n                    this.finishSelectFlight();\n                },\n                (error) => {\n                    console.log(error);\n                }\n            );\n    }\n\n    public onChangeCartTickets(): void {\n        if (this.flightListSkeletonLoaderElementReference) {\n            this.scrollToElement(this.flightListSkeletonLoaderElementReference);\n        } else {\n            this.scrollToElement(this.flightListElementReference);\n        }\n    }\n\n    public onChangeCartTicketOptions(cartFlight: Flight): void {\n        this.loadPackages(cartFlight).subscribe(() => {\n            if (!this.platformService.isMobileDevice) {\n                this.scrollToConfirmationBlockReplacer();\n            }\n\n            if (this.platformService.isMobileDevice) {\n                this.showFlightDetails(cartFlight);\n            }\n        });\n    }\n\n    public showFlightDetails(flight: Flight): void {\n        if (this.loadPackagesProcessing) {\n            return;\n        }\n        this.loadPackages(flight).subscribe(() => {\n            this.modalService\n                .createDetailsPage(MobFlightDetailsComponent, {\n                    data: {\n                        flight,\n                        flightsPackages: this.cachedFlights[flight.id],\n                        totalPassengers: this.totalPassengers,\n                    },\n                    title: 'FLIGHT.Review_And_Confirm',\n                })\n                .then((modal) => {\n                    if (modal.data?.flight) {\n                        this.addItemToCart(modal.data.flight);\n                    }\n                    if (modal.data?.nextService) {\n                        this.finishSelectFlight();\n                    }\n                });\n        });\n    }\n\n    public onRemovedSelectedFlight(optionId: string | undefined): void {\n        this.removeService(this.serviceId, optionId).then(\n            (isRemoved: boolean) => {\n                console.log('remove success');\n            },\n            (error) => {\n                console.error(error);\n            }\n        );\n    }\n\n    public onOpenFilterModal(): void {\n        const filterFlights: BehaviorSubject<FilterReferenceItem> = new BehaviorSubject(this.flightsFilter);\n        filterFlights.pipe(takeUntil(this.destroy$)).subscribe((filter: FilterReferenceItem) => {\n            this.flightsFilter = filter;\n            this.filterFlights();\n        });\n        this.openFilterModal(filterFlights, this.resultsCount$);\n    }\n\n    public onResetFilter(): void {\n        const filters$: Subject<FilterReferenceItem> = new Subject();\n        filters$.pipe(takeUntil(this.destroy$)).subscribe((filter: FilterReferenceItem) => {\n            this.flightsFilter = filter;\n            this.filterFlights();\n        });\n        BaseServiceComponent.resetFilter(this.flightsFilter, filters$);\n    }\n\n    public mobOpenSort(): void {\n        const sort$: Subject<string> = new Subject<string>();\n        sort$.pipe(takeUntil(this.destroy$)).subscribe((sortKey: string) => {\n            this.sortFlights(sortKey);\n        });\n\n        this.openSortMob(this.sortByOptions, this.filterQueryParams.sort_by, sort$);\n    }\n\n    public onOpenTransportTerms(selectedFlight: Flight): void {\n        this.flightService.showFlightTrems(selectedFlight);\n    }\n\n    public onOpenCheckinAllowance(allowanceType: number): void {\n        this.flightService.showFlightCheckinAllowance(allowanceType);\n    }\n\n    private finishSelectFlight(): void {\n        this.userSearchService.searchCheckDep(ServiceId.FLIGHT, this.nextIsSummary(), false, false, true);\n    }\n\n    private handleExtraParams() {\n        const state = history.state;\n        if (state && state.extra) {\n            for (const extraAction in state.extra) {\n                if (state.extra.hasOwnProperty(extraAction)) {\n                    switch (extraAction) {\n                        case 'changeTickets':\n                            this.onChangeCartTickets();\n                            break;\n                        case 'changeOptions':\n                        // this.scrollToConfirmationBlockReplacer();\n                    }\n                }\n            }\n        }\n    }\n\n    private selectFlight(selectedFlight: Flight): void {\n        this.filterQueryParams.selected_id = selectedFlight.id;\n        this.filterQueryParams.onwardId = selectedFlight.departureSummary.tripID;\n        this.filterQueryParams.returnId = selectedFlight.returnSummary.tripID;\n        this.selectedFlight = selectedFlight;\n        this.handleFlightsDataResponse({\n            bestValueFlight: this.flightRecommendedID,\n            count: 1,\n            increment: 10,\n            limiter: 10,\n            nbOnwards: 0,\n            nbReturns: 0,\n            ogs: this.flightsFilter,\n            results: [selectedFlight] as Flight[],\n            selectedID: this.filterQueryParams.selected_id,\n        } as FlightsResponse);\n        this.resultsCount$.next(1);\n        this.isListCompleted = true;\n        //this.filterFlights();\n    }\n\n    private initSearchParams(): void {\n        this.filterQueryParams = {\n            sort_by: 'bestValue',\n            selected_id: '',\n        };\n        this.setSortingValue();\n    }\n\n    private resetData(preserveData = false) {\n        this.selectedFlight = null;\n        this.cancelFlights$.next(true);\n        this.selectedFlightId = null;\n        this.confirmable = false;\n        this.initSearchParams();\n        if (preserveData) {\n            return;\n        }\n        this.packages = [];\n        this.cachedFlights = {};\n        this.loadPackagesProcessing = false;\n        this.flights = [];\n    }\n\n    private resetAndLoadFlightData(): void {\n        this.resetData();\n        this.loadFlightsData(false);\n    }\n\n    private loadFlightsData(checkConsistency: boolean = false): void {\n        this.serviceTitle = this.formServiceTitle(ServiceId.FLIGHT_TRAIN, this.twoWayFlight, this.serviceId);\n        const search = this.searchDataService.getSearch(ServiceId.FLIGHT_TRAIN);\n        this.totalPassengers = search.passengers.total;\n\n        this.resetPaginationParameters();\n        this.checkResultsAvailable(this.serviceId);\n        this.showSkeletonLoader(true);\n        this.flightService\n            .searchServiceData(this.serviceId, this.filterQueryParams, checkConsistency)\n            .pipe(\n                takeUntil(this.destroy$),\n                finalize(() => {\n                    this.startPollerIfTheFullDataIsNotLoaded(this.serviceId, this.filterFlights.bind(this, true));\n                    this.handleExtraParams();\n                    this.chunkReceived = true;\n                    /* if (checkConsistency){\n                        this.handleExtraParams()\n                    }*/\n                })\n            )\n            .subscribe(\n                (flightsResponse: FlightsResponse) => {\n                    this.hideSkeletonLoader(true);\n                    this.handleFlightsDataResponse(flightsResponse);\n                    this.isSelectedChangeOptions = false;\n                    if (!flightsResponse.count && !this.filterCount(flightsResponse.ogs)) {\n                        this.flightService.checkServiceFailedAndNotify(this.serviceId);\n                    }\n                    setTimeout(() => {\n                        console.log('set prerender ready');\n                        window.prerenderReady = true;\n                    }, 1500);\n                },\n                (error: any) => {}\n            );\n    }\n\n    private onSelectedFlightChanged(): void {\n        this.selectedFlight = null;\n        this.filterFlights();\n        this.scrollToServiceContainer();\n    }\n\n    private loadPackages(selectedFlight: Flight): Observable<Flight[]> {\n        if (!selectedFlight) {\n            return new Observable((observer) => observer.next(selectedFlight));\n        }\n\n        if (this.cachedFlights[selectedFlight.id]) {\n            return new Observable((observer) => observer.next(this.cachedFlights[selectedFlight.id]));\n        }\n\n        this.loadPackagesProcessing = true;\n\n        return this.flightService.getPackages(selectedFlight).pipe(\n            tap((packages: Flight[]) => {\n                this.packages = packages;\n                this.cachedFlights[selectedFlight.id] = [...packages];\n                this.loadPackagesProcessing = false;\n            })\n        );\n    }\n\n    private handleFlightsDataResponse(flightsResponse: FlightsResponse): void {\n        this.filterQueryParams.refreshFilter = false;\n        this.flightsFilter = flightsResponse.ogs;\n        this.filterService.filterChange$.next(flightsResponse.ogs);\n        this.flightRecommendedID = flightsResponse.bestValueFlight;\n        this.flightService.minFlightsPrice = flightsResponse.minimalPrice;\n\n        this.handlingFlightsData(flightsResponse.results);\n\n        this.selectedFiltersCount = ResultsFiltersUtils.selectedFiltersCounter(this.flightsFilter);\n\n        if (this.loadPackages) {\n            this.loadPackages(this.flights[0]).subscribe(() => {});\n        }\n\n        const { count, selectedID, increment, limiter } = flightsResponse;\n        this.flightListMetadata = {\n            count,\n            selectedID,\n            increment,\n        };\n        this.start = limiter;\n        this.resultsCount$.next(this.flightListMetadata.count);\n        if (this.isMainSearch()) {\n            this.backUpResponseForFlights = flightsResponse;\n        }\n    }\n\n    private filterFlights(metadataLoading = false): void {\n        if (!metadataLoading) {\n            this.loaderService.skeletonLoading = true;\n        }\n        if (!this.selectedFlight) {\n            this.resetPackages();\n        }\n\n        this.flightService\n            .filterServiceData(this.serviceId, this.filterQueryParams, this.flightsFilter)\n            .pipe(\n                takeUntil(this.destroy$),\n                finalize(() => {\n                    this.hideSkeletonLoader(true);\n                    this.handleExtraParams();\n                })\n            )\n            .subscribe(\n                (flightsResponse: FlightsResponse) => {\n                    this.isListCompleted = false;\n                    this.handleFlightsDataResponse(flightsResponse);\n                    this.resultsCount$.next(flightsResponse.count);\n                },\n                (error: any) => {}\n            );\n    }\n\n    private resetPackages(): void {\n        this.confirmable = false;\n        this.filterQueryParams.selected_id = '';\n        this.packages = [];\n    }\n\n    private getCartServiceData() {\n        this.cartData = this.flightService.getSelectedFLightsFromCart();\n    }\n\n    private nextIsSummary(): boolean {\n        const state = this.router.getCurrentNavigation()?.extras?.state;\n        const from = state ? state['from'] : '';\n        return from === StateFrom.SUMMARY || from === StateFrom.TAB;\n    }\n\n    private initializeFlightsComponent(isInit: boolean = false) {\n        this.twoWayFlight = this.journeyType === Trip.ROUND_TRIP;\n        this.getCartServiceData();\n        if (isInit) {\n            this.editListener = this.listenersService.registerListener(\n                ListenerId.LISTEN_EDIT_FLIGHT,\n                this.resetAndLoadFlightData,\n                this\n            );\n            this.currencyService.selectedCurrencySubject.pipe(skip(1), takeUntil(this.destroy$)).subscribe(() => {\n                this.cachedFlights = {};\n                this.loadFlightsData();\n            });\n\n            this.repriceListenerId = this.listenersService.registerListener(\n                ListenerId.LISTEN_REPRICED,\n                this.getCartServiceData,\n                this\n            );\n        } else {\n            this.filterFlights();\n        }\n    }\n\n    private handlingFlightsData(flights: Flight[]): void {\n        const cartData = this.cartData;\n        const cartFlightsID = cartData && cartData.items.length ? cartData.items[0].selectedItem.id : null;\n        this.flights = this.flightService.handlingData<Flight>(flights, this.flightRecommendedID, cartFlightsID);\n        this.flights = this.filterFlightsData(this.flights);\n        if (this.isMainSearch()) {\n            this.backUpResponseForFlights.results = this.flights;\n        }\n    }\n\n    private filterFlightsData(flights: Flight[]): Flight[] {\n        const cartId = this.cartData?.items[0] ? this.cartData?.items[0].selectedItem.data.tripId : null;\n        if (cartId) {\n            return flights.filter((item) => item.tripId !== cartId);\n        }\n\n        return flights;\n    }\n\n    private setSortingValue(): void {\n        const sort = SearchUtilsService.getSortingValue(ServiceId.FLIGHT);\n        if (sort) {\n            this.filterQueryParams.sort_by = sort;\n        }\n    }\n\n    private scrollToConfirmationBlock(): void {\n        setTimeout(() => {\n            requestAnimationFrame(() => {\n                requestAnimationFrame(() => {\n                    this.scrollToElement(this.confirmationComponent, { block: 'end' });\n                });\n            });\n        }, 500);\n    }\n\n    private scrollToConfirmationBlockReplacer(): void {\n        setTimeout(() => {\n            requestAnimationFrame(() => {\n                requestAnimationFrame(() => {\n                    this.scrollToElement(this.confirmationComponentReplacer, { block: 'end' });\n                });\n            });\n        }, 500);\n    }\n\n    private isMainSearch(): boolean {\n        return !(\n            this.filterQueryParams.returnId ||\n            this.filterQueryParams.onwardId ||\n            this.filterQueryParams.selected_id\n        );\n    }\n}\n","<div class=\"tz-container flights-container flex\" [hidden]=\"noResultAvailable && !skeletonFilterLoading\">\n    <div *ngIf=\"(isMobile$ | async) === false\" class=\"tz-filter-container\">\n        <tz-results-filters\n            [filter]=\"flightsFilter\"\n            [loading]=\"loaderService.skeletonLoading || notComplete\"\n            [disabled]=\"confirmable\"\n            (filterChanged)=\"onFilterChanged($event)\"\n        ></tz-results-filters>\n    </div>\n    <div class=\"flights-list-packages-container\">\n        <tz-flight-train-button-toggle\n            [selectedButton]=\"'flights'\"\n            [skeletonLoading]=\"loaderService.skeletonLoading || notComplete || twoTransports.has === null\"\n            *ngIf=\"\n                (twoTransports.has || notComplete || twoTransports.has === null) &&\n                (platformService.isMobileDevice$ | async)\n            \"\n        ></tz-flight-train-button-toggle>\n        <div *ngIf=\"platformService.isMobileDevice$ | async\">\n            <tz-mob-filter-navbar\n                [sortKey]=\"filterQueryParams.sort_by\"\n                [sortByOptions]=\"sortByOptions\"\n                [isEnableClearFilter]=\"isEnableClearFilter\"\n                [filtersCount]=\"selectedFiltersCount\"\n                [skeletonLoading]=\"loaderService.skeletonLoading || notComplete\"\n                (openFilter)=\"onOpenFilterModal()\"\n                (resetFilter)=\"onResetFilter()\"\n                (openSort)=\"mobOpenSort()\"\n            ></tz-mob-filter-navbar>\n        </div>\n\n        <div *ngIf=\"(platformService.isMobileDevice$ | async) === false\" class=\"result-top-info-block-item\">\n            <tz-results-top-info-block blockType=\"blue\" [loading]=\"loaderService.skeletonLoading || notComplete\">\n                <div [innerHTML]=\"serviceTitle | safeHtml\"></div>\n            </tz-results-top-info-block>\n        </div>\n\n        <div class=\"flights-list-container\">\n            <div\n                *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n                class=\"flights-top-navbar flex align-center\"\n            >\n                <div class=\"flights-filter-btn inline-flex\" *ngIf=\"isMobile$ | async\">\n                    <tz-filter-btn\n                        [filterCount]=\"filterCount(flightsFilter)\"\n                        (clickFilter)=\"onOpenFilterPopup()\"\n                        (clearFilter)=\"onResetFilter()\"\n                    ></tz-filter-btn>\n                </div>\n\n                <tz-price-range-filter\n                    [sort]=\"filterQueryParams.sort_by\"\n                    [options]=\"sortByOptions\"\n                    [disabled]=\"confirmable\"\n                    [skeletonLoading]=\"loaderService.skeletonLoading || notComplete\"\n                    (sortChange)=\"sortFlights($event)\"\n                ></tz-price-range-filter>\n\n                <tz-flight-train-button-toggle\n                    [selectedButton]=\"'flights'\"\n                    [skeletonLoading]=\"loaderService.skeletonLoading || notComplete\"\n                    *ngIf=\"twoTransports.has\"\n                ></tz-flight-train-button-toggle>\n            </div>\n\n            <ng-container *ngIf=\"loaderService.skeletonLoading || !chunkReceived\">\n                <div\n                    #flightListSkeletonLoader\n                    class=\"flights-list-skeleton flex\"\n                    *ngIf=\"(platformService.isMobileDevice$ | async) === false\"\n                >\n                    <tz-flight-train-skeleton-loader [twoWay]=\"twoWayFlight\"></tz-flight-train-skeleton-loader>\n                </div>\n                <div #flightListSkeletonLoader *ngIf=\"platformService.isMobileDevice$ | async\">\n                    <tz-mob-flight-train-skeleton-loader [isFlight]=\"true\"></tz-mob-flight-train-skeleton-loader>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"!loaderService.skeletonLoading\">\n                <div class=\"flights-cart-data\" *ngIf=\"cartData && cartData.items.length\" #selectedFlights>\n                    <tz-selected-flights\n                        [serviceList]=\"true\"\n                        [flightCartData]=\"cartData\"\n                        (removedItem)=\"onRemovedSelectedFlight($event)\"\n                        (showingPackage)=\"isSelectedShowingPackage($event)\"\n                        (changeTickets)=\"onChangeCartTickets()\"\n                        (changeOptions)=\"onChangeCartTicketOptions($event)\"\n                        (newFlightSelected)=\"addItemToCart($event)\"\n                        (selectPackage)=\"onSelectPackage($event)\"\n                        [packages]=\"cachedFlights[cartData.items[0].selectedItem.id]\"\n                    ></tz-selected-flights>\n                </div>\n\n                <div class=\"flights-list flex\" #flightList>\n                    <tz-flights-list\n                        *ngIf=\"!isSelectedChangeOptions\"\n                        [flights]=\"flights\"\n                        [selectedId]=\"selectedFlightId\"\n                        [cachedFlights]=\"cachedFlights\"\n                        [isMobile$]=\"isMobile$\"\n                        [notComplete]=\"notComplete\"\n                        [twoWayFlight]=\"twoWayFlight\"\n                        [cancelFlights$]=\"cancelFlights$\"\n                        [flightListMetadata]=\"flightListMetadata\"\n                        [isListCompleted]=\"isListCompleted\"\n                        [selectedOnWardId]=\"filterQueryParams.onwardId\"\n                        [selectedReturnId]=\"filterQueryParams.returnId\"\n                        [(scrollElementIndex)]=\"scrollListElementIndex\"\n                        [totalPassengers]=\"totalPassengers\"\n                        [flightSelected]=\"confirmable && !isSelectedChangeOptions\"\n                        (selectedOnwardFlight)=\"onOnwardFlightChanged($event)\"\n                        (selectedReturnFlight)=\"onReturnFlightChanged($event)\"\n                        (cancelSelection)=\"onCancelSelection()\"\n                        (selectFlight)=\"onSelectedFlight($event)\"\n                        (selectPackage)=\"onSelectPackage($event)\"\n                        (openTerms)=\"onOpenTransportTerms($event)\"\n                        (openCheckinAllowanceInfo)=\"onOpenCheckinAllowance($event)\"\n                        (toggleFlight)=\"toggleFlight($event)\"\n                        (nextPage)=\"nextPage()\"\n                        (submitBooking)=\"addItemToCart($event)\"\n                        (showFlightDetails)=\"showFlightDetails($event)\"\n                    >\n                    </tz-flights-list>\n                </div>\n            </ng-container>\n        </div>\n\n        <div *ngIf=\"confirmable && !isSelectedChangeOptions\" #confirmationComponent class=\"confirm-and-continue-block\">\n            <tz-service-booking-confirmation\n                (cancelSelection)=\"onCancelSelection()\"\n                (submitBooking)=\"onSubmitBooking()\"\n            ></tz-service-booking-confirmation>\n        </div>\n        <div\n            class=\"confirm-and-continue-block-replacement\"\n            #confirmationComponentReplacer\n            *ngIf=\"!(confirmable && !isSelectedChangeOptions)\"\n        ></div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FlightsRoutingModule } from './flights-routing.module';\nimport { FlightsComponent } from './flights.component';\nimport { SharedModule } from '@shared/shared.module';\nimport { TransportCommonModule } from '../common/transport.common.module';\nimport { FlightsListComponent } from './components/flights-list/flights-list.component';\n// eslint-disable-next-line max-len\nimport { FlightListResultInformationComponent } from './components/flight-list-result-information/flight-list-result-information.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { ResultsCartItemSelectionModule } from '../../results-cart-item-selection.module';\n// eslint-disable-next-line max-len\nimport { ResultsFiltersModule } from '../../results-filters/results-filters.module';\nimport { MobFlightDetailsComponent } from './components/mob-flight-details/mob-flight-details.component';\n// eslint-disable-next-line max-len\nimport { MobFlightDetailsRouteSchemeComponent } from './components/mob-flight-details-route-scheme/mob-flight-details-route-scheme.component';\n// eslint-disable-next-line max-len\nimport { MobFlightDetailsRouteDetailsComponent } from './components/mob-flight-details-route-details/mob-flight-details-route-details.component';\n// eslint-disable-next-line max-len\nimport { MobFlightPricingPlansComponent } from './components/mob-flight-pricing-plans/mob-flight-pricing-plans.component';\n// eslint-disable-next-line max-len\nimport { MobFlightTermsConditionsModalComponent } from './components/mob-flight-terms-conditions-modal/mob-flight-terms-conditions-modal.component';\n\n@NgModule({\n    declarations: [\n        FlightsComponent,\n        FlightsListComponent,\n        FlightListResultInformationComponent,\n        MobFlightDetailsComponent,\n        MobFlightDetailsRouteDetailsComponent,\n        MobFlightDetailsRouteSchemeComponent,\n        MobFlightPricingPlansComponent,\n        MobFlightTermsConditionsModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FlightsRoutingModule,\n        SharedModule,\n        InfiniteScrollModule,\n        ResultsCartItemSelectionModule,\n        TransportCommonModule,\n        ResultsFiltersModule,\n    ],\n})\nexport class FlightsModule {}\n","import { SortByValueOption } from '@schemas/modules/core/sort-by-value.option';\n\nexport const FlightsSort: SortByValueOption[] = [\n    {\n        sort: 'bestValue',\n        label: 'GENERAL.SORT.BEST_VALUE',\n    },\n    {\n        sort: 'quickest',\n        label: 'GENERAL.SORT.QUICKEST',\n    },\n    {\n        sort: 'cheapest',\n        label: 'GENERAL.SORT.CHEAPEST',\n    },\n];\n"],"names":["EventEmitter","ServiceListComponent","ToolsService","i0","ctx_r14","flight_r5","ctx_r9","ctx_r19","ctx_r22","ctx_r25","ctx_r28","ctx_r30","ctx_r10","ctx_r33","ctx_r11","ctx_r36","ctx_r38","ctx_r40","ctx_r42","ctx_r43","ctx_r0","FlightsListComponent","constructor","renderer","platformService","undefined","count","ngOnInit","cancelFlights$","subscribe","cancel","isOpenFlightDes","openedId","selectedFlight","selectedOnWardId","selectedReturnId","selectedPackageIndex","checkAndScrollToSelectedIndex","ngAfterViewInit","setScrollingContainer","ngOnChanges","changes","flightSelected","addClass","listContainer","_a","nativeElement","setStyle","_b","handleScrollOnContainer","flights","length","onToggleFlightItem","onOnwardFlightChanged","selected","id","resetScrollSelectedIndex","index","findIndex","flight","twoWayFlight","selectedId","emitSelectedFlight","toggleFlight","emit","refreshScroller","selectedOnwardFlight","departureSummary","tripID","onReturnFlightChanged","selectedReturnFlight","returnSummary","onCancelSelection","cancelSelection","selectFlight","cachedFlights","packageStartIdx","i","scrollToElement","flightListItem","scrollElementIndexChange","setTimeout","offset","virtualScroller","scrollInto","showPackages","onSelectPackage","packgeDetail","flightId","pkgIndex","selectPackage","package","onSubmitBooking","submitBooking","onScroll","$event","isListCompleted","nextPage","identify","item","double","event","requestAnimationFrame","height","paddingElement","document","querySelector","getTransFormTranslateOfElement","currentScrolledListAmount","Math","abs","removeClass","_c","_d","element","selectRootElement","scrollingContainer","window","onShowFlightDetails","showFlightDetails","refresh","scrollElementIndex","scrollToIndex","selectors","viewQuery","ctx","BehaviorSubject","Observable","Subject","ServiceId","Trip","StateFrom","BaseServiceComponent","ListenerId","finalize","skip","takeUntil","tap","FlightsSort","MobFlightDetailsComponent","FilterService","SearchUtilsService","ResultsFiltersUtils","ctx_r1","ctx_r13","ctx_r2","ctx_r17","ctx_r16","ctx_r20","ctx_r4","ctx_r32","ctx_r34","ctx_r35","ctx_r26","ctx_r39","ctx_r41","ctx_r44","ctx_r45","ctx_r46","ctx_r47","ctx_r48","ctx_r49","ctx_r51","ctx_r53","FlightsComponent","flightService","flightTrainSearchService","injector","has","FLIGHT","journeyType","searchDataService","travelType","isNextSummary","nextIsSummary","twoTransports","pipe","destroy$","isEnableClearFilter","enableClearAll","flightsFilter","initSearchParams","initializeFlightsComponent","searchRunning","showSkeletonLoader","loadFlightsData","settingsService","selectedLanguageSubject","serviceTitle","formServiceTitle","FLIGHT_TRAIN","serviceId","ngOnDestroy","listenersService","unregisterListener","editListener","repriceListenerId","next","complete","onFilterChanged","scrollToServiceContainer","resetPaginationParameters","filterFlights","sortFlights","sortValue","saveSortingValue","filterQueryParams","sort_by","onSelectedFlight","confirmable","scrollToConfirmationBlock","selectedFlightId","loadPackages","addItemToCart","resetData","handleFlightsDataResponse","backUpResponseForFlights","onOpenFilterPopup","filter","openFilterDialog","resultsCount$","loading","flightListMetadata","start","params","limit","increment","sortBy","paginate","flightWithRecommended","handlingData","flightRecommendedID","isMainSearch","results","error","console","log","onWardFlightId","onwardId","selected_id","onSelectedFlightChanged","isSelectedShowingPackage","isShowing","isSelectedChangeOptions","returnFlightId","returnId","addFlightToCart","response","finishSelectFlight","onChangeCartTickets","flightListSkeletonLoaderElementReference","flightListElementReference","onChangeCartTicketOptions","cartFlight","isMobileDevice","scrollToConfirmationBlockReplacer","loadPackagesProcessing","modalService","createDetailsPage","data","flightsPackages","totalPassengers","title","then","modal","nextService","onRemovedSelectedFlight","optionId","removeService","isRemoved","onOpenFilterModal","openFilterModal","onResetFilter","filters$","resetFilter","mobOpenSort","sort$","sortKey","openSortMob","sortByOptions","onOpenTransportTerms","showFlightTrems","onOpenCheckinAllowance","allowanceType","showFlightCheckinAllowance","userSearchService","searchCheckDep","handleExtraParams","state","history","extra","extraAction","hasOwnProperty","bestValueFlight","limiter","nbOnwards","nbReturns","ogs","selectedID","setSortingValue","preserveData","packages","resetAndLoadFlightData","checkConsistency","search","getSearch","passengers","total","checkResultsAvailable","searchServiceData","startPollerIfTheFullDataIsNotLoaded","bind","chunkReceived","flightsResponse","hideSkeletonLoader","filterCount","checkServiceFailedAndNotify","prerenderReady","observer","getPackages","refreshFilter","filterService","filterChange$","minFlightsPrice","minimalPrice","handlingFlightsData","selectedFiltersCount","selectedFiltersCounter","metadataLoading","loaderService","skeletonLoading","resetPackages","filterServiceData","getCartServiceData","cartData","getSelectedFLightsFromCart","router","getCurrentNavigation","extras","from","SUMMARY","TAB","isInit","ROUND_TRIP","registerListener","LISTEN_EDIT_FLIGHT","currencyService","selectedCurrencySubject","LISTEN_REPRICED","cartFlightsID","items","selectedItem","filterFlightsData","cartId","tripId","sort","getSortingValue","confirmationComponent","block","confirmationComponentReplacer"],"sourceRoot":"webpack:///"}