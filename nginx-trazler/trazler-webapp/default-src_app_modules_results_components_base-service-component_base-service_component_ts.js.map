{"version":3,"file":"default-src_app_modules_results_components_base-service-component_base-service_component_ts.js","mappings":"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","sources":["./src/app/modules/results/components/base-service-component/base-service.component.ts","./src/app/modules/results/components/base-service-component/base-service.component.html"],"sourcesContent":["import { Component, ElementRef, Injector } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { ScreenDetectorService } from '@services/screen-detector.service';\nimport { DialogService } from '@services/dialog.service';\nimport { Router } from '@angular/router';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { ListenersService } from '@services/modules/core/listeners-service';\nimport { UserSearchService } from '@services/searchEngine/services/user-search-service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ScrollService } from '@services/modules/core/scroll-service';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { SettingsService } from '@services/services/settings-service';\nimport { CurrencyService } from '@services/services/currency-service';\nimport { FilterDialogComponent } from '../../results-filters/components/filter-dialog/filter-dialog.component';\nimport { FilterReferenceItem } from '@schemas/modules/core/filters/service-filter';\nimport { StateFrom } from '@core/constants/state-from.const';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { PollerService } from '@services/modules/core/poller.service';\nimport { ServiceId } from '@core/constants/service-id.const';\nimport { CartRemoveService } from '@services/modules/cart/services/cart-remove-service';\nimport { PlatformService } from '@services/platform.service';\nimport { DateRangePipe } from '@shared/pipes/date-range.pipe';\nimport { TzDatePipe } from '@shared/pipes/tz-date.pipe';\nimport { ILocation } from '@schemas/modules/core/location.model';\nimport { ModalService } from '@services/modal.service';\nimport { MobFilterModalComponent } from '../mob-filter-modal/mob-filter-modal.component';\nimport { ListenerId } from '@core/constants/listener-id.const';\nimport { TzFocusType } from '@core/constants/keyboard-key-types.const';\nimport { FilterService } from '@services/modules/inactivity/filter.service';\nimport { MobSortResultsModalComponent } from '../mob-sort-results-modal/mob-sort-results-modal.component';\nimport { SortByValueOption } from '@schemas/modules/core/sort-by-value.option';\nimport { Trip } from '@core/constants/trip';\nimport { DatesService } from '@services/modules/search/utils/dates.service';\nimport { IHotelNames } from '@schemas/modules/accommodations/accommodations-response';\n\n@Component({\n    selector: 'tz-base-service-component',\n    templateUrl: './base-service.component.html',\n    styleUrls: ['./base-service.components.scss'],\n})\nexport class BaseServiceComponent {\n    public isMobile$?: BehaviorSubject<boolean>;\n    public isNextSummary = false;\n    public confirmable = false;\n    public stateFrom: StateFrom | undefined | void;\n    public isListCompleted = false;\n    public scrollListElementIndex = 0;\n    public start = 0;\n    public loading = false;\n\n    public cartService: CartService;\n    public cartRouterService: CartRoutingService;\n    public dialogService: DialogService;\n    public listenersService: ListenersService;\n    public router: Router;\n    public screenSizeDetectorService: ScreenDetectorService;\n    public searchDataService: SearchDataService;\n    public userSearchService: UserSearchService;\n    public translateService: TranslateService;\n    public settingsService: SettingsService;\n    public destroy$: Subject<boolean> = new Subject<boolean>();\n    public currencyService: CurrencyService;\n    public loaderService: LoaderService;\n    public platformService: PlatformService;\n    public modalService: ModalService;\n    public filterService: FilterService;\n    public hotelNames: IHotelNames[] = [];\n    public notComplete = false;\n    public chunkReceived = false;\n    public skeletonFilterLoading = false;\n    public noResultAvailable = false;\n\n    private cartRemoveService: CartRemoveService;\n    private pollerService: PollerService;\n    private scrollService: ScrollService;\n    private dateRange: DateRangePipe;\n    private datePipe: TzDatePipe;\n    private datesService: DatesService;\n    private readonly isSearchRunning: boolean;\n    private listenerIds: number[] = [];\n\n    constructor(injector: Injector) {\n        this.cartService = injector.get(CartService);\n        this.dialogService = injector.get(DialogService);\n        this.listenersService = injector.get(ListenersService);\n        this.router = injector.get(Router);\n        this.screenSizeDetectorService = injector.get(ScreenDetectorService);\n        this.searchDataService = injector.get(SearchDataService);\n        this.userSearchService = injector.get(UserSearchService);\n        this.translateService = injector.get(TranslateService);\n        this.scrollService = injector.get(ScrollService);\n        this.cartRouterService = injector.get(CartRoutingService);\n        this.settingsService = injector.get(SettingsService);\n        this.currencyService = injector.get(CurrencyService);\n        this.loaderService = injector.get(LoaderService);\n        this.pollerService = injector.get(PollerService);\n        this.cartRemoveService = injector.get(CartRemoveService);\n        this.userSearchService = injector.get(UserSearchService);\n        this.platformService = injector.get(PlatformService);\n        this.dateRange = injector.get(DateRangePipe);\n        this.datePipe = injector.get(TzDatePipe);\n        this.isSearchRunning = this.checkPreSearchState();\n        this.isMobile$ = this.screenSizeDetectorService.isMobile;\n        this.modalService = injector.get(ModalService);\n        this.filterService = injector.get(FilterService);\n        this.datesService = injector.get(DatesService);\n\n        this.listenerIds.push(\n            this.listenersService.registerListener(ListenerId.LISTEN_SEARCH_ERR, this.checkResultsAvailable.bind(this))\n        );\n        this.listenerIds.push(\n            this.listenersService.registerListener(ListenerId.LISTEN_UPDATE_SEARCH, this.noResultMoveNext.bind(this))\n        );\n        this.listenerIds.push(\n            this.listenersService.registerListener(ListenerId.LISTEN_EDIT_SEARCH, this.listenEditSearch.bind(this))\n        );\n        this.destroy$.subscribe(() => {\n            this.baseDestroy();\n        });\n    }\n\n    public static resetFilter(filter: FilterReferenceItem, filter$: Subject<FilterReferenceItem>): void {\n        for (const filterItem of filter) {\n            FilterService.clearAll(filterItem);\n        }\n        filter$.next(filter);\n    }\n\n    private static formAddress(address: ILocation): string {\n        const addressStr = address.cityName && address.cityName !== '' ? address.cityName : address.displayStr;\n        return addressStr.split(',')[0];\n    }\n\n    public cbInterceptor(cb: any, ...args: any) {\n        this.notComplete = false;\n        cb(args);\n    }\n\n    public scrollToElement(\n        element: ElementRef | HTMLElement | string | undefined,\n        options?: ScrollIntoViewOptions\n    ): void {\n        if (element) {\n            this.scrollService.scrollToElement(element, options);\n        }\n    }\n\n    public openFilterDialog(\n        filter: BehaviorSubject<FilterReferenceItem>,\n        resultsCount: Subject<number>,\n        searchHotel$?: Subject<IHotelNames>\n    ): void {\n        const searchHotel = {\n            hotelNames: this.hotelNames,\n            searchHotel$,\n        };\n\n        this.dialogService.openFilterDialog(FilterDialogComponent, {\n            filter,\n            resultsCount,\n            searchHotel: searchHotel$ ? searchHotel : undefined,\n        });\n    }\n\n    public openFilterModal(filter: BehaviorSubject<FilterReferenceItem>, resultsCount$: Subject<number>): void {\n        this.modalService.createMainModal(MobFilterModalComponent, {\n            data: { filter, resultsCount$ },\n            title: 'FILTER.COMPONENT.FILTER',\n        });\n    }\n\n    public openSortMob(sortByOptions: SortByValueOption[], sortKey: string | undefined, sort$: Subject<string>): void {\n        this.modalService\n            .createMainModal(MobSortResultsModalComponent, {\n                data: { sortByOptions, sortKey },\n                title: 'FILTER.COMPONENT.SORT_BY',\n            })\n            .then((modal: any) => {\n                if (modal.data) {\n                    sort$.next(modal.data);\n                }\n            });\n    }\n\n    public getStateFromParamFromRouter(): StateFrom | void {\n        const state = this.router.getCurrentNavigation()?.extras?.state;\n        if (state) {\n            return state['from'];\n        }\n    }\n\n    public searchRunning(): boolean {\n        return this.isSearchRunning;\n    }\n\n    public removeService(serviceId: ServiceId, optionId?: string, checkBooking?: boolean): Promise<boolean> {\n        if (optionId === '') {\n            optionId = undefined;\n        }\n\n        return this.cartRemoveService.removeTheService(serviceId, optionId, checkBooking);\n    }\n\n    public setListScrollingElementIndex(index: number): void {\n        this.scrollListElementIndex = index;\n    }\n\n    public resetPaginationParameters(): void {\n        this.start = 0;\n        this.isListCompleted = false;\n    }\n\n    public formServiceTitle(serviceId: ServiceId, isRoundTrip = false, currentService?: ServiceId): string {\n        const searchInfos = this.searchDataService.getSearchData(serviceId);\n        const travelType = isRoundTrip ? Trip.ROUND_TRIP : Trip.ONE_WAY;\n        if (!searchInfos) {\n            return '';\n        }\n\n        const formatTitleStr = (serviceKey: string, title: string, dates: string) =>\n            `${this.translateService.instant(\n                serviceKey\n            )}&nbsp;·&nbsp;<div class='overflow-ellipsis'>${title}</div>,&nbsp;${dates}`;\n\n        switch (serviceId) {\n            case ServiceId.FLIGHT_TRAIN: {\n                if (!searchInfos.to || !searchInfos.tripCal) {\n                    return '';\n                }\n\n                const addrStr = this.translateService.instant(\n                    'FLIGHT_TRAIN.' + (isRoundTrip ? 'ROUND_TRIP_OPTION_TO' : 'ONE_WAY_OPTION_TO'),\n                    { address: BaseServiceComponent.formAddress(searchInfos.to) }\n                );\n                const datePartString = this.datesService.getCalendarDateString(\n                    searchInfos.tripCal.fromDate,\n                    searchInfos.tripCal.toDate,\n                    '',\n                    { time: false },\n                    '',\n                    '',\n                    travelType\n                );\n\n                return formatTitleStr(\n                    currentService === ServiceId.FLIGHT ? 'FLIGHT.FLIGHT' : 'TRAIN.TRAIN',\n                    addrStr,\n                    datePartString\n                );\n            }\n            case ServiceId.ACC: {\n                if (!searchInfos.address || !searchInfos.tripCal) {\n                    return '';\n                }\n\n                const addrStr = `${this.translateService.instant('GENERAL.IN_AND_AROUND', {\n                    address: BaseServiceComponent.formAddress(searchInfos.address),\n                })}`;\n                const datePartString = this.datesService.getCalendarDateString(\n                    searchInfos.tripCal.fromDate,\n                    searchInfos.tripCal.toDate,\n                    '',\n                    { time: false },\n                    '',\n                    '',\n                    travelType\n                );\n\n                return formatTitleStr('HOTELS.HOTELS', addrStr, datePartString);\n            }\n            case ServiceId.TRANSFER: {\n                if (!searchInfos.transferCal) {\n                    return '';\n                }\n\n                const serviceName = this.translateService.instant('TRANSFER.TRANSFERS');\n                const tripType = this.translateService.instant(\n                    'TRANSFER.' + (isRoundTrip ? 'ROUND_TRIP_OPTIONS' : 'ONE_WAY_OPTIONS')\n                );\n                const datePartString = this.datesService.getCalendarDateString(\n                    searchInfos.transferCal.fromDate,\n                    searchInfos.transferCal.toDate,\n                    '',\n                    { time: true },\n                    searchInfos.transferCal.fromTime,\n                    searchInfos.transferCal.toTime,\n                    travelType\n                );\n\n                return `${serviceName}&nbsp;·&nbsp;${tripType},&nbsp;${datePartString}`;\n            }\n            case ServiceId.CAR_RENTAL: {\n                if (!searchInfos.to || !searchInfos.rentalCal) {\n                    return '';\n                }\n\n                const addrStr = `${this.translateService.instant('GENERAL.IN_AND_AROUND', {\n                    address: BaseServiceComponent.formAddress(searchInfos.to),\n                })}`;\n                const datePartString = this.datesService.getCalendarDateString(\n                    searchInfos.rentalCal.fromDate,\n                    searchInfos.rentalCal.toDate,\n                    '',\n                    { time: true },\n                    searchInfos.rentalCal.fromTime,\n                    searchInfos.rentalCal.toTime,\n                    travelType\n                );\n\n                return formatTitleStr('SEARCH.TAB.CAR_RENTALS', addrStr, datePartString);\n            }\n        }\n\n        return '';\n    }\n\n    public scrollTo(scrollId: string, scrollTop = 68, smooth = true): void {\n        this.scrollService.scrollTo(scrollId, scrollTop, smooth);\n    }\n\n    public filterCount(filter: FilterReferenceItem) {\n        return FilterService.selctedfilterItem(filter);\n    }\n\n    protected startPollerIfTheFullDataIsNotLoaded(serviceId: ServiceId, callback: () => void) {\n        if (!this.isSearchComplete(serviceId)) {\n            this.notComplete = true;\n            this.skeletonFilterLoading = true;\n            this.getMetadataOfService(serviceId, callback);\n        } else {\n            this.hideFilterSkeletonLoader();\n            this.notComplete = false;\n        }\n    }\n\n    protected hideSkeletonLoader(filterLoader = false): void {\n        this.loaderService.skeletonLoading = false;\n        if (filterLoader) {\n            this.hideFilterSkeletonLoader();\n        }\n    }\n\n    protected showSkeletonLoader(filterLoader = false): void {\n        this.loaderService.skeletonLoading = true;\n        if (filterLoader) {\n            this.showFilterSkeletonLoader();\n        }\n    }\n\n    protected hideFilterSkeletonLoader(): void {\n        this.skeletonFilterLoading = false;\n    }\n\n    protected showFilterSkeletonLoader(): void {\n        this.skeletonFilterLoading = true;\n    }\n\n    protected checkResultsAvailable(serviceId: ServiceId): boolean {\n        const data = this.searchDataService.getSearchResult(serviceId);\n        this.noResultAvailable = !data || data.resultLength === 0;\n        return this.noResultAvailable;\n    }\n\n    protected scrollToTop() {\n        this.scrollService.scrollToTop();\n    }\n\n    protected scrollToServiceContainer() {\n        this.scrollService.scrollToServiceContainer();\n    }\n\n    private baseDestroy(): void {\n        for (const listenerId of this.listenerIds) {\n            this.listenersService.unregisterListener(listenerId);\n        }\n    }\n\n    private getMetadataOfService(serviceId: ServiceId, callback: () => void) {\n        const combinationId = this.searchDataService.getCombId();\n        const dataId = this.searchDataService.getDataId(serviceId);\n        this.pollerService.registerPoller(combinationId, dataId, serviceId, this.cbInterceptor.bind(this, callback));\n    }\n\n    private isSearchComplete(serviceId: ServiceId): boolean {\n        const savedResults = this.searchDataService.getSearchResult(serviceId);\n        return savedResults && savedResults.complete;\n    }\n\n    private noResultMoveNext(resultData: { serviceId: ServiceId; shouldEdit: boolean }): void {\n        if (resultData.shouldEdit) {\n            this.listenersService.NotifyListeners(ListenerId.LISTEN_ENABLE_EDIT, true);\n            this.listenersService.NotifyListeners(ListenerId.LISTEN_FOCUS_NEXT, {\n                id: 'tabIdx1',\n                moveTo: TzFocusType.MOVE_TO_INVALID,\n            });\n        } else {\n            this.userSearchService.searchCheckDep(resultData.serviceId, false, false, false, false);\n        }\n    }\n\n    private checkPreSearchState(): boolean {\n        const state = this.router.getCurrentNavigation()?.extras.state;\n        if (state && state['extra']) {\n            return state['extra'].preSearch === true;\n        }\n        return false;\n    }\n\n    private listenEditSearch() {\n        this.showSkeletonLoader(true);\n    }\n}\n","<p>base-service-component works!</p>\n"],"names":[],"sourceRoot":"webpack:///"}