{"version":3,"file":"src_app_modules_recover-booking_recover-booking_module_ts.js","mappings":"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","sources":["./src/app/modules/recover-booking/recover-booking-routing.module.ts","./src/app/modules/recover-booking/recover-booking.component.ts","./src/app/modules/recover-booking/recover-booking.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RecoverBookingComponent } from './recover-booking.component';\n\nconst routes: Routes = [{ path: '', component: RecoverBookingComponent }];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class RecoverBookingRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CartRoutingService } from '@services/modules/cart/services/cart-routing.service';\nimport { CartService } from '@services/modules/cart/services/cart.service';\nimport { SearchMetadataService } from '@services/modules/meta/search-metadata.service';\nimport { ApiAccessService } from '@services/searchEngine/services/api-access.service';\nimport { SearchDataService } from '@services/searchEngine/services/search-data.service';\nimport { TabRoutingService } from '@services/searchEngine/services/tab-routing.service';\nimport { TripPlannerService } from '@services/searchEngine/services/trip-planner.service';\nimport { SettingsService } from '@services/services/settings-service';\nimport { Observable, Subscriber } from 'rxjs';\nimport { UserService } from '@services/modules/user/services/user.service';\nimport { DialogService } from '@services/dialog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoaderService } from '@services/modules/core/loader.service';\nimport { StorageManagerUtil } from '@core/utils/storage-manager.util';\n\nconst REJECT_STATES = { REJECT_LOGIN: 1, REJECT_INVALID_CART: 2, REJECT_UNKNOWN: 2 };\ninterface recoveryRes {\n    metaRes: {\n        [key: number]: {\n            metaData: any;\n            serviceSearch: any;\n        };\n    };\n    combSearch: any;\n}\n\n@Component({\n    selector: 'tz-recover-booking',\n    template: '',\n})\nexport class RecoverBookingComponent implements OnInit {\n    private combId;\n    private deviceId;\n    private xsfrToken;\n    private loggedIn = false;\n    constructor(\n        private activeRoute: ActivatedRoute,\n        private settingsService: SettingsService,\n        private trazlerAPI: ApiAccessService,\n        private searchDataService: SearchDataService,\n        private searchMetadataService: SearchMetadataService,\n        private cartService: CartService,\n        private tabRoutingService: TabRoutingService,\n        private tripPlannerService: TripPlannerService,\n        private cartRoutingService: CartRoutingService,\n        private router: Router,\n        private userService: UserService,\n        private dialogService: DialogService,\n        private translateService: TranslateService,\n        private loaderService: LoaderService\n    ) {\n        this.combId = this.activeRoute.snapshot.params['combId'];\n        this.deviceId = this.activeRoute.snapshot.params['deviceId'];\n        this.xsfrToken = this.activeRoute.snapshot.params['xsfrToken'];\n    }\n\n    ngOnInit() {\n        this.recoverBooking();\n    }\n\n    private loadBookingData(): Observable<void> {\n        return new Observable<void>((subscriber: Subscriber<void>) => {\n            StorageManagerUtil.clear(StorageManagerUtil.SESSION);\n            this.settingsService.storeDeviceId({ deviceID: this.deviceId, xsfrToken: this.xsfrToken });\n\n            this.trazlerAPI.recoverBookingData(this.combId).subscribe(\n                (recoveredData: recoveryRes) => {\n                    // save search information\n                    const searchInfos = recoveredData.combSearch.combSearchInfos;\n                    searchInfos.combId = this.combId;\n                    this.searchDataService.saveInfos(searchInfos, true);\n\n                    // load the service specific result and search data\n                    const metaRes = recoveredData.metaRes;\n                    for (const serviceId in metaRes) {\n                        if (metaRes.hasOwnProperty(serviceId)) {\n                            this.searchMetadataService.saveSearch(metaRes[serviceId], 4);\n                        }\n                    }\n\n                    // Re-Init the cart and return\n                    this.cartService.reInit(true).then(\n                        () => {\n                            this.tabRoutingService.initRouting(searchInfos.context.services, false);\n                            this.tripPlannerService.reInit(this.combId, this.searchDataService.getAllSearchResults());\n                            subscriber.next();\n                        },\n                        () => {\n                            subscriber.error(REJECT_STATES.REJECT_INVALID_CART);\n                        }\n                    );\n                },\n                (failure) => {\n                    console.log('Booking recover failed ', { failure });\n                    if (failure.status === 401) {\n                        subscriber.error(REJECT_STATES.REJECT_LOGIN);\n                    } else {\n                        subscriber.error(REJECT_STATES.REJECT_UNKNOWN);\n                    }\n                }\n            );\n        });\n    }\n\n    private gotoHome(): void {\n        this.router.navigate(['/search']).then(() => {\n            this.loaderService.triggerLoading.emit({ loading: false });\n        });\n    }\n\n    private authenticateUser(): void {\n        this.userService.openLoginModel().then(\n            () => {\n                this.loggedIn = true;\n                this.recoverBooking();\n            },\n            () => this.gotoHome()\n        );\n    }\n\n    private recoveryFailedPopup(\n        title: string,\n        message: string,\n        icon?: { name: string; iconStyle: { [key: string]: string | number } }\n    ): void {\n        this.dialogService\n            .openConfirmationDialog({\n                title: this.translateService.instant(title),\n                multipleContent: [this.translateService.instant(message)],\n                confirmBtnTitle: this.translateService.instant('POPUPS.OK'),\n                icon,\n            })\n            .afterClosed()\n            .subscribe(() => {\n                this.gotoHome();\n            });\n    }\n\n    private recoverBooking(): void {\n        this.loaderService.triggerLoading.emit({ loading: true, textKey: 'BOOKINGS.RECOVER.MESSAGE' });\n        this.loadBookingData().subscribe(\n            () => {\n                this.cartRoutingService.moveToSummary().then(() => {\n                    this.loaderService.triggerLoading.emit({ loading: false });\n                });\n            },\n            (error) => {\n                console.log('Recovery error code: ', error);\n                if (error === REJECT_STATES.REJECT_LOGIN) {\n                    if (this.userService.IsLogged() || this.loggedIn) {\n                        this.recoveryFailedPopup(\n                            'POPUPS.UNAUTHORISED_BOOKING.TITLE',\n                            'POPUPS.UNAUTHORISED_BOOKING.MESSAGE',\n                            { name: 'unauthorised-booking', iconStyle: { 'width.px': 90.22, 'height.px': 90.85 } }\n                        );\n                    } else {\n                        this.authenticateUser();\n                    }\n                    return;\n                }\n\n                this.recoveryFailedPopup('POPUPS.RECOVER_FAILED.TITLE', 'POPUPS.RECOVER_FAILED.MESSAGE');\n            }\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RecoverBookingRoutingModule } from './recover-booking-routing.module';\nimport { RecoverBookingComponent } from './recover-booking.component';\nimport { SharedModule } from '@shared/shared.module';\n\n@NgModule({\n    declarations: [RecoverBookingComponent],\n    imports: [CommonModule, RecoverBookingRoutingModule, SharedModule],\n})\nexport class RecoverBookingModule {}\n"],"names":[],"sourceRoot":"webpack:///"}